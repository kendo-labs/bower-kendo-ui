{"version":3,"sources":["raw-js/kendo.toggleinputbase.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendotoggleinputbase","js","this","$","kendo","window","ui","Widget","CHANGE","DISABLED","CHECKED","ToggleInputBase","extend","init","element","options","that","fn","call","_wrapper","_initSettings","_attachEvents","notify","events","name","NS","RENDER_INPUT","noop","check","checked","attr","prop","destroy","wrapper","off","enable","enabled","toggle","on","_change","bind","trigger","inputMethod","removeClass","wrap","wrapperClass","parent","setOptions","_clearCssClasses","_setEvents","_applyCssClasses","plugin","jQuery","kendo$1","__meta__","id","category","description","depends","Object","defineProperty","value"],"mappings":"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","file":"kendo.toggleinputbase.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendotoggleinputbase = global.kendotoggleinputbase || {}, global.kendotoggleinputbase.js = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"toggleinputbase\",\n        name: \"ToggleInputBase\",\n        category: \"web\",\n        description: \"The ToggleInputBase component.\",\n        depends: [ \"core\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            CHECKED = \"checked\";\n\n        var ToggleInputBase = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._wrapper();\n\n                that._initSettings();\n\n                that._attachEvents();\n\n                kendo.notify(that, kendo.ui);\n            },\n\n            events: [\n                CHANGE\n            ],\n\n            options: {\n                name: \"ToggleInputBase\"\n            },\n\n            NS: \".kendoToggleInputBase\",\n            RENDER_INPUT: $.noop,\n\n            check: function(checked) {\n                var that = this,\n                    element = that.element[0];\n\n                if (checked === undefined$1) {\n                    return element.checked;\n                }\n\n                if (element.checked !== checked) {\n                    that.options.checked = element.checked = checked;\n                }\n\n                if (checked) {\n                    that.element.attr(CHECKED, CHECKED);\n                } else {\n                    that.element.prop(CHECKED, false);\n                }\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n                this.wrapper.off(this.NS);\n            },\n\n            enable: function(enable) {\n                var element = this.element;\n\n                if (typeof enable == \"undefined\") {\n                    enable = true;\n                }\n\n                this.options.enabled = enable;\n\n                if (enable) {\n                    element.prop(DISABLED, false);\n                } else {\n                    element.attr(DISABLED, DISABLED);\n                }\n            },\n\n            toggle: function() {\n                var that = this;\n\n                that.check(!that.element[0].checked);\n            },\n\n            _attachEvents: function() {\n                this.element.on(CHANGE + this.NS, this._change.bind(this));\n            },\n\n            _change: function() {\n                var checked = this.element[0].checked;\n\n                this.trigger(CHANGE, { checked: checked });\n            },\n\n            _initSettings: function() {\n                var that = this,\n                    element = that.element[0],\n                    options = that.options;\n\n                if (options.checked === null) {\n                    options.checked = element.checked;\n                }\n\n                that.check(options.checked);\n\n                options.enabled = options.enabled && !that.element.attr(DISABLED);\n                that.enable(options.enabled);\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options,\n                    inputMethod = that.RENDER_INPUT;\n\n\n                inputMethod(that.element, $.extend({}, options));\n                that.element.removeClass('input-validation-error');\n\n                that.wrapper = that.element.wrap(`<span class=\"${options.wrapperClass}\"></span>`).parent();\n            },\n\n            setOptions: function(options) {\n                this._clearCssClasses(options, this.element);\n                this._setEvents(options);\n                $.extend(this.options, options);\n                this._applyCssClasses(this.element);\n            },\n        });\n\n        ui.plugin(ToggleInputBase);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports[\"default\"] = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}