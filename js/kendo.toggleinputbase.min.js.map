{"version":3,"file":"kendo.toggleinputbase.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendotoggleinputbase","js","this","$","undefined$1","kendo","window","ui","Widget","CHANGE","DISABLED","CHECKED","ToggleInputBase","extend","init","element","options","that","fn","call","_wrapper","_initSettings","_attachEvents","notify","events","name","NS","RENDER_INPUT","noop","check","checked","attr","prop","destroy","wrapper","off","enable","enabled","toggle","on","_change","bind","trigger","inputMethod","removeClass","plugin","jQuery"],"sources":["kendo.toggleinputbase.js"],"mappings":"CAAA,SAAWA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBA,OAAOD,QAAUD,EAAQG,QAAQ,kBAC9E,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,CAAC,kBAAmBJ,KACvED,EAA+B,oBAAfO,WAA6BA,WAAaP,GAAUQ,MAAcC,qBAAuBT,EAAOS,sBAAwB,CAAC,EAAGT,EAAOS,qBAAqBC,GAAKT,IACjL,CAJD,CAIGU,MAAM,WAmIL,OA1HA,SAAUC,EAAGC,GACT,IAAIC,EAAQC,OAAOD,MACfE,EAAKF,EAAME,GACXC,EAASD,EAAGC,OACZC,EAAS,SACTC,EAAW,WACXC,EAAU,UAEVC,EAAkBJ,EAAOK,OAAO,CAChCC,KAAM,SAASC,EAASC,GACpB,IAAIC,EAAOf,KAEXM,EAAOU,GAAGJ,KAAKK,KAAKF,EAAMF,EAASC,GAEnCC,EAAKG,WAELH,EAAKI,gBAELJ,EAAKK,gBAELjB,EAAMkB,OAAON,EAAMZ,EAAME,GAC7B,EAEAiB,OAAQ,CACJf,GAGJO,QAAS,CACLS,KAAM,mBAGVC,GAAI,wBACJC,aAAcxB,EAAEyB,KAEhBC,MAAO,SAASC,GACZ,IAAIb,EAAOf,KACPa,EAAUE,EAAKF,QAAQ,GAE3B,GAtCZ,YAsCgBe,EACA,OAAOf,EAAQe,QAGff,EAAQe,UAAYA,IACpBb,EAAKD,QAAQc,QAAUf,EAAQe,QAAUA,GAGzCA,EACAb,EAAKF,QAAQgB,KAAKpB,EAASA,GAE3BM,EAAKF,QAAQiB,KAAKrB,GAAS,EAEnC,EAEAsB,QAAS,WACLzB,EAAOU,GAAGe,QAAQd,KAAKjB,MACvBA,KAAKgC,QAAQC,IAAIjC,KAAKwB,GAC1B,EAEAU,OAAQ,SAASA,GACb,IAAIrB,EAAUb,KAAKa,aAEE,IAAVqB,IACPA,GAAS,GAGblC,KAAKc,QAAQqB,QAAUD,EAEnBA,EACArB,EAAQiB,KAAKtB,GAAU,GAEvBK,EAAQgB,KAAKrB,EAAUA,EAE/B,EAEA4B,OAAQ,WACOpC,KAEN2B,OAFM3B,KAEMa,QAAQ,GAAGe,QAChC,EAEAR,cAAe,WACXpB,KAAKa,QAAQwB,GAAG9B,EAASP,KAAKwB,GAAIxB,KAAKsC,QAAQC,KAAKvC,MACxD,EAEAsC,QAAS,WACL,IAAIV,EAAU5B,KAAKa,QAAQ,GAAGe,QAE9B5B,KAAKwC,QAAQjC,EAAQ,CAAEqB,QAASA,GACpC,EAEAT,cAAe,WACX,IAAIJ,EAAOf,KACPa,EAAUE,EAAKF,QAAQ,GACvBC,EAAUC,EAAKD,QAEK,OAApBA,EAAQc,UACRd,EAAQc,QAAUf,EAAQe,SAG9Bb,EAAKY,MAAMb,EAAQc,SAEnBd,EAAQqB,QAAUrB,EAAQqB,UAAYpB,EAAKF,QAAQgB,KAAKrB,GACxDO,EAAKmB,OAAOpB,EAAQqB,QACxB,EAEAjB,SAAU,WACN,IAAIH,EAAOf,KACPc,EAAUC,EAAKD,SAInB2B,EAHkB1B,EAAKU,cAGXV,EAAKF,QAASZ,EAAEU,OAAO,CAAC,EAAGG,IACvCC,EAAKF,QAAQ6B,YAAY,0BAEzB3B,EAAKiB,QAAUjB,EAAKF,OACxB,IAGJR,EAAGsC,OAAOjC,EACb,CAvHD,CAuHGN,OAAOD,MAAMyC,QACFzC,KAIjB","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendotoggleinputbase = global.kendotoggleinputbase || {}, global.kendotoggleinputbase.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"toggleinputbase\",\n        name: \"ToggleInputBase\",\n        category: \"web\",\n        description: \"The ToggleInputBase component.\",\n        depends: [ \"core\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            CHECKED = \"checked\";\n\n        var ToggleInputBase = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._wrapper();\n\n                that._initSettings();\n\n                that._attachEvents();\n\n                kendo.notify(that, kendo.ui);\n            },\n\n            events: [\n                CHANGE\n            ],\n\n            options: {\n                name: \"ToggleInputBase\"\n            },\n\n            NS: \".kendoToggleInputBase\",\n            RENDER_INPUT: $.noop,\n\n            check: function(checked) {\n                var that = this,\n                    element = that.element[0];\n\n                if (checked === undefined$1) {\n                    return element.checked;\n                }\n\n                if (element.checked !== checked) {\n                    that.options.checked = element.checked = checked;\n                }\n\n                if (checked) {\n                    that.element.attr(CHECKED, CHECKED);\n                } else {\n                    that.element.prop(CHECKED, false);\n                }\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n                this.wrapper.off(this.NS);\n            },\n\n            enable: function(enable) {\n                var element = this.element;\n\n                if (typeof enable == \"undefined\") {\n                    enable = true;\n                }\n\n                this.options.enabled = enable;\n\n                if (enable) {\n                    element.prop(DISABLED, false);\n                } else {\n                    element.attr(DISABLED, DISABLED);\n                }\n            },\n\n            toggle: function() {\n                var that = this;\n\n                that.check(!that.element[0].checked);\n            },\n\n            _attachEvents: function() {\n                this.element.on(CHANGE + this.NS, this._change.bind(this));\n            },\n\n            _change: function() {\n                var checked = this.element[0].checked;\n\n                this.trigger(CHANGE, { checked: checked });\n            },\n\n            _initSettings: function() {\n                var that = this,\n                    element = that.element[0],\n                    options = that.options;\n\n                if (options.checked === null) {\n                    options.checked = element.checked;\n                }\n\n                that.check(options.checked);\n\n                options.enabled = options.enabled && !that.element.attr(DISABLED);\n                that.enable(options.enabled);\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options,\n                    inputMethod = that.RENDER_INPUT;\n\n\n                inputMethod(that.element, $.extend({}, options));\n                that.element.removeClass('input-validation-error');\n\n                that.wrapper = that.element;\n            }\n        });\n\n        ui.plugin(ToggleInputBase);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}