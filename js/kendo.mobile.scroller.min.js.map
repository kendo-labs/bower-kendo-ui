{"version":3,"sources":["raw-js/kendo.mobile.scroller.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendomobile","scroller","js","this","$","kendo","window","mobile","fx","effects","ui","extend","Widget","Class","Movable","Pane","PaneDimensions","Transition","Animation","abs","Math","RELEASECLASS","REFRESHCLASS","CHANGE","SCROLL","ZoomSnapBack","init","options","that","fn","call","userEvents","bind","start","tapCapture","cancel","enabled","movable","scale","dimensions","minScale","done","tick","scaleWith","rescale","onEnd","scaleTo","DragInertia","transition","axis","_end","onCancel","freeze","location","_moveTo","paneAxis","outOfBounds","_snapBack","velocity","e","dimension","_started","min","touch","velocityMultiplier","id","max","captureNext","friction","delta","elastic","moveAxis","cancelCapture","end","snapBack","moveTo","duration","ease","easeOutExpo","AnimatedScroller","origin","destination","offset","_updateCoordinates","y","x","callback","setCoordinates","from","to","setCallback","isFunction","ScrollBar","horizontal","element","controlsId","attr","elementSize","scrollMovable","alwaysVisible","size","refresh","container","append","show","paneSize","sizeRatio","total","position","round","css","_ariaValue","opacity","visibility","hide","current","Scroller","_native","useNative","support","hasNativeScrolling","addClass","prepend","scrollElement","fixedContainer","children","first","wrapInner","inner","eq","TapCapture","forcedEnabled","zoom","avoidScrolling","UserEvents","touchAction","fastTap","allowSelection","preventDragEvent","captureUpIfMoved","multiTouch","supportDoubleTap","velocityX","velocityY","horizontalSwipe","verticalSwipe","contains","event","target","capture","pane","zoomSnapBack","animatedScroller","coordinates","scrollTo","scrollTop","scrollLeft","trigger","mousewheelScrolling","on","_wheelScroll","pulled","_initAxis","_wheelEnd","_wheel","_wheelY","pullToRefresh","_initPullToRefresh","ctrlKey","press","clearTimeout","_wheelTimeout","setTimeout","wheelDeltaY","move","preventDefault","makeVirtual","virtualSize","height","scrollHeight","scrollWidth","name","pullOffset","visibleScrollHints","messages","pullTemplate","releaseTemplate","refreshTemplate","events","_resize","contentResized","setOptions","reset","_scale","zoomOut","fitScale","centerCoordinates","enable","disable","animatedScrollTo","pullHandled","refreshHint","removeClass","hintContainer","html","yinertia","xinertia","destroy","forceEnabled","template","_paneChange","_dragEnd","scrollBar","elementId","guid","plugin","jQuery","kendo$1","__meta__","category","description","depends","Object","defineProperty","value"],"mappings":"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","file":"kendo.mobile.scroller.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.fx.js'), require('kendo.draganddrop.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.fx', 'kendo.draganddrop'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendomobile = global.kendomobile || {}, global.kendomobile.scroller = global.kendomobile.scroller || {}, global.kendomobile.scroller.js = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"mobile.scroller\",\n        name: \"Scroller\",\n        category: \"mobile\",\n        description: \"The Kendo Mobile Scroller widget enables touch friendly kinetic scrolling for the contents of a given DOM element.\",\n        depends: [ \"fx\", \"draganddrop\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            mobile = kendo.mobile,\n            fx = kendo.effects,\n            ui = mobile.ui,\n            extend = $.extend,\n            Widget = ui.Widget,\n            Class = kendo.Class,\n            Movable = kendo.ui.Movable,\n            Pane = kendo.ui.Pane,\n            PaneDimensions = kendo.ui.PaneDimensions,\n            Transition = fx.Transition,\n            Animation = fx.Animation,\n            abs = Math.abs,\n            SNAPBACK_DURATION = 500,\n            SCROLLBAR_OPACITY = 0.7,\n            FRICTION = 0.96,\n            VELOCITY_MULTIPLIER = 10,\n            MAX_VELOCITY = 55,\n            OUT_OF_BOUNDS_FRICTION = 0.5,\n            ANIMATED_SCROLLER_PRECISION = 5,\n            RELEASECLASS = \"km-scroller-release\",\n            REFRESHCLASS = \"km-scroller-refresh\",\n            PULL = \"pull\",\n            CHANGE = \"change\",\n            RESIZE = \"resize\",\n            SCROLL = \"scroll\",\n            MOUSE_WHEEL_ID = 2;\n\n        var ZoomSnapBack = Animation.extend({\n            init: function(options) {\n                var that = this;\n                Animation.fn.init.call(that);\n                extend(that, options);\n\n                that.userEvents.bind(\"gestureend\", that.start.bind(that));\n                that.tapCapture.bind(\"press\", that.cancel.bind(that));\n            },\n\n            enabled: function() {\n              return this.movable.scale < this.dimensions.minScale;\n            },\n\n            done: function() {\n                return this.dimensions.minScale - this.movable.scale < 0.01;\n            },\n\n            tick: function() {\n                var movable = this.movable;\n                movable.scaleWith(1.1);\n                this.dimensions.rescale(movable.scale);\n            },\n\n            onEnd: function() {\n                var movable = this.movable;\n                movable.scaleTo(this.dimensions.minScale);\n                this.dimensions.rescale(movable.scale);\n            }\n        });\n\n        var DragInertia = Animation.extend({\n            init: function(options) {\n                var that = this;\n\n                Animation.fn.init.call(that);\n\n                extend(that, options, {\n                    transition: new Transition({\n                        axis: options.axis,\n                        movable: options.movable,\n                        onEnd: function() { that._end(); }\n                    })\n                });\n\n                that.tapCapture.bind(\"press\", function() { that.cancel(); });\n                that.userEvents.bind(\"end\", that.start.bind(that));\n                that.userEvents.bind(\"gestureend\", that.start.bind(that));\n                that.userEvents.bind(\"tap\", that.onEnd.bind(that));\n            },\n\n            onCancel: function() {\n                this.transition.cancel();\n            },\n\n            freeze: function(location) {\n                var that = this;\n                that.cancel();\n                that._moveTo(location);\n            },\n\n            onEnd: function() {\n                var that = this;\n                if (that.paneAxis.outOfBounds()) {\n                    that._snapBack();\n                } else {\n                    that._end();\n                }\n            },\n\n            done: function() {\n                return abs(this.velocity) < 1;\n            },\n\n            start: function(e) {\n                var that = this,\n                    velocity;\n\n                if (!that.dimension.enabled) { return; }\n\n                if (that.paneAxis.outOfBounds()) {\n                    if (that.transition._started) {\n                        that.transition.cancel();\n                        that.velocity = Math.min(e.touch[that.axis].velocity * that.velocityMultiplier, MAX_VELOCITY);\n\n                        Animation.fn.start.call(that);\n                    } else {\n                        that._snapBack();\n                    }\n                } else {\n                    velocity = e.touch.id === MOUSE_WHEEL_ID ? 0 : e.touch[that.axis].velocity;\n                    that.velocity = Math.max(Math.min(velocity * that.velocityMultiplier, MAX_VELOCITY), -MAX_VELOCITY);\n\n                    that.tapCapture.captureNext();\n                    Animation.fn.start.call(that);\n                }\n            },\n\n            tick: function() {\n                var that = this,\n                    dimension = that.dimension,\n                    friction = that.paneAxis.outOfBounds() ? OUT_OF_BOUNDS_FRICTION : that.friction,\n                    delta = (that.velocity *= friction),\n                    location = that.movable[that.axis] + delta;\n\n                    if (!that.elastic && dimension.outOfBounds(location)) {\n                        location = Math.max(Math.min(location, dimension.max), dimension.min);\n                        that.velocity = 0;\n                    }\n\n                that.movable.moveAxis(that.axis, location);\n            },\n\n            _end: function() {\n                this.tapCapture.cancelCapture();\n                this.end();\n            },\n\n            _snapBack: function() {\n                var that = this,\n                    dimension = that.dimension,\n                    snapBack = that.movable[that.axis] > dimension.max ? dimension.max : dimension.min;\n                that._moveTo(snapBack);\n            },\n\n            _moveTo: function(location) {\n                this.transition.moveTo({ location: location, duration: SNAPBACK_DURATION, ease: Transition.easeOutExpo });\n            }\n        });\n\n        var AnimatedScroller = Animation.extend({\n            init: function(options) {\n                var that = this;\n\n                kendo.effects.Animation.fn.init.call(this);\n\n                extend(that, options, {\n                    origin: {},\n                    destination: {},\n                    offset: {}\n                });\n            },\n\n            tick: function() {\n                this._updateCoordinates();\n                this.moveTo(this.origin);\n            },\n\n            done: function() {\n                return abs(this.offset.y) < ANIMATED_SCROLLER_PRECISION && abs(this.offset.x) < ANIMATED_SCROLLER_PRECISION;\n            },\n\n            onEnd: function() {\n                this.moveTo(this.destination);\n                if (this.callback) {\n                    this.callback.call();\n                }\n            },\n\n            setCoordinates: function(from, to) {\n                this.offset = {};\n                this.origin = from;\n                this.destination = to;\n            },\n\n            setCallback: function(callback) {\n                if (callback && kendo.isFunction(callback)) {\n                    this.callback = callback;\n                } else {\n                    callback = undefined$1;\n                }\n            },\n\n            _updateCoordinates: function() {\n                this.offset = {\n                    x: (this.destination.x - this.origin.x) / 4,\n                    y: (this.destination.y - this.origin.y) / 4\n                };\n\n                this.origin = {\n                    y: this.origin.y + this.offset.y,\n                    x: this.origin.x + this.offset.x\n                };\n            }\n        });\n\n        var ScrollBar = Class.extend({\n            init: function(options) {\n                var that = this,\n                    horizontal = options.axis === \"x\",\n                    element = $('<div role=\"scrollbar\" aria-controls=\"' + options.controlsId + '\" class=\"km-touch-scrollbar km-' + (horizontal ? \"horizontal\" : \"vertical\") + '-scrollbar\" />');\n\n                if (horizontal) {\n                    element.attr(\"aria-orientation\", \"horizontal\");\n                }\n\n                extend(that, options, {\n                    element: element,\n                    elementSize: 0,\n                    movable: new Movable(element),\n                    scrollMovable: options.movable,\n                    alwaysVisible: options.alwaysVisible,\n                    size: horizontal ? \"width\" : \"height\"\n                });\n\n                that.scrollMovable.bind(CHANGE, that.refresh.bind(that));\n                that.container.append(element);\n                if (options.alwaysVisible) {\n                    that.show();\n                }\n            },\n\n            refresh: function() {\n                var that = this,\n                    axis = that.axis,\n                    dimension = that.dimension,\n                    paneSize = dimension.size,\n                    scrollMovable = that.scrollMovable,\n                    sizeRatio = paneSize / dimension.total,\n                    position = Math.round(-scrollMovable[axis] * sizeRatio),\n                    size = Math.round(paneSize * sizeRatio);\n\n                    if (sizeRatio >= 1) {\n                        this.element.css(\"display\", \"none\");\n                    } else {\n                        this.element.css(\"display\", \"\");\n                    }\n\n                    if (position + size > paneSize) {\n                        size = paneSize - position;\n                    } else if (position < 0) {\n                        size += position;\n                        position = 0;\n                    }\n\n                if (that.elementSize != size) {\n                    that.element.css(that.size, size + \"px\");\n                    that.elementSize = size;\n                }\n\n                that._ariaValue(position, dimension.size - that.elementSize);\n\n                that.movable.moveAxis(axis, position);\n            },\n\n            show: function() {\n                this.element.css({ opacity: SCROLLBAR_OPACITY, visibility: \"visible\" });\n            },\n\n            hide: function() {\n                if (!this.alwaysVisible) {\n                    this.element.css({ opacity: 0 });\n                }\n            },\n\n            _ariaValue: function(current, total) {\n                var element = this.element;\n\n                if (current > total) {\n                    current = total;\n                }\n\n                element.attr(\"aria-valuemax\", total);\n                element.attr(\"aria-valuenow\", current);\n            }\n        });\n\n        var Scroller = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n\n                element = that.element;\n\n                that._native = that.options.useNative && kendo.support.hasNativeScrolling;\n                if (that._native) {\n                    element.addClass(\"km-native-scroller\")\n                        .prepend('<div class=\"km-scroll-header\"/>');\n\n                    extend(that, {\n                        scrollElement: element,\n                        fixedContainer: element.children().first()\n                    });\n\n                    return;\n                }\n\n                element\n                    .css(\"overflow\", \"hidden\")\n                    .addClass(\"km-scroll-wrapper\")\n                    .wrapInner('<div class=\"km-scroll-container\"/>')\n                    .prepend('<div class=\"km-scroll-header\"/>');\n\n                var inner = element.children().eq(1),\n\n                    tapCapture = new kendo.TapCapture(element),\n\n                    movable = new Movable(inner),\n\n                    dimensions = new PaneDimensions({\n                        element: inner,\n                        container: element,\n                        forcedEnabled: that.options.zoom\n                    }),\n\n                    avoidScrolling = this.options.avoidScrolling,\n\n                    userEvents = new kendo.UserEvents(element, {\n                        touchAction: \"pan-y\",\n                        fastTap: true,\n                        allowSelection: true,\n                        preventDragEvent: true,\n                        captureUpIfMoved: true,\n                        multiTouch: that.options.zoom,\n                        supportDoubleTap: that.options.supportDoubleTap,\n                        start: function(e) {\n                            dimensions.refresh();\n\n                            var velocityX = abs(e.x.velocity),\n                                velocityY = abs(e.y.velocity),\n                                horizontalSwipe = velocityX * 2 >= velocityY,\n                                originatedFromFixedContainer = $.contains(that.fixedContainer[0], e.event.target),\n                                verticalSwipe = velocityY * 2 >= velocityX;\n\n\n                            if (!originatedFromFixedContainer && !avoidScrolling(e) && that.enabled && (dimensions.x.enabled && horizontalSwipe || dimensions.y.enabled && verticalSwipe)) {\n                                userEvents.capture();\n                            } else {\n                                userEvents.cancel();\n                            }\n                        }\n                    }),\n\n                    pane = new Pane({\n                        movable: movable,\n                        dimensions: dimensions,\n                        userEvents: userEvents,\n                        elastic: that.options.elastic\n                    }),\n\n                    zoomSnapBack = new ZoomSnapBack({\n                        movable: movable,\n                        dimensions: dimensions,\n                        userEvents: userEvents,\n                        tapCapture: tapCapture\n                    }),\n\n                    animatedScroller = new AnimatedScroller({\n                        moveTo: function(coordinates) {\n                            that.scrollTo(coordinates.x, coordinates.y);\n                        }\n                    });\n\n                movable.bind(CHANGE, function() {\n                    that.scrollTop = - movable.y;\n                    that.scrollLeft = - movable.x;\n\n                    that.trigger(SCROLL, {\n                        scrollTop: that.scrollTop,\n                        scrollLeft: that.scrollLeft\n                    });\n                });\n\n                if (that.options.mousewheelScrolling) {\n                    element.on(\"DOMMouseScroll mousewheel\", this._wheelScroll.bind(this));\n                }\n\n                extend(that, {\n                    movable: movable,\n                    dimensions: dimensions,\n                    zoomSnapBack: zoomSnapBack,\n                    animatedScroller: animatedScroller,\n                    userEvents: userEvents,\n                    pane: pane,\n                    tapCapture: tapCapture,\n                    pulled: false,\n                    enabled: true,\n                    scrollElement: inner,\n                    scrollTop: 0,\n                    scrollLeft: 0,\n                    fixedContainer: element.children().first()\n                });\n\n                that._initAxis(\"x\");\n                that._initAxis(\"y\");\n\n                // build closure\n                that._wheelEnd = function() {\n                    that._wheel = false;\n                    that.userEvents.end(0, that._wheelY);\n                };\n\n                dimensions.refresh();\n\n                if (that.options.pullToRefresh) {\n                    that._initPullToRefresh();\n                }\n            },\n\n            _wheelScroll: function(e) {\n                if (e.ctrlKey) {\n                    return;\n                }\n\n                if (!this._wheel) {\n                    this._wheel = true;\n                    this._wheelY = 0;\n                    this.userEvents.press(0, this._wheelY);\n                }\n\n                clearTimeout(this._wheelTimeout);\n                this._wheelTimeout = setTimeout(this._wheelEnd, 50);\n\n                var delta = kendo.wheelDeltaY(e);\n\n                if (delta) {\n                    this._wheelY += delta;\n                    this.userEvents.move(0, this._wheelY);\n                }\n\n                e.preventDefault();\n            },\n\n            makeVirtual: function() {\n                this.dimensions.y.makeVirtual();\n            },\n\n            virtualSize: function(min, max) {\n                this.dimensions.y.virtualSize(min, max);\n            },\n\n            height: function() {\n                return this.dimensions.y.size;\n            },\n\n            scrollHeight: function() {\n                return this.scrollElement[0].scrollHeight;\n            },\n\n            scrollWidth: function() {\n                return this.scrollElement[0].scrollWidth;\n            },\n\n            options: {\n                name: \"Scroller\",\n                zoom: false,\n                pullOffset: 140,\n                visibleScrollHints: false,\n                elastic: true,\n                useNative: false,\n                mousewheelScrolling: true,\n                avoidScrolling: function() { return false; },\n                pullToRefresh: false,\n                messages: {\n                    pullTemplate: \"Pull to refresh\",\n                    releaseTemplate: \"Release to refresh\",\n                    refreshTemplate: \"Refreshing\"\n                }\n            },\n\n            events: [\n                PULL,\n                SCROLL,\n                RESIZE\n            ],\n\n            _resize: function() {\n                if (!this._native) {\n                    this.contentResized();\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                Widget.fn.setOptions.call(that, options);\n                if (options.pullToRefresh) {\n                    that._initPullToRefresh();\n                }\n            },\n\n            reset: function() {\n                if (this._native) {\n                    this.scrollElement.scrollTop(0);\n                } else {\n                    this.movable.moveTo({ x: 0, y: 0 });\n                    this._scale(1);\n                }\n            },\n\n            contentResized: function() {\n                this.dimensions.refresh();\n                if (this.pane.x.outOfBounds()) {\n                    this.movable.moveAxis(\"x\", this.dimensions.x.min);\n                }\n\n                if (this.pane.y.outOfBounds()) {\n                    this.movable.moveAxis(\"y\", this.dimensions.y.min);\n                }\n            },\n\n            zoomOut: function() {\n                var dimensions = this.dimensions;\n                dimensions.refresh();\n                this._scale(dimensions.fitScale);\n                this.movable.moveTo(dimensions.centerCoordinates());\n            },\n\n            enable: function() {\n                this.enabled = true;\n            },\n\n            disable: function() {\n                this.enabled = false;\n            },\n\n            scrollTo: function(x, y) {\n                if (this._native) {\n                    kendo.scrollLeft(this.scrollElement, abs(x));\n                    this.scrollElement.scrollTop(abs(y));\n                } else {\n                    this.dimensions.refresh();\n                    this.movable.moveTo({ x: x, y: y });\n                }\n            },\n\n            animatedScrollTo: function(x, y, callback) {\n                var from,\n                    to;\n\n                if (this._native) {\n                    this.scrollTo(x, y);\n                } else {\n                    from = { x: this.movable.x, y: this.movable.y };\n                    to = { x: x, y: y };\n\n                    this.animatedScroller.setCoordinates(from, to);\n                    this.animatedScroller.setCallback(callback);\n                    this.animatedScroller.start();\n                }\n            },\n\n            pullHandled: function() {\n                var that = this;\n                that.refreshHint.removeClass(REFRESHCLASS);\n                that.hintContainer.html(that.pullTemplate({}));\n                that.yinertia.onEnd();\n                that.xinertia.onEnd();\n                that.userEvents.cancel();\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n                if (this.userEvents) {\n                    this.userEvents.destroy();\n                }\n            },\n\n            _scale: function(scale) {\n                this.dimensions.rescale(scale);\n                this.movable.scaleTo(scale);\n            },\n\n            _initPullToRefresh: function() {\n                var that = this;\n\n                that.dimensions.y.forceEnabled();\n                that.pullTemplate = kendo.template(that.options.messages.pullTemplate);\n                that.releaseTemplate = kendo.template(that.options.messages.releaseTemplate);\n                that.refreshTemplate = kendo.template(that.options.messages.refreshTemplate);\n\n                that.scrollElement.prepend('<span class=\"km-scroller-pull\"><span class=\"km-icon\"></span><span class=\"km-loading-left\"></span><span class=\"km-loading-right\"></span><span class=\"km-template\">' + that.pullTemplate({}) + '</span></span>');\n                that.refreshHint = that.scrollElement.children().first();\n                that.hintContainer = that.refreshHint.children(\".km-template\");\n\n                that.pane.y.bind(\"change\", that._paneChange.bind(that));\n                that.userEvents.bind(\"end\", that._dragEnd.bind(that));\n            },\n\n            _dragEnd: function() {\n                var that = this;\n\n                if (!that.pulled) {\n                    return;\n                }\n\n                that.pulled = false;\n                that.refreshHint.removeClass(RELEASECLASS).addClass(REFRESHCLASS);\n                that.hintContainer.html(that.refreshTemplate({}));\n                that.yinertia.freeze(that.options.pullOffset / 2);\n                that.trigger(\"pull\");\n            },\n\n            _paneChange: function() {\n                var that = this;\n\n                if (that.movable.y / OUT_OF_BOUNDS_FRICTION > that.options.pullOffset) {\n                    if (!that.pulled) {\n                        that.pulled = true;\n                        that.refreshHint.removeClass(REFRESHCLASS).addClass(RELEASECLASS);\n                        that.hintContainer.html(that.releaseTemplate({}));\n                    }\n                } else if (that.pulled) {\n                    that.pulled = false;\n                    that.refreshHint.removeClass(RELEASECLASS);\n                    that.hintContainer.html(that.pullTemplate({}));\n                }\n            },\n\n            _initAxis: function(axis) {\n                var that = this,\n                    elementId = that.element.attr(\"id\"),\n                    movable = that.movable,\n                    dimension = that.dimensions[axis],\n                    tapCapture = that.tapCapture,\n                    paneAxis = that.pane[axis],\n                    scrollBar;\n\n                if (!elementId) {\n                    elementId = kendo.guid();\n                    that.element.attr(\"id\", elementId);\n                }\n\n                scrollBar = new ScrollBar({\n                    axis: axis,\n                    movable: movable,\n                    dimension: dimension,\n                    container: that.element,\n                    alwaysVisible: that.options.visibleScrollHints,\n                    controlsId: elementId\n                });\n\n                dimension.bind(CHANGE, function() {\n                    scrollBar.refresh();\n                });\n\n                paneAxis.bind(CHANGE, function() {\n                    scrollBar.show();\n                });\n\n                that[axis + \"inertia\"] = new DragInertia({\n                    axis: axis,\n                    paneAxis: paneAxis,\n                    movable: movable,\n                    tapCapture: tapCapture,\n                    userEvents: that.userEvents,\n                    dimension: dimension,\n                    elastic: that.options.elastic,\n                    friction: that.options.friction || FRICTION,\n                    velocityMultiplier: that.options.velocityMultiplier || VELOCITY_MULTIPLIER,\n                    end: function() {\n                        scrollBar.hide();\n                        that.trigger(\"scrollEnd\", {\n                            axis: axis,\n                            scrollTop: that.scrollTop,\n                            scrollLeft: that.scrollLeft\n                        });\n                    }\n                });\n            }\n        });\n\n        ui.plugin(Scroller);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports[\"default\"] = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}