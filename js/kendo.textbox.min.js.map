{"version":3,"sources":["raw-js/kendo.textbox.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendotextbox","js","this","$","kendo","jQuery","addInputPrefixSuffixContainers","widget","wrapper","options","prefixInsertBefore","suffixInsertAfter","prefixContainer","suffixContainer","prefix","prefixOptions","suffix","suffixOptions","hasPrefixContent","template","icon","hasSuffixContent","layoutFlow","containerOrientation","INPUT_SEPARATOR","children","insertBefore","prependTo","html","renderIcon","separator","insertAfter","appendTo","_prefixContainer","_suffixContainer","undefined$1","window","Widget","ui","isPlainObject","NS","CHANGE","DISABLED","READONLY","INPUT","INPUT_EV","FOCUSED","STATEDISABLED","STATEREADONLY","HIDDENCLASS","ARIA_DISABLED","TextBox","extend","init","element","that","fn","call","value","val","readonly","Boolean","attr","enable","placeholder","inputMode","_wrapper","_label","_editable","disable","addClass","_icon","_clearButton","_clear","on","_clearValue","bind","notify","_applyCssClasses","floatingLabel","refresh","events","name","clearButton","label","rounded","size","fillMode","_value","_showClear","_hideClear","focus","destroy","off","style","width","removeClass","setOptions","_inputLabel","remove","_floatingLabelContainer","unwrap","deepExtend","e","trigger","originalEvent","role","tabIndex","toggleClass","prop","_focusin","_focusout","_change","_input","prepend","iconClass","newValue","floating","labelText","id","content","wrap","parent","FloatingLabel","isFunction","guid","DOMElement","cssText","className","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","plugin","kendo$1","__meta__","category","description","depends","Object","defineProperty"],"mappings":"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","file":"kendo.textbox.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.floatinglabel.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.floatinglabel', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendotextbox = global.kendotextbox || {}, global.kendotextbox.js = {})));\n})(this, (function (exports) {\n    let $ = kendo.jQuery;\n\n    function addInputPrefixSuffixContainers({ widget, wrapper, options, prefixInsertBefore, suffixInsertAfter }) {\n        var prefix = options.prefixOptions,\n            suffix = options.suffixOptions,\n            hasPrefixContent = prefix.template || prefix.icon,\n            hasSuffixContent = suffix.template || suffix.icon,\n            suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n            layoutFlow = options.layoutFlow,\n            containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n            separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n            INPUT_SEPARATOR = `<span class=\"k-input-separator k-input-separator-${separatorOrientation}\"></span>`,\n            prefixContainer,\n            suffixContainer;\n\n        if (prefix && hasPrefixContent) {\n            prefixContainer = wrapper.children(\".k-input-prefix\");\n\n            if (!prefixContainer[0]) {\n                prefixContainer = $(`<span class=\"k-input-prefix k-input-prefix-${containerOrientation}\" />`);\n                if (prefixInsertBefore) {\n                    prefixContainer.insertBefore(prefixInsertBefore);\n                } else {\n                    prefixContainer.prependTo(wrapper);\n                }\n            }\n\n            if (prefix.icon) {\n                prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n            }\n\n            if (prefix.template) {\n                prefixContainer.html(kendo.template(prefix.template)({}));\n            }\n\n            if (prefix.separator) {\n                $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n            }\n        }\n\n        if (suffix && hasSuffixContent) {\n            suffixContainer = wrapper.children(\".k-input-suffix\");\n\n            if (!suffixContainer[0]) {\n                suffixContainer = $(`<span class=\"k-input-suffix k-input-suffix-${containerOrientation}\" />`).appendTo(wrapper);\n                if (suffixInsertAfter) {\n                    suffixContainer.insertAfter(suffixInsertAfter);\n                } else {\n                    suffixContainer.appendTo(wrapper);\n                }\n            }\n\n            if (suffix.icon) {\n                suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n            }\n\n            if (suffix.template) {\n                suffixContainer.html(kendo.template(suffix.template)({}));\n            }\n\n            if (suffix.separator) {\n                $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n            }\n        }\n\n        widget._prefixContainer = prefixContainer;\n        widget._suffixContainer = suffixContainer;\n    }\n\n    const __meta__ = {\n        id: \"textbox\",\n        name: \"TextBox\",\n        category: \"web\",\n        description: \"The TextBox widget enables you to style and provide a floating label functionality to input elements\",\n        depends: [\"core\", \"floatinglabel\", \"icons\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            ui = kendo.ui,\n            isPlainObject = $.isPlainObject,\n            NS = \".kendoTextBox\",\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            INPUT = \"k-input-inner\",\n            INPUT_EV = \"input\",\n            FOCUSED = \"k-focus\",\n            LABELCLASSES = \"k-label k-input-label\",\n            FLOATINGLABELCLASS = \"k-floating-label\",\n            STATEDISABLED = \"k-disabled\",\n            STATEREADONLY = \"k-readonly\",\n            HIDDENCLASS = \"k-hidden\",\n            ARIA_DISABLED = \"aria-disabled\";\n\n        var TextBox = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n                options = $.extend(true, {}, options);\n\n                that.options.value = options.value || that.element.val();\n                that.options.readonly = options.readonly !== undefined$1 ? options.readonly : Boolean(that.element.attr(\"readonly\"));\n                that.options.enable = options.enable !== undefined$1 ? options.enable : !(Boolean(that.element.attr(\"disabled\")));\n                that.options.placeholder = options.placeholder || that.element.attr(\"placeholder\");\n                that.options.inputMode = options.inputMode || that.element.attr(\"inputmode\") || \"text\";\n\n                that.value(that.options.value);\n                that._wrapper();\n                that._label();\n                that._editable({\n                    readonly: that.options.readonly,\n                    disable: !(that.options.enable)\n                });\n\n                that.element\n                    .addClass(INPUT)\n                    .attr(\"placeholder\", that.options.placeholder)\n                    .attr(\"inputmode\", that.options.inputMode)\n                    .attr(\"autocomplete\", \"off\");\n\n                if (options.icon) {\n                    that._icon();\n                }\n\n                addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options });\n                that._clearButton();\n                if (that._clear) {\n                    that._clear.on(\"click\" + NS + \" touchend\" + NS, that._clearValue.bind(that));\n                }\n\n                kendo.notify(that);\n                that._applyCssClasses();\n                if (that.floatingLabel) {\n                    that.floatingLabel.refresh();\n                }\n            },\n\n            events: [\n                CHANGE,\n                INPUT_EV\n            ],\n\n            options: {\n                name: 'TextBox',\n                value: '',\n                readonly: false,\n                clearButton: false,\n                enable: true,\n                placeholder: '',\n                label: null,\n                rounded: \"medium\",\n                size: \"medium\",\n                fillMode: \"solid\",\n                icon: null,\n                prefixOptions: {\n                    separator: true\n                },\n                suffixOptions: {\n                    separator: true\n                }\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                that._value = value;\n                that.element.val(value);\n\n                value ? that._showClear() : that._hideClear();\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.refresh();\n                }\n            },\n\n            readonly: function(readonly) {\n                var that = this;\n\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                var that = this;\n\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            focus: function() {\n                var that = this;\n\n                that.element[0].focus();\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.destroy();\n                }\n\n                if (that._clear) {\n                    that._clear.off(NS);\n                    that._clear = null;\n                }\n\n                that.element.off(NS);\n                that.element[0].style.width = \"\";\n                that.element.removeClass(INPUT);\n                Widget.fn.destroy.call(that);\n            },\n\n            setOptions: function(options) {\n                this.destroy();\n\n                if (this._inputLabel) {\n                    this._inputLabel.remove();\n                    this._inputLabel = null;\n                }\n\n                if (this._floatingLabelContainer) {\n                    this.floatingLabel.destroy();\n                    this.floatingLabel = null;\n                    this.element.unwrap();\n                    this.element.unwrap();\n                    this._floatingLabelContainer = null;\n                } else {\n                    this.element.unwrap();\n                }\n\n                kendo.deepExtend(this.options, options);\n                this.init(this.element, this.options);\n            },\n\n            _clearValue: function(e) {\n                this.element.val(\"\");\n                this.element.focus();\n                this.element.trigger(CHANGE, { value: \"\", originalEvent: e });\n                this._hideClear();\n            },\n\n            _hideClear: function() {\n                if (this._clear) {\n                    this._clear.addClass(HIDDENCLASS);\n                }\n            },\n\n            _showClear: function() {\n                if (this._clear) {\n                    this._clear.removeClass(HIDDENCLASS);\n                }\n            },\n\n            _clearButton: function() {\n                let that = this;\n\n                if (!that._clear) {\n                    that._clear = $(`<span unselectable=\"on\" class=\"k-clear-value\" title=\"Clear\">${kendo.ui.icon(\"x\")}</span>`).attr({\n                        \"role\": \"button\",\n                        \"tabIndex\": -1\n                    });\n                    that._clear.appendTo(that.wrapper);\n                }\n\n                if (!that.options.clearButton) {\n                    that._clear.remove();\n                }\n\n                if (!that.element.val()) {\n                    that._hideClear();\n                }\n            },\n\n            _editable: function(options) {\n                var that = this;\n                var element = that.element;\n                var wrapper = that.wrapper;\n                var disable = options.disable;\n                var readonly = options.readonly;\n\n                element.off(NS);\n\n                if (!readonly && !disable) {\n                    element.prop(DISABLED, false)\n                           .prop(READONLY, false)\n                           .attr(ARIA_DISABLED, false);\n\n                    wrapper.removeClass(STATEDISABLED)\n                            .removeClass(STATEREADONLY);\n\n                    element.on(\"focusin\" + NS, that._focusin.bind(that));\n                    element.on(\"focusout\" + NS, that._focusout.bind(that));\n                    element.on(CHANGE + NS, that._change.bind(that));\n                    element.on(INPUT_EV + NS, that._input.bind(that));\n                } else {\n                    element.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable);\n\n                    wrapper.toggleClass(STATEDISABLED, disable)\n                            .toggleClass(STATEREADONLY, readonly);\n                }\n            },\n\n            _icon: function() {\n                this.wrapper.prepend(kendo.ui.icon({ icon: this.options.icon, iconClass: \"k-input-icon\" }));\n            },\n\n            _input: function(e) {\n                var that = this;\n                var newValue = that.element.val();\n\n                that.trigger(INPUT_EV, { value: newValue, originalEvent: e });\n            },\n\n            _label: function() {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var id = element.attr(\"id\");\n                var floating;\n                var labelText;\n\n                if (options.label !== null) {\n                    floating = isPlainObject(options.label) ? options.label.floating : false;\n                    labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                    if (floating) {\n                        that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                        that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                    }\n\n                    if (kendo.isFunction(labelText)) {\n                        labelText = labelText.call(that);\n                    }\n\n                    if (!labelText) {\n                        labelText = \"\";\n                    }\n\n                    if (!id) {\n                        id = options.name + \"_\" + kendo.guid();\n                        element.attr(\"id\", id);\n                    }\n                    that._inputLabel = $(\"<label class='\" + (floating ? FLOATINGLABELCLASS : LABELCLASSES) + \"' for='\" + id + \"'>\" + labelText + \"</label>'\")[floating ? \"insertAfter\" : \"insertBefore\"](that.wrapper);\n                }\n            },\n\n            _focusin: function() {\n                var that = this;\n\n                that.wrapper.addClass(FOCUSED);\n            },\n\n            _focusout: function() {\n                var that = this;\n\n                that.wrapper.removeClass(FOCUSED);\n            },\n\n            _change: function(e) {\n                var that = this;\n                var newValue = that.element.val();\n\n                that._value = newValue;\n\n                that.trigger(CHANGE, { value: newValue, originalEvent: e });\n                newValue ? that._showClear() : that._hideClear();\n            },\n\n            _wrapper: function() {\n                var that = this;\n                var element = that.element;\n                var DOMElement = element[0];\n                var wrapper;\n\n                wrapper = element.wrap(\"<span class='k-input k-textbox'></span>\").parent();\n                wrapper[0].style.cssText = DOMElement.style.cssText;\n                DOMElement.style.width = \"100%\";\n                that.wrapper = wrapper.addClass(DOMElement.className).removeClass('input-validation-error');\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"TextBox\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"TextBox\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(TextBox);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports[\"default\"] = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}