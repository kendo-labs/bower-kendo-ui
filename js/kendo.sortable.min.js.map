{"version":3,"sources":["raw-js/kendo.sortable.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendosortable","js","this","$","undefined$1","kendo","window","Widget","ui","outerWidth","_outerWidth","outerHeight","_outerHeight","START","BEFORE_MOVE","MOVE","END","CHANGE","CANCEL","ACTION_SORT","ACTION_REMOVE","ACTION_RECEIVE","defaultHint","element","clone","defaultPlaceholder","removeAttr","css","Sortable","extend","init","options","that","fn","call","placeholder","hint","draggable","_createDraggable","events","name","filter","holdToDrag","disabled","container","connectWith","handler","cursorOffset","axis","ignore","autoScroll","cursor","moveOnDragEnter","destroy","Draggable","isFunction","dragstart","_dragstart","bind","dragcancel","_dragcancel","drag","_drag","dragend","_dragend","e","draggedElement","currentTarget","_placeholder","is","initialTarget","trigger","item","draggableEvent","preventDefault","before","_setCursor","_cancel","_resetCursor","targetCenter","offsetDelta","direction","sibling","getSibling","target","_findTarget","left","x","location","top","y","axisDelta","delta","eventData","list","_getElementCenter","Math","round","appendToBottom","_movePlaceholder","appendAfterHidden","_isFloating","jQuery","prev","next","length","_movementByAxis","connectedList","isDefaultPrevented","connectedListEventData","draggedIndex","indexOf","placeholderIndex","action","oldIndex","newIndex","parents","getKendoSortable","replaceWith","show","dropped","items","node","_findElementUnderCursor","contains","has","sortable","_isEmpty","_isLastHidden","eq","_searchConnectedTargets","elementUnderCursor","sender","parent","child","containsOrEqualTo","hide","sortableInstance","connected","i","_isCursorAfterLast","last","lastItemOffset","lastItem","getOffset","cursorPosition","after","append","body","document","_originalCursorType","_cursorStylesheet","appendTo","remove","center","isFloating","test","isTable","isHorizontalFlex","_items","find","children","not","index","plugin"],"mappings":"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","file":"kendo.sortable.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.draganddrop.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.draganddrop'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendosortable = global.kendosortable || {}, global.kendosortable.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"sortable\",\n        name: \"Sortable\",\n        category: \"framework\",\n        depends: [ \"draganddrop\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n\n            START = \"start\",\n            BEFORE_MOVE = \"beforeMove\",\n            MOVE = \"move\",\n            END = \"end\",\n            CHANGE = \"change\",\n            CANCEL = \"cancel\",\n\n            ACTION_SORT = \"sort\",\n            ACTION_REMOVE = \"remove\",\n            ACTION_RECEIVE = \"receive\",\n\n            DEFAULT_FILTER = \">*\",\n            MISSING_INDEX = -1;\n\n        function containsOrEqualTo(parent, child) {\n            try {\n                return $.contains(parent, child) || parent == child;\n            } catch (e) {\n                return false;\n            }\n        }\n\n        function defaultHint(element) {\n            return element.clone();\n        }\n\n        function defaultPlaceholder(element) {\n            return element.clone().removeAttr(\"id\").css(\"visibility\", \"hidden\");\n        }\n\n        var Sortable = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                if (!that.options.placeholder) {\n                    that.options.placeholder = defaultPlaceholder;\n                }\n\n                if (!that.options.hint) {\n                    that.options.hint = defaultHint;\n                }\n\n                that.draggable = that._createDraggable();\n            },\n\n            events: [\n                START,\n                BEFORE_MOVE,\n                MOVE,\n                END,\n                CHANGE,\n                CANCEL\n            ],\n\n            options: {\n                name: \"Sortable\",\n                hint: null,\n                placeholder: null,\n                filter: DEFAULT_FILTER,\n                holdToDrag: false,\n                disabled: null,\n                container: null,\n                connectWith: null,\n                handler: null,\n                cursorOffset: null,\n                axis: null,\n                ignore: null,\n                autoScroll: false,\n                cursor: \"auto\",\n                moveOnDragEnter: false\n            },\n\n            destroy: function() {\n                this.draggable.destroy();\n                Widget.fn.destroy.call(this);\n            },\n\n            _createDraggable: function() {\n                var that = this,\n                    element = that.element,\n                    options = that.options;\n\n                return new kendo.ui.Draggable(element, {\n                    filter: options.filter,\n                    hint: kendo.isFunction(options.hint) ? options.hint : $(options.hint),\n                    holdToDrag: options.holdToDrag,\n                    container: options.container ? $(options.container) : null,\n                    cursorOffset: options.cursorOffset,\n                    axis: options.axis,\n                    ignore: options.ignore,\n                    autoScroll: options.autoScroll,\n                    dragstart: that._dragstart.bind(that),\n                    dragcancel: that._dragcancel.bind(that),\n                    drag: that._drag.bind(that),\n                    dragend: that._dragend.bind(that)\n                });\n            },\n\n            _dragstart: function(e) {\n                var draggedElement = this.draggedElement = e.currentTarget,\n                    disabled = this.options.disabled,\n                    handler = this.options.handler,\n                    _placeholder = this.options.placeholder,\n                    placeholder = this.placeholder = kendo.isFunction(_placeholder) ? $(_placeholder.call(this, draggedElement)) : $(_placeholder);\n\n                if (disabled && draggedElement.is(disabled)) {\n                    e.preventDefault();\n                } else if (handler && !$(e.initialTarget).is(handler)) {\n                    e.preventDefault();\n                } else {\n\n                    if (this.trigger(START, { item: draggedElement, draggableEvent: e })) {\n                        e.preventDefault();\n                    } else {\n                        draggedElement.css(\"display\", \"none\");\n                        draggedElement.before(placeholder);\n\n                        this._setCursor();\n                    }\n\n                }\n            },\n\n            _dragcancel: function() {\n                this._cancel();\n                this.trigger(CANCEL, { item: this.draggedElement });\n\n                this._resetCursor();\n            },\n\n            _drag: function(e) {\n                var draggedElement = this.draggedElement,\n                    target = this._findTarget(e),\n                    targetCenter,\n                    cursorOffset = { left: e.x.location, top: e.y.location },\n                    offsetDelta,\n                    axisDelta = { x: e.x.delta, y: e.y.delta },\n                    direction,\n                    sibling,\n                    getSibling,\n                    axis = this.options.axis,\n                    moveOnDragEnter = this.options.moveOnDragEnter,\n                    eventData = { item: draggedElement, list: this, draggableEvent: e };\n\n                if (axis === \"x\" || axis === \"y\") {\n                    this._movementByAxis(axis, cursorOffset, axisDelta[axis], eventData);\n                    return;\n                }\n\n                if (target) {\n                    targetCenter = this._getElementCenter(target.element);\n\n                    offsetDelta = {\n                        left: Math.round(cursorOffset.left - targetCenter.left),\n                        top: Math.round(cursorOffset.top - targetCenter.top)\n                    };\n\n                    $.extend(eventData, { target: target.element });\n\n                    if (target.appendToBottom) {\n                        this._movePlaceholder(target, null, eventData);\n                        return;\n                    }\n\n                    if (target.appendAfterHidden) {\n                        this._movePlaceholder(target, \"next\", eventData);\n                    }\n\n                    if (this._isFloating(target.element)) { //horizontal\n                        if ((axisDelta.x < 0 && moveOnDragEnter) || (!moveOnDragEnter && offsetDelta.left < 0)) {\n                            direction = \"prev\";\n                        } else if ((axisDelta.x > 0 && moveOnDragEnter) || (!moveOnDragEnter && offsetDelta.left > 0)) {\n                            direction = \"next\";\n                        }\n                    } else { //vertical\n                        if ((axisDelta.y < 0 && moveOnDragEnter) || (!moveOnDragEnter && offsetDelta.top < 0)) {\n                            direction = \"prev\";\n                        } else if ((axisDelta.y > 0 && moveOnDragEnter) || (!moveOnDragEnter && offsetDelta.top > 0)) {\n                            direction = \"next\";\n                        }\n                    }\n\n                    if (direction) {\n                        getSibling = (direction === \"prev\") ? jQuery.fn.prev : jQuery.fn.next;\n\n                        sibling = getSibling.call(target.element);\n\n                        //find the prev/next visible sibling\n                        while (sibling.length && !sibling.is(\":visible\")) {\n                            sibling = getSibling.call(sibling);\n                        }\n\n                        if (sibling[0] != this.placeholder[0]) {\n                            this._movePlaceholder(target, direction, eventData);\n                        }\n                    }\n                }\n            },\n\n            _dragend: function(e) {\n                var placeholder = this.placeholder,\n                    draggedElement = this.draggedElement,\n                    draggedIndex = this.indexOf(draggedElement),\n                    placeholderIndex = this.indexOf(placeholder),\n                    connectWith = this.options.connectWith,\n                    connectedList,\n                    isDefaultPrevented,\n                    eventData,\n                    connectedListEventData;\n\n                this._resetCursor();\n\n                eventData = {\n                    action: ACTION_SORT,\n                    item: draggedElement,\n                    oldIndex: draggedIndex,\n                    newIndex: placeholderIndex,\n                    draggableEvent: e\n                };\n\n                if (placeholderIndex >= 0) {\n                    isDefaultPrevented = this.trigger(END, eventData);\n                } else {\n                    connectedList = placeholder.parents(connectWith).getKendoSortable();\n\n                    eventData.action = ACTION_REMOVE;\n                    connectedListEventData = $.extend({}, eventData, {\n                        action: ACTION_RECEIVE,\n                        oldIndex: MISSING_INDEX,\n                        newIndex: connectedList.indexOf(placeholder)\n                    });\n\n                    isDefaultPrevented = !(!this.trigger(END, eventData) && !connectedList.trigger(END, connectedListEventData));\n                }\n\n                if (isDefaultPrevented || placeholderIndex === draggedIndex) {\n                    this._cancel();\n                    return;\n                }\n\n                placeholder.replaceWith(draggedElement);\n\n                draggedElement.show();\n                this.draggable.dropped = true;\n\n                eventData = {\n                    action: this.indexOf(draggedElement) != MISSING_INDEX ? ACTION_SORT : ACTION_REMOVE,\n                    item: draggedElement,\n                    oldIndex: draggedIndex,\n                    newIndex: this.indexOf(draggedElement),\n                    draggableEvent: e\n                };\n\n                this.trigger(CHANGE, eventData);\n\n                if (connectedList) {\n                    connectedListEventData = $.extend({}, eventData, {\n                        action: ACTION_RECEIVE,\n                        oldIndex: MISSING_INDEX,\n                        newIndex: connectedList.indexOf(draggedElement)\n                    });\n\n                    connectedList.trigger(CHANGE, connectedListEventData);\n                }\n\n            },\n\n            _findTarget: function(e) {\n                var element = this._findElementUnderCursor(e),\n                    items,\n                    connectWith = this.options.connectWith,\n                    node;\n\n                if ($.contains(this.element[0], element)) { //the element is part of the sortable container\n                    items = this.items();\n                    node = items.filter(element)[0] || items.has(element)[0];\n\n                    return node ? { element: $(node), sortable: this } : null;\n                } else if (this.element[0] == element && this._isEmpty()) {\n                    return { element: this.element, sortable: this, appendToBottom: true };\n                } else if (this.element[0] == element && this._isLastHidden()) {\n                    node = this.items().eq(0);\n                    return { element: node , sortable: this, appendAfterHidden: true };\n                } else if (connectWith) { //connected lists are present\n                    return this._searchConnectedTargets(element, e);\n                }\n            },\n\n            _findElementUnderCursor: function(e) {\n                var elementUnderCursor = kendo.elementUnderCursor(e),\n                    draggable = e.sender;\n\n                if (containsOrEqualTo(draggable.hint[0], elementUnderCursor)) {\n                    draggable.hint.hide();\n                    elementUnderCursor = kendo.elementUnderCursor(e);\n                    // IE8 does not return the element in iframe from first attempt\n                    if (!elementUnderCursor) {\n                        elementUnderCursor = kendo.elementUnderCursor(e);\n                    }\n                    draggable.hint.show();\n                }\n\n                return elementUnderCursor;\n            },\n\n            _searchConnectedTargets: function(element, e) {\n                var connected = $(this.options.connectWith),\n                    sortableInstance,\n                    items,\n                    node;\n\n                for (var i = 0; i < connected.length; i++) {\n                    sortableInstance = connected.eq(i).getKendoSortable();\n\n                    if ($.contains(connected[i], element)) {\n                        if (sortableInstance) {\n                            items = sortableInstance.items();\n                            node = items.filter(element)[0] || items.has(element)[0];\n\n                            if (node) {\n                                sortableInstance.placeholder = this.placeholder;\n                                return { element: $(node), sortable: sortableInstance };\n                            } else {\n                                return null;\n                            }\n                        }\n                    } else if (connected[i] == element) {\n                        if (sortableInstance && sortableInstance._isEmpty()) {\n                            return { element: connected.eq(i), sortable: sortableInstance, appendToBottom: true };\n                        } else if (this._isCursorAfterLast(sortableInstance, e)) {\n                            node = sortableInstance.items().last();\n                            return { element: node, sortable: sortableInstance };\n                        }\n                    }\n                }\n\n            },\n\n            _isCursorAfterLast: function(sortable, e) {\n                var lastItem = sortable.items().last(),\n                    cursorOffset = { left: e.x.location, top: e.y.location },\n                    lastItemOffset,\n                    delta;\n\n                lastItemOffset = kendo.getOffset(lastItem);\n                lastItemOffset.top += outerHeight(lastItem);\n                lastItemOffset.left += outerWidth(lastItem);\n\n                if (this._isFloating(lastItem)) { //horizontal\n                    delta = lastItemOffset.left - cursorOffset.left;\n                } else { //vertical\n                    delta = lastItemOffset.top - cursorOffset.top;\n                }\n\n                return delta < 0 ? true : false;\n            },\n\n            _movementByAxis: function(axis, cursorOffset, delta, eventData) {\n                var cursorPosition = (axis === \"x\") ? cursorOffset.left : cursorOffset.top,\n                    target = (delta < 0) ? this.placeholder.prev() : this.placeholder.next(),\n                    items = this.items(),\n                    targetCenter;\n\n                if (target.length && !target.is(\":visible\")) {\n                    target = (delta < 0) ? target.prev() : target.next();\n                }\n\n                if (!items.filter(target).length) {\n                    return;\n                }\n\n                $.extend(eventData, { target: target });\n                targetCenter = this._getElementCenter(target);\n\n                if (targetCenter) {\n                    targetCenter = (axis === \"x\") ? targetCenter.left : targetCenter.top;\n                }\n\n                if (target.length && delta < 0 && cursorPosition - targetCenter < 0) { //prev\n                    this._movePlaceholder({ element: target, sortable: this }, \"prev\", eventData);\n                } else if (target.length && delta > 0 && cursorPosition - targetCenter > 0) { //next\n                    this._movePlaceholder({ element: target, sortable: this }, \"next\", eventData);\n                }\n            },\n\n            _movePlaceholder: function(target, direction, eventData) {\n                var placeholder = this.placeholder;\n\n                if (!target.sortable.trigger(BEFORE_MOVE, eventData)) {\n\n                    if (!direction) {\n                        target.element.append(placeholder);\n                    } else if (direction === \"prev\") {\n                        target.element.before(placeholder);\n                    } else if (direction === \"next\") {\n                        target.element.after(placeholder);\n                    }\n\n                    target.sortable.trigger(MOVE, eventData);\n                }\n            },\n\n            _setCursor: function() {\n                var cursor = this.options.cursor,\n                    body;\n\n                if (cursor && cursor !== \"auto\") {\n                    body = $(document.body);\n\n                    this._originalCursorType = body.css(\"cursor\");\n                    body.css({ \"cursor\": cursor });\n\n                    if (!this._cursorStylesheet) {\n                        this._cursorStylesheet = $(\"<style>* { cursor: \" + cursor + \" !important; }</style>\");\n                    }\n\n                    this._cursorStylesheet.appendTo(body);\n                }\n            },\n\n            _resetCursor: function() {\n                if (this._originalCursorType) {\n                    $(document.body).css(\"cursor\", this._originalCursorType);\n                    this._originalCursorType = null;\n\n                    this._cursorStylesheet.remove();\n                }\n            },\n\n            _getElementCenter: function(element) {\n                var center = element.length ? kendo.getOffset(element) : null;\n                if (center) {\n                    center.top += outerHeight(element) / 2;\n                    center.left += outerWidth(element) / 2;\n                }\n\n                return center;\n            },\n\n            _isFloating: function(item) {\n                var isFloating = /left|right/.test(item.css('float'));\n                var isTable = /inline|table-cell/.test(item.css('display'));\n                var isHorizontalFlex = /flex/.test(item.parent().css('display')) && (/row|row-reverse/.test(item.parent().css('flex-direction')) || !item.parent().css('flex-direction'));\n                return isFloating || isTable || isHorizontalFlex;\n            },\n\n            _cancel: function() {\n                if (this.draggedElement) {\n                    this.draggedElement.show();\n                    this.placeholder.remove();\n                    this.draggable.dropped = true;\n                }\n            },\n\n            _items: function() {\n                var filter = this.options.filter,\n                    items;\n\n                if (filter) {\n                    items = this.element.find(filter);\n                } else {\n                    items = this.element.children();\n                }\n\n                return items;\n            },\n\n            indexOf: function(element) {\n                var items = this._items(),\n                    placeholder = this.placeholder,\n                    draggedElement = this.draggedElement;\n\n                if (placeholder && element[0] == placeholder[0]) {\n                    return items.not(draggedElement).index(element);\n                } else {\n                    return items.not(placeholder).index(element);\n                }\n            },\n\n            items: function() {\n                var placeholder = this.placeholder,\n                    items = this._items();\n\n                if (placeholder) {\n                    items = items.not(placeholder);\n                }\n\n                return items;\n            },\n\n            _isEmpty: function() {\n                return !this.items().length;\n            },\n\n            _isLastHidden: function() {\n                return this.items().length === 1 && this.items().is(\":hidden\");\n            }\n\n        });\n\n        kendo.ui.plugin(Sortable);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}