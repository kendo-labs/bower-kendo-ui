{"version":3,"file":"kendo.color.min.js","names":["factory","define","amd","window","kendo","Class","support","namedColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","browser","matchNamedColor","color","colorNames","Object","keys","push","regexp","RegExp","join","exec","BaseColor","extend","init","toHSV","this","toRGB","toHex","options","toBytes","toCss","toCssRgba","rgb","parseFloat","Number","a","toFixed","toDisplay","msie","version","equals","c","parseColor","diff","other","NaN","c1","c2","Math","sqrt","pow","r","g","b","clone","Bytes","RGB","fn","call","h","s","ref","min","max","delta","v","HSV","toHSL","l","d","HSL","round","value","hex","alpha","n","width","pad","result","toString","length","i","floor","f","p","q","t","hue2rgb","alphaFromHex","parseInt","safe","m","ret","toLowerCase","match","Error","Color","this$1$1","arguments","formats","resolvedColor","resolveColor","idx","formatRegex","re","processor","process","parts","channels","normalizeByte","padDigit","charAt","substr","replace","isNaN","brightness","percBrightness","isDark","fromBytes","fromRGB","fromHSV","fromHSL","deepExtend"],"sources":["kendo.color.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core'], factory) :\n    factory();\n})((function () {\n    /***********************************************************************\n     * WARNING: this file is auto-generated.  If you change it directly,\n     * your modifications will eventually be lost.  The source code is in\n     * `kendo-drawing` repository, you should make your changes there and\n     * run `src-modules/sync.sh` in this repository.\n     */\n    /* eslint-disable space-before-blocks, space-before-function-paren, no-multi-spaces */\n\n        var __meta__ = {\n            id: \"color\",\n            name: \"Color utils\",\n            category: \"framework\",\n            advanced: true,\n            description: \"Color utilities used across components\",\n            depends: [ \"core\" ]\n        };\n\n    window.kendo = window.kendo || {};\n\n    var Class = kendo.Class;\n    var support = kendo.support;\n\n    var namedColors = {\n        aliceblue: \"f0f8ff\", antiquewhite: \"faebd7\", aqua: \"00ffff\",\n        aquamarine: \"7fffd4\", azure: \"f0ffff\", beige: \"f5f5dc\",\n        bisque: \"ffe4c4\", black: \"000000\", blanchedalmond: \"ffebcd\",\n        blue: \"0000ff\", blueviolet: \"8a2be2\", brown: \"a52a2a\",\n        burlywood: \"deb887\", cadetblue: \"5f9ea0\", chartreuse: \"7fff00\",\n        chocolate: \"d2691e\", coral: \"ff7f50\", cornflowerblue: \"6495ed\",\n        cornsilk: \"fff8dc\", crimson: \"dc143c\", cyan: \"00ffff\",\n        darkblue: \"00008b\", darkcyan: \"008b8b\", darkgoldenrod: \"b8860b\",\n        darkgray: \"a9a9a9\", darkgrey: \"a9a9a9\", darkgreen: \"006400\",\n        darkkhaki: \"bdb76b\", darkmagenta: \"8b008b\", darkolivegreen: \"556b2f\",\n        darkorange: \"ff8c00\", darkorchid: \"9932cc\", darkred: \"8b0000\",\n        darksalmon: \"e9967a\", darkseagreen: \"8fbc8f\", darkslateblue: \"483d8b\",\n        darkslategray: \"2f4f4f\", darkslategrey: \"2f4f4f\", darkturquoise: \"00ced1\",\n        darkviolet: \"9400d3\", deeppink: \"ff1493\", deepskyblue: \"00bfff\",\n        dimgray: \"696969\", dimgrey: \"696969\", dodgerblue: \"1e90ff\",\n        firebrick: \"b22222\", floralwhite: \"fffaf0\", forestgreen: \"228b22\",\n        fuchsia: \"ff00ff\", gainsboro: \"dcdcdc\", ghostwhite: \"f8f8ff\",\n        gold: \"ffd700\", goldenrod: \"daa520\", gray: \"808080\",\n        grey: \"808080\", green: \"008000\", greenyellow: \"adff2f\",\n        honeydew: \"f0fff0\", hotpink: \"ff69b4\", indianred: \"cd5c5c\",\n        indigo: \"4b0082\", ivory: \"fffff0\", khaki: \"f0e68c\",\n        lavender: \"e6e6fa\", lavenderblush: \"fff0f5\", lawngreen: \"7cfc00\",\n        lemonchiffon: \"fffacd\", lightblue: \"add8e6\", lightcoral: \"f08080\",\n        lightcyan: \"e0ffff\", lightgoldenrodyellow: \"fafad2\", lightgray: \"d3d3d3\",\n        lightgrey: \"d3d3d3\", lightgreen: \"90ee90\", lightpink: \"ffb6c1\",\n        lightsalmon: \"ffa07a\", lightseagreen: \"20b2aa\", lightskyblue: \"87cefa\",\n        lightslategray: \"778899\", lightslategrey: \"778899\", lightsteelblue: \"b0c4de\",\n        lightyellow: \"ffffe0\", lime: \"00ff00\", limegreen: \"32cd32\",\n        linen: \"faf0e6\", magenta: \"ff00ff\", maroon: \"800000\",\n        mediumaquamarine: \"66cdaa\", mediumblue: \"0000cd\", mediumorchid: \"ba55d3\",\n        mediumpurple: \"9370d8\", mediumseagreen: \"3cb371\", mediumslateblue: \"7b68ee\",\n        mediumspringgreen: \"00fa9a\", mediumturquoise: \"48d1cc\", mediumvioletred: \"c71585\",\n        midnightblue: \"191970\", mintcream: \"f5fffa\", mistyrose: \"ffe4e1\",\n        moccasin: \"ffe4b5\", navajowhite: \"ffdead\", navy: \"000080\",\n        oldlace: \"fdf5e6\", olive: \"808000\", olivedrab: \"6b8e23\",\n        orange: \"ffa500\", orangered: \"ff4500\", orchid: \"da70d6\",\n        palegoldenrod: \"eee8aa\", palegreen: \"98fb98\", paleturquoise: \"afeeee\",\n        palevioletred: \"d87093\", papayawhip: \"ffefd5\", peachpuff: \"ffdab9\",\n        peru: \"cd853f\", pink: \"ffc0cb\", plum: \"dda0dd\",\n        powderblue: \"b0e0e6\", purple: \"800080\", red: \"ff0000\",\n        rosybrown: \"bc8f8f\", royalblue: \"4169e1\", saddlebrown: \"8b4513\",\n        salmon: \"fa8072\", sandybrown: \"f4a460\", seagreen: \"2e8b57\",\n        seashell: \"fff5ee\", sienna: \"a0522d\", silver: \"c0c0c0\",\n        skyblue: \"87ceeb\", slateblue: \"6a5acd\", slategray: \"708090\",\n        slategrey: \"708090\", snow: \"fffafa\", springgreen: \"00ff7f\",\n        steelblue: \"4682b4\", tan: \"d2b48c\", teal: \"008080\",\n        thistle: \"d8bfd8\", tomato: \"ff6347\", turquoise: \"40e0d0\",\n        violet: \"ee82ee\", wheat: \"f5deb3\", white: \"ffffff\",\n        whitesmoke: \"f5f5f5\", yellow: \"ffff00\", yellowgreen: \"9acd32\"\n    };\n\n    var browser = support.browser;\n\n    var matchNamedColor = function (color) {\n        var colorNames = Object.keys(namedColors);\n        colorNames.push(\"transparent\");\n\n        var regexp = new RegExp(\"^(\" + colorNames.join(\"|\") + \")(\\\\W|$)\", \"i\");\n        matchNamedColor = function (color) { return regexp.exec(color); };\n\n        return regexp.exec(color);\n    };\n\n    var BaseColor = Class.extend({\n        init: function() {  },\n\n        toHSV: function() { return this; },\n\n        toRGB: function() { return this; },\n\n        toHex: function(options) { return this.toBytes().toHex(options); },\n\n        toBytes: function() { return this; },\n\n        toCss: function(options) { return \"#\" + this.toHex(options); },\n\n        toCssRgba: function() {\n            var rgb = this.toBytes();\n            return (\"rgba(\" + (rgb.r) + \", \" + (rgb.g) + \", \" + (rgb.b) + \", \" + (parseFloat((Number(this.a)).toFixed(3))) + \")\");\n        },\n\n        toDisplay: function() {\n            if (browser.msie && browser.version < 9) {\n                return this.toCss(); // no RGBA support; does it support any opacity in colors?\n            }\n            return this.toCssRgba();\n        },\n\n        equals: function(c) {\n            return c === this || ((c !== null && c !== undefined) && this.toCssRgba() === parseColor(c).toCssRgba());\n        },\n\n        diff: function(other) {\n            if (other === null) {\n                return NaN;\n            }\n\n            var c1 = this.toBytes();\n            var c2 = other.toBytes();\n\n            return Math.sqrt(Math.pow((c1.r - c2.r) * 0.30, 2) +\n                             Math.pow((c1.g - c2.g) * 0.59, 2) +\n                             Math.pow((c1.b - c2.b) * 0.11, 2));\n        },\n\n        clone: function() {\n            var c = this.toBytes();\n            if (c === this) {\n                c = new Bytes(c.r, c.g, c.b, c.a);\n            }\n\n            return c;\n        }\n    });\n\n    var RGB = BaseColor.extend({\n        init: function(r, g, b, a) {\n            BaseColor.fn.init.call(this);\n\n            this.r = r;\n            this.g = g;\n            this.b = b;\n            this.a = a;\n        },\n\n        toHSV: function() {\n            var ref = this;\n            var r = ref.r;\n            var g = ref.g;\n            var b = ref.b;\n            var min = Math.min(r, g, b);\n            var max = Math.max(r, g, b);\n            var delta = max - min;\n            var v = max;\n            var h, s;\n\n            if (delta === 0) {\n                return new HSV(0, 0, v, this.a);\n            }\n\n            if (max !== 0) {\n                s = delta / max;\n                if (r === max) {\n                    h = (g - b) / delta;\n                } else if (g === max) {\n                    h = 2 + (b - r) / delta;\n                } else {\n                    h = 4 + (r - g) / delta;\n                }\n\n                h *= 60;\n                if (h < 0) {\n                    h += 360;\n                }\n            } else {\n                s = 0;\n                h = -1;\n            }\n\n            return new HSV(h, s, v, this.a);\n        },\n\n        toHSL: function() {\n            var ref = this;\n            var r = ref.r;\n            var g = ref.g;\n            var b = ref.b;\n            var max = Math.max(r, g, b);\n            var min = Math.min(r, g, b);\n            var h, s, l = (max + min) / 2;\n\n            if (max === min) {\n                h = s = 0;\n            } else {\n                var d = max - min;\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n                switch (max) {\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n                case g: h = (b - r) / d + 2; break;\n                case b: h = (r - g) / d + 4; break;\n                default: break;\n                }\n            }\n\n            return new HSL(h * 60, s * 100, l * 100, this.a);\n        },\n\n        toBytes: function() {\n            return new Bytes(this.r * 255, this.g * 255, this.b * 255, this.a);\n        }\n    });\n\n    var Bytes = RGB.extend({\n        init: function(r, g, b, a) {\n            RGB.fn.init.call(this, Math.round(r), Math.round(g), Math.round(b), a);\n        },\n\n        toRGB: function() {\n            return new RGB(this.r / 255, this.g / 255, this.b / 255, this.a);\n        },\n\n        toHSV: function() {\n            return this.toRGB().toHSV();\n        },\n\n        toHSL: function() {\n            return this.toRGB().toHSL();\n        },\n\n        toHex: function(options) {\n            var value = hex(this.r, 2) + hex(this.g, 2) + hex(this.b, 2);\n\n            if (options && options.alpha) {\n                value += hex(Math.round(this.a * 255), 2);\n            }\n\n            return value;\n        },\n\n        toBytes: function() {\n            return this;\n        }\n    });\n\n    function hex(n, width, pad) {\n        if (pad === void 0) { pad = \"0\"; }\n\n        var result = n.toString(16);\n        while (width > result.length) {\n            result = pad + result;\n        }\n\n        return result;\n    }\n\n    var HSV = BaseColor.extend({\n        init: function(h, s, v, a) {\n            BaseColor.fn.init.call(this);\n\n            this.h = h;\n            this.s = s;\n            this.v = v;\n            this.a = a;\n        },\n\n        toRGB: function() {\n            var ref = this;\n            var h = ref.h;\n            var s = ref.s;\n            var v = ref.v;\n            var r, g, b;\n\n            if (s === 0) {\n                r = g = b = v;\n            } else {\n                h /= 60;\n\n                var i = Math.floor(h);\n                var f = h - i;\n                var p = v * (1 - s);\n                var q = v * (1 - s * f);\n                var t = v * (1 - s * (1 - f));\n\n                switch (i) {\n                case 0: r = v; g = t; b = p; break;\n                case 1: r = q; g = v; b = p; break;\n                case 2: r = p; g = v; b = t; break;\n                case 3: r = p; g = q; b = v; break;\n                case 4: r = t; g = p; b = v; break;\n                default: r = v; g = p; b = q; break;\n                }\n            }\n\n            return new RGB(r, g, b, this.a);\n        },\n\n        toHSL: function() {\n            return this.toRGB().toHSL();\n        },\n\n        toBytes: function() {\n            return this.toRGB().toBytes();\n        }\n    });\n\n    var HSL = BaseColor.extend({\n        init: function(h, s, l, a) {\n            BaseColor.fn.init.call(this);\n\n            this.h = h;\n            this.s = s;\n            this.l = l;\n            this.a = a;\n        },\n\n        toRGB: function() {\n            var h = this.h / 360;\n            var s = this.s / 100;\n            var l = this.l / 100;\n            var r, g, b;\n\n            if (s === 0) {\n                r = g = b = l; // achromatic\n            } else {\n                var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n                var p = 2 * l - q;\n                r = hue2rgb(p, q, h + 1 / 3);\n                g = hue2rgb(p, q, h);\n                b = hue2rgb(p, q, h - 1 / 3);\n            }\n\n            return new RGB(r, g, b, this.a);\n        },\n\n        toHSV: function() {\n            return this.toRGB().toHSV();\n        },\n\n        toBytes: function() {\n            return this.toRGB().toBytes();\n        }\n    });\n\n    function hue2rgb(p, q, s) {\n        var t = s;\n\n        if (t < 0) {\n            t += 1;\n        }\n\n        if (t > 1) {\n            t -= 1;\n        }\n\n        if (t < 1 / 6) {\n            return p + (q - p) * 6 * t;\n        }\n\n        if (t < 1 / 2) {\n            return q;\n        }\n\n        if (t < 2 / 3) {\n            return p + (q - p) * (2 / 3 - t) * 6;\n        }\n\n        return p;\n    }\n\n    function alphaFromHex(a) {\n        return parseFloat(parseFloat(parseInt(a, 16) / 255 ).toFixed(3));\n    }\n\n    function parseColor(value, safe) {\n        var m, ret;\n\n        if (value == null || value === \"none\") {\n            return null;\n        }\n\n        if (value instanceof BaseColor) {\n            return value;\n        }\n\n        var color = value.toLowerCase();\n        if ((m = matchNamedColor(color))) {\n            if (m[1] === \"transparent\") {\n                color = new RGB(1, 1, 1, 0);\n            } else {\n                color = parseColor(namedColors[m[1]], safe);\n            }\n            color.match = [ m[1] ];\n            return color;\n        }\n        if ((m = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})\\b/i.exec(color))) {\n            ret = new Bytes(parseInt(m[1], 16),\n                parseInt(m[2], 16),\n                parseInt(m[3], 16), 1);\n        } else if ((m = /^#?([0-9a-f])([0-9a-f])([0-9a-f])\\b/i.exec(color))) {\n            ret = new Bytes(parseInt(m[1] + m[1], 16),\n                parseInt(m[2] + m[2], 16),\n                parseInt(m[3] + m[3], 16), 1);\n        } else if ((m = /^#?([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])\\b/i.exec(color))) { // Parse 4 digit hex color\n            ret = new Bytes(parseInt(m[1] + m[1], 16),\n                parseInt(m[2] + m[2], 16),\n                parseInt(m[3] + m[3], 16),\n                alphaFromHex(m[4] + m[4]));\n        } else if ((m = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})\\b/i.exec(color))) { // Parse 8 digit hex color\n            ret = new Bytes(parseInt(m[1], 16),\n                parseInt(m[2], 16),\n                parseInt(m[3], 16),\n                alphaFromHex(m[4]));\n        } else if ((m = /^rgb\\(\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*\\)/.exec(color))) {\n            ret = new Bytes(parseInt(m[1], 10),\n                parseInt(m[2], 10),\n                parseInt(m[3], 10), 1);\n        } else if ((m = /^rgba\\(\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9.]+)\\s*\\)/.exec(color))) {\n            ret = new Bytes(parseInt(m[1], 10),\n                parseInt(m[2], 10),\n                parseInt(m[3], 10), parseFloat(m[4]));\n        } else if ((m = /^rgb\\(\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*\\)/.exec(color))) {\n            ret = new RGB(parseFloat(m[1]) / 100,\n                parseFloat(m[2]) / 100,\n                parseFloat(m[3]) / 100, 1);\n        } else if ((m = /^rgba\\(\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9.]+)\\s*\\)/.exec(color))) {\n            ret = new RGB(parseFloat(m[1]) / 100,\n                parseFloat(m[2]) / 100,\n                parseFloat(m[3]) / 100, parseFloat(m[4]));\n        }\n\n        if (ret) {\n            ret.match = m;\n        } else if (!safe) {\n            throw new Error(\"Cannot parse color: \" + color);\n        }\n\n        return ret;\n    }\n\n    var DARK_TRESHOLD = 180;\n\n    var Color = Class.extend({\n        init: function(value) {\n            var this$1$1 = this;\n\n            if (arguments.length === 1) {\n                var formats = Color.formats;\n                var resolvedColor = this.resolveColor(value);\n\n                for (var idx = 0; idx < formats.length; idx++) {\n                    var formatRegex = formats[idx].re;\n                    var processor = formats[idx].process;\n                    var parts = formatRegex.exec(resolvedColor);\n\n                    if (parts) {\n                        var channels = processor(parts);\n                        this$1$1.r = channels[0];\n                        this$1$1.g = channels[1];\n                        this$1$1.b = channels[2];\n                    }\n                }\n            } else {\n                this.r = arguments[0];\n                this.g = arguments[1];\n                this.b = arguments[2];\n            }\n\n            this.r = this.normalizeByte(this.r);\n            this.g = this.normalizeByte(this.g);\n            this.b = this.normalizeByte(this.b);\n        },\n\n        toHex: function() {\n            var pad = this.padDigit;\n            var r = this.r.toString(16);\n            var g = this.g.toString(16);\n            var b = this.b.toString(16);\n\n            return \"#\" + pad(r) + pad(g) + pad(b);\n        },\n\n        resolveColor: function(value) {\n            var color = value || \"black\";\n\n            if (color.charAt(0) === \"#\") {\n                color = color.substr(1, 6);\n            }\n\n            color = color.replace(/ /g, \"\");\n            color = color.toLowerCase();\n            color = Color.namedColors[color] || color;\n\n            return color;\n        },\n\n        normalizeByte: function(value) {\n            if (value < 0 || isNaN(value)) {\n                return 0;\n            }\n\n            return value > 255 ? 255 : value;\n        },\n\n        padDigit: function(value) {\n            return (value.length === 1) ? \"0\" + value : value;\n        },\n\n        brightness: function(value) {\n            var round = Math.round;\n\n            this.r = round(this.normalizeByte(this.r * value));\n            this.g = round(this.normalizeByte(this.g * value));\n            this.b = round(this.normalizeByte(this.b * value));\n\n            return this;\n        },\n\n        percBrightness: function() {\n            return Math.sqrt(0.241 * this.r * this.r + 0.691 * this.g * this.g + 0.068 * this.b * this.b);\n        },\n\n        isDark: function() {\n            return this.percBrightness() < DARK_TRESHOLD;\n        }\n    });\n\n    Color.fromBytes = function(r, g, b, a) {\n        return new Bytes(r, g, b, a != null ? a : 1);\n    };\n\n    Color.fromRGB = function(r, g, b, a) {\n        return new RGB(r, g, b, a != null ? a : 1);\n    };\n\n    Color.fromHSV = function(h, s, v, a) {\n        return new HSV(h, s, v, a != null ? a : 1);\n    };\n\n    Color.fromHSL = function(h, s, l, a) {\n        return new HSL(h, s, l, a != null ? a : 1);\n    };\n\n    Color.formats = [ {\n        re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n        process: function(parts) {\n            return [\n                parseInt(parts[1], 10), parseInt(parts[2], 10), parseInt(parts[3], 10)\n            ];\n        }\n    }, {\n        re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n        process: function(parts) {\n            return [\n                parseInt(parts[1], 16), parseInt(parts[2], 16), parseInt(parts[3], 16)\n            ];\n        }\n    }, {\n        re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n        process: function(parts) {\n            return [\n                parseInt(parts[1] + parts[1], 16),\n                parseInt(parts[2] + parts[2], 16),\n                parseInt(parts[3] + parts[3], 16)\n            ];\n        }\n    } ];\n\n    Color.namedColors = namedColors;\n\n    kendo.deepExtend(kendo, {\n        parseColor: parseColor,\n        namedColors: namedColors,\n        Color: Color\n    });\n\n}));\n"]}