{"version":3,"file":"kendo.numerictextbox.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendonumerictextbox","js","this","$","undefined$1","kendo","window","caret","keys","html","ui","Widget","activeElement","_activeElement","extractFormat","_extractFormat","parse","parseFloat","placeholderSupported","support","placeholder","getCulture","CHANGE","DISABLED","READONLY","INPUT","SPIN","ns","HOVEREVENTS","FOCUSED","HOVER","FOCUS","POINT","SELECTED","STATEDISABLED","STATEINVALID","ARIA_DISABLED","INTEGER_REGEXP","NULL","isPlainObject","extend","NumericTextBox","init","element","options","min","max","step","value","inputType","that","isStep","fn","call","on","_focusout","bind","attr","_parse","_initialOptions","_reset","_wrapper","_arrows","_validation","_input","mobileOS","_text","browser","edge","one","_focusin","selectValue","_click","factor","format","val","enable","is","parents","readonly","_label","_ariaLabel","_applyCssClasses","notify","name","decimals","restrictDecimals","round","culture","spinners","selectOnFocus","upArrowText","downArrowText","label","size","fillMode","rounded","events","_editable","disable","text","add","wrapper","off","_toggleText","_upArrowEventHandler","unbind","_downArrowEventHandler","_inputLabel","addClass","removeClass","_toggleHover","prop","e","preventDefault","_spin","_upArrow","_downArrow","_keydown","_keyup","_paste","_inputHandler","focus","floatingLabel","setOptions","toggleClass","_placeholder","destroy","_arrowsWrap","remove","_floatingLabelContainer","unwrap","_form","_resetHandler","_option","_value","_adjust","_update","_old","refresh","arrows","_release","clearTimeout","_spinning","siblings","buttonHtml","appendTo","wrapAll","parent","toggle","eq","UserEvents","release","_validationIcon","icon","iconClass","insertAfter","_blur","_change","_focusing","setTimeout","result","groupRegExp","extractRegExp","input","target","idx","substring","_format","group","caretPosition","RegExp","exec","replace","length","indexOf","select","_getFactorValue","_typing","trigger","_culture","_removeInvalidState","numberFormat","toLowerCase","currency","percent","show","accessKey","find","first","insertBefore","setAttribute","type","title","tabIndex","style","cssText","className","role","autocomplete","key","keyCode","NUMPAD_DOT","_numPadDot","DOWN","UP","ENTER","TAB","_cachedCaret","_step","decimalSeparator","minInvalid","charAt","_isPasted","toString","_numericRegex","test","_oldText","_blinkInvalidState","_addInvalidState","_invalidStateTimeout","separator","precision","fractionRule","_separator","_floatRegExp","option","timeout","originalValue","toFixed","currentTarget","removeAttr","_round","truncate","isNotNull","floating","labelText","id","content","wrap","FloatingLabel","widget","isFunction","guid","DOMElement","hide","width","css","formId","form","closest","direction","dir","renderButton","shape","parts","split","join","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","plugin","jQuery"],"sources":["kendo.numerictextbox.js"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.userevents.js'), require('kendo.floatinglabel.js'), require('kendo.html.button.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.userevents', 'kendo.floatinglabel', 'kendo.html.button', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendonumerictextbox = global.kendonumerictextbox || {}, global.kendonumerictextbox.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"numerictextbox\",\n        name: \"NumericTextBox\",\n        category: \"web\",\n        description: \"The NumericTextBox widget can format and display numeric, percentage or currency textbox.\",\n        depends: [ \"core\", \"userevents\", \"floatinglabel\", \"html.button\", \"icons\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            caret = kendo.caret,\n            keys = kendo.keys,\n            html = kendo.html,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            activeElement = kendo._activeElement,\n            extractFormat = kendo._extractFormat,\n            parse = kendo.parseFloat,\n            placeholderSupported = kendo.support.placeholder,\n            getCulture = kendo.getCulture,\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            INPUT = \"k-input-inner\",\n            SPIN = \"spin\",\n            ns = \".kendoNumericTextBox\",\n            TOUCHEND = \"touchend\",\n            MOUSELEAVE = \"mouseleave\" + ns,\n            HOVEREVENTS = \"mouseenter\" + ns + \" \" + MOUSELEAVE,\n            FOCUSED = \"k-focus\",\n            HOVER = \"k-hover\",\n            FOCUS = \"focus\",\n            POINT = \".\",\n            SYMBOL = \"symbol\",\n            CLASS_ICON = \"k-icon\",\n            LABELCLASSES = \"k-label k-input-label\",\n            SELECTED = \"k-selected\",\n            STATEDISABLED = \"k-disabled\",\n            STATEINVALID = \"k-invalid\",\n            ARIA_DISABLED = \"aria-disabled\",\n            INTEGER_REGEXP = /^(-)?(\\d*)$/,\n            NULL = null,\n            isPlainObject = $.isPlainObject,\n            extend = $.extend;\n\n        var NumericTextBox = Widget.extend({\n             init: function(element, options) {\n                 var that = this,\n                 isStep = options && options.step !== undefined$1,\n                 min, max, step, value, disabled;\n                 var inputType;\n\n                 Widget.fn.init.call(that, element, options);\n\n                 options = that.options;\n                 element = that.element\n                               .on(\"focusout\" + ns, that._focusout.bind(that))\n                               .attr(\"role\", \"spinbutton\");\n\n                 options.placeholder = options.placeholder || element.attr(\"placeholder\");\n\n                 min = that.min(element.attr(\"min\"));\n                 max = that.max(element.attr(\"max\"));\n                 step = that._parse(element.attr(\"step\"));\n\n                 if (options.min === NULL && min !== NULL) {\n                     options.min = min;\n                 }\n\n                 if (options.max === NULL && max !== NULL) {\n                     options.max = max;\n                 }\n\n                 if (!isStep && step !== NULL) {\n                     options.step = step;\n                 }\n\n                 that._initialOptions = extend({}, options);\n\n                 inputType = element.attr(\"type\");\n\n                 that._reset();\n                 that._wrapper();\n                 that._arrows();\n                 that._validation();\n                 that._input();\n\n                 if (!kendo.support.mobileOS) {\n                     that._text.on(FOCUS + ns, that._click.bind(that));\n                 } else {\n                     that._text.on(TOUCHEND + ns + \" \" + FOCUS + ns, function() {\n                         if (kendo.support.browser.edge) {\n                             that._text.one(FOCUS + ns, function() {\n                                that._focusin();\n                             });\n                         } else {\n                            that._focusin();\n                         }\n                         that.selectValue();\n                     });\n                 }\n\n                 element.attr(\"aria-valuemin\", options.min !== NULL ? options.min * options.factor : options.min)\n                        .attr(\"aria-valuemax\", options.max !== NULL ? options.max * options.factor : options.max);\n\n                 options.format = extractFormat(options.format);\n\n                 value = options.value;\n\n                 if (value == NULL) {\n                     if (inputType == \"number\") {\n                        value = parseFloat(element.val());\n                     } else {\n                         value = element.val();\n                     }\n                 }\n\n                 that.value(value);\n\n                 disabled = !options.enable || element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n\n                 if (disabled) {\n                     that.enable(false);\n                 } else {\n                     that.readonly(element.is(\"[readonly]\"));\n                 }\n\n                 that._label();\n                 that._ariaLabel(that._text);\n                 that._applyCssClasses();\n\n                 kendo.notify(that);\n             },\n\n            options: {\n                name: \"NumericTextBox\",\n                decimals: NULL,\n                enable: true,\n                restrictDecimals: false,\n                min: NULL,\n                max: NULL,\n                value: NULL,\n                step: 1,\n                round: true,\n                culture: \"\",\n                format: \"n\",\n                spinners: true,\n                placeholder: \"\",\n                selectOnFocus: false,\n                factor: 1,\n                upArrowText: \"Increase value\",\n                downArrowText: \"Decrease value\",\n                label: null,\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\"\n            },\n            events: [\n                CHANGE,\n                SPIN\n            ],\n\n            _editable: function(options) {\n                var that = this,\n                    element = that.element,\n                    disable = options.disable,\n                    readonly = options.readonly,\n                    text = that._text.add(element),\n                    wrapper = that.wrapper.off(HOVEREVENTS);\n\n                that._toggleText(true);\n\n                that._upArrowEventHandler.unbind(\"press\");\n                that._downArrowEventHandler.unbind(\"press\");\n                element\n                    .off(\"keydown\" + ns)\n                    .off(\"keyup\" + ns)\n                    .off(\"input\" + ns)\n                    .off(\"paste\" + ns);\n\n                if (that._inputLabel) {\n                    that._inputLabel.off(ns);\n                }\n\n                if (!readonly && !disable) {\n                    wrapper\n                        .removeClass(STATEDISABLED)\n                        .on(HOVEREVENTS, that._toggleHover);\n\n                    text.prop(DISABLED, false)\n                        .prop(READONLY, false)\n                        .attr(ARIA_DISABLED, false);\n\n                    that._upArrowEventHandler.bind(\"press\", function(e) {\n                        e.preventDefault();\n                        that._spin(1);\n                        that._upArrow.addClass(SELECTED);\n                    });\n\n                    that._downArrowEventHandler.bind(\"press\", function(e) {\n                        e.preventDefault();\n                        that._spin(-1);\n                        that._downArrow.addClass(SELECTED);\n                    });\n\n                    that.element\n                        .on(\"keydown\" + ns, that._keydown.bind(that))\n                        .on(\"keyup\" + ns, that._keyup.bind(that))\n                        .on(\"paste\" + ns, that._paste.bind(that))\n                        .on(\"input\" + ns, that._inputHandler.bind(that));\n\n                    if (that._inputLabel) {\n                        that._inputLabel.on(\"click\" + ns, that.focus.bind(that));\n                    }\n\n                } else {\n                    wrapper\n                        .addClass(disable ? STATEDISABLED : \"\")\n                        .removeClass(disable ? \"\" : STATEDISABLED);\n\n                    text.attr(DISABLED, disable)\n                        .attr(READONLY, readonly)\n                        .attr(ARIA_DISABLED, disable);\n                }\n            },\n\n            readonly: function(readonly) {\n                var that = this;\n\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                var that = this;\n\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                Widget.fn.setOptions.call(that, options);\n\n                that.wrapper.toggleClass(\"k-expand-padding\", !that.options.spinners);\n                that._text.prop(\"placeholder\", that.options.placeholder);\n                that._placeholder(that.options.placeholder);\n                that.element.attr({\n                    \"aria-valuemin\": that.options.min !== NULL ? that.options.min * that.options.factor : that.options.min,\n                    \"aria-valuemax\": that.options.max !== NULL ? that.options.max * that.options.factor : that.options.max\n                });\n\n                that.options.format = extractFormat(that.options.format);\n                that._upArrowEventHandler.destroy();\n                that._upArrowEventHandler = null;\n                that._downArrowEventHandler.destroy();\n                that._downArrowEventHandler = null;\n                that._arrowsWrap.remove();\n                that._arrows();\n\n                that._applyCssClasses();\n\n                if (that._inputLabel) {\n                    that._inputLabel.off(ns);\n                    that._inputLabel.remove();\n\n                    if (that.floatingLabel) {\n                        that.floatingLabel.destroy();\n                        if (that._floatingLabelContainer) {\n                            that.wrapper.unwrap();\n                        }\n                    }\n                }\n\n                that._label();\n\n                that._editable({\n                    readonly: that.options.readonly,\n                    disable: !that.options.enable\n                });\n\n                if (options.value !== undefined$1) {\n                    that.value(options.value);\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that._inputLabel) {\n                    that._inputLabel.off(ns);\n\n                    if (that.floatingLabel) {\n                        that.floatingLabel.destroy();\n                    }\n                }\n\n                that.element\n                    .add(that._text)\n                    .add(that._upArrow)\n                    .add(that._downArrow)\n                    .off(ns);\n\n                that._upArrowEventHandler.destroy();\n                that._downArrowEventHandler.destroy();\n\n                if (that._form) {\n                    that._form.off(\"reset\", that._resetHandler);\n                }\n\n                Widget.fn.destroy.call(that);\n            },\n\n            min: function(value) {\n                return this._option(\"min\", value);\n            },\n\n            max: function(value) {\n                return this._option(\"max\", value);\n            },\n\n            step: function(value) {\n                return this._option(\"step\", value);\n            },\n\n            value: function(value) {\n                var that = this, adjusted;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                value = that._parse(value);\n                adjusted = that._adjust(value);\n\n                if (value !== adjusted) {\n                    return;\n                }\n\n                that._update(value);\n                that._old = that._value;\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.refresh();\n                }\n            },\n\n            focus: function() {\n                this._focusin();\n            },\n\n            _adjust: function(value) {\n                var that = this,\n                options = that.options,\n                min = options.min,\n                max = options.max;\n\n                if (value === NULL) {\n                    return value;\n                }\n\n                if (min !== NULL && value < min) {\n                    value = min;\n                } else if (max !== NULL && value > max) {\n                    value = max;\n                }\n\n                return value;\n            },\n\n            _arrows: function() {\n                var that = this,\n                arrows,\n                _release = function() {\n                    clearTimeout( that._spinning );\n                    arrows.removeClass(SELECTED);\n                },\n                options = that.options,\n                spinners = options.spinners,\n                element = that.element;\n\n                arrows = element.siblings(\".k-icon-button\");\n\n                if (!arrows[0]) {\n                    arrows = $(buttonHtml(\"increase\", options.upArrowText, options) + buttonHtml(\"decrease\", options.downArrowText, options))\n                            .appendTo(that.wrapper);\n\n                    that._arrowsWrap = arrows.wrapAll('<span class=\"k-input-spinner k-spin-button\"/>').parent();\n                }\n\n                if (!spinners) {\n                    arrows.parent().toggle(spinners);\n                    that.wrapper.addClass(\"k-expand-padding\");\n                }\n\n                that._upArrow = arrows.eq(0);\n                that._upArrowEventHandler = new kendo.UserEvents(that._upArrow, { release: _release });\n                that._downArrow = arrows.eq(1);\n                that._downArrowEventHandler = new kendo.UserEvents(that._downArrow, { release: _release });\n            },\n\n            _validation: function() {\n                var that = this;\n                var element = that.element;\n\n                that._validationIcon = $(kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-input-validation-icon k-hidden\" })).insertAfter(element);\n            },\n\n            _blur: function() {\n                var that = this;\n\n                that._toggleText(true);\n\n                that._change(that.element.val());\n            },\n\n            _click: function(e) {\n                var that = this;\n\n                clearTimeout(that._focusing);\n                that._focusing = setTimeout(function() {\n                    var input = e.target,\n                        idx = caret(input)[0],\n                        value = input.value.substring(0, idx),\n                        format = that._format(that.options.format),\n                        group = format[\",\"],\n                        result, groupRegExp, extractRegExp,\n                        caretPosition = 0;\n\n                    if (group) {\n                        groupRegExp = new RegExp(\"\\\\\" + group, \"g\");\n                        extractRegExp = new RegExp(\"(-)?(\" + format[SYMBOL] + \")?([\\\\d\\\\\" + group + \"]+)(\\\\\" + format[POINT] + \")?(\\\\d+)?\");\n                    }\n\n                    if (extractRegExp) {\n                        result = extractRegExp.exec(value);\n                    }\n\n                    if (result) {\n                        caretPosition = result[0].replace(groupRegExp, \"\").length;\n\n                        if (value.indexOf(\"(\") != -1 && that._value < 0) {\n                            caretPosition++;\n                        }\n                    }\n\n                    that._focusin();\n\n                    caret(that.element[0], caretPosition);\n                    that.selectValue();\n                });\n            },\n\n            selectValue: function() {\n                if (this.options.selectOnFocus) {\n                    this.element[0].select();\n                }\n            },\n\n            _getFactorValue: function(value) {\n                var that = this,\n                    factor = that.options.factor;\n\n                if (factor && factor !== 1) {\n                    value = kendo.parseFloat(value);\n                    if (value !== null) {\n                        value = value / factor;\n                    }\n                }\n\n                return value;\n            },\n\n            _change: function(value) {\n                var that = this;\n\n                value = that._getFactorValue(value);\n                that._update(value);\n                value = that._value;\n\n                if (that._old != value) {\n                    that._old = value;\n\n                    if (!that._typing) {\n                        // trigger the DOM change event so any subscriber gets notified\n                        that.element.trigger(CHANGE);\n                    }\n\n                    that.trigger(CHANGE);\n                }\n\n                that._typing = false;\n            },\n\n            _culture: function(culture) {\n                return culture || getCulture(this.options.culture);\n            },\n\n            _focusin: function() {\n                var that = this;\n                that.wrapper.addClass(FOCUSED);\n                that._toggleText(false);\n                that.element[0].focus();\n            },\n\n            _focusout: function() {\n                var that = this;\n\n                clearTimeout(that._focusing);\n                that.wrapper.removeClass(FOCUSED).removeClass(HOVER);\n                that._blur();\n                that._removeInvalidState();\n            },\n\n            _format: function(format, culture) {\n                var numberFormat = this._culture(culture).numberFormat;\n\n                format = format.toLowerCase();\n\n                if (format.indexOf(\"c\") > -1) {\n                    numberFormat = numberFormat.currency;\n                } else if (format.indexOf(\"p\") > -1) {\n                    numberFormat = numberFormat.percent;\n                }\n\n                return numberFormat;\n            },\n\n            _input: function() {\n                var that = this,\n                    options = that.options,\n                    element = that.element.addClass(INPUT).show()[0],\n                    accessKey = element.accessKey,\n                    wrapper = that.wrapper,\n                    inputs = wrapper.find(POINT + INPUT),\n                    text;\n\n                text = inputs.first();\n\n                if (text.length < 2) {\n                    text = $('<input type=\"text\"/>')\n                            .attr(kendo.attr(\"validate\"), false)\n                            .insertBefore(element);\n                }\n\n                try {\n                    element.setAttribute(\"type\", \"text\");\n                } catch (e) {\n                    element.type = \"text\";\n                }\n\n                text[0].title = element.title;\n                text[0].tabIndex = element.tabIndex;\n                text[0].style.cssText = element.style.cssText;\n                text.prop(\"placeholder\", options.placeholder);\n\n                if (accessKey) {\n                    text.attr(\"accesskey\", accessKey);\n                    element.accessKey = \"\";\n                }\n\n\n                that._text = text.addClass(element.className)\n                                 .attr({\n                                     \"role\": \"spinbutton\",\n                                     \"aria-valuemin\": options.min !== NULL ? options.min * options.factor : options.min,\n                                     \"aria-valuemax\": options.max !== NULL ? options.max * options.factor : options.max,\n                                     \"autocomplete\": \"off\"\n                                 });\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    key = e.keyCode;\n\n                if (key === keys.NUMPAD_DOT) {\n                    that._numPadDot = true;\n                }\n\n                if (key == keys.DOWN) {\n                    that._step(-1);\n                    return;\n                } else if (key == keys.UP) {\n                    that._step(1);\n                    return;\n                } else if (key == keys.ENTER) {\n                    that._change(that.element.val());\n                    return;\n                }\n\n                if (key != keys.TAB) {\n                    that._typing = true;\n                }\n                that._cachedCaret = caret(that.element);\n            },\n\n            _keyup: function() {\n                this._removeInvalidState();\n            },\n\n            _inputHandler: function() {\n                var element = this.element;\n                var value = element.val();\n                var min = this.options.min;\n                var numberFormat = this._format(this.options.format);\n                var decimalSeparator = numberFormat[POINT];\n                var minInvalid = (min !== null && min >= 0 && value.charAt(0) === \"-\");\n\n                if (this._numPadDot && decimalSeparator !== POINT) {\n                    value = value.replace(POINT, decimalSeparator);\n                    this.element.val(value);\n                    this._numPadDot = false;\n                }\n\n                if (this._isPasted && this._parse(value)) {\n                    value = this._parse(value)\n                        .toString()\n                        .replace(POINT, numberFormat[POINT]);\n                }\n\n                if (this._numericRegex(numberFormat).test(value) && !minInvalid) {\n                    this._oldText = value;\n                } else {\n                    this._blinkInvalidState();\n                    this.element.val(this._oldText);\n                    if (this._cachedCaret) {\n                        caret(element, this._cachedCaret[0]);\n                        this._cachedCaret = null;\n                    }\n                }\n\n                this._isPasted = false;\n            },\n\n            _blinkInvalidState: function() {\n                var that = this;\n\n                that._addInvalidState();\n                clearTimeout(that._invalidStateTimeout);\n                that._invalidStateTimeout = setTimeout(that._removeInvalidState.bind(that), 100);\n            },\n\n            _addInvalidState: function() {\n                var that = this;\n\n                that.wrapper.addClass(STATEINVALID);\n                that._validationIcon.removeClass('k-hidden');\n            },\n\n            _removeInvalidState: function() {\n                var that = this;\n\n                that.wrapper.removeClass(STATEINVALID);\n                that._validationIcon.addClass('k-hidden');\n                that._invalidStateTimeout = null;\n            },\n\n            _numericRegex: function(numberFormat) {\n                var that = this;\n                var separator = numberFormat[POINT];\n                var precision = that.options.decimals;\n                var fractionRule = \"*\";\n\n                if (separator === POINT) {\n                    separator = \"\\\\\" + separator;\n                }\n\n                if (precision === NULL) {\n                    precision = numberFormat.decimals;\n                }\n\n                if (precision === 0 && that.options.restrictDecimals) {\n                    return INTEGER_REGEXP;\n                }\n\n                if (that.options.restrictDecimals) {\n                    fractionRule = \"{0,\" + precision + \"}\";\n                }\n\n                if (that._separator !== separator) {\n                    that._separator = separator;\n                    that._floatRegExp = new RegExp(\"^(-)?(((\\\\d+(\" + separator + \"\\\\d\" + fractionRule + \")?)|(\" + separator + \"\\\\d\" + fractionRule + \")))?$\");\n                }\n\n                return that._floatRegExp;\n            },\n\n            _paste: function(e) {\n                var that = this;\n                var element = e.target;\n                var value = element.value;\n                var numberFormat = that._format(that.options.format);\n\n                that._isPasted = true;\n\n               setTimeout(function() {\n                    var result = that._parse(element.value);\n\n                    if (result === NULL) {\n                        that._update(value);\n                    } else {\n                        element.value = result.toString().replace(POINT, numberFormat[POINT]);\n                        if (that._adjust(result) !== result || !that._numericRegex(numberFormat).test(element.value)) {\n                            value = that._getFactorValue(element.value);\n                            that._update(value);\n                        }\n                    }\n                });\n            },\n\n            _option: function(option, value) {\n                var that = this,\n                    element = that.element,\n                    options = that.options;\n\n                if (value === undefined$1) {\n                    return options[option];\n                }\n\n                value = that._parse(value);\n\n                if (!value && option === \"step\") {\n                    return;\n                }\n\n                options[option] = value;\n                element\n                    .add(that._text)\n                    .attr(\"aria-value\" + option, value);\n\n                element.attr(option, value);\n            },\n\n            _spin: function(step, timeout) {\n                var that = this;\n\n                timeout = timeout || 500;\n\n                clearTimeout( that._spinning );\n                that._spinning = setTimeout(function() {\n                    that._spin(step, 50);\n                }, timeout );\n\n                that._step(step);\n            },\n\n            _step: function(step) {\n                var that = this,\n                    element = that.element,\n                    originalValue = that._value,\n                    value = that._parse(element.val()) || 0,\n                    precision = that.options.decimals || 2;\n\n                if (activeElement() != element[0]) {\n                    that._focusin();\n                }\n\n                if (that.options.factor && value) {\n                    value = value / that.options.factor;\n                }\n\n                value = +(value + that.options.step * step).toFixed(precision);\n                value = that._adjust(value);\n                that._update(value);\n                that._typing = false;\n\n                if (originalValue !== value) {\n                    that.trigger(SPIN);\n                }\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n            },\n\n            _toggleText: function(toggle) {\n                var that = this;\n\n                that._text.toggle(toggle);\n                if (toggle) {\n                    that._text.removeAttr(\"aria-hidden\");\n                } else {\n                    that._text.attr(\"aria-hidden\", \"true\");\n                }\n                that.element.toggle(!toggle);\n            },\n\n            _parse: function(value, culture) {\n                return parse(value, this._culture(culture), this.options.format);\n            },\n\n            _round: function(value, precision) {\n                var rounder = this.options.round ? kendo._round : truncate;\n\n                return rounder(value, precision);\n            },\n\n            _update: function(value) {\n                var that = this,\n                    options = that.options,\n                    factor = options.factor,\n                    format = options.format,\n                    decimals = options.decimals,\n                    culture = that._culture(),\n                    numberFormat = that._format(format, culture),\n                    originalValue,\n                    isNotNull;\n\n                if (decimals === NULL) {\n                    decimals = numberFormat.decimals;\n                }\n\n                value = that._parse(value, culture);\n\n                isNotNull = value !== NULL;\n\n                if (isNotNull) {\n                    value = parseFloat(that._round(value, decimals), 10);\n                }\n\n                that._value = value = that._adjust(value);\n                that._placeholder(kendo.toString(value, format, culture));\n\n                if (isNotNull) {\n                    if (factor) {\n                        value = parseFloat(that._round(value * factor, decimals), 10);\n                    }\n                    value = value.toString();\n                    if (value.indexOf(\"e\") !== -1) {\n                        value = that._round(+value, decimals);\n                    }\n                    originalValue = value;\n                    value = value.replace(POINT, numberFormat[POINT]);\n                } else {\n                    value = null;\n                    originalValue = null;\n                }\n\n                that.element.val(value);\n                that._oldText = value;\n                that.element.add(that._text).attr(\"aria-valuenow\", originalValue);\n            },\n\n            _placeholder: function(value) {\n                var input = this._text;\n\n                input.val(value);\n                if (!placeholderSupported && !value) {\n                    input.val(this.options.placeholder);\n                }\n\n                input.attr(\"title\", this.element.attr(\"title\") || input.val());\n            },\n\n            _label: function() {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var id = element.attr(\"id\");\n                var floating;\n                var labelText;\n\n                if (options.label !== null) {\n                    floating = isPlainObject(options.label) ? options.label.floating : false;\n                    labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                    if (floating) {\n                        that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                        that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                    }\n\n                    if (kendo.isFunction(labelText)) {\n                        labelText = labelText.call(that);\n                    }\n\n                    if (!labelText) {\n                        labelText = \"\";\n                    }\n\n                    if (!id) {\n                        id = options.name + \"_\" + kendo.guid();\n                        element.attr(\"id\", id);\n                    }\n\n                    that._inputLabel = $(\"<label class='\" + LABELCLASSES + \"' for='\" + id + \"'>\" + labelText + \"</label>'\").insertBefore(that.wrapper);\n\n                    if ((that.element.attr(\"disabled\") === undefined$1) && (that.element.attr(\"readonly\") === undefined$1)) {\n                        that._inputLabel.on(\"click\" + ns, that.focus.bind(that));\n                    }\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    DOMElement = element[0],\n                    wrapper;\n\n                wrapper = element.parents(\".k-numerictextbox\");\n\n                if (!wrapper.is(\"span.k-numerictextbox\")) {\n                    wrapper = element.hide().wrap(\"<span/>\").parent();\n                }\n\n                wrapper[0].style.cssText = DOMElement.style.cssText;\n                DOMElement.style.width = \"\";\n                that.wrapper = wrapper.addClass(\"k-numerictextbox k-input\")\n                                      .addClass(DOMElement.className)\n                                      .removeClass('input-validation-error')\n                                      .css(\"display\", \"\");\n            },\n\n            _reset: function() {\n                var that = this,\n                    element = that.element,\n                    formId = element.attr(\"form\"),\n                    form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        setTimeout(function() {\n                            that.value(element[0].value);\n                            that.max(that._initialOptions.max);\n                            that.min(that._initialOptions.min);\n                        });\n                    };\n\n                    that._form = form.on(\"reset\", that._resetHandler);\n                }\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"NumericTextBox\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"NumericTextBox\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        function buttonHtml(direction, text, options) {\n            var className = direction === \"increase\" ? \"caret-alt-up\" : \"caret-alt-down\";\n            var dir = direction === \"increase\" ? \"increase\" : \"decrease\";\n\n            return html.renderButton('<button role=\"button\" tabindex=\"-1\" unselectable=\"on\" class=\"k-spinner-' + dir + '\" aria-label=\"' + text + '\" title=\"' + text + '\"></button>', extend({}, options, {\n                icon: className,\n                shape: null,\n                rounded: null\n            }));\n        }\n\n        function truncate(value, precision) {\n            var parts = parseFloat(value, 10).toString().split(POINT);\n\n            if (parts[1]) {\n                parts[1] = parts[1].substring(0, precision);\n            }\n\n            return parts.join(POINT);\n\n        }\n\n        ui.plugin(NumericTextBox);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}