{"version":3,"file":"kendo.numerictextbox.min.js","names":["factory","define","amd","$","undefined$1","kendo","window","caret","keys","html","ui","Widget","activeElement","_activeElement","extractFormat","_extractFormat","parse","parseFloat","placeholderSupported","support","placeholder","getCulture","CHANGE","DISABLED","READONLY","INPUT","SPIN","ns","HOVEREVENTS","FOCUSED","HOVER","FOCUS","POINT","SELECTED","STATEDISABLED","STATEINVALID","ARIA_DISABLED","INTEGER_REGEXP","NULL","isPlainObject","extend","NumericTextBox","init","element","options","min","max","step","value","inputType","that","this","isStep","fn","call","on","_focusout","bind","attr","_parse","_initialOptions","_reset","_wrapper","_arrows","_validation","_input","mobileOS","_text","browser","edge","one","_focusin","selectValue","_click","factor","format","val","enable","is","parents","readonly","angular","elements","get","_label","_ariaLabel","_applyCssClasses","notify","name","decimals","restrictDecimals","round","culture","spinners","selectOnFocus","upArrowText","downArrowText","label","size","fillMode","rounded","events","_editable","disable","text","add","wrapper","off","_toggleText","_upArrowEventHandler","unbind","_downArrowEventHandler","_inputLabel","addClass","removeClass","_toggleHover","prop","e","preventDefault","_spin","_upArrow","_downArrow","_keydown","_keyup","_paste","_inputHandler","focus","floatingLabel","setOptions","toggleClass","_placeholder","destroy","_arrowsWrap","remove","_floatingLabelContainer","unwrap","_form","_resetHandler","_option","_value","_adjust","_update","_old","refresh","arrows","_release","clearTimeout","_spinning","siblings","buttonHtml","appendTo","wrapAll","parent","toggle","eq","UserEvents","release","_validationIcon","icon","iconClass","insertAfter","_blur","_change","_focusing","setTimeout","result","groupRegExp","extractRegExp","input","target","idx","substring","_format","group","caretPosition","RegExp","exec","replace","length","indexOf","select","_getFactorValue","_typing","trigger","_culture","_removeInvalidState","numberFormat","toLowerCase","currency","percent","show","accessKey","find","first","insertBefore","setAttribute","type","title","tabIndex","style","cssText","className","role","autocomplete","key","keyCode","NUMPAD_DOT","_numPadDot","DOWN","UP","ENTER","TAB","_cachedCaret","_step","decimalSeparator","minInvalid","charAt","_isPasted","toString","_numericRegex","test","_oldText","_blinkInvalidState","_addInvalidState","_invalidStateTimeout","separator","precision","fractionRule","_separator","_floatRegExp","option","timeout","originalValue","toFixed","currentTarget","removeAttr","_round","truncate","isNotNull","floating","labelText","id","content","wrap","FloatingLabel","widget","isFunction","guid","DOMElement","hide","width","css","formId","form","closest","direction","dir","renderButton","shape","parts","split","join","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","plugin","jQuery"],"sources":["kendo.numerictextbox.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.userevents', 'kendo.floatinglabel', 'kendo.html.button', 'kendo.icons'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"numerictextbox\",\n        name: \"NumericTextBox\",\n        category: \"web\",\n        description: \"The NumericTextBox widget can format and display numeric, percentage or currency textbox.\",\n        depends: [ \"core\", \"userevents\", \"floatinglabel\", \"html.button\", \"icons\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            caret = kendo.caret,\n            keys = kendo.keys,\n            html = kendo.html,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            activeElement = kendo._activeElement,\n            extractFormat = kendo._extractFormat,\n            parse = kendo.parseFloat,\n            placeholderSupported = kendo.support.placeholder,\n            getCulture = kendo.getCulture,\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            INPUT = \"k-input-inner\",\n            SPIN = \"spin\",\n            ns = \".kendoNumericTextBox\",\n            TOUCHEND = \"touchend\",\n            MOUSELEAVE = \"mouseleave\" + ns,\n            HOVEREVENTS = \"mouseenter\" + ns + \" \" + MOUSELEAVE,\n            FOCUSED = \"k-focus\",\n            HOVER = \"k-hover\",\n            FOCUS = \"focus\",\n            POINT = \".\",\n            SYMBOL = \"symbol\",\n            CLASS_ICON = \"k-icon\",\n            LABELCLASSES = \"k-label k-input-label\",\n            SELECTED = \"k-selected\",\n            STATEDISABLED = \"k-disabled\",\n            STATEINVALID = \"k-invalid\",\n            ARIA_DISABLED = \"aria-disabled\",\n            INTEGER_REGEXP = /^(-)?(\\d*)$/,\n            NULL = null,\n            isPlainObject = $.isPlainObject,\n            extend = $.extend;\n\n        var NumericTextBox = Widget.extend({\n             init: function(element, options) {\n                 var that = this,\n                 isStep = options && options.step !== undefined$1,\n                 min, max, step, value, disabled;\n                 var inputType;\n\n                 Widget.fn.init.call(that, element, options);\n\n                 options = that.options;\n                 element = that.element\n                               .on(\"focusout\" + ns, that._focusout.bind(that))\n                               .attr(\"role\", \"spinbutton\");\n\n                 options.placeholder = options.placeholder || element.attr(\"placeholder\");\n\n                 min = that.min(element.attr(\"min\"));\n                 max = that.max(element.attr(\"max\"));\n                 step = that._parse(element.attr(\"step\"));\n\n                 if (options.min === NULL && min !== NULL) {\n                     options.min = min;\n                 }\n\n                 if (options.max === NULL && max !== NULL) {\n                     options.max = max;\n                 }\n\n                 if (!isStep && step !== NULL) {\n                     options.step = step;\n                 }\n\n                 that._initialOptions = extend({}, options);\n\n                 inputType = element.attr(\"type\");\n\n                 that._reset();\n                 that._wrapper();\n                 that._arrows();\n                 that._validation();\n                 that._input();\n\n                 if (!kendo.support.mobileOS) {\n                     that._text.on(FOCUS + ns, that._click.bind(that));\n                 } else {\n                     that._text.on(TOUCHEND + ns + \" \" + FOCUS + ns, function() {\n                         if (kendo.support.browser.edge) {\n                             that._text.one(FOCUS + ns, function() {\n                                that._focusin();\n                             });\n                         } else {\n                            that._focusin();\n                         }\n                         that.selectValue();\n                     });\n                 }\n\n                 element.attr(\"aria-valuemin\", options.min !== NULL ? options.min * options.factor : options.min)\n                        .attr(\"aria-valuemax\", options.max !== NULL ? options.max * options.factor : options.max);\n\n                 options.format = extractFormat(options.format);\n\n                 value = options.value;\n\n                 if (value == NULL) {\n                     if (inputType == \"number\") {\n                        value = parseFloat(element.val());\n                     } else {\n                         value = element.val();\n                     }\n                 }\n\n                 that.value(value);\n\n                 disabled = !options.enable || element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n\n                 if (disabled) {\n                     that.enable(false);\n                 } else {\n                     that.readonly(element.is(\"[readonly]\"));\n                 }\n\n                 that.angular(\"compile\", function() {\n                     return {\n                         elements: that._text.get()\n                     };\n                 });\n\n                 that._label();\n                 that._ariaLabel(that._text);\n                 that._applyCssClasses();\n\n                 kendo.notify(that);\n             },\n\n            options: {\n                name: \"NumericTextBox\",\n                decimals: NULL,\n                enable: true,\n                restrictDecimals: false,\n                min: NULL,\n                max: NULL,\n                value: NULL,\n                step: 1,\n                round: true,\n                culture: \"\",\n                format: \"n\",\n                spinners: true,\n                placeholder: \"\",\n                selectOnFocus: false,\n                factor: 1,\n                upArrowText: \"Increase value\",\n                downArrowText: \"Decrease value\",\n                label: null,\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\"\n            },\n            events: [\n                CHANGE,\n                SPIN\n            ],\n\n            _editable: function(options) {\n                var that = this,\n                    element = that.element,\n                    disable = options.disable,\n                    readonly = options.readonly,\n                    text = that._text.add(element),\n                    wrapper = that.wrapper.off(HOVEREVENTS);\n\n                that._toggleText(true);\n\n                that._upArrowEventHandler.unbind(\"press\");\n                that._downArrowEventHandler.unbind(\"press\");\n                element\n                    .off(\"keydown\" + ns)\n                    .off(\"keyup\" + ns)\n                    .off(\"input\" + ns)\n                    .off(\"paste\" + ns);\n\n                if (that._inputLabel) {\n                    that._inputLabel.off(ns);\n                }\n\n                if (!readonly && !disable) {\n                    wrapper\n                        .removeClass(STATEDISABLED)\n                        .on(HOVEREVENTS, that._toggleHover);\n\n                    text.prop(DISABLED, false)\n                        .prop(READONLY, false)\n                        .attr(ARIA_DISABLED, false);\n\n                    that._upArrowEventHandler.bind(\"press\", function(e) {\n                        e.preventDefault();\n                        that._spin(1);\n                        that._upArrow.addClass(SELECTED);\n                    });\n\n                    that._downArrowEventHandler.bind(\"press\", function(e) {\n                        e.preventDefault();\n                        that._spin(-1);\n                        that._downArrow.addClass(SELECTED);\n                    });\n\n                    that.element\n                        .on(\"keydown\" + ns, that._keydown.bind(that))\n                        .on(\"keyup\" + ns, that._keyup.bind(that))\n                        .on(\"paste\" + ns, that._paste.bind(that))\n                        .on(\"input\" + ns, that._inputHandler.bind(that));\n\n                    if (that._inputLabel) {\n                        that._inputLabel.on(\"click\" + ns, that.focus.bind(that));\n                    }\n\n                } else {\n                    wrapper\n                        .addClass(disable ? STATEDISABLED : \"\")\n                        .removeClass(disable ? \"\" : STATEDISABLED);\n\n                    text.attr(DISABLED, disable)\n                        .attr(READONLY, readonly)\n                        .attr(ARIA_DISABLED, disable);\n                }\n            },\n\n            readonly: function(readonly) {\n                var that = this;\n\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                var that = this;\n\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                Widget.fn.setOptions.call(that, options);\n\n                that.wrapper.toggleClass(\"k-expand-padding\", !that.options.spinners);\n                that._text.prop(\"placeholder\", that.options.placeholder);\n                that._placeholder(that.options.placeholder);\n                that.element.attr({\n                    \"aria-valuemin\": that.options.min !== NULL ? that.options.min * that.options.factor : that.options.min,\n                    \"aria-valuemax\": that.options.max !== NULL ? that.options.max * that.options.factor : that.options.max\n                });\n\n                that.options.format = extractFormat(that.options.format);\n                that._upArrowEventHandler.destroy();\n                that._upArrowEventHandler = null;\n                that._downArrowEventHandler.destroy();\n                that._downArrowEventHandler = null;\n                that._arrowsWrap.remove();\n                that._arrows();\n\n                that._applyCssClasses();\n\n                if (that._inputLabel) {\n                    that._inputLabel.off(ns);\n                    that._inputLabel.remove();\n\n                    if (that.floatingLabel) {\n                        that.floatingLabel.destroy();\n                        if (that._floatingLabelContainer) {\n                            that.wrapper.unwrap();\n                        }\n                    }\n                }\n\n                that._label();\n\n                that._editable({\n                    readonly: that.options.readonly,\n                    disable: !that.options.enable\n                });\n\n                if (options.value !== undefined$1) {\n                    that.value(options.value);\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that._inputLabel) {\n                    that._inputLabel.off(ns);\n\n                    if (that.floatingLabel) {\n                        that.floatingLabel.destroy();\n                    }\n                }\n\n                that.element\n                    .add(that._text)\n                    .add(that._upArrow)\n                    .add(that._downArrow)\n                    .off(ns);\n\n                that._upArrowEventHandler.destroy();\n                that._downArrowEventHandler.destroy();\n\n                if (that._form) {\n                    that._form.off(\"reset\", that._resetHandler);\n                }\n\n                Widget.fn.destroy.call(that);\n            },\n\n            min: function(value) {\n                return this._option(\"min\", value);\n            },\n\n            max: function(value) {\n                return this._option(\"max\", value);\n            },\n\n            step: function(value) {\n                return this._option(\"step\", value);\n            },\n\n            value: function(value) {\n                var that = this, adjusted;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                value = that._parse(value);\n                adjusted = that._adjust(value);\n\n                if (value !== adjusted) {\n                    return;\n                }\n\n                that._update(value);\n                that._old = that._value;\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.refresh();\n                }\n            },\n\n            focus: function() {\n                this._focusin();\n            },\n\n            _adjust: function(value) {\n                var that = this,\n                options = that.options,\n                min = options.min,\n                max = options.max;\n\n                if (value === NULL) {\n                    return value;\n                }\n\n                if (min !== NULL && value < min) {\n                    value = min;\n                } else if (max !== NULL && value > max) {\n                    value = max;\n                }\n\n                return value;\n            },\n\n            _arrows: function() {\n                var that = this,\n                arrows,\n                _release = function() {\n                    clearTimeout( that._spinning );\n                    arrows.removeClass(SELECTED);\n                },\n                options = that.options,\n                spinners = options.spinners,\n                element = that.element;\n\n                arrows = element.siblings(\".k-icon-button\");\n\n                if (!arrows[0]) {\n                    arrows = $(buttonHtml(\"increase\", options.upArrowText, options) + buttonHtml(\"decrease\", options.downArrowText, options))\n                            .appendTo(that.wrapper);\n\n                    that._arrowsWrap = arrows.wrapAll('<span class=\"k-input-spinner k-spin-button\"/>').parent();\n                }\n\n                if (!spinners) {\n                    arrows.parent().toggle(spinners);\n                    that.wrapper.addClass(\"k-expand-padding\");\n                }\n\n                that._upArrow = arrows.eq(0);\n                that._upArrowEventHandler = new kendo.UserEvents(that._upArrow, { release: _release });\n                that._downArrow = arrows.eq(1);\n                that._downArrowEventHandler = new kendo.UserEvents(that._downArrow, { release: _release });\n            },\n\n            _validation: function() {\n                var that = this;\n                var element = that.element;\n\n                that._validationIcon = $(kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-input-validation-icon k-hidden\" })).insertAfter(element);\n            },\n\n            _blur: function() {\n                var that = this;\n\n                that._toggleText(true);\n\n                that._change(that.element.val());\n            },\n\n            _click: function(e) {\n                var that = this;\n\n                clearTimeout(that._focusing);\n                that._focusing = setTimeout(function() {\n                    var input = e.target,\n                        idx = caret(input)[0],\n                        value = input.value.substring(0, idx),\n                        format = that._format(that.options.format),\n                        group = format[\",\"],\n                        result, groupRegExp, extractRegExp,\n                        caretPosition = 0;\n\n                    if (group) {\n                        groupRegExp = new RegExp(\"\\\\\" + group, \"g\");\n                        extractRegExp = new RegExp(\"(-)?(\" + format[SYMBOL] + \")?([\\\\d\\\\\" + group + \"]+)(\\\\\" + format[POINT] + \")?(\\\\d+)?\");\n                    }\n\n                    if (extractRegExp) {\n                        result = extractRegExp.exec(value);\n                    }\n\n                    if (result) {\n                        caretPosition = result[0].replace(groupRegExp, \"\").length;\n\n                        if (value.indexOf(\"(\") != -1 && that._value < 0) {\n                            caretPosition++;\n                        }\n                    }\n\n                    that._focusin();\n\n                    caret(that.element[0], caretPosition);\n                    that.selectValue();\n                });\n            },\n\n            selectValue: function() {\n                if (this.options.selectOnFocus) {\n                    this.element[0].select();\n                }\n            },\n\n            _getFactorValue: function(value) {\n                var that = this,\n                    factor = that.options.factor;\n\n                if (factor && factor !== 1) {\n                    value = kendo.parseFloat(value);\n                    if (value !== null) {\n                        value = value / factor;\n                    }\n                }\n\n                return value;\n            },\n\n            _change: function(value) {\n                var that = this;\n\n                value = that._getFactorValue(value);\n                that._update(value);\n                value = that._value;\n\n                if (that._old != value) {\n                    that._old = value;\n\n                    if (!that._typing) {\n                        // trigger the DOM change event so any subscriber gets notified\n                        that.element.trigger(CHANGE);\n                    }\n\n                    that.trigger(CHANGE);\n                }\n\n                that._typing = false;\n            },\n\n            _culture: function(culture) {\n                return culture || getCulture(this.options.culture);\n            },\n\n            _focusin: function() {\n                var that = this;\n                that.wrapper.addClass(FOCUSED);\n                that._toggleText(false);\n                that.element[0].focus();\n            },\n\n            _focusout: function() {\n                var that = this;\n\n                clearTimeout(that._focusing);\n                that.wrapper.removeClass(FOCUSED).removeClass(HOVER);\n                that._blur();\n                that._removeInvalidState();\n            },\n\n            _format: function(format, culture) {\n                var numberFormat = this._culture(culture).numberFormat;\n\n                format = format.toLowerCase();\n\n                if (format.indexOf(\"c\") > -1) {\n                    numberFormat = numberFormat.currency;\n                } else if (format.indexOf(\"p\") > -1) {\n                    numberFormat = numberFormat.percent;\n                }\n\n                return numberFormat;\n            },\n\n            _input: function() {\n                var that = this,\n                    options = that.options,\n                    element = that.element.addClass(INPUT).show()[0],\n                    accessKey = element.accessKey,\n                    wrapper = that.wrapper,\n                    inputs = wrapper.find(POINT + INPUT),\n                    text;\n\n                text = inputs.first();\n\n                if (text.length < 2) {\n                    text = $('<input type=\"text\"/>')\n                            .attr(kendo.attr(\"validate\"), false)\n                            .insertBefore(element);\n                }\n\n                try {\n                    element.setAttribute(\"type\", \"text\");\n                } catch (e) {\n                    element.type = \"text\";\n                }\n\n                text[0].title = element.title;\n                text[0].tabIndex = element.tabIndex;\n                text[0].style.cssText = element.style.cssText;\n                text.prop(\"placeholder\", options.placeholder);\n\n                if (accessKey) {\n                    text.attr(\"accesskey\", accessKey);\n                    element.accessKey = \"\";\n                }\n\n\n                that._text = text.addClass(element.className)\n                                 .attr({\n                                     \"role\": \"spinbutton\",\n                                     \"aria-valuemin\": options.min !== NULL ? options.min * options.factor : options.min,\n                                     \"aria-valuemax\": options.max !== NULL ? options.max * options.factor : options.max,\n                                     \"autocomplete\": \"off\"\n                                 });\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    key = e.keyCode;\n\n                if (key === keys.NUMPAD_DOT) {\n                    that._numPadDot = true;\n                }\n\n                if (key == keys.DOWN) {\n                    that._step(-1);\n                    return;\n                } else if (key == keys.UP) {\n                    that._step(1);\n                    return;\n                } else if (key == keys.ENTER) {\n                    that._change(that.element.val());\n                    return;\n                }\n\n                if (key != keys.TAB) {\n                    that._typing = true;\n                }\n                that._cachedCaret = caret(that.element);\n            },\n\n            _keyup: function() {\n                this._removeInvalidState();\n            },\n\n            _inputHandler: function() {\n                var element = this.element;\n                var value = element.val();\n                var min = this.options.min;\n                var numberFormat = this._format(this.options.format);\n                var decimalSeparator = numberFormat[POINT];\n                var minInvalid = (min !== null && min >= 0 && value.charAt(0) === \"-\");\n\n                if (this._numPadDot && decimalSeparator !== POINT) {\n                    value = value.replace(POINT, decimalSeparator);\n                    this.element.val(value);\n                    this._numPadDot = false;\n                }\n\n                if (this._isPasted && this._parse(value)) {\n                    value = this._parse(value)\n                        .toString()\n                        .replace(POINT, numberFormat[POINT]);\n                }\n\n                if (this._numericRegex(numberFormat).test(value) && !minInvalid) {\n                    this._oldText = value;\n                } else {\n                    this._blinkInvalidState();\n                    this.element.val(this._oldText);\n                    if (this._cachedCaret) {\n                        caret(element, this._cachedCaret[0]);\n                        this._cachedCaret = null;\n                    }\n                }\n\n                this._isPasted = false;\n            },\n\n            _blinkInvalidState: function() {\n                var that = this;\n\n                that._addInvalidState();\n                clearTimeout(that._invalidStateTimeout);\n                that._invalidStateTimeout = setTimeout(that._removeInvalidState.bind(that), 100);\n            },\n\n            _addInvalidState: function() {\n                var that = this;\n\n                that.wrapper.addClass(STATEINVALID);\n                that._validationIcon.removeClass('k-hidden');\n            },\n\n            _removeInvalidState: function() {\n                var that = this;\n\n                that.wrapper.removeClass(STATEINVALID);\n                that._validationIcon.addClass('k-hidden');\n                that._invalidStateTimeout = null;\n            },\n\n            _numericRegex: function(numberFormat) {\n                var that = this;\n                var separator = numberFormat[POINT];\n                var precision = that.options.decimals;\n                var fractionRule = \"*\";\n\n                if (separator === POINT) {\n                    separator = \"\\\\\" + separator;\n                }\n\n                if (precision === NULL) {\n                    precision = numberFormat.decimals;\n                }\n\n                if (precision === 0 && that.options.restrictDecimals) {\n                    return INTEGER_REGEXP;\n                }\n\n                if (that.options.restrictDecimals) {\n                    fractionRule = \"{0,\" + precision + \"}\";\n                }\n\n                if (that._separator !== separator) {\n                    that._separator = separator;\n                    that._floatRegExp = new RegExp(\"^(-)?(((\\\\d+(\" + separator + \"\\\\d\" + fractionRule + \")?)|(\" + separator + \"\\\\d\" + fractionRule + \")))?$\");\n                }\n\n                return that._floatRegExp;\n            },\n\n            _paste: function(e) {\n                var that = this;\n                var element = e.target;\n                var value = element.value;\n                var numberFormat = that._format(that.options.format);\n\n                that._isPasted = true;\n\n               setTimeout(function() {\n                    var result = that._parse(element.value);\n\n                    if (result === NULL) {\n                        that._update(value);\n                    } else {\n                        element.value = result.toString().replace(POINT, numberFormat[POINT]);\n                        if (that._adjust(result) !== result || !that._numericRegex(numberFormat).test(element.value)) {\n                            value = that._getFactorValue(element.value);\n                            that._update(value);\n                        }\n                    }\n                });\n            },\n\n            _option: function(option, value) {\n                var that = this,\n                    element = that.element,\n                    options = that.options;\n\n                if (value === undefined$1) {\n                    return options[option];\n                }\n\n                value = that._parse(value);\n\n                if (!value && option === \"step\") {\n                    return;\n                }\n\n                options[option] = value;\n                element\n                    .add(that._text)\n                    .attr(\"aria-value\" + option, value);\n\n                element.attr(option, value);\n            },\n\n            _spin: function(step, timeout) {\n                var that = this;\n\n                timeout = timeout || 500;\n\n                clearTimeout( that._spinning );\n                that._spinning = setTimeout(function() {\n                    that._spin(step, 50);\n                }, timeout );\n\n                that._step(step);\n            },\n\n            _step: function(step) {\n                var that = this,\n                    element = that.element,\n                    originalValue = that._value,\n                    value = that._parse(element.val()) || 0,\n                    precision = that.options.decimals || 2;\n\n                if (activeElement() != element[0]) {\n                    that._focusin();\n                }\n\n                if (that.options.factor && value) {\n                    value = value / that.options.factor;\n                }\n\n                value = +(value + that.options.step * step).toFixed(precision);\n                value = that._adjust(value);\n                that._update(value);\n                that._typing = false;\n\n                if (originalValue !== value) {\n                    that.trigger(SPIN);\n                }\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n            },\n\n            _toggleText: function(toggle) {\n                var that = this;\n\n                that._text.toggle(toggle);\n                if (toggle) {\n                    that._text.removeAttr(\"aria-hidden\");\n                } else {\n                    that._text.attr(\"aria-hidden\", \"true\");\n                }\n                that.element.toggle(!toggle);\n            },\n\n            _parse: function(value, culture) {\n                return parse(value, this._culture(culture), this.options.format);\n            },\n\n            _round: function(value, precision) {\n                var rounder = this.options.round ? kendo._round : truncate;\n\n                return rounder(value, precision);\n            },\n\n            _update: function(value) {\n                var that = this,\n                    options = that.options,\n                    factor = options.factor,\n                    format = options.format,\n                    decimals = options.decimals,\n                    culture = that._culture(),\n                    numberFormat = that._format(format, culture),\n                    originalValue,\n                    isNotNull;\n\n                if (decimals === NULL) {\n                    decimals = numberFormat.decimals;\n                }\n\n                value = that._parse(value, culture);\n\n                isNotNull = value !== NULL;\n\n                if (isNotNull) {\n                    value = parseFloat(that._round(value, decimals), 10);\n                }\n\n                that._value = value = that._adjust(value);\n                that._placeholder(kendo.toString(value, format, culture));\n\n                if (isNotNull) {\n                    if (factor) {\n                        value = parseFloat(that._round(value * factor, decimals), 10);\n                    }\n                    value = value.toString();\n                    if (value.indexOf(\"e\") !== -1) {\n                        value = that._round(+value, decimals);\n                    }\n                    originalValue = value;\n                    value = value.replace(POINT, numberFormat[POINT]);\n                } else {\n                    value = null;\n                    originalValue = null;\n                }\n\n                that.element.val(value);\n                that._oldText = value;\n                that.element.add(that._text).attr(\"aria-valuenow\", originalValue);\n            },\n\n            _placeholder: function(value) {\n                var input = this._text;\n\n                input.val(value);\n                if (!placeholderSupported && !value) {\n                    input.val(this.options.placeholder);\n                }\n\n                input.attr(\"title\", this.element.attr(\"title\") || input.val());\n            },\n\n            _label: function() {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var id = element.attr(\"id\");\n                var floating;\n                var labelText;\n\n                if (options.label !== null) {\n                    floating = isPlainObject(options.label) ? options.label.floating : false;\n                    labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                    if (floating) {\n                        that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                        that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                    }\n\n                    if (kendo.isFunction(labelText)) {\n                        labelText = labelText.call(that);\n                    }\n\n                    if (!labelText) {\n                        labelText = \"\";\n                    }\n\n                    if (!id) {\n                        id = options.name + \"_\" + kendo.guid();\n                        element.attr(\"id\", id);\n                    }\n\n                    that._inputLabel = $(\"<label class='\" + LABELCLASSES + \"' for='\" + id + \"'>\" + labelText + \"</label>'\").insertBefore(that.wrapper);\n\n                    if ((that.element.attr(\"disabled\") === undefined$1) && (that.element.attr(\"readonly\") === undefined$1)) {\n                        that._inputLabel.on(\"click\" + ns, that.focus.bind(that));\n                    }\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    DOMElement = element[0],\n                    wrapper;\n\n                wrapper = element.parents(\".k-numerictextbox\");\n\n                if (!wrapper.is(\"span.k-numerictextbox\")) {\n                    wrapper = element.hide().wrap(\"<span/>\").parent();\n                }\n\n                wrapper[0].style.cssText = DOMElement.style.cssText;\n                DOMElement.style.width = \"\";\n                that.wrapper = wrapper.addClass(\"k-numerictextbox k-input\")\n                                      .addClass(DOMElement.className)\n                                      .removeClass('input-validation-error')\n                                      .css(\"display\", \"\");\n            },\n\n            _reset: function() {\n                var that = this,\n                    element = that.element,\n                    formId = element.attr(\"form\"),\n                    form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        setTimeout(function() {\n                            that.value(element[0].value);\n                            that.max(that._initialOptions.max);\n                            that.min(that._initialOptions.min);\n                        });\n                    };\n\n                    that._form = form.on(\"reset\", that._resetHandler);\n                }\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"NumericTextBox\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"NumericTextBox\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        function buttonHtml(direction, text, options) {\n            var className = direction === \"increase\" ? \"caret-alt-up\" : \"caret-alt-down\";\n            var dir = direction === \"increase\" ? \"increase\" : \"decrease\";\n\n            return html.renderButton('<button role=\"button\" tabindex=\"-1\" unselectable=\"on\" class=\"k-spinner-' + dir + '\" aria-label=\"' + text + '\" title=\"' + text + '\"></button>', extend({}, options, {\n                icon: className,\n                shape: null,\n                rounded: null\n            }));\n        }\n\n        function truncate(value, precision) {\n            var parts = parseFloat(value, 10).toString().split(POINT);\n\n            if (parts[1]) {\n                parts[1] = parts[1].substring(0, precision);\n            }\n\n            return parts.join(POINT);\n\n        }\n\n        ui.plugin(NumericTextBox);\n    })(window.kendo.jQuery);\n\n}));\n"]}