{"version":3,"file":"kendo.numerictextbox.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendonumerictextbox","js","this","$","kendo","jQuery","addInputPrefixSuffixContainers","ref","prefixContainer","suffixContainer","widget","wrapper","options","prefixInsertBefore","suffixInsertAfter","prefix","prefixOptions","suffix","suffixOptions","hasPrefixContent","template","icon","hasSuffixContent","layoutFlow","containerOrientation","INPUT_SEPARATOR","children","insertBefore","prependTo","html","renderIcon","separator","insertAfter","appendTo","_prefixContainer","_suffixContainer","undefined$1","window","caret","keys","ui","Widget","activeElement","_activeElement","extractFormat","_extractFormat","parse","parseFloat","placeholderSupported","support","placeholder","getCulture","CHANGE","DISABLED","READONLY","INPUT","SPIN","ns","HOVEREVENTS","FOCUSED","HOVER","FOCUS","POINT","SELECTED","STATEDISABLED","STATEINVALID","ARIA_DISABLED","INTEGER_REGEXP","NULL","isPlainObject","extend","NumericTextBox","init","element","min","max","step","value","inputType","that","isStep","fn","call","on","_focusout","bind","attr","_parse","_initialOptions","_reset","_wrapper","_arrows","_validation","_input","mobileOS","_text","browser","edge","one","_focusin","selectValue","_click","factor","format","val","enable","is","parents","readonly","_label","_ariaLabel","_applyCssClasses","_validationIcon","floatingLabel","refresh","notify","name","decimals","restrictDecimals","round","culture","spinners","selectOnFocus","upArrowText","downArrowText","label","size","fillMode","rounded","events","_editable","disable","text","add","off","_toggleText","_upArrowEventHandler","unbind","_downArrowEventHandler","_inputLabel","addClass","removeClass","_toggleHover","prop","e","preventDefault","_spin","_upArrow","_downArrow","_keydown","_keyup","_paste","_inputHandler","focus","setOptions","toggleClass","_placeholder","destroy","_arrowsWrap","remove","_floatingLabelContainer","unwrap","Boolean","_form","_resetHandler","_option","_value","_adjust","_update","_old","arrows","_release","clearTimeout","_spinning","siblings","buttonHtml","wrapAll","parent","toggle","eq","UserEvents","release","iconClass","_blur","_change","_focusing","setTimeout","result","groupRegExp","extractRegExp","input","target","idx","substring","_format","group","caretPosition","RegExp","exec","replace","length","indexOf","select","_getFactorValue","_typing","trigger","_culture","_removeInvalidState","numberFormat","toLowerCase","currency","percent","show","accessKey","find","first","setAttribute","type","title","tabIndex","style","cssText","className","role","autocomplete","key","keyCode","NUMPAD_DOT","_numPadDot","DOWN","UP","ENTER","TAB","_cachedCaret","_step","decimalSeparator","minInvalid","charAt","_isPasted","toString","_numericRegex","test","_oldText","_blinkInvalidState","_addInvalidState","_invalidStateTimeout","precision","fractionRule","_separator","_floatRegExp","option","timeout","originalValue","toFixed","currentTarget","removeAttr","_round","truncate","isNotNull","floating","labelText","id","content","wrap","FloatingLabel","isFunction","guid","DOMElement","hide","width","css","formId","form","closest","direction","dir","renderButton","shape","parts","split","join","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","plugin"],"sources":["kendo.numerictextbox.js"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.userevents.js'), require('kendo.floatinglabel.js'), require('kendo.html.button.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.userevents', 'kendo.floatinglabel', 'kendo.html.button', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendonumerictextbox = global.kendonumerictextbox || {}, global.kendonumerictextbox.js = factory()));\n})(this, (function () {\n    var $ = kendo.jQuery;\n\n    function addInputPrefixSuffixContainers(ref) {\n        var widget = ref.widget;\n        var wrapper = ref.wrapper;\n        var options = ref.options;\n        var prefixInsertBefore = ref.prefixInsertBefore;\n        var suffixInsertAfter = ref.suffixInsertAfter;\n\n        var prefix = options.prefixOptions,\n            suffix = options.suffixOptions,\n            hasPrefixContent = prefix.template || prefix.icon,\n            hasSuffixContent = suffix.template || suffix.icon,\n            suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n            layoutFlow = options.layoutFlow,\n            containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n            separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n            INPUT_SEPARATOR = \"<span class=\\\"k-input-separator k-input-separator-\" + separatorOrientation + \"\\\"></span>\",\n            prefixContainer,\n            suffixContainer;\n\n        if (prefix && hasPrefixContent) {\n            prefixContainer = wrapper.children(\".k-input-prefix\");\n\n            if (!prefixContainer[0]) {\n                prefixContainer = $((\"<span class=\\\"k-input-prefix k-input-prefix-\" + containerOrientation + \"\\\" />\"));\n                if (prefixInsertBefore) {\n                    prefixContainer.insertBefore(prefixInsertBefore);\n                } else {\n                    prefixContainer.prependTo(wrapper);\n                }\n            }\n\n            if (prefix.icon) {\n                prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n            }\n\n            if (prefix.template) {\n                prefixContainer.html(kendo.template(prefix.template)({}));\n            }\n\n            if (prefix.separator) {\n                $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n            }\n        }\n\n        if (suffix && hasSuffixContent) {\n            suffixContainer = wrapper.children(\".k-input-suffix\");\n\n            if (!suffixContainer[0]) {\n                suffixContainer = $((\"<span class=\\\"k-input-suffix k-input-suffix-\" + containerOrientation + \"\\\" />\")).appendTo(wrapper);\n                if (suffixInsertAfter) {\n                    suffixContainer.insertAfter(suffixInsertAfter);\n                } else {\n                    suffixContainer.appendTo(wrapper);\n                }\n            }\n\n            if (suffix.icon) {\n                suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n            }\n\n            if (suffix.template) {\n                suffixContainer.html(kendo.template(suffix.template)({}));\n            }\n\n            if (suffix.separator) {\n                $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n            }\n        }\n\n        widget._prefixContainer = prefixContainer;\n        widget._suffixContainer = suffixContainer;\n    }\n\n    var __meta__ = {\n        id: \"numerictextbox\",\n        name: \"NumericTextBox\",\n        category: \"web\",\n        description: \"The NumericTextBox widget can format and display numeric, percentage or currency textbox.\",\n        depends: [ \"core\", \"userevents\", \"floatinglabel\", \"html.button\", \"icons\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            caret = kendo.caret,\n            keys = kendo.keys,\n            html = kendo.html,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            activeElement = kendo._activeElement,\n            extractFormat = kendo._extractFormat,\n            parse = kendo.parseFloat,\n            placeholderSupported = kendo.support.placeholder,\n            getCulture = kendo.getCulture,\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            INPUT = \"k-input-inner\",\n            SPIN = \"spin\",\n            ns = \".kendoNumericTextBox\",\n            TOUCHEND = \"touchend\",\n            MOUSELEAVE = \"mouseleave\" + ns,\n            HOVEREVENTS = \"mouseenter\" + ns + \" \" + MOUSELEAVE,\n            FOCUSED = \"k-focus\",\n            HOVER = \"k-hover\",\n            FOCUS = \"focus\",\n            POINT = \".\",\n            SYMBOL = \"symbol\",\n            CLASS_ICON = \"k-icon\",\n            LABELCLASSES = \"k-label k-input-label\",\n            SELECTED = \"k-selected\",\n            STATEDISABLED = \"k-disabled\",\n            STATEINVALID = \"k-invalid\",\n            ARIA_DISABLED = \"aria-disabled\",\n            INTEGER_REGEXP = /^(-)?(\\d*)$/,\n            NULL = null,\n            isPlainObject = $.isPlainObject,\n            extend = $.extend;\n\n        var NumericTextBox = Widget.extend({\n             init: function(element, options) {\n                 var that = this,\n                 isStep = options && options.step !== undefined$1,\n                 min, max, step, value, disabled;\n                 var inputType;\n\n                 Widget.fn.init.call(that, element, options);\n\n                 options = that.options;\n                 element = that.element\n                               .on(\"focusout\" + ns, that._focusout.bind(that))\n                               .attr(\"role\", \"spinbutton\");\n\n                 options.placeholder = options.placeholder || element.attr(\"placeholder\");\n\n                 min = that.min(element.attr(\"min\"));\n                 max = that.max(element.attr(\"max\"));\n                 step = that._parse(element.attr(\"step\"));\n\n                 if (options.min === NULL && min !== NULL) {\n                     options.min = min;\n                 }\n\n                 if (options.max === NULL && max !== NULL) {\n                     options.max = max;\n                 }\n\n                 if (!isStep && step !== NULL) {\n                     options.step = step;\n                 }\n\n                 that._initialOptions = extend({}, options);\n\n                 inputType = element.attr(\"type\");\n\n                 that._reset();\n                 that._wrapper();\n                 that._arrows();\n                 that._validation();\n                 that._input();\n\n                 if (!kendo.support.mobileOS) {\n                     that._text.on(FOCUS + ns, that._click.bind(that));\n                 } else {\n                     that._text.on(TOUCHEND + ns + \" \" + FOCUS + ns, function() {\n                         if (kendo.support.browser.edge) {\n                             that._text.one(FOCUS + ns, function() {\n                                that._focusin();\n                             });\n                         } else {\n                            that._focusin();\n                         }\n                         that.selectValue();\n                     });\n                 }\n\n                 element.attr(\"aria-valuemin\", options.min !== NULL ? options.min * options.factor : options.min)\n                        .attr(\"aria-valuemax\", options.max !== NULL ? options.max * options.factor : options.max);\n\n                 options.format = extractFormat(options.format);\n\n                 value = options.value;\n\n                 if (value == NULL) {\n                     if (inputType == \"number\") {\n                        value = parseFloat(element.val());\n                     } else {\n                         value = element.val();\n                     }\n                 }\n\n                 that.value(value);\n\n                 disabled = !options.enable || element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n\n                 if (disabled) {\n                     that.enable(false);\n                 } else {\n                     that.readonly(element.is(\"[readonly]\"));\n                 }\n\n                 that._label();\n                 that._ariaLabel(that._text);\n                 that._applyCssClasses();\n\n                 addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options, prefixInsertBefore: that._text, suffixInsertAfter: that._validationIcon });\n                 if (that.floatingLabel) {\n                     that.floatingLabel.refresh();\n                 }\n\n                 kendo.notify(that);\n             },\n\n            options: {\n                name: \"NumericTextBox\",\n                decimals: NULL,\n                enable: true,\n                restrictDecimals: false,\n                min: NULL,\n                max: NULL,\n                value: NULL,\n                step: 1,\n                round: true,\n                culture: \"\",\n                format: \"n\",\n                spinners: true,\n                placeholder: \"\",\n                selectOnFocus: false,\n                factor: 1,\n                upArrowText: \"Increase value\",\n                downArrowText: \"Decrease value\",\n                label: null,\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                prefixOptions: {\n                    separator: true\n                },\n                suffixOptions: {\n                    separator: true\n                }\n            },\n            events: [\n                CHANGE,\n                SPIN\n            ],\n\n            _editable: function(options) {\n                var that = this,\n                    element = that.element,\n                    disable = options.disable,\n                    readonly = options.readonly,\n                    text = that._text.add(element),\n                    wrapper = that.wrapper.off(HOVEREVENTS);\n\n                that._toggleText(true);\n\n                that._upArrowEventHandler.unbind(\"press\");\n                that._downArrowEventHandler.unbind(\"press\");\n                element\n                    .off(\"keydown\" + ns)\n                    .off(\"keyup\" + ns)\n                    .off(\"input\" + ns)\n                    .off(\"paste\" + ns);\n\n                if (that._inputLabel) {\n                    that._inputLabel.off(ns);\n                }\n\n                if (!readonly && !disable) {\n                    wrapper\n                        .removeClass(STATEDISABLED)\n                        .on(HOVEREVENTS, that._toggleHover);\n\n                    text.prop(DISABLED, false)\n                        .prop(READONLY, false)\n                        .attr(ARIA_DISABLED, false);\n\n                    that._upArrowEventHandler.bind(\"press\", function(e) {\n                        e.preventDefault();\n                        that._spin(1);\n                        that._upArrow.addClass(SELECTED);\n                    });\n\n                    that._downArrowEventHandler.bind(\"press\", function(e) {\n                        e.preventDefault();\n                        that._spin(-1);\n                        that._downArrow.addClass(SELECTED);\n                    });\n\n                    that.element\n                        .on(\"keydown\" + ns, that._keydown.bind(that))\n                        .on(\"keyup\" + ns, that._keyup.bind(that))\n                        .on(\"paste\" + ns, that._paste.bind(that))\n                        .on(\"input\" + ns, that._inputHandler.bind(that));\n\n                    if (that._inputLabel) {\n                        that._inputLabel.on(\"click\" + ns, that.focus.bind(that));\n                    }\n\n                } else {\n                    wrapper\n                        .addClass(disable ? STATEDISABLED : \"\")\n                        .removeClass(disable ? \"\" : STATEDISABLED);\n\n                    text.attr(DISABLED, disable)\n                        .attr(READONLY, readonly)\n                        .attr(ARIA_DISABLED, disable);\n                }\n            },\n\n            readonly: function(readonly) {\n                var that = this;\n\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                var that = this;\n\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                Widget.fn.setOptions.call(that, options);\n\n                that.wrapper.toggleClass(\"k-expand-padding\", !that.options.spinners);\n                that._text.prop(\"placeholder\", that.options.placeholder);\n                that._placeholder(that.options.placeholder);\n                that.element.attr({\n                    \"aria-valuemin\": that.options.min !== NULL ? that.options.min * that.options.factor : that.options.min,\n                    \"aria-valuemax\": that.options.max !== NULL ? that.options.max * that.options.factor : that.options.max\n                });\n\n                that.options.format = extractFormat(that.options.format);\n                that._upArrowEventHandler.destroy();\n                that._upArrowEventHandler = null;\n                that._downArrowEventHandler.destroy();\n                that._downArrowEventHandler = null;\n                that._arrowsWrap.remove();\n                that._arrows();\n\n                that._applyCssClasses();\n\n                if (that._inputLabel) {\n                    that._inputLabel.off(ns);\n                    that._inputLabel.remove();\n\n                    if (that.floatingLabel) {\n                        that.floatingLabel.destroy();\n                        if (that._floatingLabelContainer) {\n                            that.wrapper.unwrap();\n                        }\n                    }\n                }\n\n                that._label();\n\n                if (options.enable !== undefined$1 || options.readonly !== undefined$1) {\n                    that._editable({\n                        readonly: options.readonly,\n                        disable: !options.enable\n                    });\n                } else {\n                    that._editable({\n                        readonly: that.element.attr(\"readonly\") !== undefined$1 ? Boolean(that.element.attr(\"readonly\")) : that.options.readonly,\n                        disable: that.element.attr(\"disabled\") !== undefined$1 ? Boolean(that.element.attr(\"disabled\")) : !that.options.enable\n                    });\n                }\n\n                if (options.value !== undefined$1) {\n                    that.value(options.value);\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that._inputLabel) {\n                    that._inputLabel.off(ns);\n\n                    if (that.floatingLabel) {\n                        that.floatingLabel.destroy();\n                    }\n                }\n\n                that.element\n                    .add(that._text)\n                    .add(that._upArrow)\n                    .add(that._downArrow)\n                    .off(ns);\n\n                that._upArrowEventHandler.destroy();\n                that._downArrowEventHandler.destroy();\n\n                if (that._form) {\n                    that._form.off(\"reset\", that._resetHandler);\n                }\n\n                Widget.fn.destroy.call(that);\n            },\n\n            min: function(value) {\n                return this._option(\"min\", value);\n            },\n\n            max: function(value) {\n                return this._option(\"max\", value);\n            },\n\n            step: function(value) {\n                return this._option(\"step\", value);\n            },\n\n            value: function(value) {\n                var that = this, adjusted;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                value = that._parse(value);\n                adjusted = that._adjust(value);\n\n                if (value !== adjusted) {\n                    return;\n                }\n\n                that._update(value);\n                that._old = that._value;\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.refresh();\n                }\n            },\n\n            focus: function() {\n                this._focusin();\n            },\n\n            _adjust: function(value) {\n                var that = this,\n                options = that.options,\n                min = options.min,\n                max = options.max;\n\n                if (value === NULL) {\n                    return value;\n                }\n\n                if (min !== NULL && value < min) {\n                    value = min;\n                } else if (max !== NULL && value > max) {\n                    value = max;\n                }\n\n                return value;\n            },\n\n            _arrows: function() {\n                var that = this,\n                arrows,\n                _release = function() {\n                    clearTimeout( that._spinning );\n                    arrows.removeClass(SELECTED);\n                },\n                options = that.options,\n                spinners = options.spinners,\n                element = that.element;\n\n                arrows = element.siblings(\".k-icon-button\");\n\n                if (!arrows[0]) {\n                    arrows = $(buttonHtml(\"increase\", options.upArrowText, options) + buttonHtml(\"decrease\", options.downArrowText, options))\n                            .appendTo(that.wrapper);\n\n                    that._arrowsWrap = arrows.wrapAll('<span class=\"k-input-spinner k-spin-button\"/>').parent();\n                }\n\n                if (!spinners) {\n                    arrows.parent().toggle(spinners);\n                    that.wrapper.addClass(\"k-expand-padding\");\n                }\n\n                that._upArrow = arrows.eq(0);\n                that._upArrowEventHandler = new kendo.UserEvents(that._upArrow, { release: _release });\n                that._downArrow = arrows.eq(1);\n                that._downArrowEventHandler = new kendo.UserEvents(that._downArrow, { release: _release });\n            },\n\n            _validation: function() {\n                var that = this;\n                var element = that.element;\n\n                that._validationIcon = $(kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-input-validation-icon k-hidden\" })).insertAfter(element);\n            },\n\n            _blur: function() {\n                var that = this;\n\n                that._toggleText(true);\n\n                that._change(that.element.val());\n            },\n\n            _click: function(e) {\n                var that = this;\n\n                clearTimeout(that._focusing);\n                that._focusing = setTimeout(function() {\n                    var input = e.target,\n                        idx = caret(input)[0],\n                        value = input.value.substring(0, idx),\n                        format = that._format(that.options.format),\n                        group = format[\",\"],\n                        result, groupRegExp, extractRegExp,\n                        caretPosition = 0;\n\n                    if (group) {\n                        groupRegExp = new RegExp(\"\\\\\" + group, \"g\");\n                        extractRegExp = new RegExp(\"(-)?(\" + format[SYMBOL] + \")?([\\\\d\\\\\" + group + \"]+)(\\\\\" + format[POINT] + \")?(\\\\d+)?\");\n                    }\n\n                    if (extractRegExp) {\n                        result = extractRegExp.exec(value);\n                    }\n\n                    if (result) {\n                        caretPosition = result[0].replace(groupRegExp, \"\").length;\n\n                        if (value.indexOf(\"(\") != -1 && that._value < 0) {\n                            caretPosition++;\n                        }\n                    }\n\n                    that._focusin();\n\n                    caret(that.element[0], caretPosition);\n                    that.selectValue();\n                });\n            },\n\n            selectValue: function() {\n                if (this.options.selectOnFocus) {\n                    this.element[0].select();\n                }\n            },\n\n            _getFactorValue: function(value) {\n                var that = this,\n                    factor = that.options.factor;\n\n                if (factor && factor !== 1) {\n                    value = kendo.parseFloat(value);\n                    if (value !== null) {\n                        value = value / factor;\n                    }\n                }\n\n                return value;\n            },\n\n            _change: function(value) {\n                var that = this;\n\n                value = that._getFactorValue(value);\n                that._update(value);\n                value = that._value;\n\n                if (that._old != value) {\n                    that._old = value;\n\n                    if (!that._typing) {\n                        // trigger the DOM change event so any subscriber gets notified\n                        that.element.trigger(CHANGE);\n                    }\n\n                    that.trigger(CHANGE);\n                }\n\n                that._typing = false;\n            },\n\n            _culture: function(culture) {\n                return culture || getCulture(this.options.culture);\n            },\n\n            _focusin: function() {\n                var that = this;\n                that.wrapper.addClass(FOCUSED);\n                that._toggleText(false);\n                that.element[0].focus();\n            },\n\n            _focusout: function() {\n                var that = this;\n\n                clearTimeout(that._focusing);\n                that.wrapper.removeClass(FOCUSED).removeClass(HOVER);\n                that._blur();\n                that._removeInvalidState();\n            },\n\n            _format: function(format, culture) {\n                var numberFormat = this._culture(culture).numberFormat;\n\n                format = format.toLowerCase();\n\n                if (format.indexOf(\"c\") > -1) {\n                    numberFormat = numberFormat.currency;\n                } else if (format.indexOf(\"p\") > -1) {\n                    numberFormat = numberFormat.percent;\n                }\n\n                return numberFormat;\n            },\n\n            _input: function() {\n                var that = this,\n                    options = that.options,\n                    element = that.element.addClass(INPUT).show()[0],\n                    accessKey = element.accessKey,\n                    wrapper = that.wrapper,\n                    inputs = wrapper.find(POINT + INPUT),\n                    text;\n\n                text = inputs.first();\n\n                if (text.length < 2) {\n                    text = $('<input type=\"text\"/>')\n                            .attr(kendo.attr(\"validate\"), false)\n                            .insertBefore(element);\n                }\n\n                try {\n                    element.setAttribute(\"type\", \"text\");\n                } catch (e) {\n                    element.type = \"text\";\n                }\n\n                text[0].title = element.title;\n                text[0].tabIndex = element.tabIndex;\n                text[0].style.cssText = element.style.cssText;\n                text.prop(\"placeholder\", options.placeholder);\n\n                if (accessKey) {\n                    text.attr(\"accesskey\", accessKey);\n                    element.accessKey = \"\";\n                }\n\n\n                that._text = text.addClass(element.className)\n                                 .attr({\n                                     \"role\": \"spinbutton\",\n                                     \"aria-valuemin\": options.min !== NULL ? options.min * options.factor : options.min,\n                                     \"aria-valuemax\": options.max !== NULL ? options.max * options.factor : options.max,\n                                     \"autocomplete\": \"off\"\n                                 });\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    key = e.keyCode;\n\n                if (key === keys.NUMPAD_DOT) {\n                    that._numPadDot = true;\n                }\n\n                if (key == keys.DOWN) {\n                    that._step(-1);\n                    return;\n                } else if (key == keys.UP) {\n                    that._step(1);\n                    return;\n                } else if (key == keys.ENTER) {\n                    that._change(that.element.val());\n                    return;\n                }\n\n                if (key != keys.TAB) {\n                    that._typing = true;\n                }\n                that._cachedCaret = caret(that.element);\n            },\n\n            _keyup: function() {\n                this._removeInvalidState();\n            },\n\n            _inputHandler: function() {\n                var element = this.element;\n                var value = element.val();\n                var min = this.options.min;\n                var numberFormat = this._format(this.options.format);\n                var decimalSeparator = numberFormat[POINT];\n                var minInvalid = (min !== null && min >= 0 && value.charAt(0) === \"-\");\n\n                if (this._numPadDot && decimalSeparator !== POINT) {\n                    value = value.replace(POINT, decimalSeparator);\n                    this.element.val(value);\n                    this._numPadDot = false;\n                }\n\n                if (this._isPasted && this._parse(value)) {\n                    value = this._parse(value)\n                        .toString()\n                        .replace(POINT, numberFormat[POINT]);\n                }\n\n                if (this._numericRegex(numberFormat).test(value) && !minInvalid) {\n                    this._oldText = value;\n                } else {\n                    this._blinkInvalidState();\n                    this.element.val(this._oldText);\n                    if (this._cachedCaret) {\n                        caret(element, this._cachedCaret[0]);\n                        this._cachedCaret = null;\n                    }\n                }\n\n                this._isPasted = false;\n            },\n\n            _blinkInvalidState: function() {\n                var that = this;\n\n                that._addInvalidState();\n                clearTimeout(that._invalidStateTimeout);\n                that._invalidStateTimeout = setTimeout(that._removeInvalidState.bind(that), 100);\n            },\n\n            _addInvalidState: function() {\n                var that = this;\n\n                that.wrapper.addClass(STATEINVALID);\n                that._validationIcon.removeClass('k-hidden');\n            },\n\n            _removeInvalidState: function() {\n                var that = this;\n\n                that.wrapper.removeClass(STATEINVALID);\n                that._validationIcon.addClass('k-hidden');\n                that._invalidStateTimeout = null;\n            },\n\n            _numericRegex: function(numberFormat) {\n                var that = this;\n                var separator = numberFormat[POINT];\n                var precision = that.options.decimals;\n                var fractionRule = \"*\";\n\n                if (separator === POINT) {\n                    separator = \"\\\\\" + separator;\n                }\n\n                if (precision === NULL) {\n                    precision = numberFormat.decimals;\n                }\n\n                if (precision === 0 && that.options.restrictDecimals) {\n                    return INTEGER_REGEXP;\n                }\n\n                if (that.options.restrictDecimals) {\n                    fractionRule = \"{0,\" + precision + \"}\";\n                }\n\n                if (that._separator !== separator) {\n                    that._separator = separator;\n                    that._floatRegExp = new RegExp(\"^(-)?(((\\\\d+(\" + separator + \"\\\\d\" + fractionRule + \")?)|(\" + separator + \"\\\\d\" + fractionRule + \")))?$\");\n                }\n\n                return that._floatRegExp;\n            },\n\n            _paste: function(e) {\n                var that = this;\n                var element = e.target;\n                var value = element.value;\n                var numberFormat = that._format(that.options.format);\n\n                that._isPasted = true;\n\n               setTimeout(function() {\n                    var result = that._parse(element.value);\n\n                    if (result === NULL) {\n                        that._update(value);\n                    } else {\n                        element.value = result.toString().replace(POINT, numberFormat[POINT]);\n                        if (that._adjust(result) !== result || !that._numericRegex(numberFormat).test(element.value)) {\n                            value = that._getFactorValue(element.value);\n                            that._update(value);\n                        }\n                    }\n                });\n            },\n\n            _option: function(option, value) {\n                var that = this,\n                    element = that.element,\n                    options = that.options;\n\n                if (value === undefined$1) {\n                    return options[option];\n                }\n\n                value = that._parse(value);\n\n                if (!value && option === \"step\") {\n                    return;\n                }\n\n                options[option] = value;\n                element\n                    .add(that._text)\n                    .attr(\"aria-value\" + option, value);\n\n                element.attr(option, value);\n            },\n\n            _spin: function(step, timeout) {\n                var that = this;\n\n                timeout = timeout || 500;\n\n                clearTimeout( that._spinning );\n                that._spinning = setTimeout(function() {\n                    that._spin(step, 50);\n                }, timeout );\n\n                that._step(step);\n            },\n\n            _step: function(step) {\n                var that = this,\n                    element = that.element,\n                    originalValue = that._value,\n                    value = that._parse(element.val()) || 0,\n                    precision = that.options.decimals || 2;\n\n                if (activeElement() != element[0]) {\n                    that._focusin();\n                }\n\n                if (that.options.factor && value) {\n                    value = value / that.options.factor;\n                }\n\n                value = +(value + that.options.step * step).toFixed(precision);\n                value = that._adjust(value);\n                that._update(value);\n                that._typing = false;\n\n                if (originalValue !== value) {\n                    that.trigger(SPIN);\n                }\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n            },\n\n            _toggleText: function(toggle) {\n                var that = this;\n\n                that._text.toggle(toggle);\n                if (toggle) {\n                    that._text.removeAttr(\"aria-hidden\");\n                } else {\n                    that._text.attr(\"aria-hidden\", \"true\");\n                }\n                that.element.toggle(!toggle);\n            },\n\n            _parse: function(value, culture) {\n                return parse(value, this._culture(culture), this.options.format);\n            },\n\n            _round: function(value, precision) {\n                var rounder = this.options.round ? kendo._round : truncate;\n\n                return rounder(value, precision);\n            },\n\n            _update: function(value) {\n                var that = this,\n                    options = that.options,\n                    factor = options.factor,\n                    format = options.format,\n                    decimals = options.decimals,\n                    culture = that._culture(),\n                    numberFormat = that._format(format, culture),\n                    originalValue,\n                    isNotNull;\n\n                if (decimals === NULL) {\n                    decimals = numberFormat.decimals;\n                }\n\n                value = that._parse(value, culture);\n\n                isNotNull = value !== NULL;\n\n                if (isNotNull) {\n                    value = parseFloat(that._round(value, decimals), 10);\n                }\n\n                that._value = value = that._adjust(value);\n                that._placeholder(kendo.toString(value, format, culture));\n\n                if (isNotNull) {\n                    if (factor) {\n                        value = parseFloat(that._round(value * factor, decimals), 10);\n                    }\n                    value = value.toString();\n                    if (value.indexOf(\"e\") !== -1) {\n                        value = that._round(+value, decimals);\n                    }\n                    originalValue = value;\n                    value = value.replace(POINT, numberFormat[POINT]);\n                } else {\n                    value = null;\n                    originalValue = null;\n                }\n\n                that.element.val(value);\n                that._oldText = value;\n                that.element.add(that._text).attr(\"aria-valuenow\", originalValue);\n            },\n\n            _placeholder: function(value) {\n                var input = this._text;\n\n                input.val(value);\n                if (!placeholderSupported && !value) {\n                    input.val(this.options.placeholder);\n                }\n\n                input.attr(\"title\", this.element.attr(\"title\") || input.val());\n            },\n\n            _label: function() {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var id = element.attr(\"id\");\n                var floating;\n                var labelText;\n\n                if (options.label !== null) {\n                    floating = isPlainObject(options.label) ? options.label.floating : false;\n                    labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                    if (floating) {\n                        that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                        that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                    }\n\n                    if (kendo.isFunction(labelText)) {\n                        labelText = labelText.call(that);\n                    }\n\n                    if (!labelText) {\n                        labelText = \"\";\n                    }\n\n                    if (!id) {\n                        id = options.name + \"_\" + kendo.guid();\n                        element.attr(\"id\", id);\n                    }\n\n                    that._inputLabel = $(\"<label class='\" + LABELCLASSES + \"' for='\" + id + \"'>\" + labelText + \"</label>'\").insertBefore(that.wrapper);\n\n                    if ((that.element.attr(\"disabled\") === undefined$1) && (that.element.attr(\"readonly\") === undefined$1)) {\n                        that._inputLabel.on(\"click\" + ns, that.focus.bind(that));\n                    }\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    DOMElement = element[0],\n                    wrapper;\n\n                wrapper = element.parents(\".k-numerictextbox\");\n\n                if (!wrapper.is(\"span.k-numerictextbox\")) {\n                    wrapper = element.hide().wrap(\"<span/>\").parent();\n                }\n\n                wrapper[0].style.cssText = DOMElement.style.cssText;\n                DOMElement.style.width = \"\";\n                that.wrapper = wrapper.addClass(\"k-numerictextbox k-input\")\n                                      .addClass(DOMElement.className)\n                                      .removeClass('input-validation-error')\n                                      .css(\"display\", \"\");\n            },\n\n            _reset: function() {\n                var that = this,\n                    element = that.element,\n                    formId = element.attr(\"form\"),\n                    form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        setTimeout(function() {\n                            that.value(element[0].value);\n                            that.max(that._initialOptions.max);\n                            that.min(that._initialOptions.min);\n                        });\n                    };\n\n                    that._form = form.on(\"reset\", that._resetHandler);\n                }\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"NumericTextBox\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"NumericTextBox\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        function buttonHtml(direction, text, options) {\n            var className = direction === \"increase\" ? \"caret-alt-up\" : \"caret-alt-down\";\n            var dir = direction === \"increase\" ? \"increase\" : \"decrease\";\n\n            return html.renderButton('<button role=\"button\" tabindex=\"-1\" unselectable=\"on\" class=\"k-spinner-' + dir + '\" aria-label=\"' + text + '\" title=\"' + text + '\"></button>', extend({}, options, {\n                icon: className,\n                shape: null,\n                rounded: null\n            }));\n        }\n\n        function truncate(value, precision) {\n            var parts = parseFloat(value, 10).toString().split(POINT);\n\n            if (parts[1]) {\n                parts[1] = parts[1].substring(0, precision);\n            }\n\n            return parts.join(POINT);\n\n        }\n\n        ui.plugin(NumericTextBox);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}