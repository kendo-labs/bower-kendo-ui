{"version":3,"sources":["raw-js/kendo.draganddrop.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendodraganddrop","js","this","$","lastDropTarget","kendo","window","support","document","$window","Class","Widget","ui","Observable","UserEvents","ClickMoveClick","extend","getOffset","draggables","dropTargets","dropAreas","elementUnderCursor","KEYUP","CHANGE","DRAGSTART","HOLD","DRAG","DRAGEND","DRAGCANCEL","HINTDESTROYED","DRAGENTER","DRAGLEAVE","DROP","numericCssPropery","element","property","parseInt","css","within","value","range","Math","min","max","containerBoundaries","container","offset","outerWidth","_outerWidth","outerHeight","_outerHeight","minX","left","minY","top","x","width","y","height","TapCapture","init","options","that","domElement","capture","addEventListener","each","eventMap","down","split","_press","bind","up","_release","attachEvent","fn","call","captureNext","cancelCapture","e","trigger","preventDefault","PaneDimension","forcedEnabled","scale","horizontal","measure","scrollSize","axis","makeVirtual","virtual","_virtualMin","_virtualMax","virtualSize","update","outOfBounds","forceEnabled","getSize","getTotal","rescale","silent","total","scaledTotal","size","minScale","centerOffset","enabled","PaneDimensions","forcedMinScale","maxScale","newScale","refresh","centerCoordinates","fitScale","PaneAxis","dimension","movable","dragMove","delta","position","resistance","translateAxis","Pane","elastic","dimensions","userEvents","gesturestart","gesture","press","event","target","closest","is","sender","cancel","gesturechange","coordinates","previousGesture","previousCenter","center","scaleDelta","distance","offsetX","offsetY","scaleWith","move","tagName","match","touch","skip","end","translate","hasHW3D","Movable","style","webkitTransformOrigin","_saveCoordinates","by","scaleTo","moveAxis","moveTo","newCoordinates","round","browser","msie","version","destroyDroppable","collection","widget","i","groupName","group","droppables","destroy","length","splice","DropTarget","push","events","name","_trigger","eventName","draggable","dropTarget","_over","_out","_drop","dropped","destroyGroup","_cache","DropTargetArea","filter","Draggable","_activated","clickMoveClick","start","_startClickMoveClick","_drag","_end","_onCancel","allowSelection","threshold","_start","hold","_hold","select","_select","allowTouchActions","find","_afterEndHandler","_afterEnd","_captureEscape","cursorOffset","ignore","holdToDrag","showHintOnHold","autoScroll","preventOsHoldFeatures","cancelHold","keyCode","keys","ESC","_updateHint","boundaries","updateHint","location","hintOffset","startLocation","initialDelta","isFunction","hint","_shouldIgnoreTarget","ignoreSelector","_hint","stop","remove","currentTarget","zIndex","appendTo","body","initialTouch","currentTargetOffset","on","cursorElement","_elementUnderCursor","_cursorElement","_scrollableParent","findScrollableParent","_lastEvent","_processMovement","velocity","autoScrollVelocity","scrollableViewPort","_scrollCompenstation","_scrollVelocity","clearInterval","_scrollInterval","setInterval","_autoScroll","_withDropTarget","targetElement","parent","compensation","yIsScrollable","xIsScrollable","isRootNode","scrollableRoot","scrollHeight","scrollWidth","offsetHeight","offsetWidth","yDelta","scrollTop","yInBounds","xDelta","scrollLeft","xInBounds","ev","attr","one","_cancel","isDefaultPrevented","setTimeout","animate","initialTarget","child","contains","hide","show","callback","result","targets","areas","theTarget","theFilter","targetLen","areaLen","parentNode","matchesSelector","checkTarget","off","root","bottom","right","edge","safari","documentElement","isScrollable","mouseX","mouseY","rect","AUTO_SCROLL_AREA","plugin","utils","jQuery","kendo$1","__meta__","id","category","description","depends","Object","defineProperty"],"mappings":"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","file":"kendo.draganddrop.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.userevents.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.userevents'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendodraganddrop = global.kendodraganddrop || {}, global.kendodraganddrop.js = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"draganddrop\",\n        name: \"Drag & drop\",\n        category: \"framework\",\n        description: \"Drag & drop functionality for any DOM element.\",\n        depends: [ \"core\", \"userevents\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            support = kendo.support,\n            document = window.document,\n            $window = $(window),\n            Class = kendo.Class,\n            Widget = kendo.ui.Widget,\n            Observable = kendo.Observable,\n            UserEvents = kendo.UserEvents,\n            ClickMoveClick = kendo.ClickMoveClick,\n            extend = $.extend,\n            getOffset = kendo.getOffset,\n            draggables = {},\n            dropTargets = {},\n            dropAreas = {},\n            lastDropTarget,\n            elementUnderCursor = kendo.elementUnderCursor,\n            KEYUP = \"keyup\",\n            CHANGE = \"change\",\n\n            // Draggable events\n            DRAGSTART = \"dragstart\",\n            HOLD = \"hold\",\n            DRAG = \"drag\",\n            DRAGEND = \"dragend\",\n            DRAGCANCEL = \"dragcancel\",\n            HINTDESTROYED = \"hintDestroyed\",\n\n            // DropTarget events\n            DRAGENTER = \"dragenter\",\n            DRAGLEAVE = \"dragleave\",\n            DROP = \"drop\";\n\n        function contains(parent, child) {\n            try {\n                return $.contains(parent, child) || parent == child;\n            } catch (e) {\n                return false;\n            }\n        }\n\n        function numericCssPropery(element, property) {\n            return parseInt(element.css(property), 10) || 0;\n        }\n\n        function within(value, range) {\n            return Math.min(Math.max(value, range.min), range.max);\n        }\n\n        function containerBoundaries(container, element) {\n            var offset = getOffset(container),\n                outerWidth = kendo._outerWidth,\n                outerHeight = kendo._outerHeight,\n                minX = offset.left + numericCssPropery(container, \"borderLeftWidth\") + numericCssPropery(container, \"paddingLeft\"),\n                minY = offset.top + numericCssPropery(container, \"borderTopWidth\") + numericCssPropery(container, \"paddingTop\"),\n                maxX = minX + container.width() - outerWidth(element, true),\n                maxY = minY + container.height() - outerHeight(element, true);\n\n            return {\n                x: { min: minX, max: maxX },\n                y: { min: minY, max: maxY }\n            };\n        }\n\n        function checkTarget(target, targets, areas) {\n            var theTarget, theFilter, i = 0,\n                targetLen = targets && targets.length,\n                areaLen = areas && areas.length;\n\n            while (target && target.parentNode) {\n                for (i = 0; i < targetLen; i ++) {\n                    theTarget = targets[i];\n                    if (theTarget.element[0] === target) {\n                        return { target: theTarget, targetElement: target };\n                    }\n                }\n\n                for (i = 0; i < areaLen; i ++) {\n                    theFilter = areas[i];\n                    if ($.contains(theFilter.element[0], target) && support.matchesSelector.call(target, theFilter.options.filter)) {\n                        return { target: theFilter, targetElement: target };\n                    }\n                }\n\n                target = target.parentNode;\n            }\n\n            return undefined$1;\n        }\n\n        var TapCapture = Observable.extend({\n            init: function(element, options) {\n                var that = this,\n                    domElement = element[0];\n\n                that.capture = false;\n\n                if (domElement.addEventListener) {\n                    $.each(kendo.eventMap.down.split(\" \"), function() {\n                        domElement.addEventListener(this, that._press.bind(that), true);\n                    });\n                    $.each(kendo.eventMap.up.split(\" \"), function() {\n                        domElement.addEventListener(this, that._release.bind(that), true);\n                    });\n                } else {\n                    $.each(kendo.eventMap.down.split(\" \"), function() {\n                        domElement.attachEvent(this, that._press.bind(that));\n                    });\n                    $.each(kendo.eventMap.up.split(\" \"), function() {\n                        domElement.attachEvent(this, that._release.bind(that));\n                    });\n                }\n\n                Observable.fn.init.call(that);\n\n                that.bind([\"press\", \"release\"], options || {});\n            },\n\n            captureNext: function() {\n                this.capture = true;\n            },\n\n            cancelCapture: function() {\n                this.capture = false;\n            },\n\n            _press: function(e) {\n                var that = this;\n                that.trigger(\"press\");\n                if (that.capture) {\n                    e.preventDefault();\n                }\n            },\n\n            _release: function(e) {\n                var that = this;\n                that.trigger(\"release\");\n\n                if (that.capture) {\n                    e.preventDefault();\n                    that.cancelCapture();\n                }\n            }\n        });\n\n        var PaneDimension = Observable.extend({\n            init: function(options) {\n                var that = this;\n                Observable.fn.init.call(that);\n\n                that.forcedEnabled = false;\n\n                $.extend(that, options);\n\n                that.scale = 1;\n\n                if (that.horizontal) {\n                    that.measure = \"offsetWidth\";\n                    that.scrollSize = \"scrollWidth\";\n                    that.axis = \"x\";\n                } else {\n                    that.measure = \"offsetHeight\";\n                    that.scrollSize = \"scrollHeight\";\n                    that.axis = \"y\";\n                }\n            },\n\n            makeVirtual: function() {\n                $.extend(this, {\n                    virtual: true,\n                    forcedEnabled: true,\n                    _virtualMin: 0,\n                    _virtualMax: 0\n                });\n            },\n\n            virtualSize: function(min, max) {\n                if (this._virtualMin !== min || this._virtualMax !== max) {\n                    this._virtualMin = min;\n                    this._virtualMax = max;\n                    this.update();\n                }\n            },\n\n            outOfBounds: function(offset) {\n                return offset > this.max || offset < this.min;\n            },\n\n            forceEnabled: function() {\n                this.forcedEnabled = true;\n            },\n\n            getSize: function() {\n                return this.container[0][this.measure];\n            },\n\n            getTotal: function() {\n                return this.element[0][this.scrollSize];\n            },\n\n            rescale: function(scale) {\n                this.scale = scale;\n            },\n\n            update: function(silent) {\n                var that = this,\n                    total = that.virtual ? that._virtualMax : that.getTotal(),\n                    scaledTotal = total * that.scale,\n                    size = that.getSize();\n\n                if (total === 0 && !that.forcedEnabled) {\n                    return; // we are not visible.\n                }\n\n                that.max = that.virtual ? -that._virtualMin : 0;\n                that.size = size;\n                that.total = scaledTotal;\n                that.min = Math.min(that.max, size - scaledTotal);\n                that.minScale = size / total;\n                that.centerOffset = (scaledTotal - size) / 2;\n\n                that.enabled = that.forcedEnabled || (scaledTotal > size);\n\n                if (!silent) {\n                    that.trigger(CHANGE, that);\n                }\n            }\n        });\n\n        var PaneDimensions = Observable.extend({\n            init: function(options) {\n                var that = this;\n\n                Observable.fn.init.call(that);\n\n                that.x = new PaneDimension(extend({ horizontal: true }, options));\n                that.y = new PaneDimension(extend({ horizontal: false }, options));\n                that.container = options.container;\n                that.forcedMinScale = options.minScale;\n                that.maxScale = options.maxScale || 100;\n\n                that.bind(CHANGE, options);\n            },\n\n            rescale: function(newScale) {\n                this.x.rescale(newScale);\n                this.y.rescale(newScale);\n                this.refresh();\n            },\n\n            centerCoordinates: function() {\n                return { x: Math.min(0, -this.x.centerOffset), y: Math.min(0, -this.y.centerOffset) };\n            },\n\n            refresh: function() {\n                var that = this;\n                that.x.update();\n                that.y.update();\n                that.enabled = that.x.enabled || that.y.enabled;\n                that.minScale = that.forcedMinScale || Math.min(that.x.minScale, that.y.minScale);\n                that.fitScale = Math.max(that.x.minScale, that.y.minScale);\n                that.trigger(CHANGE);\n            }\n        });\n\n        var PaneAxis = Observable.extend({\n            init: function(options) {\n                var that = this;\n                extend(that, options);\n                Observable.fn.init.call(that);\n            },\n\n            outOfBounds: function() {\n                return this.dimension.outOfBounds(this.movable[this.axis]);\n            },\n\n            dragMove: function(delta) {\n                var that = this,\n                    dimension = that.dimension,\n                    axis = that.axis,\n                    movable = that.movable,\n                    position = movable[axis] + delta;\n\n                if (!dimension.enabled) {\n                    return;\n                }\n\n                if ((position < dimension.min && delta < 0) || (position > dimension.max && delta > 0)) {\n                    delta *= that.resistance;\n                }\n\n                movable.translateAxis(axis, delta);\n                that.trigger(CHANGE, that);\n            }\n        });\n\n        var Pane = Class.extend({\n\n            init: function(options) {\n                var that = this,\n                    x,\n                    y,\n                    resistance,\n                    movable;\n\n                extend(that, { elastic: true }, options);\n\n                resistance = that.elastic ? 0.5 : 0;\n                movable = that.movable;\n\n                that.x = x = new PaneAxis({\n                    axis: \"x\",\n                    dimension: that.dimensions.x,\n                    resistance: resistance,\n                    movable: movable\n                });\n\n                that.y = y = new PaneAxis({\n                    axis: \"y\",\n                    dimension: that.dimensions.y,\n                    resistance: resistance,\n                    movable: movable\n                });\n\n                that.userEvents.bind([\"press\", \"move\", \"end\", \"gesturestart\", \"gesturechange\"], {\n                    gesturestart: function(e) {\n                        that.gesture = e;\n                        that.offset = that.dimensions.container.offset();\n                    },\n\n                    press: function(e) {\n                        if ($(e.event.target).closest(\"a\").is(\"[data-navigate-on-press=true]\")) {\n                            e.sender.cancel();\n                        }\n                    },\n\n                    gesturechange: function(e) {\n                        var previousGesture = that.gesture,\n                            previousCenter = previousGesture.center,\n\n                            center = e.center,\n\n                            scaleDelta = e.distance / previousGesture.distance,\n\n                            minScale = that.dimensions.minScale,\n                            maxScale = that.dimensions.maxScale,\n                            coordinates;\n\n                        if (movable.scale <= minScale && scaleDelta < 1) {\n                            // Resist shrinking. Instead of shrinking from 1 to 0.5, it will shrink to 0.5 + (1 /* minScale */ - 0.5) * 0.8 = 0.9;\n                            scaleDelta += (1 - scaleDelta) * 0.8;\n                        }\n\n                        if (movable.scale * scaleDelta >= maxScale) {\n                            scaleDelta = maxScale / movable.scale;\n                        }\n\n                        var offsetX = movable.x + that.offset.left,\n                            offsetY = movable.y + that.offset.top;\n\n                        coordinates = {\n                            x: (offsetX - previousCenter.x) * scaleDelta + center.x - offsetX,\n                            y: (offsetY - previousCenter.y) * scaleDelta + center.y - offsetY\n                        };\n\n                        movable.scaleWith(scaleDelta);\n\n                        x.dragMove(coordinates.x);\n                        y.dragMove(coordinates.y);\n\n                        that.dimensions.rescale(movable.scale);\n                        that.gesture = e;\n                        e.preventDefault();\n                    },\n\n                    move: function(e) {\n                        if (e.event.target.tagName.match(/textarea|input/i)) {\n                            return;\n                        }\n\n                        if (x.dimension.enabled || y.dimension.enabled) {\n                            x.dragMove(e.x.delta);\n                            y.dragMove(e.y.delta);\n                            e.preventDefault();\n                        } else {\n                            e.touch.skip();\n                        }\n                    },\n\n                    end: function(e) {\n                        e.preventDefault();\n                    }\n                });\n            }\n        });\n\n        var TRANSFORM_STYLE = \"transform\",\n            translate;\n\n\n        if (support.hasHW3D) {\n            translate = function(x, y, scale) {\n                return \"translate3d(\" + x + \"px,\" + y + \"px,0) scale(\" + scale + \")\";\n            };\n        } else {\n            translate = function(x, y, scale) {\n                return \"translate(\" + x + \"px,\" + y + \"px) scale(\" + scale + \")\";\n            };\n        }\n\n        var Movable = Observable.extend({\n            init: function(element) {\n                var that = this;\n\n                Observable.fn.init.call(that);\n\n                that.element = $(element);\n                that.element[0].style.webkitTransformOrigin = \"left top\";\n                that.x = 0;\n                that.y = 0;\n                that.scale = 1;\n                that._saveCoordinates(translate(that.x, that.y, that.scale));\n            },\n\n            translateAxis: function(axis, by) {\n                this[axis] += by;\n                this.refresh();\n            },\n\n            scaleTo: function(scale) {\n                this.scale = scale;\n                this.refresh();\n            },\n\n            scaleWith: function(scaleDelta) {\n                this.scale *= scaleDelta;\n                this.refresh();\n            },\n\n            translate: function(coordinates) {\n                this.x += coordinates.x;\n                this.y += coordinates.y;\n                this.refresh();\n            },\n\n            moveAxis: function(axis, value) {\n                this[axis] = value;\n                this.refresh();\n            },\n\n            moveTo: function(coordinates) {\n                extend(this, { x: coordinates.x, y: coordinates.y });\n                this.refresh();\n            },\n\n            refresh: function() {\n                var that = this,\n                    x = that.x,\n                    y = that.y,\n                    newCoordinates;\n\n                if (that.round) {\n                    x = Math.round(x);\n                    y = Math.round(y);\n                }\n\n                newCoordinates = translate(x, y, that.scale);\n\n                if (newCoordinates != that.coordinates) {\n                    if (kendo.support.browser.msie && kendo.support.browser.version < 10) {\n                        that.element[0].style.position = \"absolute\";\n                        that.element[0].style.left = that.x + \"px\";\n                        that.element[0].style.top = that.y + \"px\";\n\n                    } else {\n                        that.element[0].style[TRANSFORM_STYLE] = newCoordinates;\n                    }\n                    that._saveCoordinates(newCoordinates);\n                    that.trigger(CHANGE);\n                }\n            },\n\n            _saveCoordinates: function(coordinates) {\n                this.coordinates = coordinates;\n            }\n        });\n\n        function destroyDroppable(collection, widget) {\n            var groupName = widget.options.group,\n            droppables = collection[groupName],\n            i;\n\n            Widget.fn.destroy.call(widget);\n\n            if (droppables.length > 1) {\n                for (i = 0; i < droppables.length; i++) {\n                    if (droppables[i] == widget) {\n                        droppables.splice(i, 1);\n                        break;\n                    }\n                }\n            } else {\n                droppables.length = 0; // WTF, porting this from the previous destroyGroup\n                delete collection[groupName];\n            }\n        }\n\n        var DropTarget = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                var group = that.options.group;\n\n                if (!(group in dropTargets)) {\n                    dropTargets[group] = [ that ];\n                } else {\n                    dropTargets[group].push( that );\n                }\n            },\n\n            events: [\n                DRAGENTER,\n                DRAGLEAVE,\n                DROP\n            ],\n\n            options: {\n                name: \"DropTarget\",\n                group: \"default\"\n            },\n\n            destroy: function() {\n                destroyDroppable(dropTargets, this);\n            },\n\n            _trigger: function(eventName, e) {\n                var that = this,\n                    draggable = draggables[that.options.group];\n\n                if (draggable) {\n                    return that.trigger(eventName, extend({}, e.event, {\n                               draggable: draggable,\n                               dropTarget: e.dropTarget\n                           }));\n                }\n            },\n\n            _over: function(e) {\n                this._trigger(DRAGENTER, e);\n            },\n\n            _out: function(e) {\n                this._trigger(DRAGLEAVE, e);\n            },\n\n            _drop: function(e) {\n                var that = this,\n                    draggable = draggables[that.options.group];\n\n                if (draggable) {\n                    draggable.dropped = !that._trigger(DROP, e);\n                }\n            }\n        });\n\n        DropTarget.destroyGroup = function(groupName) {\n            var group = dropTargets[groupName] || dropAreas[groupName],\n                i;\n\n            if (group) {\n                for (i = 0; i < group.length; i++) {\n                    Widget.fn.destroy.call(group[i]);\n                }\n\n                group.length = 0;\n                delete dropTargets[groupName];\n                delete dropAreas[groupName];\n            }\n        };\n\n        DropTarget._cache = dropTargets;\n\n        var DropTargetArea = DropTarget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                var group = that.options.group;\n\n                if (!(group in dropAreas)) {\n                    dropAreas[group] = [ that ];\n                } else {\n                    dropAreas[group].push( that );\n                }\n            },\n\n            destroy: function() {\n                destroyDroppable(dropAreas, this);\n            },\n\n            options: {\n                name: \"DropTargetArea\",\n                group: \"default\",\n                filter: null\n            }\n        });\n\n        var Draggable = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._activated = false;\n\n                if (this.options.clickMoveClick) {\n                    that.clickMoveClick = new ClickMoveClick(that.element, {\n                        global: true,\n                        filter: that.options.filter,\n                        start: that._startClickMoveClick.bind(that),\n                        move: that._drag.bind(that),\n                        end: that._end.bind(that),\n                        cancel: that._onCancel.bind(that)\n                    });\n                }\n\n                that.userEvents = new UserEvents(that.element, {\n                    global: true,\n                    allowSelection: true,\n                    filter: that.options.filter,\n                    threshold: that.options.distance,\n                    start: that._start.bind(that),\n                    hold: that._hold.bind(that),\n                    move: that._drag.bind(that),\n                    end: that._end.bind(that),\n                    cancel: that._onCancel.bind(that),\n                    select: that._select.bind(that),\n                    press: that._press.bind(that),\n                });\n\n                if (kendo.support.touch && !options.allowTouchActions) {\n                    that.element.find(that.options.filter).css('touch-action', 'none');\n                }\n\n                that._afterEndHandler = that._afterEnd.bind(that);\n                that._captureEscape = that._captureEscape.bind(that);\n            },\n\n            events: [\n                HOLD,\n                DRAGSTART,\n                DRAG,\n                DRAGEND,\n                DRAGCANCEL,\n                HINTDESTROYED\n            ],\n\n            options: {\n                name: \"Draggable\",\n                distance: ( kendo.support.touch ? 0 : 5),\n                group: \"default\",\n                cursorOffset: null,\n                axis: null,\n                container: null,\n                filter: null,\n                ignore: null,\n                holdToDrag: false,\n                showHintOnHold: false,\n                autoScroll: false,\n                dropped: false,\n                clickMoveClick: false,\n                preventOsHoldFeatures: false,\n                allowTouchActions: false,\n            },\n\n            cancelHold: function() {\n                this._activated = false;\n            },\n\n            _captureEscape: function(e) {\n                var that = this;\n\n                if (e.keyCode === kendo.keys.ESC) {\n                    that.userEvents.cancel();\n\n                    if (that.clickMoveClick) {\n                        that.clickMoveClick.cancel();\n                    }\n\n                    this._trigger(DRAGCANCEL, { event: e });\n                }\n            },\n\n            _updateHint: function(e) {\n                var that = this,\n                    coordinates,\n                    options = that.options,\n                    boundaries = that.boundaries,\n                    axis = options.axis,\n                    cursorOffset = that.options.cursorOffset,\n                    updateHint = options.updateHint;\n\n                if (cursorOffset) {\n                   coordinates = { left: e.x.location + cursorOffset.left, top: e.y.location + cursorOffset.top };\n                } else {\n                    if (e.x.delta !== 0 || e.y.delta !== 0) {\n                        that.hintOffset.left += e.x.delta;\n                        that.hintOffset.top += e.y.delta;\n                        coordinates = $.extend({}, that.hintOffset);\n                    } else {\n                        that.hintOffset.left = e.x.startLocation + e.x.initialDelta;\n                        that.hintOffset.top = e.y.startLocation + e.y.initialDelta;\n                        coordinates = $.extend({}, that.hintOffset);\n                    }\n                }\n\n                if (boundaries) {\n                    coordinates.top = within(coordinates.top, boundaries.y);\n                    coordinates.left = within(coordinates.left, boundaries.x);\n                }\n\n                if (axis === \"x\") {\n                    delete coordinates.top;\n                } else if (axis === \"y\") {\n                    delete coordinates.left;\n                }\n\n                if (updateHint && kendo.isFunction(updateHint)) {\n                   return $(updateHint.call(that, that.hint, e));\n                }\n\n                that.hint.css(coordinates);\n            },\n\n            _shouldIgnoreTarget: function(target) {\n                var ignoreSelector = this.options.ignore;\n                return ignoreSelector && $(target).is(ignoreSelector);\n            },\n\n            _select: function(e) {\n                if (!this._shouldIgnoreTarget(e.event.target)) {\n                    e.preventDefault();\n                }\n            },\n\n            _startClickMoveClick: function(e) {\n                this._activated = true;\n\n                this._start(e);\n            },\n\n            _hint: function() {\n                var that = this,\n                    hint = that.options.hint;\n\n                if (hint) {\n                    if (that.hint) {\n                        that.hint.stop(true, true).remove();\n                    }\n\n                    that.hint = kendo.isFunction(hint) ? $(hint.call(that, that.currentTarget)) : hint;\n\n                    var offset = getOffset(that.currentTarget);\n                    that.hintOffset = offset;\n\n                    that.hint.css({\n                        position: \"absolute\",\n                        zIndex: 20000, // the Window's z-index is 10000 and can be raised because of z-stacking\n                        left: offset.left,\n                        top: offset.top,\n                    })\n                    .appendTo(document.body);\n                }\n            },\n\n            _start: function(e) {\n                var that = this,\n                    options = that.options,\n                    container = options.container ? $(options.container) : null,\n                    hint = options.hint;\n\n                if (this._shouldIgnoreTarget(e.touch.initialTouch) || (options.holdToDrag && !that._activated)) {\n                    that.userEvents.cancel();\n                    return;\n                }\n\n                that.currentTarget = e.target;\n                that.currentTargetOffset = getOffset(that.currentTarget);\n\n                if (hint) {\n                    that._hint();\n                }\n\n                draggables[options.group] = that;\n\n                that.dropped = false;\n\n                if (container) {\n                    that.boundaries = containerBoundaries(container, that.hint);\n                }\n\n                $(document).on(KEYUP, that._captureEscape);\n\n                if (that._trigger(DRAGSTART, e)) {\n                    that.userEvents.cancel();\n\n                    if (that.clickMoveClick) {\n                        that.clickMoveClick.cancel();\n                    }\n\n                    that._afterEnd();\n                }\n\n                that.userEvents.capture();\n            },\n\n            _hold: function(e) {\n                this.currentTarget = e.target;\n\n                if (this._trigger(HOLD, e)) {\n                    this.userEvents.cancel();\n                } else {\n                    this._activated = true;\n                    if (this.options.showHintOnHold) {\n                        this._hint();\n                    }\n                }\n            },\n\n            _drag: function(e) {\n                e.preventDefault();\n\n                var cursorElement = this._elementUnderCursor(e);\n\n                if (this.options.autoScroll && this._cursorElement !== cursorElement) {\n                    this._scrollableParent = findScrollableParent(cursorElement);\n                    this._cursorElement = cursorElement;\n                }\n\n                this._lastEvent = e;\n                this._processMovement(e, cursorElement);\n\n                if (this.options.autoScroll) {\n                    // chrome seems to trigger mousemove when mouse is moved outside of the window (over the Chrome), too.\n                    if (this._scrollableParent[0]) {\n                        var velocity = autoScrollVelocity(e.x.location, e.y.location, scrollableViewPort(this._scrollableParent));\n\n\n                        this._scrollCompenstation = $.extend({}, this.hintOffset);\n                        this._scrollVelocity = velocity;\n\n                        if (velocity.y === 0 && velocity.x === 0) {\n                            clearInterval(this._scrollInterval);\n                            this._scrollInterval = null;\n                        } else if (!this._scrollInterval) {\n                            this._scrollInterval = setInterval(this._autoScroll.bind(this), 50);\n                        }\n                    }\n                }\n\n                if (this.hint) {\n                    this._updateHint(e);\n                }\n            },\n\n            _processMovement: function(e, cursorElement) {\n                this._withDropTarget(cursorElement, function(target, targetElement) {\n                    if (!target) {\n                        if (lastDropTarget) {\n                            lastDropTarget._trigger(DRAGLEAVE, extend(e, { dropTarget: $(lastDropTarget.targetElement) }));\n                            lastDropTarget = null;\n                        }\n                        return;\n                    }\n\n                    if (lastDropTarget) {\n                        if (targetElement === lastDropTarget.targetElement) {\n                            return;\n                        }\n\n                        lastDropTarget._trigger(DRAGLEAVE, extend(e, { dropTarget: $(lastDropTarget.targetElement) }));\n                    }\n\n                    target._trigger(DRAGENTER, extend(e, { dropTarget: $(targetElement) }));\n                    lastDropTarget = extend(target, { targetElement: targetElement });\n                });\n\n                this._trigger(DRAG, extend(e, { dropTarget: lastDropTarget, elementUnderCursor: cursorElement }));\n            },\n\n            _autoScroll: function() {\n                var parent = this._scrollableParent[0],\n                    velocity = this._scrollVelocity,\n                    compensation = this._scrollCompenstation;\n\n                if (!parent) {\n                    return;\n                }\n\n                var cursorElement = this._elementUnderCursor(this._lastEvent);\n                this._processMovement(this._lastEvent, cursorElement);\n\n                var yIsScrollable, xIsScrollable;\n\n                var isRootNode = parent === scrollableRoot()[0];\n\n                if (isRootNode) {\n                    yIsScrollable = document.body.scrollHeight > $window.height();\n                    xIsScrollable = document.body.scrollWidth > $window.width();\n                } else {\n                    yIsScrollable = parent.offsetHeight <= parent.scrollHeight;\n                    xIsScrollable = parent.offsetWidth <= parent.scrollWidth;\n                }\n\n                var yDelta = parent.scrollTop + velocity.y;\n                var yInBounds = yIsScrollable && yDelta > 0 && yDelta < parent.scrollHeight;\n\n                var xDelta = parent.scrollLeft + velocity.x;\n                var xInBounds = xIsScrollable && xDelta > 0 && xDelta < parent.scrollWidth;\n\n                if (yInBounds) {\n                    parent.scrollTop += velocity.y;\n                } else if (yIsScrollable && yDelta < 0) {\n                    parent.scrollTop = 0;\n                }\n\n                if (xInBounds) {\n                    parent.scrollLeft += velocity.x;\n                } else if (xIsScrollable && xDelta < 0) {\n                    parent.scrollLeft = 0;\n                }\n\n                if (this.hint && isRootNode && (xInBounds || yInBounds)) {\n                    if (yInBounds) {\n                        compensation.top += velocity.y;\n                    }\n\n                    if (xInBounds) {\n                        compensation.left += velocity.x;\n                    }\n\n                    this.hint.css(compensation);\n                }\n            },\n\n            _press: function(ev) {\n                if (this.options.preventOsHoldFeatures) {\n                    ev.target.css('-webkit-user-select', 'none');\n                    ev.target.attr('unselectable', 'on');\n                    ev.target.one('contextmenu', (ev) => {\n                        ev.preventDefault();\n                    });\n                }\n            },\n\n            _end: function(e) {\n                this._withDropTarget(this._elementUnderCursor(e), function(target, targetElement) {\n                    if (target) {\n                        target._drop(extend({}, e, { dropTarget: $(targetElement) }));\n                        lastDropTarget = null;\n                    }\n                });\n\n                clearInterval(this._scrollInterval);\n                this._scrollInterval = null;\n                this._cancel(this._trigger(DRAGEND, e));\n            },\n\n            _onCancel: function(e) {\n                this._cancel();\n                this._trigger(DRAGCANCEL, { event: e });\n            },\n\n            _cancel: function(isDefaultPrevented) {\n                var that = this;\n\n                that._scrollableParent = null;\n                this._cursorElement = null;\n                clearInterval(this._scrollInterval);\n                that._activated = false;\n\n                if (that.hint && !that.dropped) {\n                    setTimeout(function() {\n                        that.hint.stop(true, true);\n\n                        if (isDefaultPrevented) {\n                            that._afterEndHandler();\n                        } else {\n                            that.hint.animate(that.currentTargetOffset, \"fast\", that._afterEndHandler);\n                        }\n                    }, 0);\n                } else {\n                    that._afterEnd();\n                }\n            },\n\n            _trigger: function(eventName, e) {\n                var that = this;\n\n                return that.trigger(\n                    eventName, extend(\n                    {},\n                    e.event,\n                    {\n                        x: e.x,\n                        y: e.y,\n                        currentTarget: that.currentTarget,\n                        initialTarget: e.touch ? e.touch.initialTouch : null,\n                        dropTarget: e.dropTarget,\n                        elementUnderCursor: e.elementUnderCursor,\n                        clickMoveClick: e.clickMoveClick\n                    }\n                ));\n            },\n\n            _elementUnderCursor: function(e) {\n                var target = elementUnderCursor(e),\n                    hint = this.hint;\n\n                if (hint && contains(hint[0], target)) {\n                    hint.hide();\n                    target = elementUnderCursor(e);\n                    // IE8 does not return the element in iframe from first attempt\n                    if (!target) {\n                        target = elementUnderCursor(e);\n                    }\n                    hint.show();\n                }\n\n                return target;\n            },\n\n            _withDropTarget: function(element, callback) {\n                var result,\n                    group = this.options.group,\n                    targets = dropTargets[group],\n                    areas = dropAreas[group];\n\n                if (targets && targets.length || areas && areas.length) {\n                    result = checkTarget(element, targets, areas);\n\n                    if (result) {\n                        callback(result.target, result.targetElement);\n                    } else {\n                        callback();\n                    }\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n\n                that._afterEnd();\n\n                that.userEvents.destroy();\n\n                if (that.clickMoveClick) {\n                    that.clickMoveClick.destroy();\n                }\n\n                this._scrollableParent = null;\n                this._cursorElement = null;\n                clearInterval(this._scrollInterval);\n\n                that.currentTarget = null;\n            },\n\n            _afterEnd: function() {\n                var that = this;\n\n                if (that.hint) {\n                    that.hint.remove();\n                }\n\n                delete draggables[that.options.group];\n\n                that.trigger(\"destroy\");\n                that.trigger(HINTDESTROYED);\n                $(document).off(KEYUP, that._captureEscape);\n            }\n        });\n\n        kendo.ui.plugin(DropTarget);\n        kendo.ui.plugin(DropTargetArea);\n        kendo.ui.plugin(Draggable);\n        kendo.TapCapture = TapCapture;\n        kendo.containerBoundaries = containerBoundaries;\n\n        extend(kendo.ui, {\n            Pane: Pane,\n            PaneDimensions: PaneDimensions,\n            Movable: Movable\n        });\n\n        function scrollableViewPort(element) {\n            var root = scrollableRoot()[0],\n                offset,\n                top,\n                left;\n\n            if (element[0] === root) {\n                top = root.scrollTop;\n                left = root.scrollLeft;\n\n                return {\n                    top: top,\n                    left: left,\n                    bottom: top + $window.height(),\n                    right: left + $window.width()\n                };\n            } else {\n                offset = element.offset();\n                offset.bottom = offset.top + element.height();\n                offset.right = offset.left + element.width();\n                return offset;\n            }\n        }\n\n        function scrollableRoot() {\n            return $(kendo.support.browser.edge || kendo.support.browser.safari ? document.body : document.documentElement);\n        }\n\n        function findScrollableParent(element) {\n            var root = scrollableRoot();\n\n            if (!element || element === document.body || element === document.documentElement) {\n                return root;\n            }\n\n            var parent = $(element)[0];\n\n            while (parent && !kendo.isScrollable(parent) && parent !== document.body) {\n                parent = parent.parentNode;\n            }\n\n            if (parent === document.body) {\n                return root;\n            }\n\n            return $(parent);\n        }\n\n        function autoScrollVelocity(mouseX, mouseY, rect) {\n            var velocity = { x: 0, y: 0 };\n\n            var AUTO_SCROLL_AREA = 50;\n\n            if (mouseX - rect.left < AUTO_SCROLL_AREA) {\n                velocity.x = -(AUTO_SCROLL_AREA - (mouseX - rect.left));\n            } else if (rect.right - mouseX < AUTO_SCROLL_AREA) {\n                velocity.x = AUTO_SCROLL_AREA - (rect.right - mouseX);\n            }\n\n            if (mouseY - rect.top < AUTO_SCROLL_AREA) {\n                velocity.y = -(AUTO_SCROLL_AREA - (mouseY - rect.top));\n            } else if (rect.bottom - mouseY < AUTO_SCROLL_AREA) {\n                velocity.y = AUTO_SCROLL_AREA - (rect.bottom - mouseY);\n            }\n\n            return velocity;\n        }\n\n        // export for testing\n        kendo.ui.Draggable.utils = {\n            autoScrollVelocity: autoScrollVelocity,\n            scrollableViewPort: scrollableViewPort,\n            findScrollableParent: findScrollableParent\n        };\n\n     })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports[\"default\"] = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}