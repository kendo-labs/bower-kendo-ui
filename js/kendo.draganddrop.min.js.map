{"version":3,"sources":["raw-js/kendo.draganddrop.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendodraganddrop","js","this","$","undefined$1","lastDropTarget","kendo","window","support","document","$window","Class","Widget","ui","Observable","UserEvents","ClickMoveClick","extend","getOffset","draggables","dropTargets","dropAreas","elementUnderCursor","KEYUP","CHANGE","DRAGSTART","HOLD","DRAG","DRAGEND","DRAGCANCEL","HINTDESTROYED","DRAGENTER","DRAGLEAVE","DROP","numericCssPropery","element","property","parseInt","css","within","value","range","Math","min","max","containerBoundaries","container","offset","outerWidth","_outerWidth","outerHeight","_outerHeight","minX","left","minY","top","x","width","y","height","translate","TapCapture","init","options","that","domElement","capture","addEventListener","each","eventMap","down","split","_press","bind","up","_release","attachEvent","fn","call","captureNext","cancelCapture","e","trigger","preventDefault","PaneDimension","forcedEnabled","scale","horizontal","measure","scrollSize","axis","makeVirtual","virtual","_virtualMin","_virtualMax","virtualSize","update","outOfBounds","forceEnabled","getSize","getTotal","rescale","silent","total","scaledTotal","size","minScale","centerOffset","enabled","PaneDimensions","forcedMinScale","maxScale","newScale","refresh","centerCoordinates","fitScale","PaneAxis","dimension","movable","dragMove","delta","position","resistance","translateAxis","Pane","elastic","dimensions","userEvents","gesturestart","gesture","press","event","target","closest","is","sender","cancel","gesturechange","coordinates","previousGesture","previousCenter","center","scaleDelta","distance","offsetX","offsetY","scaleWith","move","tagName","match","touch","skip","end","TRANSFORM_STYLE","transitions","prefix","hasHW3D","Movable","style","webkitTransformOrigin","_saveCoordinates","by","scaleTo","moveAxis","moveTo","newCoordinates","round","browser","msie","version","destroyDroppable","collection","widget","i","groupName","group","droppables","destroy","length","splice","DropTarget","push","events","name","_trigger","eventName","draggable","dropTarget","_over","_out","_drop","dropped","destroyGroup","_cache","DropTargetArea","filter","Draggable","_activated","clickMoveClick","start","_startClickMoveClick","_drag","_end","_onCancel","allowSelection","threshold","_start","hold","_hold","select","_select","find","_afterEndHandler","_afterEnd","_captureEscape","cursorOffset","ignore","holdToDrag","showHintOnHold","autoScroll","preventOsHoldFeatures","cancelHold","keyCode","keys","ESC","_updateHint","boundaries","location","hintOffset","startLocation","initialDelta","hint","_shouldIgnoreTarget","ignoreSelector","_hint","stop","remove","isFunction","currentTarget","zIndex","appendTo","body","initialTouch","currentTargetOffset","on","cursorElement","_elementUnderCursor","_cursorElement","_scrollableParent","findScrollableParent","_lastEvent","_processMovement","velocity","autoScrollVelocity","scrollableViewPort","_scrollCompenstation","_scrollVelocity","clearInterval","_scrollInterval","setInterval","_autoScroll","_withDropTarget","targetElement","parent","compensation","yIsScrollable","xIsScrollable","isRootNode","scrollableRoot","scrollHeight","scrollWidth","offsetHeight","offsetWidth","yDelta","scrollTop","yInBounds","xDelta","scrollLeft","xInBounds","ev","attr","one","_cancel","isDefaultPrevented","setTimeout","animate","initialTarget","child","contains","hide","show","callback","result","targets","areas","theTarget","theFilter","targetLen","areaLen","parentNode","matchesSelector","checkTarget","off","root","bottom","right","edge","safari","documentElement","isScrollable","mouseX","mouseY","rect","AUTO_SCROLL_AREA","plugin","utils","jQuery"],"mappings":"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","file":"kendo.draganddrop.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.userevents.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.userevents'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendodraganddrop = global.kendodraganddrop || {}, global.kendodraganddrop.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"draganddrop\",\n        name: \"Drag & drop\",\n        category: \"framework\",\n        description: \"Drag & drop functionality for any DOM element.\",\n        depends: [ \"core\", \"userevents\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            support = kendo.support,\n            document = window.document,\n            $window = $(window),\n            Class = kendo.Class,\n            Widget = kendo.ui.Widget,\n            Observable = kendo.Observable,\n            UserEvents = kendo.UserEvents,\n            ClickMoveClick = kendo.ClickMoveClick,\n            extend = $.extend,\n            getOffset = kendo.getOffset,\n            draggables = {},\n            dropTargets = {},\n            dropAreas = {},\n            lastDropTarget,\n            elementUnderCursor = kendo.elementUnderCursor,\n            KEYUP = \"keyup\",\n            CHANGE = \"change\",\n\n            // Draggable events\n            DRAGSTART = \"dragstart\",\n            HOLD = \"hold\",\n            DRAG = \"drag\",\n            DRAGEND = \"dragend\",\n            DRAGCANCEL = \"dragcancel\",\n            HINTDESTROYED = \"hintDestroyed\",\n\n            // DropTarget events\n            DRAGENTER = \"dragenter\",\n            DRAGLEAVE = \"dragleave\",\n            DROP = \"drop\";\n\n        function contains(parent, child) {\n            try {\n                return $.contains(parent, child) || parent == child;\n            } catch (e) {\n                return false;\n            }\n        }\n\n        function numericCssPropery(element, property) {\n            return parseInt(element.css(property), 10) || 0;\n        }\n\n        function within(value, range) {\n            return Math.min(Math.max(value, range.min), range.max);\n        }\n\n        function containerBoundaries(container, element) {\n            var offset = getOffset(container),\n                outerWidth = kendo._outerWidth,\n                outerHeight = kendo._outerHeight,\n                minX = offset.left + numericCssPropery(container, \"borderLeftWidth\") + numericCssPropery(container, \"paddingLeft\"),\n                minY = offset.top + numericCssPropery(container, \"borderTopWidth\") + numericCssPropery(container, \"paddingTop\"),\n                maxX = minX + container.width() - outerWidth(element, true),\n                maxY = minY + container.height() - outerHeight(element, true);\n\n            return {\n                x: { min: minX, max: maxX },\n                y: { min: minY, max: maxY }\n            };\n        }\n\n        function checkTarget(target, targets, areas) {\n            var theTarget, theFilter, i = 0,\n                targetLen = targets && targets.length,\n                areaLen = areas && areas.length;\n\n            while (target && target.parentNode) {\n                for (i = 0; i < targetLen; i ++) {\n                    theTarget = targets[i];\n                    if (theTarget.element[0] === target) {\n                        return { target: theTarget, targetElement: target };\n                    }\n                }\n\n                for (i = 0; i < areaLen; i ++) {\n                    theFilter = areas[i];\n                    if ($.contains(theFilter.element[0], target) && support.matchesSelector.call(target, theFilter.options.filter)) {\n                        return { target: theFilter, targetElement: target };\n                    }\n                }\n\n                target = target.parentNode;\n            }\n\n            return undefined$1;\n        }\n\n        var TapCapture = Observable.extend({\n            init: function(element, options) {\n                var that = this,\n                    domElement = element[0];\n\n                that.capture = false;\n\n                if (domElement.addEventListener) {\n                    $.each(kendo.eventMap.down.split(\" \"), function() {\n                        domElement.addEventListener(this, that._press.bind(that), true);\n                    });\n                    $.each(kendo.eventMap.up.split(\" \"), function() {\n                        domElement.addEventListener(this, that._release.bind(that), true);\n                    });\n                } else {\n                    $.each(kendo.eventMap.down.split(\" \"), function() {\n                        domElement.attachEvent(this, that._press.bind(that));\n                    });\n                    $.each(kendo.eventMap.up.split(\" \"), function() {\n                        domElement.attachEvent(this, that._release.bind(that));\n                    });\n                }\n\n                Observable.fn.init.call(that);\n\n                that.bind([\"press\", \"release\"], options || {});\n            },\n\n            captureNext: function() {\n                this.capture = true;\n            },\n\n            cancelCapture: function() {\n                this.capture = false;\n            },\n\n            _press: function(e) {\n                var that = this;\n                that.trigger(\"press\");\n                if (that.capture) {\n                    e.preventDefault();\n                }\n            },\n\n            _release: function(e) {\n                var that = this;\n                that.trigger(\"release\");\n\n                if (that.capture) {\n                    e.preventDefault();\n                    that.cancelCapture();\n                }\n            }\n        });\n\n        var PaneDimension = Observable.extend({\n            init: function(options) {\n                var that = this;\n                Observable.fn.init.call(that);\n\n                that.forcedEnabled = false;\n\n                $.extend(that, options);\n\n                that.scale = 1;\n\n                if (that.horizontal) {\n                    that.measure = \"offsetWidth\";\n                    that.scrollSize = \"scrollWidth\";\n                    that.axis = \"x\";\n                } else {\n                    that.measure = \"offsetHeight\";\n                    that.scrollSize = \"scrollHeight\";\n                    that.axis = \"y\";\n                }\n            },\n\n            makeVirtual: function() {\n                $.extend(this, {\n                    virtual: true,\n                    forcedEnabled: true,\n                    _virtualMin: 0,\n                    _virtualMax: 0\n                });\n            },\n\n            virtualSize: function(min, max) {\n                if (this._virtualMin !== min || this._virtualMax !== max) {\n                    this._virtualMin = min;\n                    this._virtualMax = max;\n                    this.update();\n                }\n            },\n\n            outOfBounds: function(offset) {\n                return offset > this.max || offset < this.min;\n            },\n\n            forceEnabled: function() {\n                this.forcedEnabled = true;\n            },\n\n            getSize: function() {\n                return this.container[0][this.measure];\n            },\n\n            getTotal: function() {\n                return this.element[0][this.scrollSize];\n            },\n\n            rescale: function(scale) {\n                this.scale = scale;\n            },\n\n            update: function(silent) {\n                var that = this,\n                    total = that.virtual ? that._virtualMax : that.getTotal(),\n                    scaledTotal = total * that.scale,\n                    size = that.getSize();\n\n                if (total === 0 && !that.forcedEnabled) {\n                    return; // we are not visible.\n                }\n\n                that.max = that.virtual ? -that._virtualMin : 0;\n                that.size = size;\n                that.total = scaledTotal;\n                that.min = Math.min(that.max, size - scaledTotal);\n                that.minScale = size / total;\n                that.centerOffset = (scaledTotal - size) / 2;\n\n                that.enabled = that.forcedEnabled || (scaledTotal > size);\n\n                if (!silent) {\n                    that.trigger(CHANGE, that);\n                }\n            }\n        });\n\n        var PaneDimensions = Observable.extend({\n            init: function(options) {\n                var that = this;\n\n                Observable.fn.init.call(that);\n\n                that.x = new PaneDimension(extend({ horizontal: true }, options));\n                that.y = new PaneDimension(extend({ horizontal: false }, options));\n                that.container = options.container;\n                that.forcedMinScale = options.minScale;\n                that.maxScale = options.maxScale || 100;\n\n                that.bind(CHANGE, options);\n            },\n\n            rescale: function(newScale) {\n                this.x.rescale(newScale);\n                this.y.rescale(newScale);\n                this.refresh();\n            },\n\n            centerCoordinates: function() {\n                return { x: Math.min(0, -this.x.centerOffset), y: Math.min(0, -this.y.centerOffset) };\n            },\n\n            refresh: function() {\n                var that = this;\n                that.x.update();\n                that.y.update();\n                that.enabled = that.x.enabled || that.y.enabled;\n                that.minScale = that.forcedMinScale || Math.min(that.x.minScale, that.y.minScale);\n                that.fitScale = Math.max(that.x.minScale, that.y.minScale);\n                that.trigger(CHANGE);\n            }\n        });\n\n        var PaneAxis = Observable.extend({\n            init: function(options) {\n                var that = this;\n                extend(that, options);\n                Observable.fn.init.call(that);\n            },\n\n            outOfBounds: function() {\n                return this.dimension.outOfBounds(this.movable[this.axis]);\n            },\n\n            dragMove: function(delta) {\n                var that = this,\n                    dimension = that.dimension,\n                    axis = that.axis,\n                    movable = that.movable,\n                    position = movable[axis] + delta;\n\n                if (!dimension.enabled) {\n                    return;\n                }\n\n                if ((position < dimension.min && delta < 0) || (position > dimension.max && delta > 0)) {\n                    delta *= that.resistance;\n                }\n\n                movable.translateAxis(axis, delta);\n                that.trigger(CHANGE, that);\n            }\n        });\n\n        var Pane = Class.extend({\n\n            init: function(options) {\n                var that = this,\n                    x,\n                    y,\n                    resistance,\n                    movable;\n\n                extend(that, { elastic: true }, options);\n\n                resistance = that.elastic ? 0.5 : 0;\n                movable = that.movable;\n\n                that.x = x = new PaneAxis({\n                    axis: \"x\",\n                    dimension: that.dimensions.x,\n                    resistance: resistance,\n                    movable: movable\n                });\n\n                that.y = y = new PaneAxis({\n                    axis: \"y\",\n                    dimension: that.dimensions.y,\n                    resistance: resistance,\n                    movable: movable\n                });\n\n                that.userEvents.bind([\"press\", \"move\", \"end\", \"gesturestart\", \"gesturechange\"], {\n                    gesturestart: function(e) {\n                        that.gesture = e;\n                        that.offset = that.dimensions.container.offset();\n                    },\n\n                    press: function(e) {\n                        if ($(e.event.target).closest(\"a\").is(\"[data-navigate-on-press=true]\")) {\n                            e.sender.cancel();\n                        }\n                    },\n\n                    gesturechange: function(e) {\n                        var previousGesture = that.gesture,\n                            previousCenter = previousGesture.center,\n\n                            center = e.center,\n\n                            scaleDelta = e.distance / previousGesture.distance,\n\n                            minScale = that.dimensions.minScale,\n                            maxScale = that.dimensions.maxScale,\n                            coordinates;\n\n                        if (movable.scale <= minScale && scaleDelta < 1) {\n                            // Resist shrinking. Instead of shrinking from 1 to 0.5, it will shrink to 0.5 + (1 /* minScale */ - 0.5) * 0.8 = 0.9;\n                            scaleDelta += (1 - scaleDelta) * 0.8;\n                        }\n\n                        if (movable.scale * scaleDelta >= maxScale) {\n                            scaleDelta = maxScale / movable.scale;\n                        }\n\n                        var offsetX = movable.x + that.offset.left,\n                            offsetY = movable.y + that.offset.top;\n\n                        coordinates = {\n                            x: (offsetX - previousCenter.x) * scaleDelta + center.x - offsetX,\n                            y: (offsetY - previousCenter.y) * scaleDelta + center.y - offsetY\n                        };\n\n                        movable.scaleWith(scaleDelta);\n\n                        x.dragMove(coordinates.x);\n                        y.dragMove(coordinates.y);\n\n                        that.dimensions.rescale(movable.scale);\n                        that.gesture = e;\n                        e.preventDefault();\n                    },\n\n                    move: function(e) {\n                        if (e.event.target.tagName.match(/textarea|input/i)) {\n                            return;\n                        }\n\n                        if (x.dimension.enabled || y.dimension.enabled) {\n                            x.dragMove(e.x.delta);\n                            y.dragMove(e.y.delta);\n                            e.preventDefault();\n                        } else {\n                            e.touch.skip();\n                        }\n                    },\n\n                    end: function(e) {\n                        e.preventDefault();\n                    }\n                });\n            }\n        });\n\n        var TRANSFORM_STYLE = support.transitions.prefix + \"Transform\",\n            translate;\n\n\n        if (support.hasHW3D) {\n            translate = function(x, y, scale) {\n                return \"translate3d(\" + x + \"px,\" + y + \"px,0) scale(\" + scale + \")\";\n            };\n        } else {\n            translate = function(x, y, scale) {\n                return \"translate(\" + x + \"px,\" + y + \"px) scale(\" + scale + \")\";\n            };\n        }\n\n        var Movable = Observable.extend({\n            init: function(element) {\n                var that = this;\n\n                Observable.fn.init.call(that);\n\n                that.element = $(element);\n                that.element[0].style.webkitTransformOrigin = \"left top\";\n                that.x = 0;\n                that.y = 0;\n                that.scale = 1;\n                that._saveCoordinates(translate(that.x, that.y, that.scale));\n            },\n\n            translateAxis: function(axis, by) {\n                this[axis] += by;\n                this.refresh();\n            },\n\n            scaleTo: function(scale) {\n                this.scale = scale;\n                this.refresh();\n            },\n\n            scaleWith: function(scaleDelta) {\n                this.scale *= scaleDelta;\n                this.refresh();\n            },\n\n            translate: function(coordinates) {\n                this.x += coordinates.x;\n                this.y += coordinates.y;\n                this.refresh();\n            },\n\n            moveAxis: function(axis, value) {\n                this[axis] = value;\n                this.refresh();\n            },\n\n            moveTo: function(coordinates) {\n                extend(this, coordinates);\n                this.refresh();\n            },\n\n            refresh: function() {\n                var that = this,\n                    x = that.x,\n                    y = that.y,\n                    newCoordinates;\n\n                if (that.round) {\n                    x = Math.round(x);\n                    y = Math.round(y);\n                }\n\n                newCoordinates = translate(x, y, that.scale);\n\n                if (newCoordinates != that.coordinates) {\n                    if (kendo.support.browser.msie && kendo.support.browser.version < 10) {\n                        that.element[0].style.position = \"absolute\";\n                        that.element[0].style.left = that.x + \"px\";\n                        that.element[0].style.top = that.y + \"px\";\n\n                    } else {\n                        that.element[0].style[TRANSFORM_STYLE] = newCoordinates;\n                    }\n                    that._saveCoordinates(newCoordinates);\n                    that.trigger(CHANGE);\n                }\n            },\n\n            _saveCoordinates: function(coordinates) {\n                this.coordinates = coordinates;\n            }\n        });\n\n        function destroyDroppable(collection, widget) {\n            var groupName = widget.options.group,\n            droppables = collection[groupName],\n            i;\n\n            Widget.fn.destroy.call(widget);\n\n            if (droppables.length > 1) {\n                for (i = 0; i < droppables.length; i++) {\n                    if (droppables[i] == widget) {\n                        droppables.splice(i, 1);\n                        break;\n                    }\n                }\n            } else {\n                droppables.length = 0; // WTF, porting this from the previous destroyGroup\n                delete collection[groupName];\n            }\n        }\n\n        var DropTarget = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                var group = that.options.group;\n\n                if (!(group in dropTargets)) {\n                    dropTargets[group] = [ that ];\n                } else {\n                    dropTargets[group].push( that );\n                }\n            },\n\n            events: [\n                DRAGENTER,\n                DRAGLEAVE,\n                DROP\n            ],\n\n            options: {\n                name: \"DropTarget\",\n                group: \"default\"\n            },\n\n            destroy: function() {\n                destroyDroppable(dropTargets, this);\n            },\n\n            _trigger: function(eventName, e) {\n                var that = this,\n                    draggable = draggables[that.options.group];\n\n                if (draggable) {\n                    return that.trigger(eventName, extend({}, e.event, {\n                               draggable: draggable,\n                               dropTarget: e.dropTarget\n                           }));\n                }\n            },\n\n            _over: function(e) {\n                this._trigger(DRAGENTER, e);\n            },\n\n            _out: function(e) {\n                this._trigger(DRAGLEAVE, e);\n            },\n\n            _drop: function(e) {\n                var that = this,\n                    draggable = draggables[that.options.group];\n\n                if (draggable) {\n                    draggable.dropped = !that._trigger(DROP, e);\n                }\n            }\n        });\n\n        DropTarget.destroyGroup = function(groupName) {\n            var group = dropTargets[groupName] || dropAreas[groupName],\n                i;\n\n            if (group) {\n                for (i = 0; i < group.length; i++) {\n                    Widget.fn.destroy.call(group[i]);\n                }\n\n                group.length = 0;\n                delete dropTargets[groupName];\n                delete dropAreas[groupName];\n            }\n        };\n\n        DropTarget._cache = dropTargets;\n\n        var DropTargetArea = DropTarget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                var group = that.options.group;\n\n                if (!(group in dropAreas)) {\n                    dropAreas[group] = [ that ];\n                } else {\n                    dropAreas[group].push( that );\n                }\n            },\n\n            destroy: function() {\n                destroyDroppable(dropAreas, this);\n            },\n\n            options: {\n                name: \"DropTargetArea\",\n                group: \"default\",\n                filter: null\n            }\n        });\n\n        var Draggable = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._activated = false;\n\n                if (this.options.clickMoveClick) {\n                    that.clickMoveClick = new ClickMoveClick(that.element, {\n                        global: true,\n                        filter: that.options.filter,\n                        start: that._startClickMoveClick.bind(that),\n                        move: that._drag.bind(that),\n                        end: that._end.bind(that),\n                        cancel: that._onCancel.bind(that)\n                    });\n                }\n\n                that.userEvents = new UserEvents(that.element, {\n                    global: true,\n                    allowSelection: true,\n                    filter: that.options.filter,\n                    threshold: that.options.distance,\n                    start: that._start.bind(that),\n                    hold: that._hold.bind(that),\n                    move: that._drag.bind(that),\n                    end: that._end.bind(that),\n                    cancel: that._onCancel.bind(that),\n                    select: that._select.bind(that),\n                    press: that._press.bind(that),\n                });\n\n                if (kendo.support.touch) {\n                    that.element.find(that.options.filter).css('touch-action', 'none');\n                }\n\n                that._afterEndHandler = that._afterEnd.bind(that);\n                that._captureEscape = that._captureEscape.bind(that);\n            },\n\n            events: [\n                HOLD,\n                DRAGSTART,\n                DRAG,\n                DRAGEND,\n                DRAGCANCEL,\n                HINTDESTROYED\n            ],\n\n            options: {\n                name: \"Draggable\",\n                distance: ( kendo.support.touch ? 0 : 5),\n                group: \"default\",\n                cursorOffset: null,\n                axis: null,\n                container: null,\n                filter: null,\n                ignore: null,\n                holdToDrag: false,\n                showHintOnHold: false,\n                autoScroll: false,\n                dropped: false,\n                clickMoveClick: false,\n                preventOsHoldFeatures: false\n            },\n\n            cancelHold: function() {\n                this._activated = false;\n            },\n\n            _captureEscape: function(e) {\n                var that = this;\n\n                if (e.keyCode === kendo.keys.ESC) {\n                    that.userEvents.cancel();\n\n                    if (that.clickMoveClick) {\n                        that.clickMoveClick.cancel();\n                    }\n\n                    this._trigger(DRAGCANCEL, { event: e });\n                }\n            },\n\n            _updateHint: function(e) {\n                var that = this,\n                    coordinates,\n                    options = that.options,\n                    boundaries = that.boundaries,\n                    axis = options.axis,\n                    cursorOffset = that.options.cursorOffset;\n\n                if (cursorOffset) {\n                   coordinates = { left: e.x.location + cursorOffset.left, top: e.y.location + cursorOffset.top };\n                } else {\n                    if (e.x.delta !== 0 || e.y.delta !== 0) {\n                        that.hintOffset.left += e.x.delta;\n                        that.hintOffset.top += e.y.delta;\n                        coordinates = $.extend({}, that.hintOffset);\n                    } else {\n                        that.hintOffset.left = e.x.startLocation + e.x.initialDelta;\n                        that.hintOffset.top = e.y.startLocation + e.y.initialDelta;\n                        coordinates = $.extend({}, that.hintOffset);\n                    }\n                }\n\n                if (boundaries) {\n                    coordinates.top = within(coordinates.top, boundaries.y);\n                    coordinates.left = within(coordinates.left, boundaries.x);\n                }\n\n                if (axis === \"x\") {\n                    delete coordinates.top;\n                } else if (axis === \"y\") {\n                    delete coordinates.left;\n                }\n\n                that.hint.css(coordinates);\n            },\n\n            _shouldIgnoreTarget: function(target) {\n                var ignoreSelector = this.options.ignore;\n                return ignoreSelector && $(target).is(ignoreSelector);\n            },\n\n            _select: function(e) {\n                if (!this._shouldIgnoreTarget(e.event.target)) {\n                    e.preventDefault();\n                }\n            },\n\n            _startClickMoveClick: function(e) {\n                this._activated = true;\n\n                this._start(e);\n            },\n\n            _hint: function() {\n                var that = this,\n                    hint = that.options.hint;\n\n                if (hint) {\n                    if (that.hint) {\n                        that.hint.stop(true, true).remove();\n                    }\n\n                    that.hint = kendo.isFunction(hint) ? $(hint.call(that, that.currentTarget)) : hint;\n\n                    var offset = getOffset(that.currentTarget);\n                    that.hintOffset = offset;\n\n                    that.hint.css( {\n                        position: \"absolute\",\n                        zIndex: 20000, // the Window's z-index is 10000 and can be raised because of z-stacking\n                        left: offset.left,\n                        top: offset.top\n                    })\n                    .appendTo(document.body);\n                }\n            },\n\n            _start: function(e) {\n                var that = this,\n                    options = that.options,\n                    container = options.container ? $(options.container) : null,\n                    hint = options.hint;\n\n                if (this._shouldIgnoreTarget(e.touch.initialTouch) || (options.holdToDrag && !that._activated)) {\n                    that.userEvents.cancel();\n                    return;\n                }\n\n                that.currentTarget = e.target;\n                that.currentTargetOffset = getOffset(that.currentTarget);\n\n                if (hint) {\n                    that._hint();\n                }\n\n                draggables[options.group] = that;\n\n                that.dropped = false;\n\n                if (container) {\n                    that.boundaries = containerBoundaries(container, that.hint);\n                }\n\n                $(document).on(KEYUP, that._captureEscape);\n\n                if (that._trigger(DRAGSTART, e)) {\n                    that.userEvents.cancel();\n\n                    if (that.clickMoveClick) {\n                        that.clickMoveClick.cancel();\n                    }\n\n                    that._afterEnd();\n                }\n\n                that.userEvents.capture();\n            },\n\n            _hold: function(e) {\n                this.currentTarget = e.target;\n\n                if (this._trigger(HOLD, e)) {\n                    this.userEvents.cancel();\n                } else {\n                    this._activated = true;\n                    if (this.options.showHintOnHold) {\n                        this._hint();\n                    }\n                }\n            },\n\n            _drag: function(e) {\n                e.preventDefault();\n\n                var cursorElement = this._elementUnderCursor(e);\n\n                if (this.options.autoScroll && this._cursorElement !== cursorElement) {\n                    this._scrollableParent = findScrollableParent(cursorElement);\n                    this._cursorElement = cursorElement;\n                }\n\n                this._lastEvent = e;\n                this._processMovement(e, cursorElement);\n\n                if (this.options.autoScroll) {\n                    // chrome seems to trigger mousemove when mouse is moved outside of the window (over the Chrome), too.\n                    if (this._scrollableParent[0]) {\n                        var velocity = autoScrollVelocity(e.x.location, e.y.location, scrollableViewPort(this._scrollableParent));\n\n\n                        this._scrollCompenstation = $.extend({}, this.hintOffset);\n                        this._scrollVelocity = velocity;\n\n                        if (velocity.y === 0 && velocity.x === 0) {\n                            clearInterval(this._scrollInterval);\n                            this._scrollInterval = null;\n                        } else if (!this._scrollInterval) {\n                            this._scrollInterval = setInterval(this._autoScroll.bind(this), 50);\n                        }\n                    }\n                }\n\n                if (this.hint) {\n                    this._updateHint(e);\n                }\n            },\n\n            _processMovement: function(e, cursorElement) {\n                this._withDropTarget(cursorElement, function(target, targetElement) {\n                    if (!target) {\n                        if (lastDropTarget) {\n                            lastDropTarget._trigger(DRAGLEAVE, extend(e, { dropTarget: $(lastDropTarget.targetElement) }));\n                            lastDropTarget = null;\n                        }\n                        return;\n                    }\n\n                    if (lastDropTarget) {\n                        if (targetElement === lastDropTarget.targetElement) {\n                            return;\n                        }\n\n                        lastDropTarget._trigger(DRAGLEAVE, extend(e, { dropTarget: $(lastDropTarget.targetElement) }));\n                    }\n\n                    target._trigger(DRAGENTER, extend(e, { dropTarget: $(targetElement) }));\n                    lastDropTarget = extend(target, { targetElement: targetElement });\n                });\n\n                this._trigger(DRAG, extend(e, { dropTarget: lastDropTarget, elementUnderCursor: cursorElement }));\n            },\n\n            _autoScroll: function() {\n                var parent = this._scrollableParent[0],\n                    velocity = this._scrollVelocity,\n                    compensation = this._scrollCompenstation;\n\n                if (!parent) {\n                    return;\n                }\n\n                var cursorElement = this._elementUnderCursor(this._lastEvent);\n                this._processMovement(this._lastEvent, cursorElement);\n\n                var yIsScrollable, xIsScrollable;\n\n                var isRootNode = parent === scrollableRoot()[0];\n\n                if (isRootNode) {\n                    yIsScrollable = document.body.scrollHeight > $window.height();\n                    xIsScrollable = document.body.scrollWidth > $window.width();\n                } else {\n                    yIsScrollable = parent.offsetHeight <= parent.scrollHeight;\n                    xIsScrollable = parent.offsetWidth <= parent.scrollWidth;\n                }\n\n                var yDelta = parent.scrollTop + velocity.y;\n                var yInBounds = yIsScrollable && yDelta > 0 && yDelta < parent.scrollHeight;\n\n                var xDelta = parent.scrollLeft + velocity.x;\n                var xInBounds = xIsScrollable && xDelta > 0 && xDelta < parent.scrollWidth;\n\n                if (yInBounds) {\n                    parent.scrollTop += velocity.y;\n                } else if (yIsScrollable && yDelta < 0) {\n                    parent.scrollTop = 0;\n                }\n\n                if (xInBounds) {\n                    parent.scrollLeft += velocity.x;\n                } else if (xIsScrollable && xDelta < 0) {\n                    parent.scrollLeft = 0;\n                }\n\n                if (this.hint && isRootNode && (xInBounds || yInBounds)) {\n                    if (yInBounds) {\n                        compensation.top += velocity.y;\n                    }\n\n                    if (xInBounds) {\n                        compensation.left += velocity.x;\n                    }\n\n                    this.hint.css(compensation);\n                }\n            },\n\n            _press: function(ev) {\n                if (this.options.preventOsHoldFeatures) {\n                    ev.target.css('-webkit-user-select', 'none');\n                    ev.target.attr('unselectable', 'on');\n                    ev.target.one('contextmenu', (ev) => {\n                        ev.preventDefault();\n                    });\n                }\n            },\n\n            _end: function(e) {\n                this._withDropTarget(this._elementUnderCursor(e), function(target, targetElement) {\n                    if (target) {\n                        target._drop(extend({}, e, { dropTarget: $(targetElement) }));\n                        lastDropTarget = null;\n                    }\n                });\n\n                clearInterval(this._scrollInterval);\n                this._scrollInterval = null;\n                this._cancel(this._trigger(DRAGEND, e));\n            },\n\n            _onCancel: function(e) {\n                this._cancel();\n                this._trigger(DRAGCANCEL, { event: e });\n            },\n\n            _cancel: function(isDefaultPrevented) {\n                var that = this;\n\n                that._scrollableParent = null;\n                this._cursorElement = null;\n                clearInterval(this._scrollInterval);\n                that._activated = false;\n\n                if (that.hint && !that.dropped) {\n                    setTimeout(function() {\n                        that.hint.stop(true, true);\n\n                        if (isDefaultPrevented) {\n                            that._afterEndHandler();\n                        } else {\n                            that.hint.animate(that.currentTargetOffset, \"fast\", that._afterEndHandler);\n                        }\n                    }, 0);\n                } else {\n                    that._afterEnd();\n                }\n            },\n\n            _trigger: function(eventName, e) {\n                var that = this;\n\n                return that.trigger(\n                    eventName, extend(\n                    {},\n                    e.event,\n                    {\n                        x: e.x,\n                        y: e.y,\n                        currentTarget: that.currentTarget,\n                        initialTarget: e.touch ? e.touch.initialTouch : null,\n                        dropTarget: e.dropTarget,\n                        elementUnderCursor: e.elementUnderCursor,\n                        clickMoveClick: e.clickMoveClick\n                    }\n                ));\n            },\n\n            _elementUnderCursor: function(e) {\n                var target = elementUnderCursor(e),\n                    hint = this.hint;\n\n                if (hint && contains(hint[0], target)) {\n                    hint.hide();\n                    target = elementUnderCursor(e);\n                    // IE8 does not return the element in iframe from first attempt\n                    if (!target) {\n                        target = elementUnderCursor(e);\n                    }\n                    hint.show();\n                }\n\n                return target;\n            },\n\n            _withDropTarget: function(element, callback) {\n                var result,\n                    group = this.options.group,\n                    targets = dropTargets[group],\n                    areas = dropAreas[group];\n\n                if (targets && targets.length || areas && areas.length) {\n                    result = checkTarget(element, targets, areas);\n\n                    if (result) {\n                        callback(result.target, result.targetElement);\n                    } else {\n                        callback();\n                    }\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n\n                that._afterEnd();\n\n                that.userEvents.destroy();\n\n                if (that.clickMoveClick) {\n                    that.clickMoveClick.destroy();\n                }\n\n                this._scrollableParent = null;\n                this._cursorElement = null;\n                clearInterval(this._scrollInterval);\n\n                that.currentTarget = null;\n            },\n\n            _afterEnd: function() {\n                var that = this;\n\n                if (that.hint) {\n                    that.hint.remove();\n                }\n\n                delete draggables[that.options.group];\n\n                that.trigger(\"destroy\");\n                that.trigger(HINTDESTROYED);\n                $(document).off(KEYUP, that._captureEscape);\n            }\n        });\n\n        kendo.ui.plugin(DropTarget);\n        kendo.ui.plugin(DropTargetArea);\n        kendo.ui.plugin(Draggable);\n        kendo.TapCapture = TapCapture;\n        kendo.containerBoundaries = containerBoundaries;\n\n        extend(kendo.ui, {\n            Pane: Pane,\n            PaneDimensions: PaneDimensions,\n            Movable: Movable\n        });\n\n        function scrollableViewPort(element) {\n            var root = scrollableRoot()[0],\n                offset,\n                top,\n                left;\n\n            if (element[0] === root) {\n                top = root.scrollTop;\n                left = root.scrollLeft;\n\n                return {\n                    top: top,\n                    left: left,\n                    bottom: top + $window.height(),\n                    right: left + $window.width()\n                };\n            } else {\n                offset = element.offset();\n                offset.bottom = offset.top + element.height();\n                offset.right = offset.left + element.width();\n                return offset;\n            }\n        }\n\n        function scrollableRoot() {\n            return $(kendo.support.browser.edge || kendo.support.browser.safari ? document.body : document.documentElement);\n        }\n\n        function findScrollableParent(element) {\n            var root = scrollableRoot();\n\n            if (!element || element === document.body || element === document.documentElement) {\n                return root;\n            }\n\n            var parent = $(element)[0];\n\n            while (parent && !kendo.isScrollable(parent) && parent !== document.body) {\n                parent = parent.parentNode;\n            }\n\n            if (parent === document.body) {\n                return root;\n            }\n\n            return $(parent);\n        }\n\n        function autoScrollVelocity(mouseX, mouseY, rect) {\n            var velocity = { x: 0, y: 0 };\n\n            var AUTO_SCROLL_AREA = 50;\n\n            if (mouseX - rect.left < AUTO_SCROLL_AREA) {\n                velocity.x = -(AUTO_SCROLL_AREA - (mouseX - rect.left));\n            } else if (rect.right - mouseX < AUTO_SCROLL_AREA) {\n                velocity.x = AUTO_SCROLL_AREA - (rect.right - mouseX);\n            }\n\n            if (mouseY - rect.top < AUTO_SCROLL_AREA) {\n                velocity.y = -(AUTO_SCROLL_AREA - (mouseY - rect.top));\n            } else if (rect.bottom - mouseY < AUTO_SCROLL_AREA) {\n                velocity.y = AUTO_SCROLL_AREA - (rect.bottom - mouseY);\n            }\n\n            return velocity;\n        }\n\n        // export for testing\n        kendo.ui.Draggable.utils = {\n            autoScrollVelocity: autoScrollVelocity,\n            scrollableViewPort: scrollableViewPort,\n            findScrollableParent: findScrollableParent\n        };\n\n     })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}