{"version":3,"sources":["raw-js/kendo.label.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendolabel","js","this","kendo","window","$","jQuery","Widget","ui","isFunction","Label","extend","options","name","widget","init","element","that","fn","call","floating","_floatingLabel","_label","destroy","floatingLabel","_unwrapFloating","wrapper","unwrap","_floatingLabelContainer","setOptions","removeFloating","isPlainObject","content","remove","id","attr","labelText","guid","addClass","text","beforeElm","refresh","wrap","parent","FloatingLabel","plugin"],"mappings":";;;;;;;;;;;;;;;CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,EAAAG,QAAA,iBAAAA,QAAA,2BACA,mBAAAC,QAAAA,OAAAC,IAAAD,OAAA,CAAA,iBAAA,2BAAAJ,KACAD,EAAA,oBAAAO,WAAAA,WAAAP,GAAAQ,MAAAC,WAAAT,EAAAS,YAAA,CAAA,EAAAT,EAAAS,WAAAC,GAAAT,IACA,CAJA,CAIAU,MAAA,WAUA,MAAAC,EAAAC,OAAAD,MACAE,EAAAF,EAAAG,OAEAC,EADAJ,EAAAK,GACAD,OACAE,EAAAN,EAAAM,WAKA,IAAAC,EAAAH,EAAAI,OAAA,CACAC,QAAA,CACAC,KAAA,QACAC,OAAA,MAGAC,KAAA,SAAAC,EAAAJ,GACA,IAAAK,EAAAf,KAEAc,EAAAA,GAAAX,EAAA,mBAEAE,EAAAW,GAAAH,KAAAI,KAAAF,EAAAD,EAAAJ,GACAA,EAAAP,EAAAM,QAAA,EAAA,CAAA,EAAAC,GAEAK,EAAAH,OAAAF,EAAAE,OAEAF,EAAAQ,UACAH,EAAAI,iBAGAJ,EAAAK,QACA,EAEAC,QAAA,WACArB,KAAAsB,eACAtB,KAAAsB,cAAAD,UAEAhB,EAAAW,GAAAK,QAAAJ,KAAAjB,KACA,EAEAuB,gBAAA,WACA,IAAAR,EAAAf,KAEAe,EAAAO,gBACAP,EAAAO,cAAAD,UACAN,EAAAH,OAAAY,QAAAC,OAAAV,EAAAW,yBAEA,EAEAC,WAAA,SAAAjB,GACA,IAAAK,EAAAf,KACA4B,GAAA,GAEA,iBAAA,GAAAzB,EAAA0B,cAAAnB,KAAA,IAAAA,EAAAQ,YACAU,GAAA,GAGAlB,EAAAP,EAAA0B,cAAAnB,GAAAA,EAAA,CAAAoB,QAAApB,GAEAL,EAAAW,GAAAW,WAAAV,KAAAF,EAAAL,GAEAkB,GAAAb,EAAAO,eACAP,EAAAQ,kBACAR,EAAAO,cAAAD,iBACAN,EAAAO,gBACA,IAAAZ,EAAAQ,UAAAH,EAAAO,gBACAP,EAAAD,QAAAiB,SACAhB,EAAAI,kBAGAJ,EAAAK,QACA,EAEAA,OAAA,WACA,IAAAL,EAAAf,KACAc,EAAAC,EAAAH,OAAAE,QACAJ,EAAAK,EAAAL,QACAsB,EAAAlB,EAAAmB,KAAA,MACAC,EAAAxB,EAAAoB,QACAZ,EAAAR,EAAAQ,WAAA,EAEAX,EAAA2B,KACAA,EAAAA,EAAAjB,KAAAF,IAGAmB,IACAA,EAAA,IAGAF,IACAA,EAAAtB,EAAAC,KAAA,IAAAV,EAAAkC,OACArB,EAAAmB,KAAA,KAAAD,IAGAjB,EAAAD,QAAAsB,SAAAlB,EAtFA,mBADA,yBAwFAe,KAAA,MAAAD,GACAK,KAAAH,GACAhB,EAAA,cAAA,gBAAAH,EAAAL,QAAA4B,WAAAvB,EAAAH,OAAAY,SAEAT,EAAAO,eACAP,EAAAO,cAAAiB,SAEA,EAEApB,eAAA,WACA,IAAAJ,EAAAf,KACAU,EAAAP,EAAAM,OAAA,CAAA,EAAAM,EAAAL,gBAGAA,EAAAC,MAEAD,EAAAQ,WAAA,KAGAH,EAAAW,wBAAAX,EAAAH,OAAAY,QAAAgB,KAAA,iBAAAC,SACA1B,EAAAO,cAAA,IAAArB,EAAAK,GAAAoC,cAAA3B,EAAAW,wBAAAvB,EAAAM,OAAA,CAAA,EAAAC,IAEA,IAKA,OAFAT,EAAAK,GAAAqC,OAAAnC,GAEAP,CAEA","file":"kendo.label.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.floatinglabel.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.floatinglabel'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendolabel = global.kendolabel || {}, global.kendolabel.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: 'label',\n        name: 'Label',\n        category: 'framework',\n        description: 'Abstraction of label rendering for inputs',\n        depends: ['core', 'floatinglabel'],\n        hidden: true\n    };\n\n    const kendo = window.kendo;\n    const $ = kendo.jQuery;\n    const ui = kendo.ui;\n    const Widget = ui.Widget;\n    const isFunction = kendo.isFunction;\n\n    const LABELCLASSES = \"k-label k-input-label\";\n    const FLOATINGLABELCLASS = \"k-floating-label\";\n\n    var Label = Widget.extend({\n        options: {\n            name: \"Label\",\n            widget: null\n        },\n\n        init: function(element, options) {\n            var that = this;\n\n            element = element || $(\"<label></label>\");\n\n            Widget.fn.init.call(that, element, options);\n            options = $.extend(true, {}, options);\n\n            that.widget = options.widget;\n\n            if (options.floating) {\n                that._floatingLabel();\n            }\n\n            that._label();\n        },\n\n        destroy: function() {\n            if (this.floatingLabel) {\n                this.floatingLabel.destroy();\n            }\n            Widget.fn.destroy.call(this);\n        },\n\n        _unwrapFloating: function() {\n            var that = this;\n\n            if (that.floatingLabel) {\n                that.floatingLabel.destroy();\n                that.widget.wrapper.unwrap(that._floatingLabelContainer);\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            var removeFloating = false;\n\n            if (typeof(options) === 'string' || ($.isPlainObject(options) && options.floating === false )) {\n                removeFloating = true;\n            }\n\n            options = $.isPlainObject(options) ? options : { content: options };\n\n            Widget.fn.setOptions.call(that, options);\n\n            if (removeFloating && that.floatingLabel) {\n                that._unwrapFloating();\n                that.floatingLabel.destroy();\n                delete that.floatingLabel;\n            } else if (options.floating === true && !that.floatingLabel) {\n                that.element.remove();\n                that._floatingLabel();\n            }\n\n            that._label();\n        },\n\n        _label: function() {\n            var that = this;\n            var element = that.widget.element;\n            var options = that.options;\n            var id = element.attr(\"id\");\n            var labelText = options.content;\n            var floating = options.floating || false;\n\n            if (isFunction(labelText)) {\n                labelText = labelText.call(that);\n            }\n\n            if (!labelText) {\n                labelText = \"\";\n            }\n\n            if (!id) {\n                id = options.name + \"_\" + kendo.guid();\n                element.attr(\"id\", id);\n            }\n\n            that.element.addClass(floating ? FLOATINGLABELCLASS : LABELCLASSES)\n                .attr(\"for\", id)\n                .text(labelText)\n                [floating ? \"insertAfter\" : \"insertBefore\"](that.options.beforeElm || that.widget.wrapper);\n\n            if (that.floatingLabel) {\n                that.floatingLabel.refresh();\n            }\n        },\n\n        _floatingLabel: function() {\n            var that = this;\n            var options = $.extend({}, that.options);\n            var floating;\n\n            delete options.name;\n\n            floating = options.floating || false;\n\n            if (floating) {\n                that._floatingLabelContainer = that.widget.wrapper.wrap(\"<span></span>\").parent();\n                that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, $.extend({}, options));\n            }\n        }\n    });\n\n    kendo.ui.plugin(Label);\n\n    return kendo;\n\n}));\n"]}