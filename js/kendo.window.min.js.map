{"version":3,"file":"kendo.window.min.js","names":["factory","define","amd","$","undefined$1","templates","kendo","window","Widget","ui","TabKeyTrap","Popup","Draggable","isPlainObject","activeElement","_activeElement","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","each","template","BODY","NS","MODAL_NS","KWINDOW","KWINDOWTITLE","KWINDOWTITLEBAR","KWINDOWCONTENT","KWINDOWRESIZEHANDLES","KOVERLAY","KWINDOWMINIMIZED","KCONTENTFRAME","LOADINGICONCLASS","KHOVERSTATE","KFOCUSEDSTATE","MAXIMIZEDSTATE","INLINE_FLEX","VISIBLE","HIDDEN","CURSOR","OPEN","ACTIVATE","DEACTIVATE","CLOSE","REFRESH","RESIZESTART","RESIZEEND","DRAGSTART","DRAGEND","RESTORE","ERROR","OVERFLOW","DATADOCOVERFLOWRULE","ZINDEX","MINIMIZE_MAXIMIZEICONSELECTORS","KPINICONCLASSSELECTOR","KUNPINICONCLASSSELECTOR","PIN_UNPINICONCLASSSELECTOR","TITLEBAR_BUTTONSSELECTOR","REFRESHICONSELECTOR","WINDOWEVENTSHANDLED","zero","isLocalUrl","SIZE","small","medium","large","defined","x","toInt","element","property","parseInt","css","constrain","value","low","high","isNaN","toString","indexOf","Math","max","min","Infinity","executableScript","this","type","toLowerCase","getPosition","elem","result","top","offsetTop","left","offsetLeft","parent","offsetParent","parentOverflowX","parentOverflowY","scrollTop","scrollLeft","Window","init","options","wrapper","visibility","display","position","content","windowContent","globalWindow","id","that","offset","suppressActions","actions","length","fn","call","appendTo","containment","draggable","first","url","find","filter","remove","is","document","body","contains","visible","closest","themeColor","addClass","getValidCssClass","attr","_createWindow","title","_dimensions","_footerTemplate","append","_footerMessages","minTop","minLeft","maxTop","maxLeft","_position","refresh","toFront","modal","children","_overlay","opacity","on","_buttonEnter","bind","_buttonLeave","_windowActionHandler","_keydown","_focus","_blur","_keydownContent","data","widgetInstance","not","i","_resizable","_draggable","pinned","pin","role","add","support","mousedown","touchScroller","_resizeHandler","_onDocumentResize","_marker","guid","substring","trigger","notify","_tabKeyTrap","trap","shouldTrap","e","currentTarget","removeClass","width","height","maxHeight","sizeClass","size","dimensions","contentBoxSizing","lrBorderWidth","tbBorderWidth","paddingTop","_isPinned","_updateBoundaries","maxWidth","minWidth","minHeight","hide","containmentTop","containmentLeft","parseFloat","Number","replace","innerWidth","innerHeight","clientWidth","scrollbar","clientHeight","_animationOptions","animation","open","effects","close","_resize","resize","resizable","resizing","off","destroy","target","toggleMaximization","split","index","handler","resizeHandle","WindowResizing","dragging","WindowDragging","dragHandle","_actions","icon","container","windowSpecificCommands","icons","maximize","custom","map","action","name","html","render","setOptions","doc","cachedOptions","JSON","parse","stringify","_containerScrollTop","_containerScrollLeft","scrollable","restore","_enableDocumentScrolling","events","zoom","direction","fade","duration","properties","scale","autoFocus","isMaximized","isMinimized","_closable","inArray","keys","keyCode","ESC","stopPropagation","_close","handled","newWidth","newHeight","w","h","distance","_closing","altKey","unpin","UP","DOWN","minimize","getOffset","ctrlKey","LEFT","RIGHT","preventDefault","overlay","zIndex","insertBefore","preventScroll","_stopDocumentScrolling","_actionForIcon","exec","className","_modals","windowInstance","windowElements","modals","_object","push","sort","a","b","style","widget","center","newTop","newLeft","documentWindow","_scrollIsAppended","encoded","titleBar","titleElement","arguments","text","htmlEncode","prepend","titlebar","scrollContainer","angular","elements","empty","dataItem","otherModalsVisible","showOptions","contentElement","kendoStop","Fade","overlayFx","fx","fadeIn","endValue","play","show","kendoAnimate","complete","_activate","_removeOverlay","suppressAnimation","hideOverlay","hideOptions","fadeOut","startValue","last","systemTriggered","defaultPrevented","userTriggered","reverse","_deactivate","iframe","lastModal","_actionable","_shouldFocus","active","avoidFocus","currentWindow","containmentContext","openAnimation","originalZIndex","windowObject","zIndexNew","setTimeout","focus","windowTop","restoreOptions","end","removeAttr","_sizingAction","actionId","callback","eq","before","toggle","_storeOverflowRule","$body","$html","_restoreOverflowRule","$element","_isOverflowStored","overflowRule","get","overflow","removeData","win","pinIcon","wnd","zoomLevel","showIframe","initOptions","src","contentFrame","_triggerRefresh","_ajaxRequest","toggleClass","_ajaxComplete","clearTimeout","_loadingIconTimeout","_ajaxError","xhr","status","_ajaxSuccess","contentTemplate","prop","_showLoading","ajax","dataType","cache","error","success","_destroy","unbind","iframeSrcAttributes","contentHtml","isRtl","getAttribute","editor","owner","_preventDragging","group","dragstart","drag","dragend","userEvents","addOverlay","removeOverlay","dragcancel","ref","iconName","renderButton","fillMode","prototype","elementPadding","initialPosition","resizeDirection","initialSize","containerOffset","marginTop","marginLeft","test","wrapperPosition","relativeElMarginLeft","relativeElMarginTop","_relativeElMarginLeft","_relativeElMarginTop","windowBottom","windowRight","rtl","leftRtlOffset","scrollOffset","location","y","newWindowTop","reset","initialWindowPosition","initialPointerPosition","startPosition","client","axis","transforms","_finishDrag","plugin","jQuery"],"sources":["kendo.window.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.draganddrop', 'kendo.popup', 'kendo.icons', 'kendo.html.button'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n            id: \"window\",\n            name: \"Window\",\n            category: \"web\",\n            description: \"The Window widget displays content in a modal or non-modal HTML window.\",\n            depends: [ \"draganddrop\", \"popup\", \"icons\" ],\n            features: [ {\n                id: \"window-fx\",\n                name: \"Animation\",\n                description: \"Support for animation\",\n                depends: [ \"fx\" ]\n            } ]\n        };\n\n        (function($, undefined$1) {\n            var kendo = window.kendo,\n                Widget = kendo.ui.Widget,\n                TabKeyTrap = kendo.ui.Popup.TabKeyTrap,\n                Draggable = kendo.ui.Draggable,\n                isPlainObject = $.isPlainObject,\n                activeElement = kendo._activeElement,\n                outerWidth = kendo._outerWidth,\n                outerHeight = kendo._outerHeight,\n                extend = $.extend,\n                each = $.each,\n                template = kendo.template,\n                BODY = \"body\",\n                templates,\n                NS = \".kendoWindow\",\n                MODAL_NS = \".kendoWindowModal\",\n                // classNames\n                KWINDOW = \".k-window\",\n                KWINDOWTITLE = \".k-window-title\",\n                KWINDOWTITLEBAR = KWINDOWTITLE + \"bar\",\n                KWINDOWCONTENT = \".k-window-content\",\n                KDIALOGCONTENT = \".k-dialog-content\",\n                KWINDOWRESIZEHANDLES = \".k-resize-handle\",\n                KOVERLAY = \".k-overlay\",\n                KWINDOWMINIMIZED = \"k-window-minimized\",\n                KCONTENTFRAME = \"k-content-frame\",\n                LOADINGICONCLASS = \"k-i-loading\",\n                KHOVERSTATE = \"k-hover\",\n                KFOCUSEDSTATE = \"k-focus\",\n                MAXIMIZEDSTATE = \"k-window-maximized\",\n                INLINE_FLEX = \"k-display-inline-flex\",\n                // constants\n                VISIBLE = \":visible\",\n                HIDDEN = \"hidden\",\n                CURSOR = \"cursor\",\n                // events\n                OPEN = \"open\",\n                ACTIVATE = \"activate\",\n                DEACTIVATE = \"deactivate\",\n                CLOSE = \"close\",\n                REFRESH = \"refresh\",\n                MINIMIZE = \"minimize\",\n                MAXIMIZE = \"maximize\",\n                RESIZESTART = \"resizeStart\",\n                RESIZE = \"resize\",\n                RESIZEEND = \"resizeEnd\",\n                DRAGSTART = \"dragstart\",\n                DRAGEND = \"dragend\",\n                RESTORE = \"restore\",\n                KENDOKEYDOWN = \"kendoKeydown\",\n                ERROR = \"error\",\n                OVERFLOW = \"overflow\",\n                DATADOCOVERFLOWRULE = \"original-overflow-rule\",\n                ZINDEX = \"zIndex\",\n                MINIMIZE_MAXIMIZEICONSELECTORS = \".k-window-titlebar-actions .k-i-window-minimize,.k-window-titlebar-actions .k-i-window,.k-window-titlebar-actions .k-svg-i-window-minimize,.k-window-titlebar-actions .k-svg-i-window\",\n                KPINICONCLASSSELECTOR = \".k-i-pin,.k-svg-i-pin\",\n                KUNPINICONCLASSSELECTOR = \".k-i-unpin,.k-svg-i-unpin\",\n                PIN_UNPINICONCLASSSELECTOR = KPINICONCLASSSELECTOR + \",\" + KUNPINICONCLASSSELECTOR,\n                TITLEBAR_BUTTONSSELECTOR = \".k-window-titlebar .k-window-titlebar-action\",\n                REFRESHICONSELECTOR = \".k-window-titlebar .k-i-arrow-rotate-cw,.k-window-titlebar .k-svg-i-arrow-rotate-cw\",\n                WINDOWEVENTSHANDLED = \"WindowEventsHandled\",\n                zero = /^0[a-z]*$/i,\n                isLocalUrl = kendo.isLocalUrl,\n                SIZE = {\n                    small: \"k-window-sm\",\n                    medium: \"k-window-md\",\n                    large: \"k-window-lg\"\n                };\n\n            function defined(x) {\n                return (typeof x != \"undefined\");\n            }\n\n            function toInt(element, property) {\n                return parseInt(element.css(property), 10) || 0;\n            }\n\n            function constrain(value, low, high) {\n                var normalizedValue;\n\n                if (value && isNaN(value) && value.toString().indexOf(\"px\") < 0) {\n                    normalizedValue = value;\n                } else {\n                    normalizedValue = Math.max(\n                        Math.min(parseInt(value, 10), high === Infinity ? high : parseInt(high, 10)),\n                        low === -Infinity ? low : parseInt(low, 10)\n                    );\n                }\n\n                return normalizedValue;\n            }\n\n            function executableScript() {\n                return !this.type || this.type.toLowerCase().indexOf(\"script\") >= 0;\n            }\n\n\n            function getPosition(elem) {\n                var result = { top: elem.offsetTop, left: elem.offsetLeft },\n                    parent = elem.offsetParent;\n\n                while (parent) {\n                    result.top += parent.offsetTop;\n                    result.left += parent.offsetLeft;\n\n                    var parentOverflowX = $(parent).css(\"overflowX\");\n                    var parentOverflowY = $(parent).css(\"overflowY\");\n\n                    if (parentOverflowY === \"auto\" || parentOverflowY === \"scroll\") {\n                        result.top -= parent.scrollTop;\n                    }\n\n                    if (parentOverflowX === \"auto\" || parentOverflowX === \"scroll\") {\n                        result.left -= parent.scrollLeft;\n                    }\n\n                    parent = parent.offsetParent;\n                }\n\n                return result;\n            }\n\n            var Window = Widget.extend({\n                init: function(element, options) {\n                    var that = this,\n                        wrapper,\n                        offset = {},\n                        visibility, display, position,\n                        isVisible = false,\n                        content,\n                        windowContent,\n                        windowFrame,\n                        globalWindow,\n                        suppressActions = options && options.actions && !options.actions.length,\n                        id;\n\n                    Widget.fn.init.call(that, element, options);\n                    options = that.options;\n                    position = options.position;\n                    element = that.element;\n                    content = options.content;\n                    globalWindow = $(window);\n\n                    if (suppressActions) {\n                        options.actions = [];\n                    }\n\n                    that.appendTo = $(options.appendTo);\n\n                    that.containment = options.draggable.containment ? $(options.draggable.containment).first() : null;\n\n                    if (content && !isPlainObject(content)) {\n                        content = options.content = { url: content };\n                    }\n\n                    // remove script blocks to prevent double-execution\n                    element.find(\"script\").filter(executableScript).remove();\n\n                    if (!element.parent().is(that.appendTo) && !that.containment && (position.top === undefined$1 || position.left === undefined$1)) {\n                        if (element.is(VISIBLE)) {\n                            offset = element.offset();\n                            isVisible = true;\n                        } else {\n                            visibility = element.css(\"visibility\");\n                            display = element.css(\"display\");\n\n                            element.css({ visibility: HIDDEN, display: \"\" });\n\n                            if (document.body.contains(element[0])) {\n                                offset = element.offset();\n                            } else {\n                                offset = { top: 0, left: 0 };\n                            }\n\n                            element.css({ visibility: visibility, display: display });\n                        }\n\n                        if (position.top === undefined$1) {\n                            position.top = offset.top;\n                        }\n                        if (position.left === undefined$1) {\n                            position.left = offset.left;\n                        }\n                    }\n\n                    if (!defined(options.visible) || options.visible === null) {\n                        options.visible = element.is(VISIBLE);\n                    }\n\n                    wrapper = that.wrapper = element.closest(KWINDOW);\n\n                    if (options.themeColor && options.themeColor !== \"none\") {\n                        wrapper.addClass(kendo.getValidCssClass(\"k-window-\", \"themeColor\", options.themeColor));\n                    }\n\n                    if (!element.is(\".k-window-content\") || !wrapper[0]) {\n                        element.addClass(\"k-window-content\");\n                        element.attr(\"tabindex\", 0);\n                        that._createWindow(element, options);\n                        wrapper = that.wrapper = element.closest(KWINDOW);\n\n                        that.title(that.options.title);\n                        that._dimensions();\n\n                        if (options._footerTemplate) {\n                            that.wrapper.append(kendo.template(options._footerTemplate)(options._footerMessages));\n                        }\n                    }\n\n                    that.minTop = that.minLeft = -Infinity;\n                    that.maxTop = that.maxLeft = Infinity;\n                    that._position();\n\n                    if (content) {\n                        that.refresh(content);\n                    }\n\n                    if (options.visible) {\n                        that.toFront(null, !options.modal);\n                    }\n\n                    windowContent = wrapper.children(KWINDOWCONTENT);\n\n                    if (options.visible && options.modal) {\n                        that._overlay(wrapper.is(VISIBLE)).css({ opacity: 0.5 });\n                    }\n\n                    wrapper\n                        .on(\"mouseenter\" + NS, TITLEBAR_BUTTONSSELECTOR, that._buttonEnter.bind(that))\n                        .on(\"mouseleave\" + NS, TITLEBAR_BUTTONSSELECTOR, that._buttonLeave.bind(that))\n                        .on(\"click\" + NS, \"> \" + TITLEBAR_BUTTONSSELECTOR, that._windowActionHandler.bind(that))\n                        .on(\"keydown\" + NS, that, that._keydown.bind(that))\n                        .on(\"focus\" + NS, that._focus.bind(that))\n                        .on(\"blur\" + NS, that._blur.bind(that));\n\n                    windowContent\n                        .on(\"keydown\" + NS, that, that._keydownContent.bind(that));\n\n                    windowFrame = windowContent.find(\".\" + KCONTENTFRAME)[0];\n\n                    if (windowFrame && !globalWindow.data(WINDOWEVENTSHANDLED)) {\n\n                        globalWindow.on(\"blur\" + NS, function() {\n                            var element = $(document.activeElement).parent(KWINDOWCONTENT);\n                            if (element.length) {\n                                var windowInstance = kendo.widgetInstance(element);\n                                windowInstance._focus();\n                            }\n                        });\n\n                        globalWindow.on(\"focus\" + NS, function() {\n                            $(KWINDOWCONTENT).not(KDIALOGCONTENT).each(function(i, element) {\n                                kendo.widgetInstance($(element))._blur();\n                            });\n                        });\n\n                        globalWindow.data(WINDOWEVENTSHANDLED, true);\n                    }\n\n                    this._resizable();\n\n                    this._draggable();\n\n                    if (options.pinned && this.wrapper.is(\":visible\")) {\n                        that.pin();\n                    }\n\n                    id = element.attr(\"id\");\n                    if (id) {\n                        id = id + \"_wnd_title\";\n                        wrapper.attr({\n                                \"role\": \"dialog\",\n                                \"aria-labelledby\": id\n                            }).children(KWINDOWTITLEBAR)\n                            .children(KWINDOWTITLE)\n                            .attr(\"id\", id);\n                    }\n\n                    wrapper.add(wrapper.children(\".k-resize-handle,\" + KWINDOWTITLEBAR))\n                        .on(kendo.support.mousedown + NS, that.toFront.bind(that));\n\n                    that.touchScroller = kendo.touchScroller(element);\n\n                    that._resizeHandler = that._onDocumentResize.bind(that);\n\n                    that._marker = kendo.guid().substring(0, 8);\n\n                    $(window).on(\"resize\" + NS + that._marker, that._resizeHandler);\n\n                    if (options.visible) {\n                        that.trigger(OPEN);\n                        that.trigger(ACTIVATE);\n                    }\n\n                    kendo.notify(that);\n\n                    if (this.options.modal) {\n                        this._tabKeyTrap = new TabKeyTrap(wrapper);\n                        this._tabKeyTrap.trap();\n                        this._tabKeyTrap.shouldTrap = function() {\n                            return wrapper.data(\"isFront\");\n                        };\n                    }\n                },\n\n                _buttonEnter: function(e) {\n                    $(e.currentTarget).addClass(KHOVERSTATE);\n                },\n\n                _buttonLeave: function(e) {\n                    $(e.currentTarget).removeClass(KHOVERSTATE);\n                },\n\n                _focus: function() {\n                    this.wrapper.addClass(KFOCUSEDSTATE);\n                },\n\n                _blur: function() {\n                    this.wrapper.removeClass(KFOCUSEDSTATE);\n                },\n\n                _dimensions: function() {\n                    var wrapper = this.wrapper;\n                    var options = this.options;\n                    var width = options.width;\n                    var height = options.height;\n                    var maxHeight = options.maxHeight;\n                    var sizeClass = options.size;\n                    var dimensions = [\"minWidth\",\"minHeight\",\"maxWidth\",\"maxHeight\"];\n                    var contentBoxSizing = wrapper.css(\"box-sizing\") == \"content-box\";\n\n                    var lrBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-left-width\") + toInt(wrapper, \"border-right-width\") : 0;\n                    var tbBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-top-width\") + toInt(wrapper, \"border-bottom-width\") : 0;\n                    var paddingTop = contentBoxSizing ? toInt(wrapper, \"padding-top\") : 0;\n\n                    if (this.containment && !this._isPinned) {\n                        this._updateBoundaries();\n                        options.maxHeight = Math.min(this.containment.height - (tbBorderWidth + paddingTop), maxHeight);\n                        options.maxWidth = Math.min(this.containment.width - lrBorderWidth, options.maxWidth);\n                    }\n\n                    for (var i = 0; i < dimensions.length; i++) {\n                        var value = options[dimensions[i]] || \"\";\n                        if (value != Infinity) {\n                            wrapper.css(dimensions[i], value);\n                        }\n                    }\n\n                    if (maxHeight != Infinity) {\n                        this.element.css(\"maxHeight\", maxHeight);\n                    }\n\n                    if (width) {\n                        wrapper.outerWidth(constrain(width, options.minWidth, options.maxWidth));\n                    }\n                    else {\n                        wrapper.outerWidth(\"\");\n                    }\n\n                    if (height) {\n                        wrapper.outerHeight(constrain(height, options.minHeight, options.maxHeight));\n                    }\n                    else {\n                        wrapper.outerHeight(\"\");\n                    }\n\n                    if (!options.visible) {\n                        wrapper.removeClass(INLINE_FLEX).hide();\n                    }\n\n                    if (sizeClass && SIZE[sizeClass]) {\n                        wrapper.addClass(SIZE[sizeClass]);\n                    }\n                },\n\n                _position: function() {\n                    var wrapper = this.wrapper,\n                        position = this.options.position,\n                        containmentTop, containmentLeft;\n\n                    this._updateBoundaries();\n\n                    if (this.containment) {\n                        position.top = position.top || 0;\n                        position.left = position.left || 0;\n\n                        containmentTop = position.top.toString().indexOf(\"%\") > 0 ?\n                            parseInt(this.containment.height * (parseFloat(position.top) / 100), 10) :\n                            position.top;\n\n                        containmentLeft = position.left.toString().indexOf(\"%\") > 0 ?\n                            parseInt(this.containment.width * (parseFloat(position.left) / 100), 10) :\n                            position.left;\n\n                        position.top = constrain(containmentTop, this.minTop, this.maxTop);\n                        position.left = constrain(containmentLeft, this.minLeft, this.maxLeft);\n                    }\n\n                    if (position.top && position.top.toString().indexOf(\"px\") > 0) {\n                        position.top = Number(position.top.replace(\"px\", \"\"));\n                    }\n\n                    if (position.left && position.left.toString().indexOf(\"px\") > 0) {\n                        position.left = Number(position.left.replace(\"px\", \"\"));\n                    }\n\n                    if (position.top === 0) {\n                        position.top = position.top.toString();\n                    }\n\n                    if (position.left === 0) {\n                        position.left = position.left.toString();\n                    }\n\n                    wrapper.css({\n                        top: position.top || \"\",\n                        left: position.left || \"\"\n                    });\n                },\n\n                _updateBoundaries: function() {\n                    var containment = this.containment;\n\n                    if (!containment) {\n                        return null;\n                    }\n\n                    containment.width = containment.innerWidth();\n                    containment.height = containment.innerHeight();\n\n                    if (parseInt(containment.width, 10) > containment[0].clientWidth) {\n                        containment.width -= kendo.support.scrollbar();\n                    }\n\n                    if (parseInt(containment.height, 10) > containment[0].clientHeight) {\n                        containment.height -= kendo.support.scrollbar();\n                    }\n\n                    containment.position = getPosition(containment[0]);\n\n                    if (this._isPinned) {\n                        this.minTop = this.minLeft = -Infinity;\n                        this.maxTop = this.maxLeft = Infinity;\n                    } else {\n                        this.minTop = containment.scrollTop();\n                        this.minLeft = containment.scrollLeft();\n                        this.maxLeft = this.minLeft + containment.width - outerWidth(this.wrapper, true);\n                        this.maxTop = this.minTop + containment.height - outerHeight(this.wrapper, true);\n                    }\n                },\n\n                _animationOptions: function(id) {\n                    var animation = this.options.animation;\n                    var basicAnimation = {\n                        open: { effects: {} },\n                        close: { hide: true, effects: {} }\n                    };\n\n                    return animation && animation[id] || basicAnimation[id];\n                },\n\n                _resize: function() {\n                    kendo.resize(this.element.children());\n                },\n\n                _resizable: function() {\n                    var resizable = this.options.resizable;\n                    var wrapper = this.wrapper;\n\n                    if (this.resizing) {\n                        wrapper\n                            .off(\"dblclick\" + NS)\n                            .children(KWINDOWRESIZEHANDLES).remove();\n\n                        this.resizing.destroy();\n                        this.resizing = null;\n                    }\n\n                    if (resizable) {\n                        wrapper.on(\"dblclick\" + NS, KWINDOWTITLEBAR, (function(e) {\n                            if (!$(e.target).closest(\".k-window-titlebar-action\").length) {\n                                this.toggleMaximization();\n                            }\n                        }).bind(this));\n\n                        each(\"n e s w se sw ne nw\".split(\" \"), function(index, handler) {\n                            wrapper.append(templates.resizeHandle(handler));\n                        });\n\n                        this.resizing = new WindowResizing(this);\n                    }\n\n                    wrapper = null;\n                },\n\n                _draggable: function() {\n                    var draggable = this.options.draggable;\n\n                    if (this.dragging) {\n                        this.dragging.destroy();\n                        this.dragging = null;\n                    }\n                    if (draggable) {\n                        this.dragging = new WindowDragging(this, draggable.dragHandle || KWINDOWTITLEBAR);\n                    }\n                },\n\n                _actions: function() {\n                    var options = this.options;\n                    var actions = options.actions;\n                    var pinned = options.pinned;\n                    var titlebar = this.wrapper.children(KWINDOWTITLEBAR);\n                    var container = titlebar.find(\".k-window-titlebar-actions\");\n                    var windowSpecificCommands = [ \"minimize\", \"maximize\" ];\n                    var icons = {\n                        \"maximize\": \"window\",\n                        \"refresh\": \"arrow-rotate-cw\",\n                        \"custom\": \"gear\"\n                    };\n                    var icon;\n\n                    actions = $.map(actions, function(action) {\n                        action = pinned && action.toLowerCase() === \"pin\" ? \"unpin\" : action;\n                        icon = icons[action.toLowerCase()] || \"\";\n                        return { name: (windowSpecificCommands.indexOf(action.toLowerCase()) > - 1) ? \"window-\" + action : action, icon: action.toLowerCase() == \"close\" ? \"x\" : icon };\n                    });\n\n                    container.html(kendo.render(templates.action, actions));\n                },\n\n                setOptions: function(options) {\n                    var that = this;\n                    var sizeClass = that.options.size;\n                    var doc = this.containment && !that._isPinned ? this.containment : $(document);\n                    // make a deep extend over options.position telerik/kendo-ui-core#844\n                    var cachedOptions = JSON.parse(JSON.stringify(options));\n\n                    that.wrapper.removeClass(kendo.getValidCssClass(\"k-window-\", \"themeColor\", that.options.themeColor));\n\n                    extend(options.position, that.options.position);\n                    extend(options.position, cachedOptions.position);\n\n                    that._containerScrollTop = doc.scrollTop();\n                    that._containerScrollLeft = doc.scrollLeft();\n\n                    Widget.fn.setOptions.call(that, options);\n                    var scrollable = that.options.scrollable !== false;\n\n                    that.restore();\n\n                    if (typeof options.title !== \"undefined\") {\n                        that.title(options.title);\n                    }\n\n                    that.wrapper.removeClass(SIZE[sizeClass]);\n                    that._dimensions();\n\n                    that._position();\n                    that._resizable();\n                    that._draggable();\n                    that._actions();\n\n                    if (that.options.themeColor && that.options.themeColor !== \"none\") {\n                        that.wrapper.addClass(kendo.getValidCssClass(\"k-window-\", \"themeColor\", that.options.themeColor));\n                    }\n\n                    if (typeof options.modal !== \"undefined\") {\n                        var visible = that.options.visible !== false;\n                        that._enableDocumentScrolling();\n                        that._overlay(options.modal && visible);\n                    }\n\n                    that.element.css(OVERFLOW, scrollable ? \"\" : \"hidden\");\n                },\n\n                events: [\n                    OPEN,\n                    ACTIVATE,\n                    DEACTIVATE,\n                    CLOSE,\n                    MINIMIZE,\n                    MAXIMIZE,\n                    REFRESH,\n                    RESTORE,\n                    RESIZESTART,\n                    RESIZE,\n                    RESIZEEND,\n                    DRAGSTART,\n                    DRAGEND,\n                    KENDOKEYDOWN,\n                    ERROR\n                ],\n\n                options: {\n                    name: \"Window\",\n                    animation: {\n                        open: {\n                            effects: { zoom: { direction: \"in\" }, fade: { direction: \"in\" } },\n                            duration: 350\n                        },\n                        close: {\n                            effects: { zoom: { direction: \"out\", properties: { scale: 0.7 } }, fade: { direction: \"out\" } },\n                            duration: 350,\n                            hide: true\n                        }\n                    },\n                    title: \"\",\n                    themeColor: \"\",\n                    actions: [\"Close\"],\n                    autoFocus: true,\n                    modal: false,\n                    size: \"auto\",\n                    resizable: true,\n                    draggable: true,\n                    minWidth: 90,\n                    minHeight: 50,\n                    maxWidth: Infinity,\n                    maxHeight: Infinity,\n                    pinned: false,\n                    scrollable: true,\n                    position: {},\n                    content: null,\n                    visible: null,\n                    height: null,\n                    width: null,\n                    appendTo: \"body\",\n                    isMaximized: false,\n                    isMinimized: false\n                },\n\n                _closable: function() {\n                    return $.inArray(\"close\", $.map(this.options.actions, function(x) { return x.toLowerCase(); })) > -1;\n                },\n\n                _keydownContent: function(e) {\n                    var that = this,\n                        keys = kendo.keys,\n                        keyCode = e.keyCode;\n\n                    if (keyCode == keys.ESC && that._closable()) {\n                        e.stopPropagation();\n                        that._close(false);\n                    }\n                },\n\n                _keydown: function(e) {\n                    var that = this,\n                        options = that.options,\n                        keys = kendo.keys,\n                        keyCode = e.keyCode,\n                        wrapper = that.wrapper,\n                        offset, handled,\n                        distance = 10,\n                        isMaximized = options.isMaximized,\n                        isMinimized = options.isMinimized,\n                        newWidth, newHeight, w, h;\n\n                    if (keyCode == keys.ESC && that._closable()) {\n                        e.stopPropagation();\n                        that._close(false);\n                    }\n\n                    if (e.target != e.currentTarget || that._closing) {\n                        return;\n                    }\n\n                     // Refresh\n                    if (e.altKey && keyCode == 82) {// Alt + R\n                        that.refresh();\n                    }\n\n                    // Pin/Unpin\n                    if (e.altKey && keyCode == 80) {// Alt + P\n                        if (that.options.pinned) {\n                            that.unpin();\n                        } else {\n                            that.pin();\n                        }\n                    }\n\n                    // Maximize/Restore/Miminimize\n                    if (e.altKey && keyCode == keys.UP) {\n                        if (isMinimized) {\n                            that.restore();\n                            that.wrapper.trigger(\"focus\");\n                        } else if (!isMaximized) {\n                            that.maximize();\n                            that.wrapper.trigger(\"focus\");\n                        }\n                    } else if (e.altKey && keyCode == keys.DOWN) {\n                        if (!isMinimized && !isMaximized) {\n                            that.minimize();\n                            that.wrapper.trigger(\"focus\");\n                        } else if (isMaximized) {\n                            that.restore();\n                            that.wrapper.trigger(\"focus\");\n                        }\n                    }\n\n                    offset = kendo.getOffset(wrapper);\n\n                    if (that.containment && !that._isPinned) {\n                        offset = that.options.position;\n                    }\n\n                    if (options.draggable && !e.ctrlKey && !e.altKey && !isMaximized) {\n                        that._updateBoundaries();\n                        if (keyCode == keys.UP) {\n                            offset.top = constrain(offset.top - distance, that.minTop, that.maxTop);\n                            handled = wrapper.css(\"top\", offset.top);\n                        } else if (keyCode == keys.DOWN) {\n                            offset.top = constrain(offset.top + distance, that.minTop, that.maxTop);\n                            handled = wrapper.css(\"top\", offset.top);\n                        } else if (keyCode == keys.LEFT) {\n                            offset.left = constrain(offset.left - distance, that.minLeft, that.maxLeft);\n                            handled = wrapper.css(\"left\", offset.left);\n                        } else if (keyCode == keys.RIGHT) {\n                            offset.left = constrain(offset.left + distance, that.minLeft, that.maxLeft);\n                            handled = wrapper.css(\"left\", offset.left);\n                        }\n                    }\n\n                    if (options.resizable && e.ctrlKey && !isMaximized && !isMinimized) {\n                        if (keyCode == keys.UP) {\n                            handled = true;\n                            newHeight = wrapper.outerHeight() - distance;\n                        } else if (keyCode == keys.DOWN) {\n                            handled = true;\n                            if (that.containment && !that._isPinned) {\n                                newHeight = Math.min(wrapper.outerHeight() + distance,\n                                    that.containment.height - offset.top - toInt(wrapper, \"padding-top\") -\n                                    toInt(wrapper, \"borderBottomWidth\") - toInt(wrapper, \"borderTopWidth\"));\n                            } else {\n                                newHeight = wrapper.outerHeight() + distance;\n                            }\n                        } if (keyCode == keys.LEFT) {\n                            handled = true;\n                            newWidth = wrapper.outerWidth() - distance;\n                        } else if (keyCode == keys.RIGHT) {\n                            handled = true;\n                            if (that.containment && !that._isPinned) {\n                                newWidth = Math.min(wrapper.outerWidth() + distance,\n                                                    that.containment.width - offset.left -\n                                                    toInt(wrapper, \"borderLeftWidth\") - toInt(wrapper, \"borderRightWidth\"));\n                            } else {\n                                newWidth = wrapper.outerWidth() + distance;\n                            }\n                        }\n\n                        if (handled) {\n                            w = constrain(newWidth, options.minWidth, options.maxWidth);\n                            h = constrain(newHeight, options.minHeight, options.maxHeight);\n\n                            if (!isNaN(w)) {\n                                wrapper.outerWidth(w);\n                                that.options.width = w + \"px\";\n                            }\n                            if (!isNaN(h)) {\n                                wrapper.outerHeight(h);\n                                that.options.height = h + \"px\";\n                            }\n\n                            that.resize();\n                        }\n                    }\n\n                    if (handled) {\n                        e.preventDefault();\n                    }\n                },\n\n                _overlay: function(visible) {\n                    var overlay = this.containment ? this.containment.children(KOVERLAY) : this.appendTo.children(KOVERLAY),\n                        wrapper = this.wrapper,\n                        display = visible ? \"inline-flex\" : \"none\",\n                        zIndex = parseInt(wrapper.css(ZINDEX), 10) - 1;\n\n                    if (!overlay.length) {\n                        overlay = $(\"<div class='k-overlay' />\");\n                    }\n\n                    overlay\n                        .insertBefore(wrapper[0])\n                        .css({\n                            zIndex: zIndex,\n                            display: display\n                        });\n\n                    if (this.options.modal.preventScroll && !this.containment) {\n                        this._stopDocumentScrolling();\n                    }\n\n                    return overlay;\n                },\n\n                _actionForIcon: function(icon) {\n                    var iconClass = /\\bk(-svg)?-i(-\\w+)+\\b/.exec(icon[0].className)[0];\n                    return {\n                        \"x\": \"_close\",\n                        \"window\": \"maximize\",\n                        \"window-minimize\": \"minimize\",\n                        \"window-restore\": \"restore\",\n                        \"arrow-rotate-cw\": \"refresh\",\n                        \"pin\": \"pin\",\n                        \"unpin\": \"unpin\"\n                    }[iconClass.replace(/(k-i-|k-svg-i-)/, \"\")];\n                },\n\n                _windowActionHandler: function(e) {\n                    if (this._closing) {\n                        return;\n                    }\n                    var icon = $(e.target).closest(\".k-window-titlebar-action\").find(\".k-icon,.k-svg-icon\");\n                    var action = this._actionForIcon(icon);\n\n                    if (action) {\n                        e.preventDefault();\n                        this[action]();\n                        return false;\n                    }\n                },\n\n                _modals: function() {\n                    var that = this,\n                        windowElements = $(KWINDOW + VISIBLE),\n                        windowInstance,\n                        modals = [];\n\n                    for (var i = 0; i < windowElements.length; i += 1) {\n                        windowInstance = that._object($(windowElements[i]));\n\n                        if (windowInstance &&\n                            windowInstance.options &&\n                            windowInstance.options.modal &&\n                            windowInstance.options.visible &&\n                            windowInstance.options.appendTo === that.options.appendTo &&\n                            (!windowInstance.containment || (that.containment && windowInstance.containment[0] === that.containment[0]))) {\n                                modals.push(windowInstance.wrapper[0]);\n                        }\n                    }\n\n                    modals.sort(function(a, b) {\n                        return a.style.zIndex - b.style.zIndex;\n                    });\n\n                    that = null;\n\n                    return $(modals);\n                },\n\n                _object: function(element) {\n                    var content = element.children(KWINDOWCONTENT);\n                    var widget = kendo.widgetInstance(content);\n\n                    if (widget) {\n                        return widget;\n                    }\n\n                    return undefined$1;\n                },\n\n                center: function() {\n                    var that = this,\n                        position = that.options.position,\n                        wrapper = that.wrapper,\n                        documentWindow = $(window),\n                        scrollTop = 0,\n                        scrollLeft = 0,\n                        newTop, newLeft;\n\n                    if (that.options.isMaximized) {\n                        return that;\n                    }\n\n                    if (that.options.pinned && !that._isPinned) {\n                        that.pin();\n                    }\n\n                    if (!that.options.pinned) {\n                        scrollTop = documentWindow.scrollTop();\n                        scrollLeft = documentWindow.scrollLeft();\n                    }\n\n                    if (this.containment && !that.options.pinned) {\n                        newTop = this.minTop + (this.maxTop - this.minTop) / 2;\n                        newLeft = this.minLeft + (this.maxLeft - this.minLeft) / 2;\n                    } else {\n                        that._scrollIsAppended = true;\n                        newLeft = scrollLeft + Math.max(0, (documentWindow.width() - wrapper.outerWidth()) / 2);\n                        newTop = scrollTop + Math.max(0, (documentWindow.height() - wrapper.outerHeight() - toInt(wrapper, \"paddingTop\")) / 2);\n                    }\n\n                    wrapper.css({\n                        left: newLeft,\n                        top: newTop\n                    });\n\n                    position.top = newTop;\n                    position.left = newLeft;\n\n                    return that;\n                },\n\n                title: function(title) {\n                    var that = this,\n                        value,\n                        encoded = true,\n                        wrapper = that.wrapper,\n                        titleBar = wrapper.children(KWINDOWTITLEBAR),\n                        titleElement = titleBar.children(KWINDOWTITLE);\n\n                    if (!arguments.length) {\n                        return titleElement.html();\n                    }\n\n                    if ($.isPlainObject(title)) {\n                        value = typeof title.text !== \"undefined\" ? title.text : \"\";\n                        encoded = title.encoded !== false;\n                    } else {\n                        value = title;\n                    }\n\n                    if (value === false) {\n                        wrapper.addClass(\"k-window-titleless\");\n                        wrapper.css(\"padding-top\", 0);\n                        titleBar.remove();\n                    } else {\n                        if (!titleBar.length) {\n                            wrapper.prepend(templates.titlebar({\n                                title: encoded ? kendo.htmlEncode(value) : value\n                            }));\n                            that._actions();\n                            titleBar = wrapper.children(KWINDOWTITLEBAR);\n                        } else {\n                            titleElement.html(encoded ? kendo.htmlEncode(value) : value);\n                        }\n                    }\n\n                    that.options.title = value;\n\n                    return that;\n                },\n\n                content: function(html, data) {\n                    var content = this.wrapper.children(KWINDOWCONTENT),\n                        scrollContainer = content.children(\".km-scroll-container\");\n\n                    content = scrollContainer[0] ? scrollContainer : content;\n\n                    if (!defined(html)) {\n                        return content.html();\n                    }\n\n                    this.angular(\"cleanup\", function() {\n                        return { elements: content.children() };\n                    });\n\n                    kendo.destroy(this.element.children());\n\n                    content.empty().html(html);\n\n                    this.angular(\"compile\", function() {\n                        var a = [];\n                        for (var i = content.length; --i >= 0;) {\n                            a.push({ dataItem: data });\n                        }\n                        return {\n                            elements: content.children(),\n                            data: a\n                        };\n                    });\n\n                    return this;\n                },\n\n                open: function() {\n                    var that = this,\n                        wrapper = that.wrapper,\n                        options = that.options,\n                        showOptions = this._animationOptions(\"open\"),\n                        contentElement = wrapper.children(KWINDOWCONTENT),\n                        overlay, otherModalsVisible,\n                        containmentContext = this.containment && !that._isPinned,\n                        doc = containmentContext ? this.containment : $(document);\n\n                    if (!that.trigger(OPEN)) {\n                        if (that._closing) {\n                            wrapper.kendoStop(true, true);\n                        }\n\n                        that._closing = false;\n\n                        that.toFront();\n\n                        if (options.autoFocus) {\n                            that.wrapper.trigger(\"focus\");\n                        }\n\n                        options.visible = true;\n\n                        if (options.modal) {\n                            otherModalsVisible = !!that._modals().length;\n                            overlay = that._overlay(otherModalsVisible);\n\n                            overlay.kendoStop(true, true);\n\n                            if (showOptions.duration && kendo.effects.Fade && !otherModalsVisible) {\n                                var overlayFx = kendo.fx(overlay).fadeIn();\n                                overlayFx.duration(showOptions.duration || 0);\n                                overlayFx.endValue(0.5);\n                                overlayFx.play();\n                            } else {\n                                overlay.css(\"opacity\", 0.5);\n                            }\n\n                            overlay.show();\n\n                            $(window).on(\"focus\" + MODAL_NS, function() {\n                                if (wrapper.data(\"isFront\") && !$(document.activeElement).closest(wrapper).length) {\n                                   that.wrapper.trigger(\"focus\");\n                                }\n                            });\n                        }\n\n                        if (!wrapper.is(VISIBLE)) {\n                            contentElement.css(OVERFLOW, HIDDEN);\n\n                            that.wrapper.find(TITLEBAR_BUTTONSSELECTOR).addClass(\"k-button-flat\");\n\n                            wrapper.css({ display: \"inline-flex\" });\n                            wrapper.kendoStop().kendoAnimate({\n                                effects: showOptions.effects,\n                                duration: showOptions.duration,\n                                complete: this._activate.bind(this)\n                            });\n                        }\n                    }\n\n                    if (options.isMaximized) {\n                        that._containerScrollTop = doc.scrollTop();\n                        that._containerScrollLeft = doc.scrollLeft();\n                        that._stopDocumentScrolling();\n                    }\n\n                    if (this.options.pinned && !this._isPinned) {\n                        this.pin();\n                    }\n\n                    return that;\n                },\n\n                _activate: function() {\n                    var scrollable = this.options.scrollable !== false;\n\n                    if (this.options.autoFocus) {\n                        this.wrapper.trigger(\"focus\");\n                    }\n\n                    this.element.css(OVERFLOW, scrollable ? \"\" : \"hidden\");\n                    kendo.resize(this.element.children());\n\n                    this.trigger(ACTIVATE);\n                },\n\n                _removeOverlay: function(suppressAnimation) {\n                    var modals = this._modals();\n                    var options = this.options;\n                    var hideOverlay = options.modal && !modals.length;\n                    var hideOptions = this._animationOptions(\"close\");\n\n                    if (hideOverlay) {\n                        if (!suppressAnimation && hideOptions.duration && kendo.effects.Fade) {\n                            var overlayFx = kendo.fx(options.modal ? this._overlay(true) : $(undefined$1)).fadeOut();\n                            overlayFx.duration(hideOptions.duration || 0);\n                            overlayFx.startValue(0.5);\n                            overlayFx.play();\n                        } else {\n                            this._overlay(false).remove();\n                        }\n                        if (options.modal.preventScroll) {\n                            this._enableDocumentScrolling();\n                        }\n                    } else if (modals.length) {\n                        this._object(modals.last())._overlay(true);\n\n                        if (options.modal.preventScroll) {\n                            this._stopDocumentScrolling();\n                        }\n                    }\n                },\n\n                _close: function(systemTriggered) {\n                    var that = this,\n                        wrapper = that.wrapper,\n                        options = that.options,\n                        showOptions = this._animationOptions(\"open\"),\n                        hideOptions = this._animationOptions(\"close\"),\n                        containmentContext = this.containment && !that._isPinned,\n                        doc = containmentContext ? this.containment : $(document),\n                        defaultPrevented;\n\n                    if (that._closing) {\n                        return;\n                    }\n\n                    defaultPrevented = that.trigger(CLOSE, { userTriggered: !systemTriggered });\n                    that._closing = !defaultPrevented;\n\n                    if (wrapper.is(VISIBLE) && !defaultPrevented) {\n                        options.visible = false;\n\n                        $(KWINDOW).each(function(i, element) {\n                            var contentElement = $(element).children(KWINDOWCONTENT);\n\n                            // Remove overlay set by toFront\n                            if (element != wrapper && contentElement.find(\"> .\" + KCONTENTFRAME).length > 0) {\n                                contentElement.children(KOVERLAY).remove();\n                            }\n                        });\n\n                        this._removeOverlay();\n\n                        // Prevent close animation from stopping\n                        that.wrapper.find(TITLEBAR_BUTTONSSELECTOR).removeClass(\"k-button-flat\");\n\n                        wrapper.kendoStop().kendoAnimate({\n                            effects: hideOptions.effects || showOptions.effects,\n                            reverse: hideOptions.reverse === true,\n                            duration: hideOptions.duration,\n                            complete: this._deactivate.bind(this)\n                        });\n                        $(window).off(MODAL_NS);\n                    }\n\n                    if (that.options.isMaximized) {\n                        that._enableDocumentScrolling();\n                        if (that._containerScrollTop && that._containerScrollTop > 0) {\n                            doc.scrollTop(that._containerScrollTop);\n                        }\n                        if (that._containerScrollLeft && that._containerScrollLeft > 0) {\n                            doc.scrollLeft(that._containerScrollLeft);\n                        }\n                    }\n\n                    if (that.options.iframe) {\n                        that.wrapper.trigger(\"blur\");\n                    }\n                },\n\n                _deactivate: function() {\n                    var that = this;\n\n                    that.wrapper\n                        .removeClass(INLINE_FLEX)\n                        .hide()\n                        .css(\"opacity\", \"\");\n\n                    that.trigger(DEACTIVATE);\n\n                    if (that.options.modal) {\n                        var lastModal = that._object(that._modals().last());\n                        if (lastModal) {\n                            lastModal.toFront();\n                        }\n                    }\n                },\n\n                close: function() {\n                    this._close(true);\n                    return this;\n                },\n\n                _actionable: function(element) {\n                    return $(element).is((TITLEBAR_BUTTONSSELECTOR + \", :input, a, .k-input, .k-icon, .k-svg-icon, [role='gridcell'], .k-input-value-text\"));\n                },\n\n                _shouldFocus: function(target) {\n                    var active = activeElement(),\n                        element = this.wrapper;\n\n                    return this.options.autoFocus &&\n                        !$(active).is(element) &&\n                        !this._actionable(target) &&\n                        (!element.find(active).length || !element.find(target).length);\n                },\n\n                toFront: function(e, avoidFocus) {\n                    var that = this,\n                        wrapper = that.wrapper,\n                        currentWindow = wrapper[0],\n                        containmentContext = that.containment && !that._isPinned,\n                        openAnimation = this._animationOptions(\"open\"),\n                        zIndex = +wrapper.css(ZINDEX),\n                        originalZIndex = zIndex,\n                        target = (e && e.target) || null;\n\n                    $(KWINDOW).each(function(i, element) {\n                        var windowObject = $(element),\n                            zIndexNew = windowObject.css(ZINDEX),\n                            contentElement = windowObject.children(KWINDOWCONTENT);\n\n                        if (!isNaN(zIndexNew)) {\n                            zIndex = Math.max(+zIndexNew, zIndex);\n                        }\n\n                        wrapper.data(\"isFront\", element == currentWindow);\n                        // Add overlay to windows with iframes and lower z-index to prevent\n                        // trapping of events when resizing / dragging\n\n                        if (element != currentWindow &&\n                            contentElement.find(\".\" + KCONTENTFRAME).length &&\n                            !contentElement.find(KOVERLAY).length) {\n                            contentElement.append(templates.overlay);\n                        }\n                    });\n\n                    if (!wrapper[0].style.zIndex || originalZIndex < zIndex) {\n                        wrapper.css(ZINDEX, zIndex + 2);\n                    }\n                    that.element.find(\"> .k-overlay\").remove();\n\n                    if (that._shouldFocus(target)) {\n                        if (!avoidFocus) {\n                            setTimeout(function() {\n                                that.wrapper.focus();\n                            }, openAnimation ? openAnimation.duration : 0);\n                        }\n\n                        var scrollTop = containmentContext ? that.containment.scrollTop() : $(window).scrollTop(),\n                            windowTop = parseInt(wrapper.position().top, 10);\n\n                        if (!that.options.pinned && windowTop > 0 && windowTop < scrollTop) {\n                            if (scrollTop > 0) {\n                                $(window).scrollTop(windowTop);\n                            } else {\n                                wrapper.css(\"top\", scrollTop);\n                            }\n                        }\n                    }\n\n                    wrapper = null;\n\n                    return that;\n                },\n\n                toggleMaximization: function() {\n                    if (this._closing) {\n                        return this;\n                    }\n\n                    return this[this.options.isMaximized ? \"restore\" : \"maximize\"]();\n                },\n\n                restore: function() {\n                    var that = this;\n                    var options = that.options;\n                    var minHeight = options.minHeight;\n                    var restoreOptions = that.restoreOptions;\n                    var shouldRestrictTop;\n                    var container = that.containment && !that._isPinned ? that.containment : $(document);\n\n                    if (!options.isMaximized && !options.isMinimized) {\n                        return that;\n                    }\n\n                    if (minHeight && minHeight != Infinity) {\n                        that.wrapper.css(\"min-height\", minHeight);\n                    }\n\n                    if (restoreOptions && !options.isMaximized) {\n                        restoreOptions.height = constrain(restoreOptions.height, that.options.minHeight, that.options.maxHeight);\n\n                        shouldRestrictTop = options.position.top + parseInt(restoreOptions.height, 10) > that.maxTop;\n\n                        if (shouldRestrictTop) {\n                            options.position.top = constrain(options.position.top, that.minTop, that.maxTop - parseInt(restoreOptions.height, 10));\n\n                            extend(restoreOptions, {\n                                left: options.position.left,\n                                top: options.position.top\n                            });\n                        }\n                    }\n\n                    that.wrapper\n                        .css({\n                            position: options.pinned ? \"fixed\" : \"absolute\",\n                            left: restoreOptions.left,\n                            top: restoreOptions.top,\n                            width: restoreOptions.width,\n                            height: restoreOptions.height\n                        })\n                        .removeClass(MAXIMIZEDSTATE)\n                        .removeClass(KWINDOWMINIMIZED)\n                        .find(\".k-window-content,.k-resize-handle\").show().end()\n                        .find(\".k-window-titlebar .k-i-window-restore,.k-window-titlebar .k-svg-i-window-restore\").parent().remove().end().end()\n                        .find(MINIMIZE_MAXIMIZEICONSELECTORS).parent().show().end().end()\n                        .find(PIN_UNPINICONCLASSSELECTOR).parent().show();\n\n                    if (options.isMaximized) {\n                        that.wrapper.find(\".k-i-window,.k-svg-i-window\").parent().trigger(\"focus\");\n                    } else if (options.isMinimized) {\n                        that.wrapper.find(\".k-i-window-minimize,.k-svg-i-window-minimize\").parent().trigger(\"focus\");\n                    }\n\n                    that.options.width = restoreOptions.width;\n                    that.options.height = restoreOptions.height;\n\n                    if (!that.options.modal.preventScroll) {\n                        that._enableDocumentScrolling();\n                    }\n\n                    if (that._containerScrollTop && that._containerScrollTop > 0) {\n                        container.scrollTop(that._containerScrollTop);\n                    }\n                    if (that._containerScrollLeft && that._containerScrollLeft > 0) {\n                        container.scrollLeft(that._containerScrollLeft);\n                    }\n\n                    options.isMaximized = options.isMinimized = false;\n\n                    that.wrapper.removeAttr(\"aria-labelled-by\");\n\n                    that.resize();\n\n                    that.trigger(RESTORE);\n\n                    return that;\n                },\n\n                _sizingAction: function(actionId, callback) {\n                    var that = this,\n                        wrapper = that.wrapper,\n                        style = wrapper[0].style,\n                        options = that.options;\n\n                    if (options.isMaximized || options.isMinimized) {\n                        return that;\n                    }\n\n                    that.restoreOptions = {\n                        width: style.width,\n                        height: style.height\n                    };\n\n                    wrapper\n                        .children(KWINDOWRESIZEHANDLES).hide().end()\n                        .children(KWINDOWTITLEBAR).find(MINIMIZE_MAXIMIZEICONSELECTORS).parent().hide()\n                        .eq(0).before(templates.action({ name: \"window-restore\" }));\n\n                    callback.call(that);\n\n                    that.wrapper.children(KWINDOWTITLEBAR).find(PIN_UNPINICONCLASSSELECTOR).parent().toggle(actionId !== \"maximize\");\n\n                    that.trigger(actionId);\n\n                    wrapper.find(\".k-i-window-restore,.k-svg-i-window-restore\").parent().trigger(\"focus\");\n\n                    return that;\n                },\n\n                maximize: function() {\n                    this._sizingAction(\"maximize\", function() {\n                        var that = this,\n                            wrapper = that.wrapper,\n                            containmentContext = this.containment && !that._isPinned,\n                            position = wrapper.position(),\n                            doc = $(document);\n\n                        extend(that.restoreOptions, {\n                            left: position.left + (containmentContext ? this.containment.scrollLeft() : 0),\n                            top: position.top + (containmentContext ? this.containment.scrollTop() : 0)\n                        });\n\n                        this._containerScrollTop = containmentContext ? this.containment.scrollTop() : doc.scrollTop();\n                        this._containerScrollLeft = containmentContext ? this.containment.scrollLeft() : doc.scrollLeft();\n\n                        that._stopDocumentScrolling();\n\n                        wrapper\n                            .css({\n                                top: containmentContext ? this.containment.scrollTop() : 0,\n                                left: containmentContext ? this.containment.scrollLeft() : 0,\n                                position: containmentContext ? \"absolute\" : \"fixed\"\n                            })\n                            .addClass(MAXIMIZEDSTATE);\n\n                        that.options.isMaximized = true;\n\n                        that._onDocumentResize();\n                    });\n\n                    return this;\n                },\n\n                _stopDocumentScrolling: function() {\n                    var that = this;\n                    var containment = that.containment;\n\n                    if (containment && !that._isPinned) {\n                        that._storeOverflowRule(containment);\n                        containment.css(OVERFLOW, HIDDEN);\n                        that.wrapper.css({\n                            maxWidth: containment.innerWidth(),\n                            maxHeight: containment.innerHeight()\n                        });\n                        return;\n                    }\n\n                    var $body = $(\"body\");\n                    that._storeOverflowRule($body);\n                    $body.css(OVERFLOW, HIDDEN);\n\n                    var $html = $(\"html\");\n                    that._storeOverflowRule($html);\n                    $html.css(OVERFLOW, HIDDEN);\n                },\n\n                _enableDocumentScrolling: function() {\n                    var that = this;\n                    var containment = that.containment;\n\n                    if (containment && !that._isPinned) {\n                        that._restoreOverflowRule(containment);\n                        that.wrapper.css({\n                            maxWidth: containment.width,\n                            maxHeight: containment.height\n                        });\n                        return;\n                    }\n\n                    that._restoreOverflowRule($(document.body));\n                    that._restoreOverflowRule($(\"html\"));\n                },\n\n                _storeOverflowRule: function($element) {\n                    if (this._isOverflowStored($element)) {\n                        return;\n                    }\n\n                    var overflowRule = $element.get(0).style.overflow;\n\n                    if (typeof overflowRule === \"string\") {\n                        $element.data(DATADOCOVERFLOWRULE, overflowRule);\n                    }\n                },\n\n                _isOverflowStored: function($element) {\n                    return typeof $element.data(DATADOCOVERFLOWRULE) === \"string\";\n                },\n\n                _restoreOverflowRule: function($element) {\n                    var overflowRule = $element.data(DATADOCOVERFLOWRULE);\n\n                    if (overflowRule !== null && overflowRule !== undefined$1) {\n                        $element.css(OVERFLOW, overflowRule);\n                        $element.removeData(DATADOCOVERFLOWRULE);\n                    } else {\n                        $element.css(OVERFLOW, \"\");\n                    }\n                },\n\n                isMaximized: function() {\n                    return this.options.isMaximized;\n                },\n\n                minimize: function() {\n                    this._sizingAction(\"minimize\", function() {\n                        var that = this;\n\n                        that.wrapper.css({\n                            height: \"\",\n                            minHeight: \"\"\n                        });\n\n                        that.element.hide();\n\n                        that.options.isMinimized = true;\n                    });\n\n                    this.wrapper.attr(\"aria-labelled-by\", this.element.attr(\"aria-labelled-by\"));\n                    this.wrapper.addClass(KWINDOWMINIMIZED);\n\n                    this._updateBoundaries();\n\n                    return this;\n                },\n\n                isMinimized: function() {\n                    return this.options.isMinimized;\n                },\n\n                pin: function() {\n                    var that = this,\n                        win = $(window),\n                        wrapper = that.wrapper,\n                        options = that.options,\n                        position = options.position,\n                        top = this.containment ? getPosition(wrapper[0]).top + toInt(this.containment, \"borderTopWidth\") : toInt(wrapper, \"top\"),\n                        left = this.containment ? getPosition(wrapper[0]).left + toInt(this.containment, \"borderLeftWidth\") : toInt(wrapper, \"left\");\n\n                    if (!that.options.isMaximized) {\n                        position.top = top;\n                        position.left = left;\n\n                        if (that._scrollIsAppended && (!this.containment || this.containment.css(\"position\") !== \"fixed\")) {\n\n                            position.top -= win.scrollTop();\n                            position.left -= win.scrollLeft();\n                            that._scrollIsAppended = false;\n                        }\n\n                        wrapper.css(extend(position, { position: \"fixed\" }));\n                        var pinIcon = wrapper.children(KWINDOWTITLEBAR).find(KPINICONCLASSSELECTOR).eq(0);\n                        if (pinIcon.length > 0) {\n                            kendo.ui.icon(pinIcon, { icon: \"unpin\" });\n                        }\n\n                        that._isPinned = true;\n                        that.options.pinned = true;\n\n                        if (this.containment) {\n                            options.maxWidth = options.maxHeight = Infinity;\n                            wrapper.css({\n                                maxWidth: \"\",\n                                maxHeight: \"\"\n                            });\n                        }\n                    }\n                },\n\n                unpin: function() {\n                    var that = this,\n                        win = $(window),\n                        wrapper = that.wrapper,\n                        options = that.options,\n                        position = that.options.position,\n                        containment = that.containment,\n                        top = parseInt(wrapper.css(\"top\"), 10) + win.scrollTop(),\n                        left = parseInt(wrapper.css(\"left\"), 10) + win.scrollLeft();\n\n                    if (!that.options.isMaximized) {\n                        that._isPinned = false;\n                        that._scrollIsAppended = true;\n                        that.options.pinned = false;\n\n                        if (containment) {\n                            that._updateBoundaries();\n\n                            options.maxWidth = Math.min(containment.width, options.maxWidth);\n                            options.maxHeight = Math.min(containment.height - toInt(wrapper, \"padding-top\"), options.maxHeight);\n\n                            wrapper.css({\n                                maxWidth: options.maxWidth,\n                                maxHeight: options.maxHeight\n                            });\n\n                            if (top < containment.position.top) {\n                                top = that.minTop;\n                            } else if (top > containment.position.top + containment.height) {\n                                top = that.maxTop;\n                            } else {\n                                top = top + containment.scrollTop() - (containment.position.top + toInt(containment, \"border-top-width\"));\n                            }\n\n                            if (left < containment.position.left) {\n                                left = that.minLeft;\n                            } else if (left > containment.position.left + containment.width) {\n                                left = that.maxLeft;\n                            } else {\n                                left = left + containment.scrollLeft() - (containment.position.left + toInt(containment, \"border-left-width\"));\n                            }\n\n                        }\n\n                        position.top = constrain(top, that.minTop, that.maxTop);\n                        position.left = constrain(left, that.minLeft, that.maxLeft);\n\n                        wrapper.css(extend(position, { position: \"\" }));\n                        var pinIcon = wrapper.children(KWINDOWTITLEBAR).find(KUNPINICONCLASSSELECTOR).eq(0);\n                        if (pinIcon.length > 0) {\n                            kendo.ui.icon(pinIcon, { icon: \"pin\" });\n                        }\n                    }\n                },\n\n                _onDocumentResize: function() {\n                    var that = this,\n                        wrapper = that.wrapper,\n                        wnd = $(window),\n                        zoomLevel = kendo.support.zoomLevel(),\n                        contentBoxSizing = wrapper.css(\"box-sizing\") == \"content-box\",\n                        w, h;\n\n                    if (!that.options.isMaximized) {\n                        return;\n                    }\n\n                    var lrBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-left-width\") + toInt(wrapper, \"border-right-width\") : 0;\n                    var tbBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-top-width\") + toInt(wrapper, \"border-bottom-width\") : 0;\n                    var paddingTop = contentBoxSizing ? toInt(wrapper, \"padding-top\") : 0;\n\n                    if (that.containment && !that._isPinned) {\n                        w = that.containment.innerWidth() - lrBorderWidth;\n                        h = that.containment.innerHeight() - (tbBorderWidth + paddingTop);\n                    } else {\n                        w = wnd.width() / zoomLevel - lrBorderWidth;\n                        h = wnd.height() / zoomLevel - (tbBorderWidth + paddingTop);\n                    }\n\n                    wrapper.css({\n                        width: w,\n                        height: h\n                    });\n                    that.options.width = w;\n                    that.options.height = h;\n\n                    that.resize();\n                },\n\n                refresh: function(options) {\n                    var that = this,\n                        initOptions = that.options,\n                        element = $(that.element),\n                        iframe,\n                        showIframe,\n                        url;\n\n                    if (!isPlainObject(options)) {\n                        options = { url: options };\n                    }\n\n                    options = extend(initOptions.content, options);\n\n                    showIframe = defined(initOptions.iframe) ? initOptions.iframe : options.iframe;\n\n                    url = options.url;\n\n                    if (url) {\n                        if (!defined(showIframe)) {\n                            showIframe = !isLocalUrl(url);\n                        }\n\n                        if (!showIframe) {\n                            // perform AJAX request\n                            that._ajaxRequest(options);\n                        } else {\n                            iframe = element.find(\".\" + KCONTENTFRAME)[0];\n\n                            if (iframe) {\n                                // refresh existing iframe\n                                iframe.src = url || iframe.src;\n                            } else {\n                                // render new iframe\n                                element.html(templates.contentFrame(extend({}, initOptions, { content: options })));\n                            }\n\n                            element.find(\".\" + KCONTENTFRAME)\n                                .off(\"load\" + NS)\n                                .on(\"load\" + NS, this._triggerRefresh.bind(this));\n                        }\n                    } else {\n                        if (options.template) {\n                            // refresh template\n                            that.content(template(options.template)({}));\n                        }\n\n                        that.trigger(REFRESH);\n                    }\n\n                    element.toggleClass(\"k-window-iframecontent\", !!showIframe);\n\n                    return that;\n                },\n\n                _triggerRefresh: function() {\n                    this.trigger(REFRESH);\n                },\n\n                _ajaxComplete: function() {\n                    clearTimeout(this._loadingIconTimeout);\n                    this.wrapper.find(REFRESHICONSELECTOR).removeClass(LOADINGICONCLASS);\n                },\n\n                _ajaxError: function(xhr, status) {\n                    this.trigger(ERROR, { status: status, xhr: xhr });\n                },\n\n                _ajaxSuccess: function(contentTemplate) {\n                    return function(data) {\n                        var html = data;\n                        if (contentTemplate) {\n                            html = template(contentTemplate)(data || {});\n                        }\n\n                        this.content(html, data);\n                        this.element.prop(\"scrollTop\", 0);\n\n                        this.trigger(REFRESH);\n                    };\n                },\n\n                _showLoading: function() {\n                    this.wrapper.find(REFRESHICONSELECTOR).addClass(LOADINGICONCLASS);\n                },\n\n                _ajaxRequest: function(options) {\n                    this._loadingIconTimeout = setTimeout(this._showLoading.bind(this), 100);\n\n                    $.ajax(extend({\n                        type: \"GET\",\n                        dataType: \"html\",\n                        cache: false,\n                        error: this._ajaxError.bind(this),\n                        complete: this._ajaxComplete.bind(this),\n                        success: this._ajaxSuccess(options.template).bind(this)\n                    }, options));\n                },\n\n                _destroy: function() {\n                    if (this.resizing) {\n                        this.resizing.destroy();\n                    }\n\n                    if (this.dragging) {\n                        this.dragging.destroy();\n                    }\n\n                    this.wrapper.off(NS)\n                        .children(KWINDOWCONTENT).off(NS).end()\n                        .find(\".k-resize-handle,.k-window-titlebar\").off(NS);\n\n                    $(window).off(\"resize\" + NS + this._marker);\n                    $(window).off(MODAL_NS);\n                    $(window).off(NS);\n\n                    clearTimeout(this._loadingIconTimeout);\n\n                    Widget.fn.destroy.call(this);\n\n                    this.unbind(undefined$1);\n\n                    kendo.destroy(this.wrapper);\n                },\n\n                destroy: function() {\n                    this._destroy();\n\n                    if (this.options.modal) {\n                        this._removeOverlay(true);\n                    }\n\n                    this.wrapper.empty().remove();\n\n                    this.wrapper = this.appendTo = this.element = $();\n                },\n\n                _createWindow: function() {\n                    var contentHtml = this.element,\n                        options = this.options,\n                        iframeSrcAttributes,\n                        wrapper,\n                        isRtl = kendo.support.isRtl(contentHtml);\n\n                    if (options.scrollable === false) {\n                        contentHtml.css(\"overflow\", \"hidden\");\n                    }\n\n                    wrapper = $(templates.wrapper(options));\n\n                    // Collect the src attributes of all iframes and then set them to empty string.\n                    // This seems to fix this IE9 \"feature\": http://msdn.microsoft.com/en-us/library/gg622929%28v=VS.85%29.aspx?ppud=4\n                    iframeSrcAttributes = contentHtml.find(\"iframe:not(.k-content-frame)\").map(function() {\n                        var src = this.getAttribute(\"src\");\n                        this.src = \"\";\n                        return src;\n                    });\n\n                    // Make sure the wrapper is appended to the body only once. IE9+ will throw exceptions if you move iframes in DOM\n                    wrapper\n                        .toggleClass(\"k-rtl\", isRtl)\n                        .attr(\"tabindex\", 0)\n                        .append(contentHtml)\n                        .find(\"iframe:not(.k-content-frame)\").each(function(index) {\n                        // Restore the src attribute of the iframes when they are part of the live DOM tree\n                        this.src = iframeSrcAttributes[index];\n                    });\n\n                    if (this.containment) {\n                        this.containment.prepend(wrapper);\n                    } else if (this.appendTo) {\n                        wrapper.appendTo(this.appendTo);\n                    }\n\n                    wrapper.find(\".k-window-title\")\n                        .css(isRtl ? \"left\" : \"right\", outerWidth(wrapper.find(\".k-window-titlebar-actions\")) + 10);\n\n                    contentHtml.css(\"visibility\", \"\").show();\n\n                    contentHtml.find(\"[data-role=editor]\").each(function() {\n                        var editor = $(this).data(\"kendoEditor\");\n\n                        if (editor) {\n                            editor.refresh();\n                        }\n                    });\n\n                    wrapper = contentHtml = null;\n                }\n            });\n\n            templates = {\n                wrapper: template(function () { return \"<div class='k-window'></div>\"; }),\n                action: template(function (ref) {\n                    var name = ref.name;\n                    var icon = ref.icon;\n\n                    var iconName = (icon || \"\").toLowerCase() || name.toLowerCase();\n                    if (iconName == \"restore\") { iconName = \"window-restore\"; }\n\n                    return kendo.html.renderButton((\"<button role='button' class='k-window-titlebar-action' aria-label='\" + name + \"'></button>\"), { icon: iconName, fillMode: \"flat\" });\n                }),\n                titlebar: template(function (ref) {\n                        var title = ref.title;\n\n                        return \"<div class='k-window-titlebar k-hstack'>\" +\n                        \"<span class='k-window-title'>\" + title + \"</span>\" +\n                        \"<div class='k-window-titlebar-actions'></div>\" +\n                    \"</div>\";\n            }\n                ),\n                overlay: \"<div class='k-overlay'></div>\",\n                contentFrame: template(function (ref) {\n                        var title = ref.title;\n                        var content = ref.content;\n\n                        return \"<iframe frameborder='0' title='\" + title + \"' class='\" + KCONTENTFRAME + \"' \" +\n                    \"src='\" + (content.url) + \"'>\" +\n                    \"This page requires frames in order to show content\" +\n                    \"</iframe>\";\n            }\n                ),\n                resizeHandle: template(function (data) { return (\"<div aria-hidden='true' class='k-resize-handle k-resize-\" + data + \"'></div>\"); })\n            };\n\n\n            function WindowResizing(wnd) {\n                var that = this;\n                that.owner = wnd;\n                that._preventDragging = false;\n                that._draggable = new Draggable(wnd.wrapper, {\n                    filter: \">\" + KWINDOWRESIZEHANDLES,\n                    group: wnd.wrapper.id + \"-resizing\",\n                    dragstart: that.dragstart.bind(that),\n                    drag: that.drag.bind(that),\n                    dragend: that.dragend.bind(that)\n                });\n\n                that._draggable.userEvents.bind(\"press\", that.addOverlay.bind(that));\n                that._draggable.userEvents.bind(\"release\", that.removeOverlay.bind(that));\n            }\n\n            WindowResizing.prototype = {\n                addOverlay: function() {\n                    this.owner.wrapper.append(templates.overlay);\n                },\n                removeOverlay: function() {\n                    this.owner.wrapper.find(KOVERLAY).remove();\n                },\n                dragstart: function(e) {\n                    var that = this;\n                    var wnd = that.owner;\n                    var wrapper = wnd.wrapper;\n\n                    that._preventDragging = wnd.trigger(RESIZESTART);\n                    if (that._preventDragging) {\n                        return;\n                    }\n\n                    that.elementPadding = parseInt(wrapper.css(\"padding-top\"), 10);\n                    that.initialPosition = kendo.getOffset(wrapper, \"position\");\n\n                    that.resizeDirection = e.currentTarget.prop(\"className\").replace(\"k-resize-handle k-resize-\", \"\");\n\n                    that.initialSize = {\n                        width: wrapper.outerWidth(),\n                        height: wrapper.outerHeight()\n                    };\n\n                    wnd._updateBoundaries();\n\n                    that.containerOffset = wnd.containment ? wnd.containment.position : kendo.getOffset(wnd.appendTo);\n\n                    var offsetParent = wrapper.offsetParent();\n\n                    if (offsetParent.is(\"html\")) {\n                        that.containerOffset.top = that.containerOffset.left = 0;\n                    } else {\n                        var marginTop = offsetParent.css(\"margin-top\");\n                        var marginLeft = offsetParent.css(\"margin-left\");\n                        var hasMargin = !zero.test(marginTop) || !zero.test(marginLeft);\n                        if (hasMargin) {\n                            var wrapperPosition = getPosition(wrapper[0]);\n                            var relativeElMarginLeft = wrapperPosition.left - that.containerOffset.left - that.initialPosition.left;\n                            var relativeElMarginTop = wrapperPosition.top - that.containerOffset.top - that.initialPosition.top;\n\n                            that._relativeElMarginLeft = relativeElMarginLeft > 1 ? relativeElMarginLeft : 0;\n                            that._relativeElMarginTop = relativeElMarginTop > 1 ? relativeElMarginTop : 0;\n\n                            that.initialPosition.left += that._relativeElMarginLeft;\n                            that.initialPosition.top += that._relativeElMarginTop;\n                        }\n                    }\n\n                    wrapper\n                        .children(KWINDOWRESIZEHANDLES).not(e.currentTarget).hide();\n\n                    $(BODY).css(CURSOR, e.currentTarget.css(CURSOR));\n                },\n                drag: function(e) {\n                    if (this._preventDragging) {\n                        return;\n                    }\n                    var that = this,\n                        wnd = that.owner,\n                        wrapper = wnd.wrapper,\n                        options = wnd.options,\n                        position = options.position,\n                        direction = that.resizeDirection,\n                        containerOffset = that.containerOffset,\n                        initialPosition = that.initialPosition,\n                        initialSize = that.initialSize,\n                        containmentContext = wnd.containment && !wnd._isPinned,\n                        rtl = kendo.support.isRtl(wnd.containment),\n                        leftRtlOffset = containmentContext && rtl && wnd.containment.innerWidth() > wnd.containment.width ? kendo.support.scrollbar() : 0,\n                        scrollOffset = containmentContext ? { top: wnd.containment.scrollTop(), left: wnd.containment.scrollLeft() } : { top: 0, left: 0 },\n                        newWidth, newHeight,\n                        windowBottom, windowRight,\n                        x = Math.max(e.x.location, 0),\n                        y = Math.max(e.y.location, 0);\n\n                        if (direction.indexOf(\"e\") >= 0) {\n\n                            if (wnd.containment && x - initialSize.width >= wnd.maxLeft - scrollOffset.left + containerOffset.left + leftRtlOffset) {\n                                newWidth = wnd.maxLeft + leftRtlOffset - initialPosition.left + initialSize.width - scrollOffset.left;\n                            } else {\n                                newWidth = x - initialPosition.left - containerOffset.left;\n                            }\n\n                            wrapper.outerWidth(constrain(newWidth, options.minWidth, options.maxWidth));\n                        } else if (direction.indexOf(\"w\") >= 0) {\n                            windowRight = initialPosition.left + initialSize.width + containerOffset.left;\n                            newWidth = constrain(windowRight - x, options.minWidth, options.maxWidth);\n                            position.left = windowRight - newWidth - containerOffset.left - leftRtlOffset - (that._relativeElMarginLeft || 0) + scrollOffset.left;\n\n                            if (wnd.containment && position.left <= wnd.minLeft) {\n                                position.left = wnd.minLeft;\n                                newWidth = constrain(windowRight - leftRtlOffset - position.left - containerOffset.left + scrollOffset.left, options.minWidth, options.maxWidth);\n                            }\n\n                            wrapper.css({\n                                left: position.left,\n                                width: newWidth\n                            });\n                        }\n\n                        var newWindowTop = y;\n                        if (wnd.options.pinned) {\n                            newWindowTop -= $(window).scrollTop();\n                        }\n                        if (direction.indexOf(\"s\") >= 0) {\n                            newHeight = newWindowTop - initialPosition.top - that.elementPadding - containerOffset.top;\n\n                            if (newWindowTop - initialSize.height - that.elementPadding >= wnd.maxTop + containerOffset.top - scrollOffset.top) {\n                                newHeight = wnd.maxTop - initialPosition.top + initialSize.height - scrollOffset.top;\n                            }\n\n                            wrapper.outerHeight(constrain(newHeight, options.minHeight, options.maxHeight));\n                        } else if (direction.indexOf(\"n\") >= 0) {\n                            windowBottom = initialPosition.top + initialSize.height + containerOffset.top;\n                            newHeight = constrain(windowBottom - newWindowTop, options.minHeight, options.maxHeight);\n                            position.top = windowBottom - newHeight - containerOffset.top - (that._relativeElMarginTop || 0) + scrollOffset.top;\n\n                            if (position.top <= wnd.minTop && wnd.containment) {\n                                position.top = wnd.minTop;\n                                newHeight = constrain(windowBottom - position.top - containerOffset.top + scrollOffset.top, options.minHeight, options.maxHeight);\n                            }\n\n                            wrapper.css({\n                                top: position.top,\n                                height: newHeight\n                            });\n                        }\n\n                        if (newWidth) {\n                            wnd.options.width = newWidth + \"px\";\n                        }\n                        if (newHeight) {\n                            wnd.options.height = newHeight + \"px\";\n                        }\n\n                        wnd.resize();\n                },\n                dragend: function(e) {\n                    if (this._preventDragging) {\n                        return;\n                    }\n\n                    var that = this,\n                        wnd = that.owner,\n                        wrapper = wnd.wrapper;\n\n                    wrapper\n                        .children(KWINDOWRESIZEHANDLES).not(e.currentTarget).show();\n\n                    $(BODY).css(CURSOR, \"\");\n\n                    if (wnd.touchScroller) {\n                        wnd.touchScroller.reset();\n                    }\n\n                    if (e.keyCode == 27) {\n                        wrapper.css(that.initialPosition)\n                            .css(that.initialSize);\n                    }\n\n                    wnd.trigger(RESIZEEND);\n\n                    return false;\n                },\n                destroy: function() {\n                    if (this._draggable) {\n                        this._draggable.destroy();\n                    }\n\n                    this._draggable = this.owner = null;\n                }\n            };\n\n            function WindowDragging(wnd, dragHandle) {\n                var that = this;\n                that.owner = wnd;\n                that._preventDragging = false;\n                that._draggable = new Draggable(wnd.wrapper, {\n                    filter: dragHandle,\n                    group: wnd.wrapper.id + \"-moving\",\n                    dragstart: that.dragstart.bind(that),\n                    drag: that.drag.bind(that),\n                    dragend: that.dragend.bind(that),\n                    dragcancel: that.dragcancel.bind(that)\n                });\n\n                that._draggable.userEvents.stopPropagation = false;\n            }\n\n            WindowDragging.prototype = {\n                dragstart: function(e) {\n                    var wnd = this.owner,\n                        draggable = wnd.options.draggable,\n                        element = wnd.element,\n                        actions = element.find(\".k-window-titlebar-actions\"),\n                        containerOffset = kendo.getOffset(wnd.appendTo);\n\n                    this._preventDragging = wnd.trigger(DRAGSTART) || !draggable;\n                    if (this._preventDragging || wnd.isMaximized()) {\n                        return;\n                    }\n\n                    wnd.initialWindowPosition = kendo.getOffset(wnd.wrapper, \"position\");\n\n                    wnd.initialPointerPosition = {\n                        left: wnd.options.position.left,\n                        top: wnd.options.position.top\n                    };\n\n                    wnd.startPosition = {\n                        left: e.x.client - wnd.initialWindowPosition.left,\n                        top: e.y.client - wnd.initialWindowPosition.top\n                    };\n\n                    wnd._updateBoundaries();\n                    if (!wnd.containment) {\n                        if (actions.length > 0) {\n                            wnd.minLeft = outerWidth(actions) + parseInt(actions.css(\"right\"), 10) - outerWidth(element);\n                        } else {\n                            wnd.minLeft = 20 - outerWidth(element); // at least 20px remain visible\n                        }\n\n                        wnd.minLeft -= containerOffset.left;\n                        wnd.minTop = -containerOffset.top;\n                    }\n\n                    $(templates.overlay).appendTo(wnd.wrapper).css({ opacity: 0 });\n\n                    wnd.wrapper.children(KWINDOWRESIZEHANDLES).hide();\n\n                    $(BODY).css(CURSOR, e.currentTarget.css(CURSOR));\n                },\n\n                drag: function(e) {\n                    var wnd = this.owner;\n                    var position = wnd.options.position;\n                    var axis = wnd.options.draggable.axis;\n                    var left;\n                    var top;\n\n                    if (this._preventDragging || wnd.isMaximized()) {\n                        return;\n                    }\n\n                    if (!axis || axis.toLowerCase() === \"x\") {\n                        left = e.x.client - wnd.startPosition.left;\n\n                        if (wnd.containment && !wnd._isPinned) {\n                            left += wnd.containment.scrollLeft();\n                        }\n\n                        position.left = constrain(left, wnd.minLeft, wnd.maxLeft);\n                    }\n\n                    if (!axis || axis.toLowerCase() === \"y\") {\n                        top = e.y.client - wnd.startPosition.top;\n\n                        if (wnd.containment && !wnd._isPinned) {\n                            top += wnd.containment.scrollTop();\n                        }\n\n                        position.top = constrain(top, wnd.minTop, wnd.maxTop);\n                    }\n\n                    if (kendo.support.transforms) {\n                        $(wnd.wrapper).css(\n                            \"transform\", \"translate(\" +\n                            (position.left - wnd.initialPointerPosition.left) + \"px, \" +\n                            (position.top - wnd.initialPointerPosition.top) + \"px)\"\n                        );\n                    } else {\n                        $(wnd.wrapper).css(position);\n                    }\n\n                },\n\n                _finishDrag: function() {\n                    var wnd = this.owner;\n\n                    wnd.wrapper\n                        .children(KWINDOWRESIZEHANDLES).toggle(!wnd.options.isMinimized).end()\n                        .find(KOVERLAY).remove();\n\n                    $(BODY).css(CURSOR, \"\");\n                },\n\n                dragcancel: function(e) {\n                    if (this._preventDragging) {\n                        return;\n                    }\n                    this._finishDrag();\n\n                    e.currentTarget.closest(KWINDOW).css(this.owner.initialWindowPosition);\n                },\n\n                dragend: function() {\n                    var wnd = this.owner;\n\n                    if (this._preventDragging || wnd.isMaximized()) {\n                        return;\n                    }\n\n                    $(wnd.wrapper)\n                        .css(wnd.options.position)\n                        .css(\"transform\", \"\");\n\n                    this._finishDrag();\n\n                    wnd.trigger(DRAGEND);\n\n                    return false;\n                },\n                destroy: function() {\n                    if (this._draggable) {\n                        this._draggable.destroy();\n                    }\n\n                    this._draggable = this.owner = null;\n                }\n            };\n\n            kendo.ui.plugin(Window);\n\n        })(window.kendo.jQuery);\n\n}));\n"]}