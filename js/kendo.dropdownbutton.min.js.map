{"version":3,"sources":["raw-js/kendo.dropdownbutton.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendodropdownbutton","js","this","$","kendo","window","Widget","ui","NS","keys","extend","html","outerWidth","_outerWidth","ARIA_DISABLED","ARIA_LABEL","ARIA_EXPANDED","DISABLED","DISABLEDSTATE","CLICK","OPEN","CLOSE","FOCUS","cssClasses","DropDownButton","init","element","options","that","enabled","prop","fn","call","wrapper","_mainButton","_renderMenu","_enable","_aria","_attachEvents","notify","_applyCssClasses","name","direction","items","rounded","size","fillMode","themeColor","showArrowButton","icon","popup","messages","labelSuffix","events","type","attr","click","addClass","renderButton","append","htmlEncode","appendTo","arrowButton","find","remove","menu","list","text","document","body","kendoButtonMenu","mainButton","toggleTarget","menuOpen","menuOpenHandler","bind","menuClose","menuCloseHandler","menuClick","_click","data","ev","computedWidth","trigger","target","preventDefault","sender","adjustPopupWidth","on","_keydown","id","originalEvent","close","is","keyCode","ENTER","SPACEBAR","focus","enable","soft","toggleClass","removeAttr","menuItem","length","hide","show","open","setOptions","destroy","off","plugin","jQuery","kendo$1","__meta__","category","description","depends","Object","defineProperty","value"],"mappings":"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","file":"kendo.dropdownbutton.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.html.button.js'), require('kendo.button.menu.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.html.button', 'kendo.button.menu'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendodropdownbutton = global.kendodropdownbutton || {}, global.kendodropdownbutton.js = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"dropdownbutton\",\n        name: \"DropDownButton\",\n        category: \"web\",\n        description: \"The DropDownButton allows the user to execute an action from a drop-down list.\",\n        depends: [\"button.menu\", \"html.button\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            NS = \".kendoDropDownButton\",\n            ui = kendo.ui,\n            keys = kendo.keys,\n            extend = $.extend,\n            html = kendo.html,\n            outerWidth = kendo._outerWidth,\n\n            DOT = \".\",\n            ID = \"id\",\n\n            ARIA_HASPOPUP = \"aria-haspopup\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_CONTROLS = \"aria-controls\",\n            ARIA_LABEL = \"aria-label\",\n            ARIA_EXPANDED = \"aria-expanded\",\n\n            DISABLED = \"disabled\",\n            DISABLEDSTATE = \"k-disabled\",\n\n            CLICK = \"click\",\n            KEYDOWN = \"keydown\",\n            OPEN = \"open\",\n            CLOSE = \"close\",\n\n            FOCUS = \"focus\";\n\n        var cssClasses = {\n            menuButton: \"k-menu-button\",\n        };\n\n        var DropDownButton = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                options.enabled = options.enabled !== false && !$(element).prop(DISABLED);\n                Widget.fn.init.call(that, element, options);\n\n                that.wrapper = that.element;\n\n                that._mainButton();\n                that._renderMenu();\n\n                that._enable(that.options.enabled);\n\n                that._aria();\n\n                that._attachEvents();\n\n                kendo.notify(that);\n\n                that._applyCssClasses();\n            },\n\n            options: {\n                name: \"DropDownButton\",\n                direction: \"down\",\n                enabled: true,\n                items: [],\n                rounded: \"medium\",\n                size: \"medium\",\n                fillMode: \"solid\",\n                themeColor: \"base\",\n                showArrowButton: false,\n                icon: null,\n                popup: null,\n                messages: {\n                    labelSuffix: \"dropdownbutton\"\n                }\n            },\n\n            events: [\n                CLICK,\n                OPEN,\n                CLOSE\n            ],\n\n            _mainButton: function() {\n                var that = this,\n                    options = extend({}, that.options, {\n                        type: that.element.attr(\"type\") || \"button\"\n                    });\n\n                delete options.click;\n\n                that.element.addClass(cssClasses.menuButton);\n\n                html.renderButton(that.element, options);\n\n                if (that.options.showArrowButton) {\n                    $(\"<span></span>\")\n                        .addClass(\"k-button-arrow\")\n                        .addClass(\"k-menu-button-arrow\")\n                        .append(kendo.ui.icon(kendo.htmlEncode(\"caret-alt-down\")))\n                        .appendTo(that.element);\n                } else {\n                    const arrowButton = that.element.find(\".k-button-arrow\");\n                    if (arrowButton) {\n                        arrowButton.remove();\n                    }\n                }\n            },\n\n            _aria: function() {\n                var that = this,\n                    element = that.element,\n                    menu = that.menu;\n\n                element.attr(ARIA_HASPOPUP, menu ? \"menu\" : null);\n                element.attr(ARIA_EXPANDED, menu ? false : null);\n                element.attr(ARIA_CONTROLS, menu ? menu.list.attr(ID) : null);\n\n                if (!element.attr(ARIA_LABEL)) {\n                    element.attr(ARIA_LABEL, element.text() + \" \" + that.options.messages.labelSuffix);\n                }\n            },\n\n            _renderMenu: function() {\n                var that = this,\n                    options = extend({}, that.options),\n                    menu = $(\"<div></div>\");\n\n                delete options.click;\n                delete options.name;\n\n                that.menu = menu.appendTo(document.body).kendoButtonMenu(extend({\n                    mainButton: that.element,\n                    toggleTarget: that.element,\n                    menuOpen: that.menuOpenHandler.bind(that),\n                    menuClose: that.menuCloseHandler.bind(that),\n                    menuClick: that._click.bind(that)\n                }, options)).data(\"kendoButtonMenu\");\n            },\n\n            menuOpenHandler: function(ev) {\n                var that = this,\n                    computedWidth = outerWidth(that.element);\n\n                var isDefaultPrevented = that.trigger(OPEN, { target: that.element });\n                if (isDefaultPrevented) {\n                    ev.preventDefault();\n                    return;\n                }\n\n                ev.sender.adjustPopupWidth(computedWidth);\n                that.element.attr(ARIA_EXPANDED, true);\n            },\n\n            menuCloseHandler: function(ev) {\n                var that = this,\n                    isDefaultPrevented = that.trigger(CLOSE, { target: that.element });\n\n                if (isDefaultPrevented) {\n                    ev.preventDefault();\n                    return;\n                }\n\n                that.element.attr(ARIA_EXPANDED, false);\n                that.element.trigger(FOCUS);\n            },\n\n            _attachEvents: function() {\n                var that = this;\n\n                that.element.on(KEYDOWN + NS, that._keydown.bind(that));\n            },\n\n            _click: function(ev) {\n                var that = this,\n                    id = ev.id,\n                    target = ev.target,\n                    originalEvent = ev.originalEvent;\n\n                that.menu.close();\n\n                that.trigger(CLICK, { id: id, target: target, originalEvent: originalEvent });\n            },\n\n            _keydown: function(ev) {\n                var that = this;\n\n                if (that.element.is(DOT + DISABLEDSTATE) && (ev.keyCode === keys.ENTER || ev.keyCode === keys.SPACEBAR)) {\n                    ev.preventDefault();\n                }\n            },\n\n            focus: function() {\n                var that = this;\n                that.element.trigger(FOCUS);\n            },\n\n            _enable: function(enable, soft) {\n                this.element\n                    .toggleClass(DISABLEDSTATE, !enable);\n\n                if (enable) {\n                    this.element.removeAttr(ARIA_DISABLED);\n                } else {\n                    this.element.attr(ARIA_DISABLED, !enable);\n                }\n\n                if (!soft) {\n                    this.element.attr(DISABLED, !enable);\n                }\n            },\n\n            enable: function(enable, menuItem, soft) {\n                var that = this;\n\n                if (enable === undefined$1) {\n                    enable = true;\n                }\n\n                if (menuItem && menuItem.length) {\n                    that.menu.enable(enable, menuItem);\n                    return;\n                }\n\n                that.options.enabled = enable;\n\n                that._enable(enable, soft);\n                that.menu.enable(enable);\n            },\n\n            hide: function(menuItem) {\n                var that = this;\n\n                if (menuItem && menuItem.length) {\n                    that.menu.hide(menuItem);\n                }\n            },\n\n            show: function(menuItem) {\n                var that = this;\n\n                if (menuItem && menuItem.length) {\n                    that.menu.show(menuItem);\n                }\n            },\n\n            open: function() {\n                this.menu.open();\n            },\n\n            close: function() {\n                this.menu.close();\n            },\n\n            items: function() {\n                return this.menu.items();\n            },\n\n            setOptions: function(options) {\n                var that = this;\n\n                Widget.fn.setOptions.call(that, options);\n\n                if (options.popup || options.items || options.size) {\n                    that.menu.destroy();\n                    that._renderMenu();\n                }\n\n                that._mainButton();\n\n                that._aria();\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.menu.destroy();\n\n                that.element.off(NS);\n\n                Widget.fn.destroy.call(that);\n            }\n        });\n\n        ui.plugin(DropDownButton);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports[\"default\"] = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}