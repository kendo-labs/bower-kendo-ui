{"version":3,"file":"kendo.autocomplete.min.js","names":["factory","define","amd","$","undefined$1","kendo","window","encode","htmlEncode","support","caret","activeElement","_activeElement","placeholderSupported","placeholder","ui","List","keys","DataSource","data","ARIA_DISABLED","ARIA_READONLY","CHANGE","DISABLED","READONLY","FOCUSED","HIDDENCLASS","STATEDISABLED","ns","HOVEREVENTS","indexOfWordAtCaret","caretIdx","text","separator","substring","split","length","AutoComplete","extend","init","element","options","wrapper","that","this","Array","isArray","dataSource","fn","call","attr","_wrapper","_loader","_clearButton","_dataSource","_ignoreCase","type","_popup","addClass","on","_keydown","bind","_keypress","_search","_prev","_accessor","_oldText","_placeholder","ev","filterInput","relatedTarget","_change","close","removeClass","autocomplete","role","_clear","_clearValue","_enable","_old","_initList","parents","is","enable","listView","e","preventDefault","_resetFocusItemHandler","_resetFocusItem","notify","_toggleCloseVisibility","_applyCssClasses","label","_label","_aria","name","enabled","suggest","template","groupTemplate","fixedGroupTemplate","dataTextField","minLength","enforceMinLength","delay","height","filter","ignoreCase","highlightFirst","animation","virtual","value","clearButton","autoWidth","popup","size","fillMode","rounded","_onActionSheetCreate","val","trigger","_onCloseButtonPressed","_refreshHandler","_unbindDataSource","_progressHandler","_showBusy","_errorHandler","_hideBusy","create","setDataSource","events","setOptions","listOptions","_listOptions","_accessors","skipUpdateOnBind","dataValueField","selectedItemChange","_editable","off","readonly","disable","_toggleHover","prop","current","focus","_deactivateItem","destroy","refresh","select","li","_select","search","word","_separator","accentFoldingFiltering","clearTimeout","_typingTimeout","wordAtCaret","_open","_mute","_filterSource","toLocaleLowerCase","toLowerCase","operator","field","one","_unifySeparators","idx","key","_last","words","wordIndex","selectionEnd","BACKSPACE","DELETE","view","inArray","ul","_text","indexOf","lastIndexOf","toString","push","join","_refreshFloatingLabel","_click","item","dataItem","dataItemByIndex","getElementIndex","_active","done","_blur","_clearText","noop","index","scrollTo","_listBound","action","flatView","groupsLength","_group","isActive","_renderFooter","_renderNoData","_toggleNoData","_toggleHeader","_resizePopup","position","_inputValue","_allowOpening","unbind","_touchScroller","reset","callback","_muted","_listChange","_selectValue","selectedDataItems","defaultSeparator","splice","replaceWordAtCaret","_defaultSeparator","_preselect","oldText","setValue","unifyType","valueUpdated","_typing","itemSelected","typing","className","keyCode","visible","DOWN","_move","open","ESC","altKey","UP","HOME","END","ENTER","TAB","PAGEDOWN","PAGEUP","_hovered","direction","scrollWith","screenHeight","_busy","_loading","setTimeout","_hideClear","show","toggleClass","document","RegExp","candidate","insertAfter","currentTarget","preventShow","_showClear","DOMelement","parent","wrap","style","cssText","css","width","_focused","plugin","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","jQuery"],"sources":["kendo.autocomplete.js"],"mappings":"CAAA,SAAWA,GACW,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,CAAC,iBAAkB,4BAA6B,yBAA0BD,GAC9HA,GACH,CAHD,EAGG,YAoBC,SAAUG,EAAGC,GACT,IAAIC,EAAQC,OAAOD,MACfE,EAASF,EAAMG,WACfC,EAAUJ,EAAMI,QAChBC,EAAQL,EAAMK,MACdC,EAAgBN,EAAMO,eACtBC,EAAuBJ,EAAQK,YAC/BC,EAAKV,EAAMU,GACXC,EAAOD,EAAGC,KACVC,EAAOZ,EAAMY,KACbC,EAAab,EAAMc,KAAKD,WACxBE,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAS,SACTC,EAAW,WACXC,EAAW,WACXC,EAAU,UAEVC,EAAc,WACdC,EAAgB,aAGhBC,EAAK,qBACLC,EAAc,aAAeD,EAAK,cAAgBA,EAEtD,SAASE,EAAmBC,EAAUC,EAAMC,GACxC,OAAOA,EAAYD,EAAKE,UAAU,EAAGH,GAAUI,MAAMF,GAAWG,OAAS,EAAI,CACjF,CAkBA,IAAIC,EAAerB,EAAKsB,OAAO,CAC3BC,KAAM,SAASC,EAASC,GACpB,IAAiBC,EAAbC,EAAOC,KAEXD,EAAKf,GAAKA,EACVa,EAAUI,MAAMC,QAAQL,GAAW,CAAEM,WAAYN,GAAYA,EAE7DzB,EAAKgC,GAAGT,KAAKU,KAAKN,EAAMH,EAASC,GAEjCD,EAAUG,EAAKH,SACfC,EAAUE,EAAKF,SAEP3B,YAAc2B,EAAQ3B,aAAe0B,EAAQU,KAAK,eACtDrC,GACA2B,EAAQU,KAAK,cAAeT,EAAQ3B,aAGxC6B,EAAKQ,WACLR,EAAKS,UACLT,EAAKU,eAELV,EAAKW,cACLX,EAAKY,cAELf,EAAQ,GAAGgB,KAAO,OAClBd,EAAUC,EAAKD,QAEfC,EAAKc,SAELjB,EACKkB,SAAS,iBACTC,GAAG,UAAY/B,EAAIe,EAAKiB,SAASC,KAAKlB,IACtCgB,GAAG,WAAa/B,EAAIe,EAAKmB,UAAUD,KAAKlB,IACxCgB,GAAG,QAAU/B,EAAIe,EAAKoB,QAAQF,KAAKlB,IACnCgB,GAAG,QAAU/B,EAAIe,EAAKoB,QAAQF,KAAKlB,IACnCgB,GAAG,QAAU/B,GAAI,WACde,EAAKqB,MAAQrB,EAAKsB,YAClBtB,EAAKuB,SAAWvB,EAAKqB,MACrBrB,EAAKwB,cAAa,GAClBzB,EAAQgB,SAASjC,EACrB,IACCkC,GAAG,WAAa/B,GAAI,SAASwC,GACtBzB,EAAK0B,aAAeD,EAAGE,gBAAkB3B,EAAK0B,YAAY,KAI9D1B,EAAK4B,UACL5B,EAAKwB,eACLxB,EAAK6B,QACL9B,EAAQ+B,YAAYhD,GACxB,IACCyB,KAAK,CACFwB,aA7EQ,MA8ERC,KAAM,WACN,iBAAiB,IAGzBhC,EAAKiC,OAAOjB,GAAG,QAAU/B,EAAK,YAAcA,EAAIe,EAAKkC,YAAYhB,KAAKlB,IACtEA,EAAKmC,UAELnC,EAAKoC,KAAOpC,EAAKsB,YAEjBtB,EAAKwB,eAELxB,EAAKqC,YAEM7E,EAAEwC,EAAKH,SAASyC,QAAQ,YAAYC,GAAG,cAG9CvC,EAAKwC,QAAO,GAGhBxC,EAAKyC,SAASvB,KAAK,SAAS,SAASwB,GAAKA,EAAEC,gBAAkB,IAE9D3C,EAAK4C,uBAAyB5C,EAAK6C,gBAAgB3B,KAAKlB,GAExDtC,EAAMoF,OAAO9C,GACbA,EAAK+C,yBACL/C,EAAKgD,mBAEDlD,EAAQmD,OACRjD,EAAKkD,SAGTlD,EAAKmD,OACT,EAEArD,QAAS,CACLsD,KAAM,eACNC,SAAS,EACTC,SAAS,EACTC,SAAU,GACVC,cAAe,SAAUhF,GAAQ,OAAOZ,EAAOY,EAAO,EACtDiF,mBAAoB,SAAUjF,GAAQ,OAAOZ,EAAOY,EAAO,EAC3DkF,cAAe,GACfC,UAAW,EACXC,kBAAkB,EAClBC,MAAO,IACPC,OAAQ,IACRC,OAAQ,aACRC,YAAY,EACZC,gBAAgB,EAChB3E,UAAW,KACXnB,YAAa,GACb+F,UAAW,CAAC,EACZC,SAAS,EACTC,MAAO,KACPC,aAAa,EACbC,WAAW,EACXC,MAAO,KACPC,KAAM,SACNC,SAAU,QACVC,QAAS,SACTzB,MAAO,MAGX0B,qBAAsB,WAClB,IAAI3E,EAAOC,KAEPD,EAAK0B,cACL1B,EAAK0B,YACAV,GAAG,UAAY/B,EAAIe,EAAKiB,SAASC,KAAKlB,IACtCgB,GAAG,WAAa/B,EAAIe,EAAKmB,UAAUD,KAAKlB,IACxCgB,GAAG,QAAU/B,EAAIe,EAAKoB,QAAQF,KAAKlB,IACnCgB,GAAG,QAAU/B,EAAIe,EAAKoB,QAAQF,KAAKlB,IACnCO,KAAK,CACFwB,aAvJI,MAwJJC,KAAM,WACN,iBAAiB,IAGzBhC,EAAKuE,MAAMrD,KAAK,YAAY,WACxBlB,EAAK0B,YAAYkD,IAAI5E,EAAKH,QAAQ+E,OAClC5E,EAAK0B,YAAYmD,QAAQ,QAC7B,IAEA7E,EAAKuE,MAAMrD,KAAK,cAAc,WAC1BlB,EAAKH,QAAQgF,QAAQ,QACzB,IAER,EAEAC,sBAAuB,WACnB,IAAI9E,EAAOC,KAEPD,EAAK0B,aAAe1D,MAAoBgC,EAAK0B,YAAY,IACzD1B,EAAKH,QAAQ+E,IAAI5E,EAAK0B,YAAYkD,MAE1C,EAEAjE,YAAa,WACT,IAAIX,EAAOC,KAEPD,EAAKI,YAAcJ,EAAK+E,gBACxB/E,EAAKgF,qBAELhF,EAAKiF,iBAAmBjF,EAAKkF,UAAUhE,KAAKlB,GAC5CA,EAAKmF,cAAgBnF,EAAKoF,UAAUlE,KAAKlB,IAG7CA,EAAKI,WAAa7B,EAAW8G,OAAOrF,EAAKF,QAAQM,YAC5Cc,KAAK,WAAYlB,EAAKiF,kBACtB/D,KAAK,QAASlB,EAAKmF,cAC5B,EAEAG,cAAe,SAASlF,GACpBH,KAAKH,QAAQM,WAAaA,EAC1BH,KAAKU,cAELV,KAAKwC,SAAS6C,cAAcrF,KAAKG,WACrC,EAEAmF,OAAQ,CACJ,OACA,QACA5G,EACA,SACA,YACA,cACA,aAGJ6G,WAAY,SAAS1F,GACjB,IAAI2F,EAAcxF,KAAKyF,aAAa5F,GAEpCzB,EAAKgC,GAAGmF,WAAWlF,KAAKL,KAAMH,GAE9BG,KAAKwC,SAAS+C,WAAWC,GACzBxF,KAAK0F,aACL1F,KAAKkD,QACLlD,KAAKS,cACT,EAEAgF,aAAc,SAAS5F,GACnB,IAAI2F,EAAcpH,EAAKgC,GAAGqF,aAAapF,KAAKL,KAAMzC,EAAEmC,OAAOG,EAAS,CAChE8F,kBAAkB,KAMtB,OAHAH,EAAYI,eAAiBJ,EAAY/B,cACzC+B,EAAYK,mBAAqB,KAE1BL,CACX,EAEAM,UAAW,SAASjG,GAChB,IAAIE,EAAOC,KACPJ,EAAUG,EAAKH,QACfE,EAAUC,EAAKD,QAAQiG,IAAI/G,GAC3BgH,EAAWnG,EAAQmG,SACnBC,EAAUpG,EAAQoG,QAEjBD,GAAaC,GAUdnG,EACKgB,SAASmF,EAAUlH,EAAgB,IACnC8C,YAAYoE,EAAU,GAAKlH,GAEhCa,EAAQU,KAAK3B,EAAUsH,GACf3F,KAAK1B,EAAUoH,GACf1F,KAAK9B,EAAeyH,GACpB3F,KAAK7B,EAAeuH,KAhB5BlG,EACK+B,YAAY9C,GACZgC,GAAG9B,EAAac,EAAKmG,cAE1BtG,EAAQuG,KAAKxH,GAAU,GACfwH,KAAKvH,GAAU,GACf0B,KAAK9B,GAAe,GACpB8B,KAAK7B,GAAe,IAYhCsB,EAAK+C,wBACT,EAEAlB,MAAO,WACH,IAAI7B,EAAOC,KACPoG,EAAUrG,EAAKyC,SAAS6D,QAExBD,GACAA,EAAQvE,YA3QL,cA8QP9B,EAAKuE,MAAM1C,QACX7B,EAAKuG,iBACT,EAEAC,QAAS,WACL,IAAIxG,EAAOC,KAEXD,EAAKH,QAAQmG,IAAI/G,GACjBe,EAAKiC,OAAO+D,IAAI/G,GAChBe,EAAKD,QAAQiG,IAAI/G,GAEbe,EAAK0B,aACL1B,EAAK0B,YAAYsE,IAAI/G,GAGzBZ,EAAKgC,GAAGmG,QAAQlG,KAAKN,EACzB,EAEAyG,QAAS,WACLxG,KAAKwC,SAASgE,SAClB,EAEAC,OAAQ,SAASC,GACb1G,KAAK2G,QAAQD,EACjB,EAEAE,OAAQ,SAASC,GACb,IAIArH,EAJIO,EAAOC,KACXH,EAAUE,EAAKF,QACfkE,EAAalE,EAAQkE,WACrB1E,EAAYU,EAAK+G,aAEjBC,EAAyBhH,EAAKI,WAAWN,QAAQkH,uBACjDnH,EAAUG,EAAK0B,aAAe1D,MAAoBgC,EAAK0B,YAAY,GAAK1B,EAAK0B,YAAc1B,EAAKH,QAEhGiH,EAAOA,GAAQ9G,EAAKsB,YAEpB2F,aAAajH,EAAKkH,gBAEd5H,IACAwH,EA1SZ,SAAqB1H,EAAUC,EAAMC,GACjC,OAAOD,EAAKG,MAAMF,GAAWH,EAAmBC,EAAUC,EAAMC,GACpE,CAwSmB6H,CAAYpJ,EAAM8B,GAAS,GAAIiH,EAAMxH,IAGhDG,EAASqH,EAAKrH,SAERK,EAAQ8D,mBAAqBnE,GAAWA,GAAUK,EAAQ6D,aAC5D3D,EAAKoH,OAAQ,EAEbpH,EAAKqH,OAAM,WACPpH,KAAKwC,SAAS2B,MAAM,GACxB,IAEApE,EAAKsH,cAAc,CACflD,MAAOJ,EAAcgD,EAAyBF,EAAKS,kBAAkBP,GAA0BF,EAAKU,cAAiBV,EACrHW,SAAU3H,EAAQiE,OAClB2D,MAAO5H,EAAQ4D,cACfM,WAAYA,IAGhBhE,EAAK2H,IAAI,QAAS3H,EAAK4H,iBAAiB1G,KAAKlB,KAEjDA,EAAK+C,wBACT,EAEAO,QAAS,SAASwD,GACd,IASIe,EATA7H,EAAOC,KACP6H,EAAM9H,EAAK+H,MACX3D,EAAQpE,EAAKsB,YACbzB,EAAUG,EAAKH,QAAQ,GACvBT,EAAWrB,EAAM8B,GAAS,GAC1BP,EAAYU,EAAK+G,aACjBiB,EAAQ5D,EAAM5E,MAAMF,GACpB2I,EAAY9I,EAAmBC,EAAUgF,EAAO9E,GAChD4I,EAAe9I,EAEf4H,EAAyBhH,EAAKI,WAAWN,QAAQkH,uBAEjDc,GAAOxJ,EAAK6J,WAAaL,GAAOxJ,EAAK8J,QAOrB,iBAFpBtB,EAAOA,GAAQ,MAGPA,EAAK,KACLA,EAAO9G,EAAKI,WAAWiI,OAAOhK,EAAKiK,QAAQxB,EAAK,GAAI9G,EAAKuI,GAAG,MAGhEzB,EAAOA,EAAO9G,EAAKwI,MAAM1B,GAAQ,IAGjC1H,GAAY,IACZA,GAAY4H,EAAyB5C,EAAMmD,kBAAkBP,GAA0B5C,EAAMoD,eAAeiB,QAAQzB,EAAyBF,EAAKS,kBAAkBP,GAA0BF,EAAKU,eAAiB,GAIxNK,GADAA,EAAMzD,EAAM7E,UAAU,EAAGH,GAAUsJ,YAAYpJ,KAClC,EAAIF,GAAYyI,EAAMvI,EAAUG,QAAUL,EACvDgF,EAAQ4D,EAAMC,GAAW1I,UAAU,EAAGsI,GAElCf,IACAA,EAAOA,EAAK6B,YACZd,GAAOb,EAAyBF,EAAKS,kBAAkBP,GAA0BF,EAAKU,eAAeiB,QAAQzB,EAAyB5C,EAAMmD,kBAAkBP,GAA0B5C,EAAMoD,iBACnL,IAGPU,EAAe9I,GAFf0H,EAAOA,EAAKvH,UAAUsI,EAAMzD,EAAM3E,SAEHA,OAE/B2E,GAAS0C,GAGTxH,GAAyC,KAA5B0I,EAAMA,EAAMvI,OAAS,IAClCuI,EAAMY,KAAK,KAKnBZ,EAAMC,GAAa7D,EAEnBpE,EAAKsB,UAAU0G,EAAMa,KAAKvJ,GAAa,KAEnCO,IAAY7B,KACZD,EAAM8B,EAAST,EAAU8I,IA5CzBlI,EAAK+H,MAAQtK,CA8CrB,EAEA2G,MAAO,SAASA,GACZ,GAAIA,IAAU3G,EAOV,OAAOwC,KAAKqB,YANZrB,KAAKwC,SAAS2B,MAAMA,GAEpBnE,KAAKqB,UAAU8C,GACfnE,KAAKmC,KAAOnC,KAAKqB,YACjBrB,KAAKsB,SAAWtB,KAAKqB,YAIzBrB,KAAK8C,yBACL9C,KAAK6I,uBACT,EAEAC,OAAQ,SAASrG,GACb,IAAIsG,EAAOtG,EAAEsG,KACThJ,EAAOC,KACPJ,EAAUG,EAAKH,QACfoJ,EAAWjJ,EAAKyC,SAASyG,gBAAgBlJ,EAAKyC,SAAS0G,gBAAgBH,IAE3EtG,EAAEC,iBAEF3C,EAAKoJ,SAAU,EAEXpJ,EAAK6E,QAAQ,SAAU,CAAEoE,SAAUA,EAAUD,KAAMA,IACnDhJ,EAAK6B,SAGT7B,EAAKuB,SAAW1B,EAAQ+E,MACxB5E,EAAK4G,QAAQoC,GAAMK,MAAK,WACpBrJ,EAAKsJ,QAELvL,EAAM8B,EAASA,EAAQ+E,MAAMnF,OACjC,IACJ,EAEA8J,WAAY/L,EAAEgM,KAEd3G,gBAAiB,WACb,IAAI4G,EAAQxJ,KAAKH,QAAQmE,eAAiB,GAAK,EAE3ChE,KAAKH,QAAQqE,SACblE,KAAKwC,SAASiH,SAAS,GAG3BzJ,KAAKwC,SAAS6D,MAAMmD,EACxB,EAEAE,WAAY,WACR,IAOIC,EAPA5J,EAAOC,KACPsE,EAAQvE,EAAKuE,MACbzE,EAAUE,EAAKF,QACftB,EAAOwB,EAAKI,WAAWyJ,WACvBpK,EAASjB,EAAKiB,OACdqK,EAAe9J,EAAKI,WAAW2J,OAAS/J,EAAKI,WAAW2J,OAAOtK,OAAS,EACxEuK,EAAWhK,EAAKH,QAAQ,KAAO7B,KAAmBgC,EAAK0B,aAAe1B,EAAK0B,YAAY,KAAO1D,IAGlGgC,EAAKiK,gBACLjK,EAAKkK,gBACLlK,EAAKmK,eAAe1K,GACpBO,EAAKoK,gBAAgBN,KAAkBrK,GAEvCO,EAAKqK,eAEL9F,EAAM+F,WAEF7K,GACIK,EAAQwD,SAAW0G,GAAYhK,EAAKuK,eACpCvK,EAAKsD,QAAQ9E,EAAK,IAItBwB,EAAKoH,QACLpH,EAAKoH,OAAQ,EACbwC,EAAS5J,EAAKwK,gBAAkB,OAAS,QAErCxK,EAAKkH,iBAAmB8C,IACxBJ,EAAS,SAGTnK,IACAO,EAAK6C,kBAED/C,EAAQqE,SACRnE,EAAKuE,MACAkG,OAAO,WAAYzK,EAAK4C,wBACxB+E,IAAI,WAAY3H,EAAK4C,yBAIlC2B,EAAMqF,KACN5J,EAAKkH,eAAiBzJ,GAGtBuC,EAAK0K,gBACL1K,EAAK0K,eAAeC,QAGxB3K,EAAKoF,YAELpF,EAAK6E,QAAQ,YACjB,EAEAwC,MAAO,SAASuD,GACZ3K,KAAK4K,QAAS,EACdD,EAAStK,KAAKL,MACdA,KAAK4K,QAAS,CAClB,EAEAC,YAAa,YACM7K,KAAKmJ,SAAWnJ,KAAKJ,QAAQ,KAAO7B,OAElCiC,KAAK4K,QAClB5K,KAAK8K,aAAa9K,KAAKwC,SAASuI,oBAAoB,GAE5D,EAEAD,aAAc,SAAS9B,GACnB,IAAI3J,EAAYW,KAAK8G,aACjB1H,EAAO,GAEP4J,IACA5J,EAAOY,KAAKuI,MAAMS,IAGT,OAAT5J,IACAA,EAAO,IAGPC,IACAD,EA/fZ,SAA4BD,EAAUC,EAAMyH,EAAMxH,EAAW2L,GACzD,IAAIjD,EAAQ3I,EAAKG,MAAMF,GAQvB,OANA0I,EAAMkD,OAAO/L,EAAmBC,EAAUC,EAAMC,GAAY,EAAGwH,GAE3DxH,GAAyC,KAA5B0I,EAAMA,EAAMvI,OAAS,IAClCuI,EAAMY,KAAK,IAGRZ,EAAMa,KAAKoC,EACtB,CAqfmBE,CAAmBpN,EAAMkC,KAAKJ,SAAS,GAAII,KAAKqB,YAAajC,EAAMC,EAAWW,KAAKmL,sBAG9FnL,KAAKoB,MAAQhC,EACbY,KAAKqB,UAAUjC,GACfY,KAAKuB,cACT,EAEAoG,iBAAkB,WAEd,OADA3H,KAAKqB,UAAUrB,KAAKmE,QAAQ5E,MAAMS,KAAK8G,cAAc8B,KAAK5I,KAAKmL,sBACxDnL,IACX,EAEAoL,WAAY,SAASjH,EAAO/E,GACxBY,KAAKsK,YAAYlL,GACjBY,KAAKqB,UAAU8C,GAEfnE,KAAKmC,KAAOnC,KAAKqL,QAAUrL,KAAKqB,YAEhCrB,KAAKwC,SAAS8I,SAASnH,GACvBnE,KAAKuB,cACT,EAEAI,QAAS,WACL,IAAI5B,EAAOC,KACPmE,EAAQpE,EAAK4H,mBAAmBxD,QAChCS,EAAUT,IAAU/F,EAAKmN,UAAUxL,EAAKoC,YAAagC,GAErDqH,EAAe5G,IAAY7E,EAAK0L,QAChCC,EAAe3L,EAAKuB,WAAa6C,EAErCpE,EAAKoC,KAAOgC,EACZpE,EAAKuB,SAAW6C,EAEZpE,EAAK0B,aAAe1D,MAAoBgC,EAAK0B,YAAY,IACzD1B,EAAKH,QAAQ+E,IAAI5E,EAAK0B,YAAYkD,QAGlC6G,GAAgBE,IAEhB3L,EAAKH,QAAQgF,QAAQlG,GAGrBkG,GACA7E,EAAK6E,QAAQlG,GAGjBqB,EAAK4L,QAAS,EACd5L,EAAK+C,wBACT,EAEAzB,UAAW,SAAS8C,GAChB,IAAIpE,EAAOC,KACPJ,EAAUG,EAAK0B,aAAe1D,MAAoBgC,EAAK0B,YAAY,GAAK1B,EAAK0B,YAAY,GAAK1B,EAAKH,QAAQ,GAE/G,GAAIuE,IAAU3G,EAMV,OAFA2G,EAAQvE,EAAQuE,MAEZvE,EAAQgM,UAAUpD,QAAQ,eAAiB,GACvCrE,IAAUpE,EAAKF,QAAQ3B,YAChB,GAMRiG,EAbPvE,EAAQuE,MAAkB,OAAVA,EAAiB,GAAKA,EACtCpE,EAAKwB,cAcb,EAEAP,SAAU,SAASyB,GACf,IAAI1C,EAAOC,KACP6H,EAAMpF,EAAEoJ,QACRrJ,EAAWzC,EAAKyC,SAChBsJ,EAAU/L,EAAKuE,MAAMwH,UACrB1F,EAAU5D,EAAS6D,QAIvB,GAFAtG,EAAK+H,MAAQD,EAETA,IAAQxJ,EAAK0N,KACTD,EACA9L,KAAKgM,MAAM5F,EAAU,YAAc,cAC5BrG,EAAKoE,SACZpE,EAAKsH,cAAc,CACflD,MAAOpE,EAAKgE,WAAahE,EAAKoE,QAAQoD,cAAgBxH,EAAKoE,QAC3DqD,SAAUzH,EAAKF,QAAQiE,OACvB2D,MAAO1H,EAAKF,QAAQ4D,cACpBM,WAAYhE,EAAKgE,aAClBqF,MAAK,WACArJ,EAAKwK,kBACLxK,EAAK6C,kBACL7C,EAAKuE,MAAM2H,OAEnB,IAEJxJ,EAAEC,sBACC,GAAImF,IAAQxJ,EAAK6N,IAChBJ,GACArJ,EAAEC,iBACF3C,EAAK6B,SAEL7B,EAAKkC,mBAEN,GAAIQ,EAAE0J,QAAUtE,IAAQxJ,EAAK+N,IAAMN,EACtCrJ,EAAEC,iBACF3C,EAAK6B,aACF,GAAIiG,IAAQxJ,EAAK+N,GAChBN,GACA9L,KAAKgM,MAAM5F,EAAU,YAAc,aAEvC3D,EAAEC,sBACC,GAAImF,IAAQxJ,EAAKgO,KACpBrM,KAAKgM,MAAM,mBACR,GAAInE,IAAQxJ,EAAKiO,IACpBtM,KAAKgM,MAAM,kBACR,GAAInE,IAAQxJ,EAAKkO,OAAS1E,IAAQxJ,EAAKmO,IAAK,CAM/C,GAJI3E,IAAQxJ,EAAKkO,OAAST,GACtBrJ,EAAEC,iBAGFoJ,GAAW1F,EAAS,CACpB,IAAI4C,EAAWxG,EAASyG,gBAAgBzG,EAAS0G,gBAAgB9C,IACjE,GAAIrG,EAAK6E,QAAQ,SAAU,CAAEoE,SAAUA,EAAUD,KAAM3C,IACnD,OAGJpG,KAAK2G,QAAQP,EACjB,CAEApG,KAAKqJ,OACT,MAAO,IAAItJ,EAAKuE,MAAMwH,WAAcjE,IAAQxJ,EAAKoO,UAAY5E,IAAQxJ,EAAKqO,OAQtE3M,EAAKuE,MAAMqI,UAAW,EACtB5M,EAAKoB,cAT0E,CAC/EsB,EAAEC,iBAEF,IAAIkK,EAAY/E,IAAQxJ,EAAKoO,SAAW,GAAK,EAC7CjK,EAASqK,WAAWD,EAAYpK,EAASsK,eAC7C,CAMJ,EAEA5L,UAAW,WACPlB,KAAKsB,SAAWtB,KAAKJ,QAAQ+E,MAC7B3E,KAAKyL,SAAU,CACnB,EAEAO,MAAO,SAASrC,GACZ3J,KAAKwC,SAASmH,KAEV3J,KAAKH,QAAQwD,SACbrD,KAAKqD,QAAQrD,KAAKwC,SAAS6D,QAEnC,EAEAlB,UAAW,WACP,IAAIpF,EAAOC,KACXgH,aAAajH,EAAKgN,OAClBhN,EAAKiN,SAASlM,SAAShC,GACvBiB,EAAKH,QAAQU,KAAK,aAAa,GAC/BP,EAAKgN,MAAQ,KACbhN,EAAK+C,wBACT,EAEAmC,UAAW,WACP,IAAIlF,EAAOC,KAEPD,EAAKgN,QAIThN,EAAKgN,MAAQE,YAAW,WACpBlN,EAAKH,QAAQU,KAAK,aAAa,GAC/BP,EAAKiN,SAASnL,YAAY/C,GAC1BiB,EAAKmN,YACT,GAAG,KACP,EAEA3L,aAAc,SAAS4L,GACnB,IAAIlP,EAAJ,CAIA,IAGIkG,EAHApE,EAAOC,KACPJ,EAAUG,EAAKH,QACf1B,EAAc6B,EAAKF,QAAQ3B,YAG/B,GAAIA,EAAa,CAeb,GAdAiG,EAAQvE,EAAQ+E,MAEZwI,IAAS3P,IACT2P,GAAQhJ,GAGPgJ,IAEGjP,EADAiG,IAAUjG,EACIiG,EAEA,IAIlBA,IAAUpE,EAAKoC,OAASgL,EACxB,OAGJvN,EAAQwN,YAAY,aAAcD,GAC1BxI,IAAIzG,GAEPA,GAAe0B,EAAQ,KAAOyN,SAAStP,eACxCD,EAAM8B,EAAQ,GAAI,EAAG,EAE7B,CAhCA,CAiCJ,EAEAkH,WAAY,WACR,IAAIzH,EAAYW,KAAKH,QAAQR,UAC7B,OAAIA,aAAqBY,MACf,IAAIqN,OAAOjO,EAAUuJ,KAAK,KAAM,MAEnCvJ,CACX,EAEA8L,kBAAmB,WACf,IAAI9L,EAAYW,KAAKH,QAAQR,UAC7B,OAAIA,aAAqBY,MACdZ,EAAU,GAEdA,CACX,EAEAiL,YAAa,WACT,OAAOtK,KAAKJ,QAAQ+E,KACxB,EAEAxD,QAAS,WACL,IAAIpB,EAAOC,KACXgH,aAAajH,EAAKkH,gBAElBlH,EAAKkH,eAAiBgG,YAAW,WACzBlN,EAAKqB,QAAUrB,EAAKsB,cACpBtB,EAAKqB,MAAQrB,EAAKsB,YAClBtB,EAAK6G,SAEb,GAAG7G,EAAKF,QAAQ+D,MACpB,EAEA+C,QAAS,SAAS4G,GACd,IAAIxN,EAAOC,KAGX,OAFAD,EAAKoJ,SAAU,EAERpJ,EAAKyC,SAASiE,OAAO8G,GAAWnE,MAAK,WACxCrJ,EAAKoJ,SAAU,CACnB,GACJ,EAEA3I,QAAS,WACLR,KAAKgN,SAAWzP,EAAE,wDAA0DuB,EAAc,aAAa0O,YAAYxN,KAAKJ,QAC5H,EAEAa,aAAc,WACVrC,EAAKgC,GAAGK,aAAaJ,KAAKL,MAEtBA,KAAKH,QAAQuE,cACbpE,KAAKgC,OAAOwL,YAAYxN,KAAKJ,SAC7BI,KAAKF,QAAQgB,SAAS,4BAE9B,EAEAoF,aAAc,SAASzD,GACnBlF,EAAEkF,EAAEgL,eAAeL,YA/xBf,UA+xB6C,eAAX3K,EAAE7B,KAC5C,EAEAkC,uBAAwB,WACpB,IAAI4K,EAAc1N,KAAKJ,QAAQ0C,GAAG,cAAgBtC,KAAKJ,QAAQ0C,GAAG,cAE9DtC,KAAKmE,UAAYuJ,EACjB1N,KAAK2N,aAEL3N,KAAKkN,YAEb,EAEA3M,SAAU,WACN,IAGIT,EAHAC,EAAOC,KACPJ,EAAUG,EAAKH,QACfgO,EAAahO,EAAQ,IAGzBE,EAAUF,EAAQiO,UAELvL,GAAG,yBACZxC,EAAUF,EAAQkO,KAAK,YAAYD,UAGvC/N,EAAQQ,KAAK,YAAa,GAE1BR,EAAQ,GAAGiO,MAAMC,QAAUJ,EAAWG,MAAMC,QAC5CpO,EAAQqO,IAAI,CACRC,MAAO,GACPrK,OAAQ+J,EAAWG,MAAMlK,SAG7B9D,EAAKoO,SAAWpO,EAAKH,QACrBG,EAAKD,QAAUA,EACVgB,SAAS,0BACTA,SAAS8M,EAAWhC,WACpB/J,YAAY,yBACrB,EAEAI,YAAa,WACT7D,EAAKgC,GAAG6B,YAAY5B,KAAKL,MACzBA,KAAKJ,QAAQyG,OACjB,IAGJlI,EAAGiQ,OAAO3O,GAEVhC,EAAM4Q,cAAcC,eAAe,eAAgB,YAEnD7Q,EAAM4Q,cAAcE,eAAe,eAAgB,CAAC,CAChDpI,KAAM,UACNqI,OAAQ/Q,EAAM4Q,cAAcI,cAAcC,OAAO,CAAC,CAAC,OAAQ,YAElE,CA12BD,CA02BGhR,OAAOD,MAAMkR,OAEnB","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.list', 'kendo.mobile.scroller', 'kendo.virtuallist'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"autocomplete\",\n        name: \"AutoComplete\",\n        category: \"web\",\n        description: \"The AutoComplete widget provides suggestions depending on the typed text.It also allows multiple value entries.\",\n        depends: [ \"list\" ],\n        features: [ {\n            id: \"mobile-scroller\",\n            name: \"Mobile scroller\",\n            description: \"Support for kinetic scrolling in mobile device\",\n            depends: [ \"mobile.scroller\" ]\n        }, {\n            id: \"virtualization\",\n            name: \"VirtualList\",\n            description: \"Support for virtualization\",\n            depends: [ \"virtuallist\" ]\n        } ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            encode = kendo.htmlEncode,\n            support = kendo.support,\n            caret = kendo.caret,\n            activeElement = kendo._activeElement,\n            placeholderSupported = support.placeholder,\n            ui = kendo.ui,\n            List = ui.List,\n            keys = kendo.keys,\n            DataSource = kendo.data.DataSource,\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_READONLY = \"aria-readonly\",\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            FOCUSED = \"k-focus\",\n            SELECTED = \"k-selected\",\n            HIDDENCLASS = \"k-hidden\",\n            STATEDISABLED = \"k-disabled\",\n            AUTOCOMPLETEVALUE = \"off\",\n            HOVER = \"k-hover\",\n            ns = \".kendoAutoComplete\",\n            HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns;\n\n        function indexOfWordAtCaret(caretIdx, text, separator) {\n            return separator ? text.substring(0, caretIdx).split(separator).length - 1 : 0;\n        }\n\n        function wordAtCaret(caretIdx, text, separator) {\n            return text.split(separator)[indexOfWordAtCaret(caretIdx, text, separator)];\n        }\n\n        function replaceWordAtCaret(caretIdx, text, word, separator, defaultSeparator) {\n            var words = text.split(separator);\n\n            words.splice(indexOfWordAtCaret(caretIdx, text, separator), 1, word);\n\n            if (separator && words[words.length - 1] !== \"\") {\n                words.push(\"\");\n            }\n\n            return words.join(defaultSeparator);\n        }\n\n        var AutoComplete = List.extend({\n            init: function(element, options) {\n                var that = this, wrapper, disabled;\n\n                that.ns = ns;\n                options = Array.isArray(options) ? { dataSource: options } : options;\n\n                List.fn.init.call(that, element, options);\n\n                element = that.element;\n                options = that.options;\n\n                options.placeholder = options.placeholder || element.attr(\"placeholder\");\n                if (placeholderSupported) {\n                    element.attr(\"placeholder\", options.placeholder);\n                }\n\n                that._wrapper();\n                that._loader();\n                that._clearButton();\n\n                that._dataSource();\n                that._ignoreCase();\n\n                element[0].type = \"text\";\n                wrapper = that.wrapper;\n\n                that._popup();\n\n                element\n                    .addClass(\"k-input-inner\")\n                    .on(\"keydown\" + ns, that._keydown.bind(that))\n                    .on(\"keypress\" + ns, that._keypress.bind(that))\n                    .on(\"input\" + ns, that._search.bind(that))\n                    .on(\"paste\" + ns, that._search.bind(that))\n                    .on(\"focus\" + ns, function() {\n                        that._prev = that._accessor();\n                        that._oldText = that._prev;\n                        that._placeholder(false);\n                        wrapper.addClass(FOCUSED);\n                    })\n                    .on(\"focusout\" + ns, function(ev) {\n                        if (that.filterInput && ev.relatedTarget === that.filterInput[0]) {\n                            return;\n                        }\n\n                        that._change();\n                        that._placeholder();\n                        that.close();\n                        wrapper.removeClass(FOCUSED);\n                    })\n                    .attr({\n                        autocomplete: AUTOCOMPLETEVALUE,\n                        role: \"combobox\",\n                        \"aria-expanded\": false\n                    });\n\n                that._clear.on(\"click\" + ns + \" touchend\" + ns, that._clearValue.bind(that));\n                that._enable();\n\n                that._old = that._accessor();\n\n                that._placeholder();\n\n                that._initList();\n\n                disabled = $(that.element).parents(\"fieldset\").is(':disabled');\n\n                if (disabled) {\n                    that.enable(false);\n                }\n\n                that.listView.bind(\"click\", function(e) { e.preventDefault(); });\n\n                that._resetFocusItemHandler = that._resetFocusItem.bind(that);\n\n                kendo.notify(that);\n                that._toggleCloseVisibility();\n                that._applyCssClasses();\n\n                if (options.label) {\n                    that._label();\n                }\n\n                that._aria();\n            },\n\n            options: {\n                name: \"AutoComplete\",\n                enabled: true,\n                suggest: false,\n                template: \"\",\n                groupTemplate: function (data) { return encode(data); },\n                fixedGroupTemplate: function (data) { return encode(data); },\n                dataTextField: \"\",\n                minLength: 1,\n                enforceMinLength: false,\n                delay: 200,\n                height: 200,\n                filter: \"startswith\",\n                ignoreCase: true,\n                highlightFirst: false,\n                separator: null,\n                placeholder: \"\",\n                animation: {},\n                virtual: false,\n                value: null,\n                clearButton: true,\n                autoWidth: false,\n                popup: null,\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                label: null\n            },\n\n            _onActionSheetCreate: function() {\n                var that = this;\n\n                if (that.filterInput) {\n                    that.filterInput\n                        .on(\"keydown\" + ns, that._keydown.bind(that))\n                        .on(\"keypress\" + ns, that._keypress.bind(that))\n                        .on(\"input\" + ns, that._search.bind(that))\n                        .on(\"paste\" + ns, that._search.bind(that))\n                        .attr({\n                            autocomplete: AUTOCOMPLETEVALUE,\n                            role: \"combobox\",\n                            \"aria-expanded\": false\n                        });\n\n                    that.popup.bind(\"activate\", function () {\n                        that.filterInput.val(that.element.val());\n                        that.filterInput.trigger(\"focus\");\n                    });\n\n                    that.popup.bind(\"deactivate\", function () {\n                        that.element.trigger(\"focus\");\n                    });\n                }\n            },\n\n            _onCloseButtonPressed: function() {\n                var that = this;\n\n                if (that.filterInput && activeElement() === that.filterInput[0]) {\n                    that.element.val(that.filterInput.val());\n                }\n            },\n\n            _dataSource: function() {\n                var that = this;\n\n                if (that.dataSource && that._refreshHandler) {\n                    that._unbindDataSource();\n                } else {\n                    that._progressHandler = that._showBusy.bind(that);\n                    that._errorHandler = that._hideBusy.bind(that);\n                }\n\n                that.dataSource = DataSource.create(that.options.dataSource)\n                    .bind(\"progress\", that._progressHandler)\n                    .bind(\"error\", that._errorHandler);\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n                this._dataSource();\n\n                this.listView.setDataSource(this.dataSource);\n            },\n\n            events: [\n                \"open\",\n                \"close\",\n                CHANGE,\n                \"select\",\n                \"filtering\",\n                \"dataBinding\",\n                \"dataBound\"\n            ],\n\n            setOptions: function(options) {\n                var listOptions = this._listOptions(options);\n\n                List.fn.setOptions.call(this, options);\n\n                this.listView.setOptions(listOptions);\n                this._accessors();\n                this._aria();\n                this._clearButton();\n            },\n\n            _listOptions: function(options) {\n                var listOptions = List.fn._listOptions.call(this, $.extend(options, {\n                    skipUpdateOnBind: true\n                }));\n\n                listOptions.dataValueField = listOptions.dataTextField;\n                listOptions.selectedItemChange = null;\n\n                return listOptions;\n            },\n\n            _editable: function(options) {\n                var that = this,\n                    element = that.element,\n                    wrapper = that.wrapper.off(ns),\n                    readonly = options.readonly,\n                    disable = options.disable;\n\n                if (!readonly && !disable) {\n                    wrapper\n                        .removeClass(STATEDISABLED)\n                        .on(HOVEREVENTS, that._toggleHover);\n\n                    element.prop(DISABLED, false)\n                           .prop(READONLY, false)\n                           .attr(ARIA_DISABLED, false)\n                           .attr(ARIA_READONLY, false);\n                } else {\n                    wrapper\n                        .addClass(disable ? STATEDISABLED : \"\")\n                        .removeClass(disable ? \"\" : STATEDISABLED);\n\n                    element.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable)\n                           .attr(ARIA_READONLY, readonly);\n                }\n\n                that._toggleCloseVisibility();\n            },\n\n            close: function() {\n                var that = this;\n                var current = that.listView.focus();\n\n                if (current) {\n                    current.removeClass(SELECTED);\n                }\n\n                that.popup.close();\n                that._deactivateItem();\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.element.off(ns);\n                that._clear.off(ns);\n                that.wrapper.off(ns);\n\n                if (that.filterInput) {\n                    that.filterInput.off(ns);\n                }\n\n                List.fn.destroy.call(that);\n            },\n\n            refresh: function() {\n                this.listView.refresh();\n            },\n\n            select: function(li) {\n                this._select(li);\n            },\n\n            search: function(word) {\n                var that = this,\n                options = that.options,\n                ignoreCase = options.ignoreCase,\n                separator = that._separator(),\n                length,\n                accentFoldingFiltering = that.dataSource.options.accentFoldingFiltering,\n                element = that.filterInput && activeElement() === that.filterInput[0] ? that.filterInput : that.element;\n\n                word = word || that._accessor();\n\n                clearTimeout(that._typingTimeout);\n\n                if (separator) {\n                    word = wordAtCaret(caret(element)[0], word, separator);\n                }\n\n                length = word.length;\n\n                if ((!options.enforceMinLength && !length) || length >= options.minLength) {\n                    that._open = true;\n\n                    that._mute(function() {\n                        this.listView.value([]);\n                    });\n\n                    that._filterSource({\n                        value: ignoreCase ? (accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase()) : word,\n                        operator: options.filter,\n                        field: options.dataTextField,\n                        ignoreCase: ignoreCase\n                    });\n\n                    that.one(\"close\", that._unifySeparators.bind(that));\n                }\n                that._toggleCloseVisibility();\n            },\n\n            suggest: function(word) {\n                var that = this,\n                    key = that._last,\n                    value = that._accessor(),\n                    element = that.element[0],\n                    caretIdx = caret(element)[0],\n                    separator = that._separator(),\n                    words = value.split(separator),\n                    wordIndex = indexOfWordAtCaret(caretIdx, value, separator),\n                    selectionEnd = caretIdx,\n                    idx,\n                    accentFoldingFiltering = that.dataSource.options.accentFoldingFiltering;\n\n                if (key == keys.BACKSPACE || key == keys.DELETE) {\n                    that._last = undefined$1;\n                    return;\n                }\n\n                word = word || \"\";\n\n                if (typeof word !== \"string\") {\n                    if (word[0]) {\n                        word = that.dataSource.view()[List.inArray(word[0], that.ul[0])];\n                    }\n\n                    word = word ? that._text(word) : \"\";\n                }\n\n                if (caretIdx <= 0) {\n                    caretIdx = (accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase()).indexOf(accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase()) + 1;\n                }\n\n                idx = value.substring(0, caretIdx).lastIndexOf(separator);\n                idx = idx > -1 ? caretIdx - (idx + separator.length) : caretIdx;\n                value = words[wordIndex].substring(0, idx);\n\n                if (word) {\n                    word = word.toString();\n                    idx = (accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase()).indexOf(accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase());\n                    if (idx > -1) {\n                        word = word.substring(idx + value.length);\n\n                        selectionEnd = caretIdx + word.length;\n\n                        value += word;\n                    }\n\n                    if (separator && words[words.length - 1] !== \"\") {\n                        words.push(\"\");\n                    }\n\n                }\n\n                words[wordIndex] = value;\n\n                that._accessor(words.join(separator || \"\"));\n\n                if (element === activeElement()) {\n                    caret(element, caretIdx, selectionEnd);\n                }\n            },\n\n            value: function(value) {\n                if (value !== undefined$1) {\n                    this.listView.value(value);\n\n                    this._accessor(value);\n                    this._old = this._accessor();\n                    this._oldText = this._accessor();\n                } else {\n                    return this._accessor();\n                }\n                this._toggleCloseVisibility();\n                this._refreshFloatingLabel();\n            },\n\n            _click: function(e) {\n                var item = e.item;\n                var that = this;\n                var element = that.element;\n                var dataItem = that.listView.dataItemByIndex(that.listView.getElementIndex(item));\n\n                e.preventDefault();\n\n                that._active = true;\n\n                if (that.trigger(\"select\", { dataItem: dataItem, item: item })) {\n                    that.close();\n                    return;\n                }\n                that._oldText = element.val();\n                that._select(item).done(function() {\n                    that._blur();\n\n                    caret(element, element.val().length);\n                });\n            },\n\n            _clearText: $.noop,\n\n            _resetFocusItem: function() {\n                var index = this.options.highlightFirst ? 0 : -1;\n\n                if (this.options.virtual) {\n                    this.listView.scrollTo(0);\n                }\n\n                this.listView.focus(index);\n            },\n\n            _listBound: function() {\n                var that = this;\n                var popup = that.popup;\n                var options = that.options;\n                var data = that.dataSource.flatView();\n                var length = data.length;\n                var groupsLength = that.dataSource._group ? that.dataSource._group.length : 0;\n                var isActive = that.element[0] === activeElement() || that.filterInput && that.filterInput[0] === activeElement();\n                var action;\n\n                that._renderFooter();\n                that._renderNoData();\n                that._toggleNoData(!length);\n                that._toggleHeader(!!groupsLength && !!length);\n\n                that._resizePopup();\n\n                popup.position();\n\n                if (length) {\n                    if (options.suggest && isActive && that._inputValue()) {\n                        that.suggest(data[0]);\n                    }\n                }\n\n                if (that._open) {\n                    that._open = false;\n                    action = that._allowOpening() ? \"open\" : \"close\";\n\n                    if (that._typingTimeout && !isActive) {\n                        action = \"close\";\n                    }\n\n                    if (length) {\n                        that._resetFocusItem();\n\n                        if (options.virtual) {\n                            that.popup\n                                .unbind(\"activate\", that._resetFocusItemHandler)\n                                .one(\"activate\", that._resetFocusItemHandler);\n                        }\n                    }\n\n                    popup[action]();\n                    that._typingTimeout = undefined$1;\n                }\n\n                if (that._touchScroller) {\n                    that._touchScroller.reset();\n                }\n\n                that._hideBusy();\n\n                that.trigger(\"dataBound\");\n            },\n\n            _mute: function(callback) {\n                this._muted = true;\n                callback.call(this);\n                this._muted = false;\n            },\n\n            _listChange: function() {\n                var isActive = this._active || this.element[0] === activeElement();\n\n                if (isActive && !this._muted) {\n                    this._selectValue(this.listView.selectedDataItems()[0]);\n                }\n            },\n\n            _selectValue: function(dataItem) {\n                var separator = this._separator();\n                var text = \"\";\n\n                if (dataItem) {\n                    text = this._text(dataItem);\n                }\n\n                if (text === null) {\n                    text = \"\";\n                }\n\n                if (separator) {\n                    text = replaceWordAtCaret(caret(this.element)[0], this._accessor(), text, separator, this._defaultSeparator());\n                }\n\n                this._prev = text;\n                this._accessor(text);\n                this._placeholder();\n            },\n\n            _unifySeparators: function() {\n                this._accessor(this.value().split(this._separator()).join(this._defaultSeparator()));\n                return this;\n            },\n\n            _preselect: function(value, text) {\n                this._inputValue(text);\n                this._accessor(value);\n\n                this._old = this.oldText = this._accessor();\n\n                this.listView.setValue(value);\n                this._placeholder();\n            },\n\n            _change: function() {\n                var that = this;\n                var value = that._unifySeparators().value();\n                var trigger = value !== List.unifyType(that._old, typeof value);\n\n                var valueUpdated = trigger && !that._typing;\n                var itemSelected = that._oldText !== value;\n\n                that._old = value;\n                that._oldText = value;\n\n                if (that.filterInput && activeElement() === that.filterInput[0]) {\n                    that.element.val(that.filterInput.val());\n                }\n\n                if (valueUpdated || itemSelected) {\n                    // trigger the DOM change event so any subscriber gets notified\n                    that.element.trigger(CHANGE);\n                }\n\n                if (trigger) {\n                    that.trigger(CHANGE);\n                }\n\n                that.typing = false;\n                that._toggleCloseVisibility();\n            },\n\n            _accessor: function(value) {\n                var that = this,\n                    element = that.filterInput && activeElement() === that.filterInput[0] ? that.filterInput[0] : that.element[0];\n\n                if (value !== undefined$1) {\n                    element.value = value === null ? \"\" : value;\n                    that._placeholder();\n                } else {\n                    value = element.value;\n\n                    if (element.className.indexOf(\"k-readonly\") > -1) {\n                        if (value === that.options.placeholder) {\n                            return \"\";\n                        } else {\n                            return value;\n                        }\n                    }\n\n                    return value;\n                }\n            },\n\n            _keydown: function(e) {\n                var that = this;\n                var key = e.keyCode;\n                var listView = that.listView;\n                var visible = that.popup.visible();\n                var current = listView.focus();\n\n                that._last = key;\n\n                if (key === keys.DOWN) {\n                    if (visible) {\n                        this._move(current ? \"focusNext\" : \"focusFirst\");\n                    } else if (that.value()) {\n                        that._filterSource({\n                            value: that.ignoreCase ? that.value().toLowerCase() : that.value(),\n                            operator: that.options.filter,\n                            field: that.options.dataTextField,\n                            ignoreCase: that.ignoreCase\n                        }).done(function() {\n                            if (that._allowOpening()) {\n                                that._resetFocusItem();\n                                that.popup.open();\n                            }\n                        });\n                    }\n                    e.preventDefault();\n                } else if (key === keys.ESC ) {\n                    if (visible) {\n                        e.preventDefault();\n                        that.close();\n                    } else {\n                        that._clearValue();\n                    }\n                } else if (e.altKey && key === keys.UP && visible) {\n                    e.preventDefault();\n                    that.close();\n                } else if (key === keys.UP) {\n                    if (visible) {\n                        this._move(current ? \"focusPrev\" : \"focusLast\");\n                    }\n                    e.preventDefault();\n                } else if (key === keys.HOME) {\n                    this._move(\"focusFirst\");\n                } else if (key === keys.END) {\n                    this._move(\"focusLast\");\n                } else if (key === keys.ENTER || key === keys.TAB) {\n\n                    if (key === keys.ENTER && visible) {\n                        e.preventDefault();\n                    }\n\n                    if (visible && current) {\n                        var dataItem = listView.dataItemByIndex(listView.getElementIndex(current));\n                        if (that.trigger(\"select\", { dataItem: dataItem, item: current })) {\n                            return;\n                        }\n\n                        this._select(current);\n                    }\n\n                    this._blur();\n                } else if (that.popup.visible() && (key === keys.PAGEDOWN || key === keys.PAGEUP)) {\n                    e.preventDefault();\n\n                    var direction = key === keys.PAGEDOWN ? 1 : -1;\n                    listView.scrollWith(direction * listView.screenHeight());\n                } else {\n                    // In some cases when the popup is opened resize is triggered which will cause it to close\n                    // Setting the below flag will prevent this from happening\n                    that.popup._hovered = true;\n                    that._search();\n                }\n            },\n\n            _keypress: function() {\n                this._oldText = this.element.val();\n                this._typing = true;\n            },\n\n            _move: function(action) {\n                this.listView[action]();\n\n                if (this.options.suggest) {\n                    this.suggest(this.listView.focus());\n                }\n            },\n\n            _hideBusy: function() {\n                var that = this;\n                clearTimeout(that._busy);\n                that._loading.addClass(HIDDENCLASS);\n                that.element.attr(\"aria-busy\", false);\n                that._busy = null;\n                that._toggleCloseVisibility();\n            },\n\n            _showBusy: function() {\n                var that = this;\n\n                if (that._busy) {\n                    return;\n                }\n\n                that._busy = setTimeout(function() {\n                    that.element.attr(\"aria-busy\", true);\n                    that._loading.removeClass(HIDDENCLASS);\n                    that._hideClear();\n                }, 100);\n            },\n\n            _placeholder: function(show) {\n                if (placeholderSupported) {\n                    return;\n                }\n\n                var that = this,\n                    element = that.element,\n                    placeholder = that.options.placeholder,\n                    value;\n\n                if (placeholder) {\n                    value = element.val();\n\n                    if (show === undefined$1) {\n                        show = !value;\n                    }\n\n                    if (!show) {\n                        if (value !== placeholder) {\n                            placeholder = value;\n                        } else {\n                            placeholder = \"\";\n                        }\n                    }\n\n                    if (value === that._old && !show) {\n                        return;\n                    }\n\n                    element.toggleClass(\"k-readonly\", show)\n                           .val(placeholder);\n\n                    if (!placeholder && element[0] === document.activeElement) {\n                        caret(element[0], 0, 0);\n                    }\n                }\n            },\n\n            _separator: function() {\n                var separator = this.options.separator;\n                if (separator instanceof Array) {\n                   return new RegExp(separator.join(\"|\"), 'gi');\n                }\n                return separator;\n            },\n\n            _defaultSeparator: function() {\n                var separator = this.options.separator;\n                if (separator instanceof Array) {\n                    return separator[0];\n                }\n                return separator;\n            },\n\n            _inputValue: function() {\n                return this.element.val();\n            },\n\n            _search: function() {\n                var that = this;\n                clearTimeout(that._typingTimeout);\n\n                that._typingTimeout = setTimeout(function() {\n                    if (that._prev !== that._accessor()) {\n                        that._prev = that._accessor();\n                        that.search();\n                    }\n                }, that.options.delay);\n            },\n\n            _select: function(candidate) {\n                var that = this;\n                that._active = true;\n\n                return that.listView.select(candidate).done(function() {\n                    that._active = false;\n                });\n            },\n\n            _loader: function() {\n                this._loading = $('<span class=\"k-icon k-i-loading k-input-loading-icon ' + HIDDENCLASS + '\"></span>').insertAfter(this.element);\n            },\n\n            _clearButton: function() {\n                List.fn._clearButton.call(this);\n\n                if (this.options.clearButton) {\n                    this._clear.insertAfter(this.element);\n                    this.wrapper.addClass(\"k-autocomplete-clearable\");\n                }\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n            },\n\n            _toggleCloseVisibility: function() {\n                var preventShow = this.element.is(\":disabled\") || this.element.is(\"[readonly]\");\n\n                if (this.value() && !preventShow) {\n                    this._showClear();\n                } else {\n                    this._hideClear();\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    DOMelement = element[0],\n                    wrapper;\n\n                wrapper = element.parent();\n\n                if (!wrapper.is(\"span.k-autocomplete\")) {\n                    wrapper = element.wrap(\"<span />\").parent();\n                }\n\n                wrapper.attr(\"tabindex\", -1);\n\n                wrapper[0].style.cssText = DOMelement.style.cssText;\n                element.css({\n                    width: \"\",\n                    height: DOMelement.style.height\n                });\n\n                that._focused = that.element;\n                that.wrapper = wrapper\n                    .addClass(\"k-autocomplete k-input\")\n                    .addClass(DOMelement.className)\n                    .removeClass('input-validation-error');\n            },\n\n            _clearValue: function() {\n                List.fn._clearValue.call(this);\n                this.element.focus();\n            }\n        });\n\n        ui.plugin(AutoComplete);\n\n        kendo.cssProperties.registerPrefix(\"AutoComplete\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"AutoComplete\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n    })(window.kendo.jQuery);\n\n}));\n"]}