{"version":3,"file":"kendo.multiselect.min.js","names":["factory","define","amd","$","undefined$1","kendo","ui","List","encode","html","keys","activeElement","ObservableArray","ID","CHIP","ACCEPT","FILTER","REBIND","OPEN","CLOSE","CHANGE","SELECT","DESELECT","ARIA_DISABLED","ARIA_READONLY","ARIA_EXPANDED","ARIA_HIDDEN","ARIA_ACTIVEDESCENDANT","ARIA_BUSY","FOCUSEDCLASS","SELECTEDCLASS","HIDDENCLASS","HOVERCLASS","STATEDISABLED","NOCLICKCLASS","DISABLED","READONLY","ns","CLICK","MOUSEENTER","MOUSELEAVE","quotRegExp","isArray","styles","MultiSelect","window","jQuery","htmlEncode","extend","A","_activeElement","data","Array","init","element","options","id","that","this","fn","call","_optionsMap","_customOptions","_wrapper","_inputValuesContainer","_tagList","_input","_textContainer","_loader","_clearButton","_arrowButton","_tabindex","input","attr","hide","placeholder","guid","_tagID","tagList","_initialOpen","label","_label","_aria","_dataSource","_ignoreCase","_popup","_tagTemplate","requireValueMapper","_initList","_reset","_enable","_placeholder","autoBind","dataSource","fetch","value","_preselect","parents","is","enable","_toggleCloseVisibility","_applyCssClasses","notify","name","tagMode","enabled","autoClose","highlightFirst","dataTextField","dataValueField","filter","ignoreCase","minLength","messages","singleTag","clear","deleteTag","noData","downArrow","enforceMinLength","delay","maxSelectedItems","height","animation","virtual","itemTemplate","tagTemplate","groupTemplate","fixedGroupTemplate","clearButton","autoWidth","popup","size","fillMode","rounded","events","setDataSource","_state","persistTagList","listView","setOptions","listOptions","_listOptions","_accessors","currentTag","candidate","_currentTag","removeClass","removeAttr","find","addClass","dataItems","selectedDataItems","destroy","clearTimeout","_busy","_typingTimeout","wrapper","off","_clear","ul","autocomplete","tagListId","role","_ariaLabel","_focused","_activateItem","visible","selectedItemChange","_selectedItemChange","bind","selectable","template","getter","_setListValue","_initialValues","slice","_listChange","e","flatView","optionsMap","valueGetter","_value","i","added","length","dataItem","_render","_selectValue","removed","context","idx","items","children","eq","index","first","tagTextTemplate","item","_wrapperMousedown","notInput","target","nodeName","toLowerCase","closeButton","closest","removeButton","support","mobileOS","cancelable","preventDefault","toggle","trigger","open","_inputFocus","_inputFocusout","close","skipUpdate","bound","isFiltered","_clearFilter","_removeTag","tag","shouldTrigger","option","state","position","customIndex","listViewChildren","_close","done","_change","_refreshTagListAria","select","selected","removeAt","_removedAddedIndexes","splice","classList","remove","_updateTagListHTML","_tagListClick","stopPropagation","currentTarget","_clearValue","_clearSingleTagValue","each","val","_search","focus","_hideClear","tags","_focusHandler","active","_editable","disable","readonly","toggleClass","prop","on","_toggleHover","_keydown","_filterSource","force","_retrieveData","_activeItem","listViewFilterValue","filterValue","listViewFilter","filters","toString","_request","_open","_focusItem","_allowOpening","isPlainObject","_hovered","refresh","_floatCheck","_listBound","_renderFooter","_renderNoData","_toggleNoData","_resizePopup","_updateItemFocus","_touchScroller","reset","_hideBusy","skip","isFirstPage","focusFirst","_inputValue","inputValue","oldValue","clearFilters","_normalizeValues","_old","_valueBeforeCascade","_fetchData","ObservableObject","_setOption","hasItems","view","_fetch","read","_isBound","fields","field","_refreshHandler","_unbindDataSource","_progressHandler","_showBusy","_errorHandler","DataSource","create","formId","form","_resetHandler","setTimeout","_form","_initValue","map","a","b","compare","_click","_select","_getActiveItem","_getSelectedIndices","_selectedIndices","_selectedIndexes","activeItemIdx","key","keyCode","hasValue","isRtl","dir","ENTER","_multipleSelection","DOWN","shiftKey","getElementIndex","focusNext","_selectRange","focusLast","UP","focusPrev","LEFT","RIGHT","prev","last","next","ctrlKey","altKey","hasClass","SPACEBAR","activeIndex","currentIndex","ESC","HOME","END","DELETE","BACKSPACE","PAGEDOWN","PAGEUP","direction","scrollWith","screenHeight","_loading","_showBusyHandler","show","skipCaret","isActive","caretPos","_prev","caret","_option","dataValue","dataText","indexOf","replace","selectedIndex","selectedItems","values","_buildSelectedItems","custom","_selectedItemIndex","_text","valueField","textField","result","push","search","_showClear","_allowSelection","max","_angularTagItems","cmd","angular","elements","updatePersistTagList","removedItem","addedItem","total","removeChild","append","_maxTotal","_refreshFloatingLabel","renderChipList","maxTotal","currentTotal","resolved","Deferred","resolve","dataItemByIndex","isSelected","startIndex","endIndex","indices","indicesToSelect","selectIndices","forEach","accessKey","appendTo","title","inputValuesContainer","defaultTemplate","hasDataSource","isMultiple","ref","renderChip","themeColor","text","unselectable","removable","removableAttr","icon","iconAttr","insertAfter","arrowTitle","arrow","renderButton","_arrow","tabIndex","computedStyles","getComputedStyles","visibility","top","left","_span","css","parent","wrap","style","cssText","className","_closeHandler","_openHandler","_adjustListWidth","plugin","cssProperties","registerPrefix","registerValues","roundedValues","concat"],"sources":["kendo.multiselect.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.list', 'kendo.mobile.scroller', 'kendo.virtuallist', 'kendo.html.chip', 'kendo.html.chiplist', 'kendo.html.button'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"multiselect\",\n        name: \"MultiSelect\",\n        category: \"web\",\n        description: \"The MultiSelect widget allows the selection from pre-defined values.\",\n        depends: [ \"list\", \"html.chip\", \"html.chiplist\", \"html.button\" ],\n        features: [ {\n            id: \"mobile-scroller\",\n            name: \"Mobile scroller\",\n            description: \"Support for kinetic scrolling in mobile device\",\n            depends: [ \"mobile.scroller\" ]\n        }, {\n            id: \"virtualization\",\n            name: \"VirtualList\",\n            description: \"Support for virtualization\",\n            depends: [ \"virtuallist\" ]\n        } ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            List = ui.List,\n            encode = kendo.htmlEncode,\n            html = kendo.html,\n            keys = $.extend({ A: 65 }, kendo.keys),\n            activeElement = kendo._activeElement,\n            ObservableArray = kendo.data.ObservableArray,\n            ID = \"id\",\n            CHIP = \".k-chip\",\n            ACCEPT = \"accept\",\n            FILTER = \"filter\",\n            REBIND = \"rebind\",\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            CHANGE = \"change\",\n            PROGRESS = \"progress\",\n            SELECT = \"select\",\n            DESELECT = \"deselect\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_READONLY = \"aria-readonly\",\n            ARIA_EXPANDED = \"aria-expanded\",\n            ARIA_HIDDEN = \"aria-hidden\",\n            ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n            ARIA_BUSY = \"aria-busy\",\n            FOCUSEDCLASS = \"k-focus\",\n            SELECTEDCLASS = \"k-selected\",\n            HIDDENCLASS = \"k-hidden\",\n            HOVERCLASS = \"k-hover\",\n            STATEDISABLED = \"k-disabled\",\n            NOCLICKCLASS = \"k-no-click\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            AUTOCOMPLETEVALUE = \"off\",\n            ns = \".kendoMultiSelect\",\n            CLICK = \"click\" + ns,\n            KEYDOWN = \"keydown\" + ns,\n            MOUSEENTER = \"mouseenter\" + ns,\n            MOUSELEAVE = \"mouseleave\" + ns,\n            HOVEREVENTS = MOUSEENTER + \" \" + MOUSELEAVE,\n            quotRegExp = /\"/g,\n            isArray = Array.isArray,\n            styles = [\"font-family\",\n                      \"font-size\",\n                      \"font-stretch\",\n                      \"font-style\",\n                      \"font-weight\",\n                      \"letter-spacing\",\n                      \"text-transform\",\n                      \"line-height\"];\n\n        var MultiSelect = List.extend({\n            init: function(element, options) {\n                var that = this, id, disabled;\n\n                that.ns = ns;\n                List.fn.init.call(that, element, options);\n\n                that._optionsMap = {};\n                that._customOptions = {};\n\n                that._wrapper();\n                that._inputValuesContainer();\n                that._tagList();\n                that._input();\n                that._textContainer();\n                that._loader();\n                that._clearButton();\n                that._arrowButton();\n\n                that._tabindex(that.input);\n\n                element = that.element.attr(\"multiple\", \"multiple\").hide();\n                options = that.options;\n\n                if (!options.placeholder) {\n                    options.placeholder = element.data(\"placeholder\");\n                }\n\n                id = element.attr(ID);\n\n                if (!id) {\n                    id = kendo.guid();\n                }\n\n                if (id) {\n                    that._tagID = id + \"_tag_active\";\n                    id = id + \"_taglist\";\n                    that.tagList.attr(ID, id);\n                }\n\n                that._initialOpen = true;\n\n                if (options.label) {\n                    this._label();\n                }\n\n                that._aria();\n\n                that._dataSource();\n                that._ignoreCase();\n                that._popup();\n\n                that._tagTemplate();\n                that.requireValueMapper(that.options);\n                that._initList();\n\n                that._reset();\n                that._enable();\n                that._placeholder();\n\n                if (options.autoBind) {\n                    that.dataSource.fetch();\n                } else if (options.value) {\n                    that._preselect(options.value);\n                }\n\n                disabled = $(that.element).parents(\"fieldset\").is(':disabled');\n\n                if (disabled) {\n                    that.enable(false);\n                }\n\n                that._toggleCloseVisibility();\n                that._applyCssClasses();\n\n                kendo.notify(that);\n            },\n\n            options: {\n                name: \"MultiSelect\",\n                tagMode: \"multiple\",\n                enabled: true,\n                autoBind: true,\n                autoClose: true,\n                highlightFirst: true,\n                dataTextField: \"\",\n                dataValueField: \"\",\n                filter: \"startswith\",\n                ignoreCase: true,\n                minLength: 1,\n                messages: {\n                    \"singleTag\": \"item(s) selected\",\n                    \"clear\": \"clear\",\n                    \"deleteTag\": \"delete\",\n                    \"noData\": \"No data found.\",\n                    \"downArrow\": \"select\"\n                },\n                enforceMinLength: false,\n                delay: 100,\n                value: null,\n                maxSelectedItems: null,\n                placeholder: \"\",\n                height: 200,\n                animation: {},\n                virtual: false,\n                itemTemplate: \"\",\n                tagTemplate: \"\",\n                groupTemplate: function (data) { return encode(data); },\n                fixedGroupTemplate: function (data) { return encode(data); },\n                clearButton: true,\n                autoWidth: false,\n                popup: null,\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                label: null\n            },\n\n            events: [\n                OPEN,\n                CLOSE,\n                CHANGE,\n                SELECT,\n                DESELECT,\n                \"filtering\",\n                \"dataBinding\",\n                \"dataBound\"\n            ],\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n\n                this._state = \"\";\n                this._dataSource();\n\n                this.persistTagList = false;\n                this.listView.setDataSource(this.dataSource);\n\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n            },\n\n            setOptions: function(options) {\n                var listOptions = this._listOptions(options);\n\n                List.fn.setOptions.call(this, options);\n\n                this.listView.setOptions(listOptions);\n\n\n                this._accessors();\n                this._aria();\n                this._tagTemplate();\n                this._placeholder();\n                this._clearButton();\n                this._arrowButton();\n            },\n\n            currentTag: function(candidate) {\n                var that = this;\n\n                if (candidate !== undefined$1) {\n                    if (that._currentTag) {\n                        that._currentTag\n                            .removeClass(FOCUSEDCLASS)\n                            .removeAttr(ID);\n\n                        that._currentTag.find(\".k-chip-action\").attr(ARIA_HIDDEN, true);\n\n                        that.input.removeAttr(ARIA_ACTIVEDESCENDANT);\n                    }\n\n                    if (candidate) {\n                        candidate.addClass(FOCUSEDCLASS).attr(ID, that._tagID);\n\n                        candidate.find(\".k-chip-action\").removeAttr(ARIA_HIDDEN);\n\n                        that.input.attr(ARIA_ACTIVEDESCENDANT, that._tagID);\n                    }\n\n                    that._currentTag = candidate;\n                } else {\n                    return that._currentTag;\n                }\n            },\n\n            dataItems: function() {\n                return this.listView.selectedDataItems();\n            },\n\n            destroy: function() {\n                var that = this,\n                    ns = that.ns;\n\n                clearTimeout(that._busy);\n                clearTimeout(that._typingTimeout);\n\n                that.wrapper.off(ns);\n                that.tagList.off(ns);\n                that.input.off(ns);\n                that._clear.off(ns);\n\n                List.fn.destroy.call(that);\n            },\n\n            _aria: function() {\n                var that = this,\n                    id = that.ul[0].id,\n                    autocomplete = this.options.filter === \"none\" ? \"none\" : \"list\",\n                    tagListId = that.tagList.attr(ID);\n\n                that.input.attr({\n                    \"role\": \"combobox\",\n                    \"aria-expanded\": false,\n                    \"aria-controls\": id,\n                    \"aria-autocomplete\": autocomplete,\n                    \"aria-describedby\": tagListId\n                });\n\n                that._ariaLabel(that._focused);\n            },\n\n            _activateItem: function() {\n                if (this.popup.visible()) {\n                    List.fn._activateItem.call(this);\n                }\n                this.currentTag(null);\n            },\n\n            _listOptions: function(options) {\n                var that = this;\n                var listOptions = List.fn._listOptions.call(that, $.extend(options, {\n                    selectedItemChange: that._selectedItemChange.bind(that),\n                    selectable: \"multiple\"\n                }));\n\n                var itemTemplate = this.options.itemTemplate || this.options.template;\n                var template = listOptions.itemTemplate || itemTemplate || listOptions.template;\n\n                if (!template) {\n                    template = function (data) { return encode(kendo.getter(listOptions.dataTextField)(data)); };\n                }\n\n                listOptions.template = template;\n\n                return listOptions;\n            },\n\n            _setListValue: function() {\n                List.fn._setListValue.call(this, this._initialValues.slice(0));\n            },\n\n            _listChange: function(e) {\n                var data = this.dataSource.flatView();\n                var optionsMap = this._optionsMap;\n                var valueGetter = this._value;\n\n                if (this._state === REBIND) {\n                    this._state = \"\";\n                }\n\n                for (var i = 0; i < e.added.length; i++) {\n                    if (optionsMap[valueGetter(e.added[i].dataItem)] === undefined$1) {\n                        this._render(data); //render select element <option> tags if the item does not persist in the current data view\n                        break;\n                    }\n                }\n\n                this._selectValue(e.added, e.removed);\n            },\n\n            _selectedItemChange: function(e) {\n                var items = e.items;\n                var context;\n                var idx;\n\n                for (idx = 0; idx < items.length; idx++) {\n                    context = items[idx];\n                    this.tagList.children(CHIP).eq(context.index).children(\"span\").first().html(this.tagTextTemplate(context.item));\n                }\n            },\n\n            _wrapperMousedown: function(e) {\n                var that = this;\n                var notInput = e.target.nodeName.toLowerCase() !== \"input\";\n                var target = $(e.target);\n                var closeButton = target.closest(\".k-multiselect-toggle-button, .k-chip\").children(\"[class*='-i-caret-alt-down']\")[0];\n                var removeButton = target.closest(\"[class*='-i-x']\")[0];\n\n                if (notInput && !(removeButton && kendo.support.mobileOS) && e.cancelable) {\n                    e.preventDefault();\n                }\n\n                if (!removeButton) {\n                    if (closeButton && that.popup.visible()) {\n                        that.toggle(false);\n                    } else {\n                        if (that.input[0] !== activeElement() && notInput) {\n                            that.input.trigger(\"focus\");\n                        }\n\n                        if (that.options.minLength === 1 && !that.popup.visible()) {\n                            that.open();\n                        }\n                    }\n                }\n\n            },\n\n            _inputFocus: function() {\n                this._placeholder(false, true);\n                this.wrapper.addClass(FOCUSEDCLASS);\n            },\n\n            _inputFocusout: function() {\n                var that = this;\n\n                clearTimeout(that._typingTimeout);\n\n                that.wrapper.removeClass(FOCUSEDCLASS);\n\n                that._placeholder(!that.listView.selectedDataItems()[0], true);\n                that.close();\n\n                if (that._state === FILTER) {\n                    that._state = ACCEPT;\n                    that.listView.skipUpdate(true);\n                }\n\n                if (that.listView.bound() && that.listView.isFiltered()) {\n                    that.persistTagList = true;\n                    that._clearFilter();\n                }\n\n                that.element.trigger(\"blur\");\n            },\n\n            _removeTag: function(tag, shouldTrigger) {\n                var that = this;\n                var state = that._state;\n                var position = tag.index();\n                var listView = that.listView;\n                var value = listView.value()[position];\n                var dataItem = that.listView.selectedDataItems()[position];\n                var customIndex = that._customOptions[value];\n                var listViewChildren = listView.element[0].children;\n                var option;\n                var listViewChild;\n\n                if (that.trigger(DESELECT, { dataItem: dataItem, item: tag })) {\n                    that._close();\n                    return;\n                }\n\n                if (customIndex === undefined$1 && (state === ACCEPT || state === FILTER)) {\n                    customIndex = that._optionsMap[value];\n                }\n\n                var done = function() {\n                    that.currentTag(null);\n                    if (shouldTrigger) {\n                        that._change();\n                    }\n\n                    that._refreshTagListAria();\n                    that._close();\n                };\n\n                if (customIndex === undefined$1 && listView.select().length) {\n                    that.persistTagList = false;\n                    listView.select(listView.select()[position]).done(done);\n                } else {\n                    option = that.element[0].children[customIndex];\n                    if (option) {\n                        option.selected = false;\n                    }\n\n                    listView.removeAt(position);\n\n                    if (listView._removedAddedIndexes) {\n                        listView._removedAddedIndexes.splice(position, 1);\n                    }\n\n                    listViewChild = listViewChildren[customIndex];\n                    if (listViewChild) {\n                        listViewChildren[customIndex].classList.remove(\"k-selected\");\n                    }\n                    if (that.options.tagMode !== \"single\") {\n                        tag.remove();\n                    } else {\n                        that._updateTagListHTML();\n                    }\n                    done();\n                }\n            },\n\n            _tagListClick: function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                var target = $(e.currentTarget);\n\n                if (target.is(\"[class*='-i-x-circle']\")) {\n                    this._removeTag(target.closest(CHIP), true);\n                }\n            },\n\n            _clearValue: function() {\n                var that = this;\n\n                if (that.options.tagMode === \"single\") {\n                    that._clearSingleTagValue();\n                } else {\n                    that.tagList.children(CHIP).each(function(index, tag) {\n                        that._removeTag($(tag), false);\n                    });\n                }\n\n                that.input.val(\"\");\n                that._search();\n                that._change();\n                that.focus();\n                that._hideClear();\n\n                if (that._state === FILTER) {\n                    that._state = ACCEPT;\n                }\n            },\n\n            _clearSingleTagValue: function() {\n                var that = this;\n                var items = that.dataItems();\n                var tags = that.tagList.children(CHIP);\n                var persistTagList = that.persistTagList;\n\n                for (var i = 0; i < items.length; i += 1) {\n                    if (that.trigger(DESELECT, { dataItem: items[i], item: tags.first() })) {\n                        that._close();\n                        return;\n                    }\n                }\n\n                if (persistTagList) {\n                    that.persistTagList = false;\n                }\n\n                that.listView.value([]);\n                that.persistTagList = persistTagList;\n            },\n\n            _focusHandler: function() {\n                var input = this.input;\n                var active = activeElement();\n                var isActive = input[0] === active;\n\n                if (!isActive) {\n                    this.input.trigger(\"focus\");\n                }\n            },\n\n            _editable: function(options) {\n                var that = this,\n                    disable = options.disable,\n                    readonly = options.readonly,\n                    wrapper = that.wrapper.off(ns),\n                    tagList = that.tagList.off(ns),\n                    input = that.input.off(ns);\n\n                if (!readonly && !disable) {\n                    wrapper\n                        .removeClass(STATEDISABLED)\n                        .removeClass(NOCLICKCLASS)\n                        .on(HOVEREVENTS, that._toggleHover)\n                        .on(\"mousedown\" + ns + \" touchend\" + ns, that._wrapperMousedown.bind(that))\n                        .on(CLICK, that._focusHandler.bind(that));\n\n                    that.input.on(KEYDOWN, that._keydown.bind(that))\n                        .on(\"paste\" + ns, that._search.bind(that))\n                        .on(\"input\" + ns, that._search.bind(that))\n                        .on(\"focus\" + ns, that._inputFocus.bind(that))\n                        .on(\"focusout\" + ns, that._inputFocusout.bind(that));\n\n                    that._clear.on(CLICK + \" touchend\" + ns, that._clearValue.bind(that));\n\n                    input.prop(DISABLED, false)\n                         .prop(READONLY, false)\n                         .attr(ARIA_DISABLED, false)\n                         .attr(ARIA_READONLY, false);\n\n                    that.element.prop(DISABLED, false);\n\n                    tagList\n                        .on(MOUSEENTER, CHIP, function() { $(this).addClass(HOVERCLASS); })\n                        .on(MOUSELEAVE, CHIP, function() { $(this).removeClass(HOVERCLASS); })\n                        .on(CLICK + \" touchend\" + ns, \".k-chip .k-icon,.k-chip .k-svg-icon\", that._tagListClick.bind(that));\n                } else {\n\n                    wrapper.toggleClass(STATEDISABLED, disable)\n                           .toggleClass(NOCLICKCLASS, readonly);\n\n                    input.attr(DISABLED, disable)\n                         .attr(READONLY, readonly)\n                         .attr(ARIA_DISABLED, disable)\n                         .attr(ARIA_READONLY, readonly);\n\n                    that.element.prop(DISABLED, disable);\n                }\n            },\n\n            _close: function() {\n                var that = this;\n                if (that.options.autoClose) {\n                    that.close();\n                } else {\n                    that.popup.position();\n                }\n            },\n\n            _filterSource: function(filter, force) {\n                if (!force) {\n                    force = this._retrieveData;\n                }\n                this._retrieveData = false;\n                List.fn._filterSource.call(this, filter, force);\n            },\n\n            close: function() {\n                this._activeItem = null;\n                this.input.removeAttr(ARIA_ACTIVEDESCENDANT);\n\n                this.popup.close();\n            },\n\n            open: function() {\n                var that = this,\n                    filterValue = that.input.val().toLowerCase(),\n                    listViewFilter = that.listView.dataSource.filter(),\n                    listViewFilterValue;\n\n                if (listViewFilter && listViewFilter.filters.length > 0) {\n                    listViewFilterValue = (listViewFilter.filters[0].value || \"\").toString().toLowerCase();\n                }\n\n                if (that._request) {\n                    that._retrieveData = false;\n                }\n\n                if (that._retrieveData || !that.listView.bound() || (that._state === ACCEPT && filterValue !== listViewFilterValue)) {\n                    that._open = true;\n                    that._state = REBIND;\n\n                    that.listView.skipUpdate(true);\n\n                    that.persistTagList = that._initialOpen && !that.listView.bound() ? false : true;\n                    that._filterSource();\n                    that._focusItem();\n                } else if (that._allowOpening()) {\n\n                    //selects values in autoBind false and non virtual scenario on initial load\n                    if (that._initialOpen && !that.options.autoBind && !that.options.virtual && that.options.value && !$.isPlainObject(that.options.value[0])) {\n                        that.value(that.value() || that._initialValues);\n                    }\n\n                    // In some cases when the popup is opened resize is triggered which will cause it to close\n                    // Setting the below flag will prevent this from happening\n                    that.popup._hovered = true;\n                    that._initialOpen = false;\n                    that.popup.open();\n                    that._focusItem();\n                }\n            },\n\n            toggle: function(toggle) {\n                toggle = toggle !== undefined$1 ? toggle : !this.popup.visible();\n\n                this[toggle ? OPEN : CLOSE]();\n            },\n\n            refresh: function() {\n                this.listView.refresh();\n            },\n\n            _floatCheck: function() {\n                if (this.listView) {\n                    var hasValue = (this.value() && this.value().length);\n                    return !hasValue && !this.popup.visible();\n                }\n\n                return true;\n            },\n\n            _listBound: function() {\n                var that = this;\n                var data = that.dataSource.flatView();\n\n                that._render(data);\n                that._renderFooter();\n                that._renderNoData();\n                that._toggleNoData(!data.length);\n                that._resizePopup();\n\n                if (that._open) {\n                    that._open = false;\n                    that.toggle(that._allowOpening());\n                }\n\n                that.popup.position();\n                that._updateItemFocus();\n\n                if (that._touchScroller) {\n                    that._touchScroller.reset();\n                }\n\n                that._hideBusy();\n\n                that.trigger(\"dataBound\");\n            },\n\n            _updateItemFocus: function() {\n                var that = this,\n                    data = that.dataSource.flatView(),\n                    skip = that.listView.skip(),\n                    isFirstPage = skip === undefined$1 || skip === 0;\n\n                if (data.length && isFirstPage) {\n                    if (!that.options.highlightFirst) {\n                        that.listView.focus(-1);\n                    } else {\n                        that.listView.focusFirst();\n                    }\n                }\n            },\n\n            _inputValue: function() {\n                var that = this;\n                var inputValue = that.input.val();\n\n                if (that.options.placeholder === inputValue) {\n                    inputValue = \"\";\n                }\n                return inputValue;\n            },\n\n            value: function(value) {\n                var that = this;\n                var listView = that.listView;\n                var oldValue = listView.value().slice();\n                var maxSelectedItems = that.options.maxSelectedItems;\n                var clearFilters = listView.bound() && listView.isFiltered();\n\n                if (value === undefined$1) {\n                    return oldValue;\n                }\n\n                that.persistTagList = false;\n                that.requireValueMapper(that.options, value);\n\n                value = that._normalizeValues(value);\n\n                if (maxSelectedItems !== null && value.length > maxSelectedItems) {\n                    value = value.slice(0, maxSelectedItems);\n                }\n\n                if (clearFilters) {\n                    that._clearFilter();\n                }\n\n                listView.value(value);\n                that._old = that._valueBeforeCascade = value.slice(); //get a new array reference\n\n                if (!clearFilters) {\n                    that._fetchData();\n                }\n\n                that._toggleCloseVisibility();\n            },\n\n            _preselect: function(data, value) {\n                var that = this;\n\n                if (!isArray(data) && !(data instanceof kendo.data.ObservableArray)) {\n                    data = [data];\n                }\n\n                if ($.isPlainObject(data[0]) || data[0] instanceof kendo.data.ObservableObject || !that.options.dataValueField) {\n                    that.dataSource.data(data);\n                    that.value(value || that._initialValues);\n                    that._retrieveData = true;\n                }\n            },\n\n            _setOption: function(value, selected) {\n                var option = this.element[0].children[this._optionsMap[value]];\n\n                if (option) {\n                    option.selected = selected;\n                }\n            },\n\n            _fetchData: function() {\n                var that = this;\n                var hasItems = !!that.dataSource.view().length;\n                var isEmptyArray = that.listView.value().length === 0;\n\n                if (isEmptyArray || that._request) {\n                    return;\n                }\n\n                if (that._retrieveData || (!that._fetch && !hasItems)) {\n                    that._fetch = true;\n                    that._retrieveData = false;\n                    that.dataSource.read().done(function() {\n                        that._fetch = false;\n                    });\n                }\n            },\n\n            _isBound: function() {\n                return this.listView.bound() && !this._retrieveData;\n            },\n\n            _dataSource: function() {\n                var that = this,\n                    element = that.element,\n                    options = that.options,\n                    dataSource = options.dataSource || {};\n\n                dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                dataSource.select = element;\n                dataSource.fields = [{ field: options.dataTextField },\n                                     { field: options.dataValueField }];\n\n                if (that.dataSource && that._refreshHandler) {\n                    that._unbindDataSource();\n                } else {\n                    that._progressHandler = that._showBusy.bind(that);\n                    that._errorHandler = that._hideBusy.bind(that);\n                }\n\n                that.dataSource = kendo.data.DataSource.create(dataSource)\n                                       .bind(PROGRESS, that._progressHandler)\n                                       .bind(\"error\", that._errorHandler);\n            },\n\n            _reset: function() {\n                var that = this,\n                    element = that.element,\n                    formId = element.attr(\"form\"),\n                    form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        setTimeout(function() {\n                            that.value(that._initialValues);\n                            that._placeholder();\n                        });\n                    };\n\n                    that._form = form.on(\"reset\", that._resetHandler);\n                }\n            },\n\n            _initValue: function() {\n                var value = this.options.value || this.element.val();\n\n                this._old = this._initialValues = this._normalizeValues(value);\n            },\n\n            _normalizeValues: function(value) {\n                var that = this;\n\n                if (value === null) {\n                    value = [];\n                } else if (value && $.isPlainObject(value)) {\n                    value = [that._value(value)];\n                } else if (value && $.isPlainObject(value[0])) {\n                    value = $.map(value, function(dataItem) { return that._value(dataItem); });\n                } else if (!isArray(value) && !(value instanceof ObservableArray)) {\n                    value = [value];\n                } else if (isArray(value)) {\n                    value = value.slice();\n                }\n\n                return value;\n            },\n\n            _change: function() {\n                var that = this,\n                    value = that.value();\n\n                if (!compare(value, that._old)) {\n                    that._old = value.slice();\n\n                    that.trigger(CHANGE);\n\n                    // trigger the DOM change event so any subscriber gets notified\n                    that.element.trigger(CHANGE);\n                }\n                that.popup.position();\n\n                that._toggleCloseVisibility();\n            },\n\n            _click: function(e) {\n                var that = this;\n                var item = e.item;\n\n                e.preventDefault();\n\n                that._select(item).done(function() {\n                    that._activeItem = item;\n                    that._change();\n                    that._close();\n                });\n            },\n\n            _getActiveItem: function() {\n                return this._activeItem || $(this.listView.items()[this._getSelectedIndices().length - 1]) || this.listView.focus();\n            },\n\n            _getSelectedIndices: function() {\n                return this.listView._selectedIndices || this.listView._selectedIndexes;\n            },\n\n            _keydown: function(e) {\n                var that = this;\n                var key = e.keyCode;\n                var tag = that._currentTag;\n                var listView = that.listView;\n                var hasValue = that.input.val();\n                var isRtl = kendo.support.isRtl(that.wrapper);\n                var visible = that.popup.visible();\n                var dir = 0;\n                var activeItemIdx;\n\n                if (key !== keys.ENTER) {\n                    this._multipleSelection = false;\n                }\n\n                if (key === keys.DOWN) {\n                    e.preventDefault();\n\n                    if (!visible) {\n                        that.open();\n\n                        if (!listView.focus()) {\n                            listView.focusFirst();\n                        }\n                        return;\n                    }\n\n                    if (listView.focus()) {\n                        if (!that._activeItem && e.shiftKey) {\n                            that._activeItem = listView.focus();\n                            dir = -1;\n                        }\n                        activeItemIdx = listView.getElementIndex(that._getActiveItem().first());\n\n                        listView.focusNext();\n                        if (!listView.focus()) {\n                            listView.focusLast();\n                        } else {\n                            if (e.shiftKey && !that.options.virtual) {\n                                this._multipleSelection = true;\n                                that._selectRange(activeItemIdx, listView.getElementIndex(listView.focus().first()) + dir);\n                            }\n                        }\n                    } else {\n                        listView.focusFirst();\n                    }\n\n                } else if (key === keys.UP) {\n                    if (visible) {\n                        if (!that._activeItem && e.shiftKey) {\n                            that._activeItem = listView.focus();\n                            dir = 1;\n                        }\n                        activeItemIdx = listView.getElementIndex(that._getActiveItem().first());\n                        listView.focusPrev();\n                        if (!listView.focus()) {\n                            that.close();\n                        } else {\n                            if (e.shiftKey && !that.options.virtual) {\n                                this._multipleSelection = true;\n                                that._selectRange(activeItemIdx, listView.getElementIndex(listView.focus().first()) + dir);\n                            }\n                        }\n                    }\n                    e.preventDefault();\n                } else if ((key === keys.LEFT && !isRtl) || (key === keys.RIGHT && isRtl)) {\n                    if (!hasValue) {\n                        tag = tag ? tag.prev(CHIP) : that.tagList.children(CHIP).last();\n                        if (tag[0]) {\n                            that.currentTag(tag);\n                        }\n                    }\n                } else if ((key === keys.RIGHT && !isRtl) || (key === keys.LEFT && isRtl)) {\n                    if (!hasValue && tag) {\n                        tag = tag.next(CHIP);\n                        that.currentTag(tag[0] ? tag : null);\n                    }\n                } else if (e.ctrlKey && !e.altKey && key === keys.A && visible && !that.options.virtual) {\n                    this._multipleSelection = true;\n                    if (this._getSelectedIndices().length === listView.items().length) {\n                        that._activeItem = null;\n                    }\n\n                    if (listView.items().length) {\n                        that._selectRange(0, listView.items().length - 1);\n                    }\n                } else if (key === keys.ENTER && visible) {\n                    if (!listView.focus()) {\n                        return;\n                    }\n\n                    e.preventDefault();\n\n                    if (this._multipleSelection) {\n                        this._multipleSelection = false;\n                         if (listView.focus().hasClass(SELECTEDCLASS)) {\n                            that._close();\n                            return;\n                        }\n                    }\n\n                    that._select(listView.focus()).done(function() {\n                        that._change();\n                        that._close();\n                    });\n                } else if (key === keys.SPACEBAR && e.ctrlKey && visible) {\n                    if (that._activeItem && listView.focus() && listView.focus()[0] === that._activeItem[0]) {\n                        that._activeItem = null;\n                    }\n                    if (!$(listView.focus()).hasClass(SELECTEDCLASS)) {\n                        that._activeItem = listView.focus();\n                    }\n                    that._select(listView.focus()).done(function() {\n                        that._change();\n                    });\n                    e.preventDefault();\n                } else if (key === keys.SPACEBAR && e.shiftKey && visible && !that.options.virtual) {\n                    var activeIndex = listView.getElementIndex(that._getActiveItem());\n                    var currentIndex = listView.getElementIndex(listView.focus());\n\n                    if (activeIndex !== undefined$1 && currentIndex !== undefined$1) {\n                        that._selectRange(activeIndex, currentIndex);\n                    }\n\n                    e.preventDefault();\n                } else if (key === keys.ESC) {\n                    if (visible) {\n                        e.preventDefault();\n                    } else {\n                        that.tagList.children(CHIP).each(function(index, tag) {\n                            that._removeTag($(tag), false);\n                        });\n                        that._change();\n                    }\n\n                    that.close();\n                } else if (key === keys.HOME) {\n                    if (visible) {\n                        if (!listView.focus()) {\n                            that.close();\n                        } else {\n                            if (e.ctrlKey && e.shiftKey && !that.options.virtual) {\n                                that._selectRange(listView.getElementIndex(listView.focus()[0]), 0);\n                            }\n                            listView.focusFirst();\n                        }\n                    } else if (!hasValue) {\n                        tag = that.tagList.children(CHIP).first()[0];\n\n                        if (tag) {\n                            that.currentTag($(tag));\n                        }\n                    }\n                } else if (key === keys.END) {\n                    if (visible) {\n                        if (!listView.focus()) {\n                            that.close();\n                        } else {\n                            if (e.ctrlKey && e.shiftKey && !that.options.virtual) {\n                                that._selectRange(\n                                    listView.getElementIndex(listView.focus()[0]),\n                                    listView.element.children().length - 1\n                                );\n                            }\n                            listView.focusLast();\n                        }\n                    } else if (!hasValue) {\n                        tag = that.tagList.children(CHIP).last()[0];\n\n                        if (tag) {\n                            that.currentTag($(tag));\n                        }\n                    }\n                } else if ((key === keys.DELETE || key === keys.BACKSPACE) && !hasValue) {\n                    that._state = ACCEPT;\n\n                    if (that.options.tagMode === \"single\") {\n                        that._clearSingleTagValue();\n\n                        that._change();\n                        that._close();\n                        return;\n                    }\n\n                    if (key === keys.BACKSPACE && !tag) {\n                        tag = that.tagList.children(CHIP).last();\n                    }\n\n                    if (tag && tag[0]) {\n                        that._removeTag(tag, true);\n                    }\n                } else if (that.popup.visible() && (key === keys.PAGEDOWN || key === keys.PAGEUP)) {\n                    e.preventDefault();\n\n                    var direction = key === keys.PAGEDOWN ? 1 : -1;\n                    listView.scrollWith(direction * listView.screenHeight());\n                } else {\n                    clearTimeout(that._typingTimeout);\n                    that._search();\n                }\n            },\n\n            _hideBusy: function() {\n                var that = this;\n                clearTimeout(that._busy);\n                that.input.attr(ARIA_BUSY, false);\n                that._loading.addClass(HIDDENCLASS);\n                that._request = false;\n                that._busy = null;\n\n                that._toggleCloseVisibility();\n            },\n\n            _showBusyHandler: function() {\n                this.input.attr(ARIA_BUSY, true);\n                this._loading.removeClass(HIDDENCLASS);\n                this._hideClear();\n            },\n\n            _showBusy: function() {\n                var that = this;\n\n                that._request = true;\n\n                if (that._busy) {\n                    return;\n                }\n\n                that._busy = setTimeout(that._showBusyHandler.bind(that), 100);\n            },\n\n            _placeholder: function(show, skipCaret) {\n                var that = this;\n                var input = that.input;\n                var active = activeElement();\n                var placeholder = that.options.placeholder;\n                var inputValue = input.val();\n                var isActive = input[0] === active;\n                var caretPos = inputValue.length;\n\n                if (!isActive || that.options.autoClose || inputValue === placeholder) {\n                    caretPos = 0;\n                    inputValue = \"\";\n                }\n\n                if (show === undefined$1) {\n                    show = false;\n                    if (input[0] !== active) {\n                        show = !that.listView.selectedDataItems()[0];\n                    }\n                }\n\n                that._prev = inputValue;\n                input.toggleClass(\"k-readonly\", show).val(show ? placeholder : inputValue);\n\n                if (isActive && !skipCaret) {\n                    kendo.caret(input[0], caretPos, caretPos);\n                }\n            },\n\n            _option: function(dataValue, dataText, selected) {\n                var option = \"<option\";\n\n                if (dataValue !== undefined$1) {\n                    dataValue += \"\";\n\n                    if (dataValue.indexOf('\"') !== -1) {\n                        dataValue = dataValue.replace(quotRegExp, \"&quot;\");\n                    }\n\n                    option += ' value=\"' + dataValue + '\"';\n                }\n\n                if (selected) {\n                    option += ' selected';\n                }\n\n                option += \">\";\n\n                if (dataText !== undefined$1) {\n                    option += kendo.htmlEncode(dataText);\n                }\n\n                return option += \"</option>\";\n            },\n\n            _render: function(data) {\n                var selectedItems = this.listView.selectedDataItems();\n                var values = this.listView.value();\n                var length = data.length;\n                var selectedIndex;\n                var options = \"\";\n                var dataItem;\n                var value;\n                var idx;\n\n                if (values.length !== selectedItems.length) {\n                    selectedItems = this._buildSelectedItems(values);\n                }\n\n                var custom = {};\n                var optionsMap = {};\n\n                for (idx = 0; idx < length; idx++) {\n                    dataItem = data[idx];\n                    value = this._value(dataItem);\n\n                    selectedIndex = this._selectedItemIndex(value, selectedItems);\n                    if (selectedIndex !== -1) {\n                        selectedItems.splice(selectedIndex, 1);\n                    }\n\n                    optionsMap[value] = idx;\n                    options += this._option(value, this._text(dataItem), selectedIndex !== -1);\n                }\n\n                if (selectedItems.length) {\n                    for (idx = 0; idx < selectedItems.length; idx++) {\n                        dataItem = selectedItems[idx];\n\n                        value = this._value(dataItem);\n                        custom[value] = length;\n                        optionsMap[value] = length;\n\n                        length += 1;\n                        options += this._option(value, this._text(dataItem), true);\n                    }\n                }\n\n                this._customOptions = custom;\n                this._optionsMap = optionsMap;\n\n                this.element.html(options);\n            },\n\n            _buildSelectedItems: function(values) {\n                var valueField = this.options.dataValueField;\n                var textField = this.options.dataTextField;\n                var result = [];\n                var item;\n\n                for (var idx = 0; idx < values.length; idx++) {\n                    item = {};\n                    item[valueField] = values[idx];\n                    item[textField] = values[idx];\n\n                    result.push(item);\n                }\n\n                return result;\n            },\n\n            _selectedItemIndex: function(value, selectedItems) {\n                var valueGetter = this._value;\n                var idx = 0;\n\n                for (; idx < selectedItems.length; idx++) {\n                    if (value === valueGetter(selectedItems[idx])) {\n                        return idx;\n                    }\n                }\n\n                return -1;\n            },\n\n            _search: function() {\n                var that = this;\n\n                clearTimeout(that._typingTimeout);\n\n                that._typingTimeout = setTimeout(function() {\n                    var value = that._inputValue();\n                    if (that._prev !== value) {\n                        that._prev = value;\n                        that.search(value);\n                        that._toggleCloseVisibility();\n                    }\n                }, that.options.delay);\n            },\n\n            _toggleCloseVisibility: function() {\n                if (this.value().length || (this.input.val() && this.input.val() !== this.options.placeholder)) {\n                    this._showClear();\n                } else {\n                    this._hideClear();\n                }\n            },\n\n            _allowOpening: function() {\n                return this._allowSelection() && List.fn._allowOpening.call(this);\n            },\n\n            _allowSelection: function() {\n                var max = this.options.maxSelectedItems;\n                return max === null || max > this.listView.value().length;\n            },\n\n            _angularTagItems: function(cmd) {\n                var that = this;\n\n                that.angular(cmd, function() {\n                    return {\n                        elements: that.tagList[0].children,\n                        data: $.map(that.dataItems(), function(dataItem) {\n                            return { dataItem: dataItem };\n                        })\n                    };\n                });\n            },\n\n            updatePersistTagList: function(added, removed) {\n                if (this.persistTagList.added &&\n                    this.persistTagList.added.length === removed.length &&\n                    this.persistTagList.removed &&\n                    this.persistTagList.removed.length === added.length) {\n                        this.persistTagList = false;\n                 } else {\n                     this.listView._removedAddedIndexes = this._old.slice();\n                     this.persistTagList = {\n                         added: added,\n                         removed: removed\n                     };\n                 }\n            },\n\n            _selectValue: function(added, removed) {\n                var that = this;\n                var total = that.dataSource.total();\n                var tagList = that.tagList;\n                var getter = that._value;\n                var removedItem;\n                var addedItem;\n                var idx;\n\n                if (this.persistTagList) {\n                    this.updatePersistTagList(added, removed);\n                    that._refreshTagListAria();\n\n                    return;\n                }\n\n                that._angularTagItems(\"cleanup\");\n\n                if (that.options.tagMode === \"multiple\") {\n                    for (idx = removed.length - 1; idx > -1; idx--) {\n                        removedItem = removed[idx];\n\n                        if (tagList.children(CHIP).length) {\n                            tagList[0].removeChild(tagList[0].children[removedItem.position]);\n                            that._setOption(getter(removedItem.dataItem), false);\n                        }\n                    }\n\n                    for (idx = 0; idx < added.length; idx++) {\n                        addedItem = added[idx];\n\n                        that.tagList.append(that.tagTemplate(addedItem.dataItem));\n\n                        that._setOption(getter(addedItem.dataItem), true);\n                    }\n                } else {\n                    if (!that._maxTotal || that._maxTotal < total) {\n                        that._maxTotal = total;\n                    }\n\n                    this._updateTagListHTML();\n\n                    for (idx = removed.length - 1; idx > -1; idx--) {\n                        that._setOption(getter(removed[idx].dataItem), false);\n                    }\n\n                    for (idx = 0; idx < added.length; idx++) {\n                        that._setOption(getter(added[idx].dataItem), true);\n                    }\n                }\n\n                that._refreshTagListAria();\n                that._refreshFloatingLabel();\n\n                that._angularTagItems(\"compile\");\n                that._placeholder();\n            },\n\n            _refreshTagListAria: function() {\n                var that = this;\n                html.renderChipList(that.tagList, $.extend({ selectable: that.value().length === 0 ? \"none\" : \"multiple\" }, that.options));\n            },\n\n            _updateTagListHTML: function() {\n                var that = this;\n                var values = that.value();\n                var total = that.dataSource.total();\n                var tagList = that.tagList;\n\n                tagList.children(CHIP).each(function(index, tag) {\n                    $(tag).remove();\n                });\n\n                if (values.length) {\n                    that.tagList.append(that.tagTemplate({\n                        values: values,\n                        dataItems: that.dataItems(),\n                        maxTotal: that._maxTotal,\n                        currentTotal: total\n                    }));\n                }\n\n                that._refreshTagListAria();\n            },\n\n            _select: function(candidate) {\n                var resolved = $.Deferred().resolve();\n\n                if (!candidate) {\n                    return resolved;\n                }\n\n                var that = this;\n                var listView = that.listView;\n                var dataItem = listView.dataItemByIndex(listView.getElementIndex(candidate));\n                var isSelected = candidate.hasClass(\"k-selected\");\n\n                if (that._state === REBIND) {\n                    that._state = \"\";\n                }\n\n                if (!that._allowSelection() && !isSelected) {\n                    return resolved;\n                }\n\n                if (that.trigger(isSelected ? DESELECT : SELECT, { dataItem: dataItem, item: candidate })) {\n                    that._close();\n                    return resolved;\n                }\n\n                that.persistTagList = false;\n                return listView.select(candidate).done(function() {\n                    that._placeholder();\n\n                    if (that._state === FILTER) {\n                        that._state = ACCEPT;\n                        listView.skipUpdate(true);\n                    }\n                });\n            },\n\n            _selectRange: function(startIndex, endIndex) {\n                var that = this;\n                var listView = this.listView;\n                var maxSelectedItems = this.options.maxSelectedItems;\n                var indices = this._getSelectedIndices().slice();\n                var indicesToSelect = [];\n                var i;\n\n                var selectIndices = function(indices) {\n                    listView.select(indices).done(function() {\n                        indices.forEach(function(index) {\n                            var dataItem = listView.dataItemByIndex(index);\n                            var candidate = listView.element.children()[index];\n                            var isSelected = $(candidate).hasClass(\"k-selected\");\n\n                            that.trigger(isSelected ? SELECT : DESELECT, { dataItem: dataItem, item: $(candidate) });\n                        });\n                        that._change();\n                    });\n                };\n\n                if (indices.length - 1 === endIndex - startIndex) {\n                    return selectIndices(indices);\n                }\n\n                if (startIndex < endIndex) {\n                    for (i = startIndex; i <= endIndex; i++) {\n                        indicesToSelect.push(i);\n                    }\n                } else {\n                    for (i = startIndex; i >= endIndex; i--) {\n                        indicesToSelect.push(i);\n                    }\n                }\n\n                if (maxSelectedItems !== null && indicesToSelect.length > maxSelectedItems) {\n                    indicesToSelect = indicesToSelect.slice(0, maxSelectedItems);\n                }\n\n                for (i = 0; i < indicesToSelect.length; i++) {\n                    var index = indicesToSelect[i];\n\n                    if (this._getSelectedIndices().indexOf(index) == -1) {\n                        indices.push(index);\n                    } else {\n                        indices.splice(indices.indexOf(index), 1);\n                    }\n                }\n\n                if (!indices.length) {\n                    return;\n                }\n\n                that.persistTagList = false;\n                return selectIndices(indices);\n            },\n\n            _input: function() {\n                var that = this;\n                var element = that.element;\n                var accessKey = element[0].accessKey;\n                var input = that._inputValuesContainer.children(\"input.k-input-inner\");\n\n                if (!input[0]) {\n                    input = $('<input class=\"k-input-inner\" />').appendTo(that._inputValuesContainer);\n                }\n\n                element.removeAttr(\"accesskey\");\n\n                that._focused = that.input = input.attr({\n                    \"autocomplete\": AUTOCOMPLETEVALUE,\n                    \"title\": element[0].title\n                });\n\n                if (accessKey) {\n                    that._focused.attr(\"accesskey\", accessKey);\n                }\n            },\n\n            _inputValuesContainer: function() {\n                var that = this,\n                    inputValuesContainer = that.wrapper.children(\".k-input-values\");\n\n                if (!inputValuesContainer[0]) {\n                    inputValuesContainer = $('<div class=\"k-input-values\"></div>').appendTo(that.wrapper);\n                }\n\n                that._inputValuesContainer = inputValuesContainer;\n            },\n\n            _tagList: function() {\n                var that = this,\n                    options = that.options,\n                    tagList = that._inputValuesContainer.children(\".k-chip-list\");\n\n                if (!tagList[0]) {\n                    tagList = $(html.renderChipList('<div unselectable=\"on\" class=\"k-selection-multiple\" />', $.extend({ selectable: \"none\" }, options))).appendTo(that._inputValuesContainer);\n                }\n\n                that.tagList = tagList;\n            },\n\n            _tagTemplate: function() {\n                var that = this;\n                var options = that.options;\n                var tagTemplate = options.tagTemplate;\n                var hasDataSource = options.dataSource;\n                var isMultiple = options.tagMode === \"multiple\";\n                var singleTag = options.messages.singleTag;\n                var defaultTemplate;\n                var multipleTemplateFunc;\n                var singleTemplateFunc;\n\n                if (that.element[0].length && !hasDataSource) {\n                    options.dataTextField = options.dataTextField || \"text\";\n                    options.dataValueField = options.dataValueField || \"value\";\n                }\n\n                multipleTemplateFunc = function (data) { return encode(kendo.getter(options.dataTextField)(data)); };\n                singleTemplateFunc = function (ref) {\n                    var values = ref.values;\n\n                    return ((values.length) + \" \" + singleTag);\n                };\n\n                defaultTemplate = isMultiple ? multipleTemplateFunc : singleTemplateFunc;\n\n                that.tagTextTemplate = tagTemplate = tagTemplate ? kendo.template(tagTemplate) : defaultTemplate;\n\n                that.tagTemplate = function(data) {\n                    return html.renderChip('<span unselectable=\"on\">' +\n                    '</span>', $.extend({}, options, {\n                            fillMode: \"solid\",\n                            rounded: \"medium\",\n                            enabled: !that.element.is(\"[disabled]\"),\n                            themeColor: \"base\",\n                            text: tagTemplate(data),\n                            attr: {\n                                unselectable: \"on\",\n                                \"aria-selected\": true,\n                                role: \"option\",\n                                \"aria-keyshortcuts\": isMultiple ? \"Enter Delete\" : \"Enter\"\n                            },\n                            removable: isMultiple,\n                            removableAttr: {\n                                unselectable: \"on\",\n                                \"aria-hidden\": true,\n                                \"aria-label\": that.options.messages.deleteTag,\n                                title: that.options.messages.deleteTag\n                            },\n                            icon: !isMultiple ? \"caret-alt-down\" : \"\",\n                            iconAttr: {\n                                unselectable: \"on\",\n                                \"aria-hidden\": true,\n                                \"aria-label\": 'open'\n                            }\n                        })\n                    );\n                };\n            },\n\n            _loader: function() {\n                this._loading = $('<span class=\"k-icon k-i-loading k-input-loading-icon ' + HIDDENCLASS + '\"></span>').insertAfter(this._inputValuesContainer);\n            },\n\n            _clearButton: function() {\n                List.fn._clearButton.call(this);\n\n                if (this.options.clearButton) {\n                    this._clear.insertAfter(this._inputValuesContainer);\n                    this.wrapper.addClass(\"k-multiselect-clearable\");\n                }\n            },\n\n            _arrowButton: function() {\n                var arrowTitle = this.options.messages.downArrow,\n                    arrow = $(html.renderButton('<button type=\"button\" aria-label=\"' + arrowTitle + '\" class=\"k-input-button k-multiselect-toggle-button\"></button>', $.extend({}, this.options, {\n                        icon: \"caret-alt-down\"\n                    })));\n\n                if (this._arrow) {\n                    this._arrow.remove();\n                    this._arrow = null;\n                }\n\n                if (this.options.downArrow) {\n                    this._arrow = arrow.attr({\n                        \"tabIndex\": -1\n                    });\n\n                    this._arrow.appendTo(this.wrapper);\n                }\n            },\n\n            _textContainer: function() {\n                var computedStyles = kendo.getComputedStyles(this.input[0], styles);\n\n                computedStyles.position = \"absolute\";\n                computedStyles.visibility = \"hidden\";\n                computedStyles.top = -3333;\n                computedStyles.left = -3333;\n\n                this._span = $(\"<span/>\").css(computedStyles).appendTo(this.wrapper);\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    wrapper = element.parent(\"span.k-multiselect\");\n\n                if (!wrapper[0]) {\n                    wrapper = element.wrap('<span class=\"k-multiselect k-input\" unselectable=\"on\" />').parent();\n                    wrapper[0].style.cssText = element[0].style.cssText;\n                }\n\n                that.wrapper = wrapper\n                                .addClass(element[0].className)\n                                .removeClass('input-validation-error').css(\"display\", \"\");\n            },\n\n            _closeHandler: function(e) {\n                if (this.trigger(CLOSE)) {\n                    e.preventDefault();\n                } else {\n                    this.input.attr(ARIA_EXPANDED, false);\n                    this.ul.attr(ARIA_HIDDEN, true);\n                }\n            },\n\n            _openHandler: function(e) {\n                this._adjustListWidth();\n\n                if (this.trigger(OPEN)) {\n                    e.preventDefault();\n                } else {\n                    this.input.attr(ARIA_EXPANDED, true);\n                    this.ul.attr(ARIA_HIDDEN, false);\n                }\n            }\n        });\n\n        function compare(a, b) {\n            var length;\n\n            if ((a === null && b !== null) || (a !== null && b === null)) {\n                return false;\n            }\n\n            length = a.length;\n            if (length !== b.length) {\n                return false;\n            }\n\n            while (length--) {\n                if (a[length] !== b[length]) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n\n        ui.plugin(MultiSelect);\n\n        kendo.cssProperties.registerPrefix(\"MultiSelect\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"MultiSelect\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n    })(window.kendo.jQuery);\n\n}));\n"]}