{"version":3,"sources":["raw-js/kendo.multiselect.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendomultiselect","js","this","$","kendo","jQuery","addInputPrefixSuffixContainers","widget","wrapper","options","prefixInsertBefore","suffixInsertAfter","prefixContainer","suffixContainer","prefix","prefixOptions","suffix","suffixOptions","hasPrefixContent","template","icon","hasSuffixContent","layoutFlow","containerOrientation","INPUT_SEPARATOR","children","insertBefore","prependTo","html","renderIcon","separator","insertAfter","appendTo","_prefixContainer","_suffixContainer","undefined$1","window","ui","List","encode","htmlEncode","keys","extend","A","activeElement","_activeElement","ObservableArray","data","ID","CHIP","ACCEPT","FILTER","REBIND","OPEN","CLOSE","CHANGE","SELECT","DESELECT","ARIA_DISABLED","ARIA_READONLY","ARIA_EXPANDED","ARIA_HIDDEN","ARIA_ACTIVEDESCENDANT","ARIA_BUSY","FOCUSEDCLASS","SELECTEDCLASS","HIDDENCLASS","HOVERCLASS","STATEDISABLED","NOCLICKCLASS","DISABLED","READONLY","ns","CLICK","KEYDOWN","MOUSEENTER","MOUSELEAVE","HOVEREVENTS","quotRegExp","isArray","Array","styles","MultiSelect","init","element","id","that","fn","call","_optionsMap","_customOptions","_wrapper","_inputValuesContainer","_tagList","_input","_textContainer","_loader","_clearButton","_arrowButton","_tabindex","input","attr","hide","placeholder","guid","_tagID","tagList","_initialOpen","label","_label","_aria","_dataSource","_ignoreCase","_popup","_tagTemplate","requireValueMapper","_initList","_reset","_enable","_placeholder","autoBind","dataSource","fetch","value","_preselect","parents","is","enable","_toggleCloseVisibility","_applyCssClasses","_loading","floatingLabel","refresh","notify","name","tagMode","enabled","autoClose","highlightFirst","dataTextField","dataValueField","filter","ignoreCase","minLength","messages","singleTag","clear","deleteTag","noData","downArrow","enforceMinLength","delay","maxSelectedItems","height","animation","virtual","itemTemplate","tagTemplate","groupTemplate","fixedGroupTemplate","clearButton","autoWidth","popup","size","fillMode","rounded","events","setDataSource","_state","persistTagList","listView","setOptions","listOptions","_listOptions","_accessors","currentTag","candidate","_currentTag","removeClass","removeAttr","find","addClass","dataItems","selectedDataItems","destroy","clearTimeout","_busy","_typingTimeout","filterInput","off","_clear","_onActionSheetCreate","on","_keydown","bind","_search","role","val","trigger","ul","autocomplete","tagListId","_ariaLabel","_focused","_activateItem","visible","selectedItemChange","_selectedItemChange","selectable","getter","_setListValue","_initialValues","slice","_listChange","e","flatView","optionsMap","valueGetter","_value","i","added","length","dataItem","_render","_selectValue","removed","context","idx","items","eq","index","first","tagTextTemplate","item","_wrapperMousedown","notInput","target","nodeName","toLowerCase","closeButton","closest","removeButton","support","mobileOS","cancelable","preventDefault","toggle","open","_inputFocus","_inputFocusout","relatedTarget","close","skipUpdate","bound","isFiltered","_clearFilter","_removeTag","tag","shouldTrigger","option","state","position","customIndex","listViewChildren","_close","done","_change","_refreshTagListAria","select","selected","removeAt","_removedAddedIndexes","splice","classList","remove","_updateTagListHTML","_tagListClick","stopPropagation","currentTarget","_clearValue","_clearSingleTagValue","each","focus","_hideClear","tags","_focusHandler","active","_editable","disable","readonly","toggleClass","prop","_toggleHover","_filterSource","force","_retrieveData","_activeItem","filterValue","listViewFilter","listViewFilterValue","filters","toString","_request","_open","_focusItem","_allowOpening","isPlainObject","_hovered","altTarget","add","_floatCheck","_listBound","_renderFooter","_renderNoData","_toggleNoData","_resizePopup","_updateItemFocus","_touchScroller","reset","_hideBusy","skip","isFirstPage","focusFirst","_inputValue","inputValue","oldValue","clearFilters","_normalizeValues","_old","_valueBeforeCascade","_fetchData","ObservableObject","_setOption","hasItems","view","_fetch","read","_isBound","fields","field","_refreshHandler","_unbindDataSource","_progressHandler","_showBusy","_errorHandler","DataSource","create","formId","form","_resetHandler","setTimeout","_form","_initValue","map","a","b","compare","_click","_select","_getActiveItem","_getSelectedIndices","_selectedIndices","_selectedIndexes","activeItemIdx","key","keyCode","hasValue","isRtl","dir","ENTER","_multipleSelection","DOWN","shiftKey","getElementIndex","focusNext","_selectRange","focusLast","UP","focusPrev","LEFT","RIGHT","prev","last","next","ctrlKey","altKey","hasClass","SPACEBAR","activeIndex","currentIndex","ESC","HOME","END","DELETE","BACKSPACE","PAGEDOWN","PAGEUP","direction","scrollWith","screenHeight","_showBusyHandler","show","skipCaret","isActive","caretPos","_prev","caret","_option","dataValue","dataText","indexOf","replace","selectedIndex","selectedItems","values","_buildSelectedItems","custom","_selectedItemIndex","_text","valueField","textField","result","push","noDelay","_performSearch","search","_showClear","_allowSelection","max","updatePersistTagList","removedItem","addedItem","total","removeChild","append","applyStylesFromKendoAttributes","_maxTotal","_refreshFloatingLabel","renderChipList","maxTotal","currentTotal","resolved","Deferred","resolve","dataItemByIndex","isSelected","startIndex","endIndex","indices","indicesToSelect","selectIndices","forEach","accessKey","title","inputValuesContainer","defaultTemplate","hasDataSource","isMultiple","renderChip","themeColor","text","unselectable","removable","removableAttr","iconAttr","arrowTitle","arrow","renderButton","_arrow","tabIndex","computedStyles","getComputedStyles","visibility","top","left","_span","css","parent","wrap","style","cssText","className","_closeHandler","_openHandler","_adjustListWidth","plugin","cssProperties","registerPrefix","registerValues","roundedValues","concat"],"mappings":"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","file":"kendo.multiselect.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.list.js'), require('kendo.mobile.scroller.js'), require('kendo.virtuallist.js'), require('kendo.html.chip.js'), require('kendo.html.chiplist.js'), require('kendo.html.button.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.list', 'kendo.mobile.scroller', 'kendo.virtuallist', 'kendo.html.chip', 'kendo.html.chiplist', 'kendo.html.button'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendomultiselect = global.kendomultiselect || {}, global.kendomultiselect.js = factory()));\n})(this, (function () {\n    let $ = kendo.jQuery;\n\n    function addInputPrefixSuffixContainers({ widget, wrapper, options, prefixInsertBefore, suffixInsertAfter }) {\n        var prefix = options.prefixOptions,\n            suffix = options.suffixOptions,\n            hasPrefixContent = prefix.template || prefix.icon,\n            hasSuffixContent = suffix.template || suffix.icon,\n            suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n            layoutFlow = options.layoutFlow,\n            containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n            separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n            INPUT_SEPARATOR = `<span class=\"k-input-separator k-input-separator-${separatorOrientation}\"></span>`,\n            prefixContainer,\n            suffixContainer;\n\n        if (prefix && hasPrefixContent) {\n            prefixContainer = wrapper.children(\".k-input-prefix\");\n\n            if (!prefixContainer[0]) {\n                prefixContainer = $(`<span class=\"k-input-prefix k-input-prefix-${containerOrientation}\" />`);\n                if (prefixInsertBefore) {\n                    prefixContainer.insertBefore(prefixInsertBefore);\n                } else {\n                    prefixContainer.prependTo(wrapper);\n                }\n            }\n\n            if (prefix.icon) {\n                prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n            }\n\n            if (prefix.template) {\n                prefixContainer.html(kendo.template(prefix.template)({}));\n            }\n\n            if (prefix.separator) {\n                $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n            }\n        }\n\n        if (suffix && hasSuffixContent) {\n            suffixContainer = wrapper.children(\".k-input-suffix\");\n\n            if (!suffixContainer[0]) {\n                suffixContainer = $(`<span class=\"k-input-suffix k-input-suffix-${containerOrientation}\" />`).appendTo(wrapper);\n                if (suffixInsertAfter) {\n                    suffixContainer.insertAfter(suffixInsertAfter);\n                } else {\n                    suffixContainer.appendTo(wrapper);\n                }\n            }\n\n            if (suffix.icon) {\n                suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n            }\n\n            if (suffix.template) {\n                suffixContainer.html(kendo.template(suffix.template)({}));\n            }\n\n            if (suffix.separator) {\n                $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n            }\n        }\n\n        widget._prefixContainer = prefixContainer;\n        widget._suffixContainer = suffixContainer;\n    }\n\n    var __meta__ = {\n        id: \"multiselect\",\n        name: \"MultiSelect\",\n        category: \"web\",\n        description: \"The MultiSelect widget allows the selection from pre-defined values.\",\n        depends: [ \"list\", \"html.chip\", \"html.chiplist\", \"html.button\" ],\n        features: [ {\n            id: \"mobile-scroller\",\n            name: \"Mobile scroller\",\n            description: \"Support for kinetic scrolling in mobile device\",\n            depends: [ \"mobile.scroller\" ]\n        }, {\n            id: \"virtualization\",\n            name: \"VirtualList\",\n            description: \"Support for virtualization\",\n            depends: [ \"virtuallist\" ]\n        } ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            List = ui.List,\n            encode = kendo.htmlEncode,\n            html = kendo.html,\n            keys = $.extend({ A: 65 }, kendo.keys),\n            activeElement = kendo._activeElement,\n            ObservableArray = kendo.data.ObservableArray,\n            ID = \"id\",\n            CHIP = \".k-chip\",\n            ACCEPT = \"accept\",\n            FILTER = \"filter\",\n            REBIND = \"rebind\",\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            CHANGE = \"change\",\n            PROGRESS = \"progress\",\n            SELECT = \"select\",\n            DESELECT = \"deselect\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_READONLY = \"aria-readonly\",\n            ARIA_EXPANDED = \"aria-expanded\",\n            ARIA_HIDDEN = \"aria-hidden\",\n            ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n            ARIA_BUSY = \"aria-busy\",\n            FOCUSEDCLASS = \"k-focus\",\n            SELECTEDCLASS = \"k-selected\",\n            HIDDENCLASS = \"k-hidden\",\n            HOVERCLASS = \"k-hover\",\n            STATEDISABLED = \"k-disabled\",\n            NOCLICKCLASS = \"k-no-click\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            AUTOCOMPLETEVALUE = \"off\",\n            ns = \".kendoMultiSelect\",\n            CLICK = \"click\" + ns,\n            KEYDOWN = \"keydown\" + ns,\n            MOUSEENTER = \"mouseenter\" + ns,\n            MOUSELEAVE = \"mouseleave\" + ns,\n            HOVEREVENTS = MOUSEENTER + \" \" + MOUSELEAVE,\n            quotRegExp = /\"/g,\n            isArray = Array.isArray,\n            styles = [\"font-family\",\n                      \"font-size\",\n                      \"font-stretch\",\n                      \"font-style\",\n                      \"font-weight\",\n                      \"letter-spacing\",\n                      \"text-transform\",\n                      \"line-height\"];\n\n        var MultiSelect = List.extend({\n            init: function(element, options) {\n                var that = this, id, disabled;\n\n                that.ns = ns;\n                List.fn.init.call(that, element, options);\n\n                that._optionsMap = {};\n                that._customOptions = {};\n\n                that._wrapper();\n                that._inputValuesContainer();\n                that._tagList();\n                that._input();\n                that._textContainer();\n                that._loader();\n                that._clearButton();\n                that._arrowButton();\n\n                that._tabindex(that.input);\n\n                element = that.element.attr(\"multiple\", \"multiple\").hide();\n                options = that.options;\n\n                if (!options.placeholder) {\n                    options.placeholder = element.data(\"placeholder\");\n                }\n\n                id = element.attr(ID);\n\n                if (!id) {\n                    id = kendo.guid();\n                }\n\n                if (id) {\n                    that._tagID = id + \"_tag_active\";\n                    id = id + \"_taglist\";\n                    that.tagList.attr(ID, id);\n                }\n\n                that._initialOpen = true;\n\n                if (options.label) {\n                    this._label();\n                }\n\n                that._aria();\n\n                that._dataSource();\n                that._ignoreCase();\n                that._popup();\n\n                that._tagTemplate();\n                that.requireValueMapper(that.options);\n                that._initList();\n\n                that._reset();\n                that._enable();\n                that._placeholder();\n\n                if (options.autoBind) {\n                    that.dataSource.fetch();\n                } else if (options.value) {\n                    that._preselect(options.value);\n                }\n\n                disabled = $(that.element).parents(\"fieldset\").is(':disabled');\n\n                if (disabled) {\n                    that.enable(false);\n                }\n\n                that._toggleCloseVisibility();\n                that._applyCssClasses();\n\n                addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options, prefixInsertBefore: that._inputValuesContainer, suffixInsertAfter: that._loading });\n                if (that.floatingLabel) {\n                    that.floatingLabel.refresh();\n                }\n\n                kendo.notify(that);\n            },\n\n            options: {\n                name: \"MultiSelect\",\n                tagMode: \"multiple\",\n                enabled: true,\n                autoBind: true,\n                autoClose: true,\n                highlightFirst: true,\n                dataTextField: \"\",\n                dataValueField: \"\",\n                filter: \"startswith\",\n                ignoreCase: true,\n                minLength: 1,\n                messages: {\n                    \"singleTag\": \"item(s) selected\",\n                    \"clear\": \"clear\",\n                    \"deleteTag\": \"delete\",\n                    \"noData\": \"No data found.\",\n                    \"downArrow\": \"select\"\n                },\n                enforceMinLength: false,\n                delay: 100,\n                value: null,\n                maxSelectedItems: null,\n                placeholder: \"\",\n                height: 200,\n                animation: {},\n                virtual: false,\n                itemTemplate: \"\",\n                tagTemplate: \"\",\n                groupTemplate: (data) => encode(data),\n                fixedGroupTemplate: (data) => encode(data),\n                prefixOptions: {\n                    separator: true\n                },\n                suffixOptions: {\n                    separator: true\n                },\n                clearButton: true,\n                autoWidth: false,\n                popup: null,\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                label: null\n            },\n\n            events: [\n                OPEN,\n                CLOSE,\n                CHANGE,\n                SELECT,\n                DESELECT,\n                \"filtering\",\n                \"dataBinding\",\n                \"dataBound\"\n            ],\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n\n                this._state = \"\";\n                this._dataSource();\n\n                this.persistTagList = false;\n                this.listView.setDataSource(this.dataSource);\n\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n            },\n\n            setOptions: function(options) {\n                var listOptions = this._listOptions(options);\n\n                List.fn.setOptions.call(this, options);\n\n                this.listView.setOptions(listOptions);\n\n\n                this._accessors();\n                this._aria();\n                this._tagTemplate();\n                this._placeholder();\n                this._clearButton();\n                this._arrowButton();\n            },\n\n            currentTag: function(candidate) {\n                var that = this;\n\n                if (candidate !== undefined$1) {\n                    if (that._currentTag) {\n                        that._currentTag\n                            .removeClass(FOCUSEDCLASS)\n                            .removeAttr(ID);\n\n                        that._currentTag.find(\".k-chip-action\").attr(ARIA_HIDDEN, true);\n\n                        that.input.removeAttr(ARIA_ACTIVEDESCENDANT);\n                    }\n\n                    if (candidate) {\n                        candidate.addClass(FOCUSEDCLASS).attr(ID, that._tagID);\n\n                        candidate.find(\".k-chip-action\").removeAttr(ARIA_HIDDEN);\n\n                        that.input.attr(ARIA_ACTIVEDESCENDANT, that._tagID);\n                    }\n\n                    that._currentTag = candidate;\n                } else {\n                    return that._currentTag;\n                }\n            },\n\n            dataItems: function() {\n                return this.listView.selectedDataItems();\n            },\n\n            destroy: function() {\n                var that = this,\n                    ns = that.ns;\n\n                clearTimeout(that._busy);\n                clearTimeout(that._typingTimeout);\n\n                if (that.filterInput) {\n                    that.filterInput.off(ns);\n                }\n\n                that.wrapper.off(ns);\n                that.tagList.off(ns);\n                that.input.off(ns);\n                that._clear.off(ns);\n\n                List.fn.destroy.call(that);\n            },\n\n            _onActionSheetCreate: function() {\n                var that = this;\n\n                that.filterInput\n                    .on(\"keydown\" + ns, that._keydown.bind(that))\n                    .on(\"input\" + ns, that._search.bind(that))\n                    .on(\"paste\" + ns, that._search.bind(that))\n                    .attr({\n                        \"role\": \"combobox\",\n                        \"aria-expanded\": false,\n                        \"aria-controls\": that.input.attr(\"aria-controls\"),\n                        \"aria-autocomplete\": that.input.attr(\"aria-autocomplete\"),\n                        \"aria-describedby\": that.input.attr(\"aria-describedby\")\n                    });\n\n                that.popup.bind(\"activate\", () => {\n                    that.filterInput.val(that.input.val());\n                    that.filterInput.trigger(\"focus\");\n                });\n\n                that.popup.bind(\"close\", () => {\n                    that.input.trigger(\"focus\");\n                });\n            },\n\n            _aria: function() {\n                var that = this,\n                    id = that.ul[0].id,\n                    autocomplete = this.options.filter === \"none\" ? \"none\" : \"list\",\n                    tagListId = that.tagList.attr(ID);\n\n                that.input.attr({\n                    \"role\": \"combobox\",\n                    \"aria-expanded\": false,\n                    \"aria-controls\": id,\n                    \"aria-autocomplete\": autocomplete,\n                    \"aria-describedby\": tagListId\n                });\n\n                that._ariaLabel(that._focused);\n            },\n\n            _activateItem: function() {\n                if (this.popup.visible()) {\n                    List.fn._activateItem.call(this);\n                }\n                this.currentTag(null);\n            },\n\n            _listOptions: function(options) {\n                var that = this;\n                var listOptions = List.fn._listOptions.call(that, $.extend(options, {\n                    selectedItemChange: that._selectedItemChange.bind(that),\n                    selectable: \"multiple\"\n                }));\n\n                var itemTemplate = this.options.itemTemplate || this.options.template;\n                var template = listOptions.itemTemplate || itemTemplate || listOptions.template;\n\n                if (!template) {\n                    template = data => encode(kendo.getter(listOptions.dataTextField)(data));\n                }\n\n                listOptions.template = template;\n\n                return listOptions;\n            },\n\n            _setListValue: function() {\n                List.fn._setListValue.call(this, this._initialValues.slice(0));\n            },\n\n            _listChange: function(e) {\n                var data = this.dataSource.flatView();\n                var optionsMap = this._optionsMap;\n                var valueGetter = this._value;\n\n                if (this._state === REBIND) {\n                    this._state = \"\";\n                }\n\n                for (var i = 0; i < e.added.length; i++) {\n                    if (optionsMap[valueGetter(e.added[i].dataItem)] === undefined$1) {\n                        this._render(data); //render select element <option> tags if the item does not persist in the current data view\n                        break;\n                    }\n                }\n\n                this._selectValue(e.added, e.removed);\n            },\n\n            _selectedItemChange: function(e) {\n                var items = e.items;\n                var context;\n                var idx;\n\n                for (idx = 0; idx < items.length; idx++) {\n                    context = items[idx];\n                    this.tagList.children(CHIP).eq(context.index).children(\"span\").first().html(this.tagTextTemplate(context.item));\n                }\n            },\n\n            _wrapperMousedown: function(e) {\n                var that = this;\n                var notInput = e.target.nodeName.toLowerCase() !== \"input\";\n                var target = $(e.target);\n                var closeButton = target.closest(\".k-multiselect-toggle-button, .k-chip\").children(\"[class*='-i-caret-alt-down']\")[0];\n                var removeButton = target.closest(\"[class*='-i-x']\")[0];\n\n                if (notInput && !(removeButton && kendo.support.mobileOS) && e.cancelable) {\n                    e.preventDefault();\n                }\n\n                if (!removeButton) {\n                    if (closeButton && that.popup.visible()) {\n                        that.toggle(false);\n                    } else {\n                        if (that.input[0] !== activeElement() && notInput) {\n                            that.input.trigger(\"focus\");\n                        }\n\n                        if (that.options.minLength === 1 && !that.popup.visible()) {\n                            that.open();\n                        }\n                    }\n                }\n\n            },\n\n            _inputFocus: function() {\n                this._placeholder(false, true);\n                this.wrapper.addClass(FOCUSEDCLASS);\n            },\n\n            _inputFocusout: function(e) {\n                var that = this;\n\n                if (that.filterInput && e.relatedTarget === that.filterInput[0]) {\n                    return;\n                }\n\n                clearTimeout(that._typingTimeout);\n\n                that.wrapper.removeClass(FOCUSEDCLASS);\n\n                that._placeholder(!that.listView.selectedDataItems()[0], true);\n                that.close();\n\n                if (that._state === FILTER) {\n                    that._state = ACCEPT;\n                    that.listView.skipUpdate(true);\n                }\n\n                if (that.listView.bound() && that.listView.isFiltered()) {\n                    that.persistTagList = true;\n                    that._clearFilter();\n                }\n\n                that.element.trigger(\"blur\");\n            },\n\n            _removeTag: function(tag, shouldTrigger) {\n                var that = this;\n                var state = that._state;\n                var position = tag.index();\n                var listView = that.listView;\n                var value = listView.value()[position];\n                var dataItem = that.listView.selectedDataItems()[position];\n                var customIndex = that._customOptions[value];\n                var listViewChildren = listView.element[0].children;\n                var option;\n                var listViewChild;\n\n                if (that.trigger(DESELECT, { dataItem: dataItem, item: tag })) {\n                    that._close();\n                    return;\n                }\n\n                if (customIndex === undefined$1 && (state === ACCEPT || state === FILTER)) {\n                    customIndex = that._optionsMap[value];\n                }\n\n                var done = function() {\n                    that.currentTag(null);\n                    if (shouldTrigger) {\n                        that._change();\n                    }\n\n                    that._refreshTagListAria();\n                    that._close();\n                };\n\n                if (customIndex === undefined$1 && listView.select().length) {\n                    that.persistTagList = false;\n                    listView.select(listView.select()[position]).done(done);\n                } else {\n                    option = that.element[0].children[customIndex];\n                    if (option) {\n                        option.selected = false;\n                    }\n\n                    listView.removeAt(position);\n\n                    if (listView._removedAddedIndexes) {\n                        listView._removedAddedIndexes.splice(position, 1);\n                    }\n\n                    listViewChild = listViewChildren[customIndex];\n                    if (listViewChild) {\n                        listViewChildren[customIndex].classList.remove(\"k-selected\");\n                    }\n                    if (that.options.tagMode !== \"single\") {\n                        tag.remove();\n                    } else {\n                        that._updateTagListHTML();\n                    }\n                    done();\n                }\n            },\n\n            _tagListClick: function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                var target = $(e.currentTarget);\n\n                if (target.is(\"[class*='-i-x-circle']\")) {\n                    this._removeTag(target.closest(CHIP), true);\n                }\n            },\n\n            _clearValue: function() {\n                var that = this;\n\n                if (that.options.tagMode === \"single\") {\n                    that._clearSingleTagValue();\n                } else {\n                    that.tagList.children(CHIP).each(function(index, tag) {\n                        that._removeTag($(tag), false);\n                    });\n                }\n\n                that.input.val(\"\");\n                that._search(true);\n                that._change();\n                that.focus();\n                that._hideClear();\n\n                if (that._state === FILTER) {\n                    that._state = ACCEPT;\n                }\n            },\n\n            _clearSingleTagValue: function() {\n                var that = this;\n                var items = that.dataItems();\n                var tags = that.tagList.children(CHIP);\n                var persistTagList = that.persistTagList;\n\n                for (var i = 0; i < items.length; i += 1) {\n                    if (that.trigger(DESELECT, { dataItem: items[i], item: tags.first() })) {\n                        that._close();\n                        return;\n                    }\n                }\n\n                if (persistTagList) {\n                    that.persistTagList = false;\n                }\n\n                that.listView.value([]);\n                that.persistTagList = persistTagList;\n            },\n\n            _focusHandler: function() {\n                var input = this.input;\n                var active = activeElement();\n                var isActive = input[0] === active;\n\n                if (!isActive) {\n                    this.input.trigger(\"focus\");\n                }\n            },\n\n            _editable: function(options) {\n                var that = this,\n                    disable = options.disable,\n                    readonly = options.readonly,\n                    wrapper = that.wrapper.off(ns),\n                    tagList = that.tagList.off(ns),\n                    input = that.input.off(ns);\n\n                if (!readonly && !disable) {\n                    wrapper\n                        .removeClass(STATEDISABLED)\n                        .removeClass(NOCLICKCLASS)\n                        .on(HOVEREVENTS, that._toggleHover)\n                        .on(\"mousedown\" + ns + \" touchend\" + ns, that._wrapperMousedown.bind(that))\n                        .on(CLICK, that._focusHandler.bind(that));\n\n                    that.input.on(KEYDOWN, that._keydown.bind(that))\n                        .on(\"paste\" + ns, that._search.bind(that))\n                        .on(\"input\" + ns, that._search.bind(that))\n                        .on(\"focus\" + ns, that._inputFocus.bind(that))\n                        .on(\"focusout\" + ns, that._inputFocusout.bind(that));\n\n                    that._clear.on(CLICK + \" touchend\" + ns, that._clearValue.bind(that));\n\n                    input.prop(DISABLED, false)\n                         .prop(READONLY, false)\n                         .attr(ARIA_DISABLED, false)\n                         .attr(ARIA_READONLY, false);\n\n                    that.element.prop(DISABLED, false);\n\n                    tagList\n                        .on(MOUSEENTER, CHIP, function() { $(this).addClass(HOVERCLASS); })\n                        .on(MOUSELEAVE, CHIP, function() { $(this).removeClass(HOVERCLASS); })\n                        .on(CLICK + \" touchend\" + ns, \".k-chip .k-icon,.k-chip .k-svg-icon\", that._tagListClick.bind(that));\n                } else {\n\n                    wrapper.toggleClass(STATEDISABLED, disable)\n                           .toggleClass(NOCLICKCLASS, readonly);\n\n                    input.attr(DISABLED, disable)\n                         .attr(READONLY, readonly)\n                         .attr(ARIA_DISABLED, disable)\n                         .attr(ARIA_READONLY, readonly);\n\n                    that.element.prop(DISABLED, disable);\n                }\n            },\n\n            _close: function() {\n                var that = this;\n                if (that.options.autoClose) {\n                    that.close();\n                } else {\n                    that.popup.position();\n                }\n            },\n\n            _filterSource: function(filter, force) {\n                if (!force) {\n                    force = this._retrieveData;\n                }\n                this._retrieveData = false;\n                List.fn._filterSource.call(this, filter, force);\n            },\n\n            close: function() {\n                this._activeItem = null;\n                this.input.removeAttr(ARIA_ACTIVEDESCENDANT);\n\n                this.popup.close();\n            },\n\n            open: function() {\n                var that = this,\n                    filterValue = that.input.val().toLowerCase(),\n                    listViewFilter = that.listView.dataSource.filter(),\n                    listViewFilterValue = \"\";\n\n                if (listViewFilter && listViewFilter.filters.length > 0) {\n                    listViewFilterValue = (listViewFilter.filters[0].value || \"\").toString().toLowerCase();\n                }\n\n                if (that._request) {\n                    that._retrieveData = false;\n                }\n\n                if (that._retrieveData || !that.listView.bound() || (that._state === ACCEPT && filterValue !== listViewFilterValue)) {\n                    that._open = true;\n                    that._state = REBIND;\n\n                    that.listView.skipUpdate(true);\n\n                    that.persistTagList = that._initialOpen && !that.listView.bound() ? false : true;\n                    that._filterSource();\n                    that._focusItem();\n                } else if (that._allowOpening()) {\n\n                    //selects values in autoBind false and non virtual scenario on initial load\n                    if (that._initialOpen && !that.options.autoBind && !that.options.virtual && that.options.value && !$.isPlainObject(that.options.value[0])) {\n                        that.value(that.value() || that._initialValues);\n                    }\n\n                    // In some cases when the popup is opened resize is triggered which will cause it to close\n                    // Setting the below flag will prevent this from happening\n                    that.popup._hovered = true;\n                    that._initialOpen = false;\n                    that.popup.open({ altTarget: that.wrapper.add(that.element).add(that.input) });\n                    that._focusItem();\n                }\n            },\n\n            toggle: function(toggle) {\n                toggle = toggle !== undefined$1 ? toggle : !this.popup.visible();\n\n                this[toggle ? OPEN : CLOSE]();\n            },\n\n            refresh: function() {\n                this.listView.refresh();\n            },\n\n            _floatCheck: function() {\n                if (this.listView) {\n                    var hasValue = (this.value() && this.value().length);\n                    return !hasValue && !this.popup.visible();\n                }\n\n                return true;\n            },\n\n            _listBound: function() {\n                var that = this;\n                var data = that.dataSource.flatView();\n\n                that._render(data);\n                that._renderFooter();\n                that._renderNoData();\n                that._toggleNoData(!data.length);\n                that._resizePopup();\n\n                if (that._open) {\n                    that._open = false;\n                    that.toggle(that._allowOpening());\n                }\n\n                that.popup.position();\n                that._updateItemFocus();\n\n                if (that._touchScroller) {\n                    that._touchScroller.reset();\n                }\n\n                that._hideBusy();\n\n                that.trigger(\"dataBound\");\n            },\n\n            _updateItemFocus: function() {\n                var that = this,\n                    data = that.dataSource.flatView(),\n                    skip = that.listView.skip(),\n                    isFirstPage = skip === undefined$1 || skip === 0;\n\n                if (data.length && isFirstPage) {\n                    if (!that.options.highlightFirst) {\n                        that.listView.focus(-1);\n                    } else {\n                        that.listView.focusFirst();\n                    }\n                }\n            },\n\n            _inputValue: function() {\n                var that = this;\n                var inputValue = that.filterInput && activeElement() === that.filterInput[0] ? that.filterInput.val() : that.input.val();\n\n                if (that.options.placeholder === inputValue) {\n                    inputValue = \"\";\n                }\n                return inputValue;\n            },\n\n            value: function(value) {\n                var that = this;\n                var listView = that.listView;\n                var oldValue = listView.value().slice();\n                var maxSelectedItems = that.options.maxSelectedItems;\n                var clearFilters = listView.bound() && listView.isFiltered();\n\n                if (value === undefined$1) {\n                    return oldValue;\n                }\n\n                that.persistTagList = false;\n                that.requireValueMapper(that.options, value);\n\n                value = that._normalizeValues(value);\n\n                if (maxSelectedItems !== null && value.length > maxSelectedItems) {\n                    value = value.slice(0, maxSelectedItems);\n                }\n\n                if (clearFilters) {\n                    that._clearFilter();\n                }\n\n                listView.value(value);\n                that._old = that._valueBeforeCascade = value.slice(); //get a new array reference\n\n                if (!clearFilters) {\n                    that._fetchData();\n                }\n\n                that._toggleCloseVisibility();\n            },\n\n            _preselect: function(data, value) {\n                var that = this;\n\n                if (!isArray(data) && !(data instanceof kendo.data.ObservableArray)) {\n                    data = [data];\n                }\n\n                if ($.isPlainObject(data[0]) || data[0] instanceof kendo.data.ObservableObject || !that.options.dataValueField) {\n                    that.dataSource.data(data);\n                    that.value(value || that._initialValues);\n                    that._retrieveData = true;\n                }\n            },\n\n            _setOption: function(value, selected) {\n                var option = this.element[0].children[this._optionsMap[value]];\n\n                if (option) {\n                    option.selected = selected;\n                }\n            },\n\n            _fetchData: function() {\n                var that = this;\n                var hasItems = !!that.dataSource.view().length;\n                var isEmptyArray = that.listView.value().length === 0;\n\n                if (isEmptyArray || that._request) {\n                    return;\n                }\n\n                if (that._retrieveData || (!that._fetch && !hasItems)) {\n                    that._fetch = true;\n                    that._retrieveData = false;\n                    that.dataSource.read().done(function() {\n                        that._fetch = false;\n                    });\n                }\n            },\n\n            _isBound: function() {\n                return this.listView.bound() && !this._retrieveData;\n            },\n\n            _dataSource: function() {\n                var that = this,\n                    element = that.element,\n                    options = that.options,\n                    dataSource = options.dataSource || {};\n\n                dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                dataSource.select = element;\n                dataSource.fields = [{ field: options.dataTextField },\n                                     { field: options.dataValueField }];\n\n                if (that.dataSource && that._refreshHandler) {\n                    that._unbindDataSource();\n                } else {\n                    that._progressHandler = that._showBusy.bind(that);\n                    that._errorHandler = that._hideBusy.bind(that);\n                }\n\n                that.dataSource = kendo.data.DataSource.create(dataSource)\n                                       .bind(PROGRESS, that._progressHandler)\n                                       .bind(\"error\", that._errorHandler);\n            },\n\n            _reset: function() {\n                var that = this,\n                    element = that.element,\n                    formId = element.attr(\"form\"),\n                    form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        setTimeout(function() {\n                            that.value(that._initialValues);\n                            that._placeholder();\n                        });\n                    };\n\n                    that._form = form.on(\"reset\", that._resetHandler);\n                }\n            },\n\n            _initValue: function() {\n                var value = this.options.value || this.element.val();\n\n                this._old = this._initialValues = this._normalizeValues(value);\n            },\n\n            _normalizeValues: function(value) {\n                var that = this;\n\n                if (value === null) {\n                    value = [];\n                } else if (value && $.isPlainObject(value)) {\n                    value = [that._value(value)];\n                } else if (value && $.isPlainObject(value[0])) {\n                    value = $.map(value, function(dataItem) { return that._value(dataItem); });\n                } else if (!isArray(value) && !(value instanceof ObservableArray)) {\n                    value = [value];\n                } else if (isArray(value)) {\n                    value = value.slice();\n                }\n\n                return value;\n            },\n\n            _change: function() {\n                var that = this,\n                    value = that.value();\n\n                if (!compare(value, that._old)) {\n                    that._old = value.slice();\n\n                    that.trigger(CHANGE);\n\n                    // trigger the DOM change event so any subscriber gets notified\n                    that.element.trigger(CHANGE);\n                }\n                that.popup.position();\n\n                that._toggleCloseVisibility();\n            },\n\n            _click: function(e) {\n                var that = this;\n                var item = e.item;\n\n                e.preventDefault();\n\n                that._select(item).done(function() {\n                    that._activeItem = item;\n                    that._change();\n                    that._close();\n                });\n            },\n\n            _getActiveItem: function() {\n                return this._activeItem || $(this.listView.items()[this._getSelectedIndices().length - 1]) || this.listView.focus();\n            },\n\n            _getSelectedIndices: function() {\n                return this.listView._selectedIndices || this.listView._selectedIndexes;\n            },\n\n            _keydown: function(e) {\n                var that = this;\n                var key = e.keyCode;\n                var tag = that._currentTag;\n                var listView = that.listView;\n                var hasValue = that.input.val();\n                var isRtl = kendo.support.isRtl(that.wrapper);\n                var visible = that.popup.visible();\n                var dir = 0;\n                var activeItemIdx;\n\n                if (key !== keys.ENTER) {\n                    this._multipleSelection = false;\n                }\n\n                if (key === keys.DOWN) {\n                    e.preventDefault();\n\n                    if (!visible) {\n                        that.open();\n\n                        if (!listView.focus()) {\n                            listView.focusFirst();\n                        }\n                        return;\n                    }\n\n                    if (listView.focus()) {\n                        if (!that._activeItem && e.shiftKey) {\n                            that._activeItem = listView.focus();\n                            dir = -1;\n                        }\n                        activeItemIdx = listView.getElementIndex(that._getActiveItem().first());\n\n                        listView.focusNext();\n                        if (!listView.focus()) {\n                            listView.focusLast();\n                        } else {\n                            if (e.shiftKey && !that.options.virtual) {\n                                this._multipleSelection = true;\n                                that._selectRange(activeItemIdx, listView.getElementIndex(listView.focus().first()) + dir);\n                            }\n                        }\n                    } else {\n                        listView.focusFirst();\n                    }\n\n                } else if (key === keys.UP) {\n                    if (visible) {\n                        if (!that._activeItem && e.shiftKey) {\n                            that._activeItem = listView.focus();\n                            dir = 1;\n                        }\n                        activeItemIdx = listView.getElementIndex(that._getActiveItem().first());\n                        listView.focusPrev();\n                        if (!listView.focus()) {\n                            that.close();\n                        } else {\n                            if (e.shiftKey && !that.options.virtual) {\n                                this._multipleSelection = true;\n                                that._selectRange(activeItemIdx, listView.getElementIndex(listView.focus().first()) + dir);\n                            }\n                        }\n                    }\n                    e.preventDefault();\n                } else if ((key === keys.LEFT && !isRtl) || (key === keys.RIGHT && isRtl)) {\n                    if (!hasValue) {\n                        tag = tag ? tag.prev(CHIP) : that.tagList.children(CHIP).last();\n                        if (tag[0]) {\n                            that.currentTag(tag);\n                        }\n                    }\n                } else if ((key === keys.RIGHT && !isRtl) || (key === keys.LEFT && isRtl)) {\n                    if (!hasValue && tag) {\n                        tag = tag.next(CHIP);\n                        that.currentTag(tag[0] ? tag : null);\n                    }\n                } else if (e.ctrlKey && !e.altKey && key === keys.A && visible && !that.options.virtual) {\n                    this._multipleSelection = true;\n                    if (this._getSelectedIndices().length === listView.items().length) {\n                        that._activeItem = null;\n                    }\n\n                    if (listView.items().length) {\n                        that._selectRange(0, listView.items().length - 1);\n                    }\n                } else if (key === keys.ENTER && visible) {\n                    if (!listView.focus()) {\n                        return;\n                    }\n\n                    e.preventDefault();\n\n                    if (this._multipleSelection) {\n                        this._multipleSelection = false;\n                         if (listView.focus().hasClass(SELECTEDCLASS)) {\n                            that._close();\n                            return;\n                        }\n                    }\n\n                    that._select(listView.focus()).done(function() {\n                        that._change();\n                        that._close();\n                    });\n                } else if (key === keys.SPACEBAR && e.ctrlKey && visible) {\n                    if (that._activeItem && listView.focus() && listView.focus()[0] === that._activeItem[0]) {\n                        that._activeItem = null;\n                    }\n                    if (!$(listView.focus()).hasClass(SELECTEDCLASS)) {\n                        that._activeItem = listView.focus();\n                    }\n                    that._select(listView.focus()).done(function() {\n                        that._change();\n                    });\n                    e.preventDefault();\n                } else if (key === keys.SPACEBAR && e.shiftKey && visible && !that.options.virtual) {\n                    var activeIndex = listView.getElementIndex(that._getActiveItem());\n                    var currentIndex = listView.getElementIndex(listView.focus());\n\n                    if (activeIndex !== undefined$1 && currentIndex !== undefined$1) {\n                        that._selectRange(activeIndex, currentIndex);\n                    }\n\n                    e.preventDefault();\n                } else if (key === keys.ESC) {\n                    if (visible) {\n                        e.preventDefault();\n                    } else {\n                        that.tagList.children(CHIP).each(function(index, tag) {\n                            that._removeTag($(tag), false);\n                        });\n                        that._change();\n                    }\n\n                    that.close();\n                } else if (key === keys.HOME) {\n                    if (visible) {\n                        if (!listView.focus()) {\n                            that.close();\n                        } else {\n                            if (e.ctrlKey && e.shiftKey && !that.options.virtual) {\n                                that._selectRange(listView.getElementIndex(listView.focus()[0]), 0);\n                            }\n                            listView.focusFirst();\n                        }\n                    } else if (!hasValue) {\n                        tag = that.tagList.children(CHIP).first()[0];\n\n                        if (tag) {\n                            that.currentTag($(tag));\n                        }\n                    }\n                } else if (key === keys.END) {\n                    if (visible) {\n                        if (!listView.focus()) {\n                            that.close();\n                        } else {\n                            if (e.ctrlKey && e.shiftKey && !that.options.virtual) {\n                                that._selectRange(\n                                    listView.getElementIndex(listView.focus()[0]),\n                                    listView.element.children().length - 1\n                                );\n                            }\n                            listView.focusLast();\n                        }\n                    } else if (!hasValue) {\n                        tag = that.tagList.children(CHIP).last()[0];\n\n                        if (tag) {\n                            that.currentTag($(tag));\n                        }\n                    }\n                } else if ((key === keys.DELETE || key === keys.BACKSPACE) && !hasValue) {\n                    that._state = ACCEPT;\n\n                    if (that.options.tagMode === \"single\") {\n                        that._clearSingleTagValue();\n\n                        that._change();\n                        that._close();\n                        return;\n                    }\n\n                    if (key === keys.BACKSPACE && !tag) {\n                        tag = that.tagList.children(CHIP).last();\n                    }\n\n                    if (tag && tag[0]) {\n                        that._removeTag(tag, true);\n                    }\n                } else if (that.popup.visible() && (key === keys.PAGEDOWN || key === keys.PAGEUP)) {\n                    e.preventDefault();\n\n                    var direction = key === keys.PAGEDOWN ? 1 : -1;\n                    listView.scrollWith(direction * listView.screenHeight());\n                } else {\n                    clearTimeout(that._typingTimeout);\n                    that._search();\n                }\n            },\n\n            _hideBusy: function() {\n                var that = this;\n                clearTimeout(that._busy);\n                that.input.attr(ARIA_BUSY, false);\n                that._loading.addClass(HIDDENCLASS);\n                that._request = false;\n                that._busy = null;\n\n                that._toggleCloseVisibility();\n            },\n\n            _showBusyHandler: function() {\n                this.input.attr(ARIA_BUSY, true);\n                this._loading.removeClass(HIDDENCLASS);\n                this._hideClear();\n            },\n\n            _showBusy: function() {\n                var that = this;\n\n                that._request = true;\n\n                if (that._busy) {\n                    return;\n                }\n\n                that._busy = setTimeout(that._showBusyHandler.bind(that), 100);\n            },\n\n            _placeholder: function(show, skipCaret) {\n                var that = this;\n                var input = that.input;\n                var active = activeElement();\n                var placeholder = that.options.placeholder;\n                var inputValue = input.val();\n                var isActive = input[0] === active;\n                var caretPos = inputValue.length;\n\n                if (!isActive || that.options.autoClose || inputValue === placeholder) {\n                    caretPos = 0;\n                    inputValue = \"\";\n                }\n\n                if (show === undefined$1) {\n                    show = false;\n                    if (input[0] !== active) {\n                        show = !that.listView.selectedDataItems()[0];\n                    }\n                }\n\n                that._prev = inputValue;\n                input.toggleClass(\"k-readonly\", show).val(show ? placeholder : inputValue);\n\n                if (isActive && !skipCaret) {\n                    kendo.caret(input[0], caretPos, caretPos);\n                }\n            },\n\n            _option: function(dataValue, dataText, selected) {\n                var option = \"<option\";\n\n                if (dataValue !== undefined$1) {\n                    dataValue += \"\";\n\n                    if (dataValue.indexOf('\"') !== -1) {\n                        dataValue = dataValue.replace(quotRegExp, \"&quot;\");\n                    }\n\n                    option += ' value=\"' + dataValue + '\"';\n                }\n\n                if (selected) {\n                    option += ' selected';\n                }\n\n                option += \">\";\n\n                if (dataText !== undefined$1) {\n                    option += kendo.htmlEncode(dataText);\n                }\n\n                return option += \"</option>\";\n            },\n\n            _render: function(data) {\n                var selectedItems = this.listView.selectedDataItems();\n                var values = this.listView.value();\n                var length = data.length;\n                var selectedIndex;\n                var options = \"\";\n                var dataItem;\n                var value;\n                var idx;\n\n                if (values.length !== selectedItems.length) {\n                    selectedItems = this._buildSelectedItems(values);\n                }\n\n                var custom = {};\n                var optionsMap = {};\n\n                for (idx = 0; idx < length; idx++) {\n                    dataItem = data[idx];\n                    value = this._value(dataItem);\n\n                    selectedIndex = this._selectedItemIndex(value, selectedItems);\n                    if (selectedIndex !== -1) {\n                        selectedItems.splice(selectedIndex, 1);\n                    }\n\n                    optionsMap[value] = idx;\n                    options += this._option(value, this._text(dataItem), selectedIndex !== -1);\n                }\n\n                if (selectedItems.length) {\n                    for (idx = 0; idx < selectedItems.length; idx++) {\n                        dataItem = selectedItems[idx];\n\n                        value = this._value(dataItem);\n                        custom[value] = length;\n                        optionsMap[value] = length;\n\n                        length += 1;\n                        options += this._option(value, this._text(dataItem), true);\n                    }\n                }\n\n                this._customOptions = custom;\n                this._optionsMap = optionsMap;\n\n                this.element.html(options);\n            },\n\n            _buildSelectedItems: function(values) {\n                var valueField = this.options.dataValueField;\n                var textField = this.options.dataTextField;\n                var result = [];\n                var item;\n\n                for (var idx = 0; idx < values.length; idx++) {\n                    item = {};\n                    item[valueField] = values[idx];\n                    item[textField] = values[idx];\n\n                    result.push(item);\n                }\n\n                return result;\n            },\n\n            _selectedItemIndex: function(value, selectedItems) {\n                var valueGetter = this._value;\n                var idx = 0;\n\n                for (; idx < selectedItems.length; idx++) {\n                    if (value === valueGetter(selectedItems[idx])) {\n                        return idx;\n                    }\n                }\n\n                return -1;\n            },\n\n            _search: function(noDelay) {\n                var that = this;\n\n                if (noDelay) {\n                    that._performSearch();\n                    return;\n                }\n\n                clearTimeout(that._typingTimeout);\n\n                that._typingTimeout = setTimeout(function() {\n                    that._performSearch();\n                }, that.options.delay);\n            },\n\n            _performSearch: function() {\n                var that = this,\n                    value = that._inputValue();\n\n                if (that._prev !== value) {\n                    that._prev = value;\n                    that.search(value);\n                    that._toggleCloseVisibility();\n                }\n            },\n\n            _toggleCloseVisibility: function() {\n                if (this.value().length || (this.input.val() && this.input.val() !== this.options.placeholder)) {\n                    this._showClear();\n                } else {\n                    this._hideClear();\n                }\n            },\n\n            _allowOpening: function() {\n                return this._allowSelection() && List.fn._allowOpening.call(this);\n            },\n\n            _allowSelection: function() {\n                var max = this.options.maxSelectedItems;\n                return max === null || max > this.listView.value().length;\n            },\n\n            updatePersistTagList: function(added, removed) {\n                if (this.persistTagList.added &&\n                    this.persistTagList.added.length === removed.length &&\n                    this.persistTagList.removed &&\n                    this.persistTagList.removed.length === added.length) {\n                        this.persistTagList = false;\n                 } else {\n                     this.listView._removedAddedIndexes = this._old.slice();\n                     this.persistTagList = {\n                         added: added,\n                         removed: removed\n                     };\n                 }\n            },\n\n            _selectValue: function(added, removed) {\n                var that = this;\n                var total = that.dataSource.total();\n                var tagList = that.tagList;\n                var getter = that._value;\n                var removedItem;\n                var addedItem;\n                var idx;\n\n                if (this.persistTagList) {\n                    this.updatePersistTagList(added, removed);\n                    that._refreshTagListAria();\n\n                    return;\n                }\n\n                if (that.options.tagMode === \"multiple\") {\n                    for (idx = removed.length - 1; idx > -1; idx--) {\n                        removedItem = removed[idx];\n\n                        if (tagList.children(CHIP).length) {\n                            tagList[0].removeChild(tagList[0].children[removedItem.position]);\n                            that._setOption(getter(removedItem.dataItem), false);\n                        }\n                    }\n\n                    for (idx = 0; idx < added.length; idx++) {\n                        addedItem = added[idx];\n\n                        that.tagList.append(that.tagTemplate(addedItem.dataItem));\n\n                        that._setOption(getter(addedItem.dataItem), true);\n                    }\n\n                    kendo.applyStylesFromKendoAttributes(that.tagList, [\"background-color\"]);\n                } else {\n                    if (!that._maxTotal || that._maxTotal < total) {\n                        that._maxTotal = total;\n                    }\n\n                    this._updateTagListHTML();\n\n                    for (idx = removed.length - 1; idx > -1; idx--) {\n                        that._setOption(getter(removed[idx].dataItem), false);\n                    }\n\n                    for (idx = 0; idx < added.length; idx++) {\n                        that._setOption(getter(added[idx].dataItem), true);\n                    }\n                }\n\n                that._refreshTagListAria();\n                that._refreshFloatingLabel();\n\n                that._placeholder();\n            },\n\n            _refreshTagListAria: function() {\n                var that = this;\n                html.renderChipList(that.tagList, $.extend({ selectable: that.value().length === 0 ? \"none\" : \"multiple\" }, that.options));\n            },\n\n            _updateTagListHTML: function() {\n                var that = this;\n                var values = that.value();\n                var total = that.dataSource.total();\n                var tagList = that.tagList;\n\n                tagList.children(CHIP).each(function(index, tag) {\n                    $(tag).remove();\n                });\n\n                if (values.length) {\n                    that.tagList.append(that.tagTemplate({\n                        values: values,\n                        dataItems: that.dataItems(),\n                        maxTotal: that._maxTotal,\n                        currentTotal: total\n                    }));\n\n                    kendo.applyStylesFromKendoAttributes(that.tagList, [\"background-color\"]);\n                }\n\n                that._refreshTagListAria();\n            },\n\n            _select: function(candidate) {\n                var resolved = $.Deferred().resolve();\n\n                if (!candidate) {\n                    return resolved;\n                }\n\n                var that = this;\n                var listView = that.listView;\n                var dataItem = listView.dataItemByIndex(listView.getElementIndex(candidate));\n                var isSelected = candidate.hasClass(\"k-selected\");\n\n                if (that._state === REBIND) {\n                    that._state = \"\";\n                }\n\n                if (!that._allowSelection() && !isSelected) {\n                    return resolved;\n                }\n\n                if (that.trigger(isSelected ? DESELECT : SELECT, { dataItem: dataItem, item: candidate })) {\n                    that._close();\n                    return resolved;\n                }\n\n                that.persistTagList = false;\n                return listView.select(candidate).done(function() {\n                    that._placeholder();\n\n                    if (that._state === FILTER) {\n                        that._state = ACCEPT;\n                        listView.skipUpdate(true);\n                    }\n                });\n            },\n\n            _selectRange: function(startIndex, endIndex) {\n                var that = this;\n                var listView = this.listView;\n                var maxSelectedItems = this.options.maxSelectedItems;\n                var indices = this._getSelectedIndices().slice();\n                var indicesToSelect = [];\n                var i;\n\n                var selectIndices = function(indices) {\n                    listView.select(indices).done(function() {\n                        indices.forEach(function(index) {\n                            var dataItem = listView.dataItemByIndex(index);\n                            var candidate = listView.element.children()[index];\n                            var isSelected = $(candidate).hasClass(\"k-selected\");\n\n                            that.trigger(isSelected ? SELECT : DESELECT, { dataItem: dataItem, item: $(candidate) });\n                        });\n                        that._change();\n                    });\n                };\n\n                if (indices.length - 1 === endIndex - startIndex) {\n                    return selectIndices(indices);\n                }\n\n                if (startIndex < endIndex) {\n                    for (i = startIndex; i <= endIndex; i++) {\n                        indicesToSelect.push(i);\n                    }\n                } else {\n                    for (i = startIndex; i >= endIndex; i--) {\n                        indicesToSelect.push(i);\n                    }\n                }\n\n                if (maxSelectedItems !== null && indicesToSelect.length > maxSelectedItems) {\n                    indicesToSelect = indicesToSelect.slice(0, maxSelectedItems);\n                }\n\n                for (i = 0; i < indicesToSelect.length; i++) {\n                    var index = indicesToSelect[i];\n\n                    if (this._getSelectedIndices().indexOf(index) == -1) {\n                        indices.push(index);\n                    } else {\n                        indices.splice(indices.indexOf(index), 1);\n                    }\n                }\n\n                if (!indices.length) {\n                    return;\n                }\n\n                that.persistTagList = false;\n                return selectIndices(indices);\n            },\n\n            _input: function() {\n                var that = this;\n                var element = that.element;\n                var accessKey = element[0].accessKey;\n                var input = that._inputValuesContainer.children(\"input.k-input-inner\");\n\n                if (!input[0]) {\n                    input = $('<input class=\"k-input-inner\" />').appendTo(that._inputValuesContainer);\n                }\n\n                element.removeAttr(\"accesskey\");\n                input.attr(\"data-validate\", false);\n\n                that._focused = that.input = input.attr({\n                    \"autocomplete\": AUTOCOMPLETEVALUE,\n                    \"title\": element[0].title\n                });\n\n                if (accessKey) {\n                    that._focused.attr(\"accesskey\", accessKey);\n                }\n            },\n\n            _inputValuesContainer: function() {\n                var that = this,\n                    inputValuesContainer = that.wrapper.children(\".k-input-values\");\n\n                if (!inputValuesContainer[0]) {\n                    inputValuesContainer = $('<div class=\"k-input-values\"></div>').appendTo(that.wrapper);\n                }\n\n                that._inputValuesContainer = inputValuesContainer;\n            },\n\n            _tagList: function() {\n                var that = this,\n                    options = that.options,\n                    tagList = that._inputValuesContainer.children(\".k-chip-list\");\n\n                if (!tagList[0]) {\n                    tagList = $(html.renderChipList('<div unselectable=\"on\" class=\"k-selection-multiple\" />', $.extend({ selectable: \"none\" }, options))).appendTo(that._inputValuesContainer);\n                }\n\n                that.tagList = tagList;\n            },\n\n            _tagTemplate: function() {\n                var that = this;\n                var options = that.options;\n                var tagTemplate = options.tagTemplate;\n                var hasDataSource = options.dataSource;\n                var isMultiple = options.tagMode === \"multiple\";\n                var singleTag = options.messages.singleTag;\n                var defaultTemplate;\n                var multipleTemplateFunc;\n                var singleTemplateFunc;\n\n                if (that.element[0].length && !hasDataSource) {\n                    options.dataTextField = options.dataTextField || \"text\";\n                    options.dataValueField = options.dataValueField || \"value\";\n                }\n\n                multipleTemplateFunc = data => encode(kendo.getter(options.dataTextField)(data));\n                singleTemplateFunc = ({ values }) => `${values.length} ${encode(singleTag)}`;\n\n                defaultTemplate = isMultiple ? multipleTemplateFunc : singleTemplateFunc;\n\n                that.tagTextTemplate = tagTemplate = tagTemplate ? kendo.template(tagTemplate) : defaultTemplate;\n\n                that.tagTemplate = function(data) {\n                    return html.renderChip('<span unselectable=\"on\">' +\n                    '</span>', $.extend({}, options, {\n                            fillMode: \"solid\",\n                            rounded: \"medium\",\n                            enabled: true,\n                            themeColor: \"base\",\n                            text: tagTemplate(data),\n                            attr: {\n                                unselectable: \"on\",\n                                \"aria-selected\": true,\n                                role: \"option\",\n                                \"aria-keyshortcuts\": isMultiple ? \"Enter Delete\" : \"Enter\"\n                            },\n                            removable: isMultiple,\n                            removableAttr: {\n                                unselectable: \"on\",\n                                \"aria-hidden\": true,\n                                \"aria-label\": that.options.messages.deleteTag,\n                                title: that.options.messages.deleteTag\n                            },\n                            icon: !isMultiple ? \"caret-alt-down\" : \"\",\n                            iconAttr: {\n                                unselectable: \"on\",\n                                \"aria-hidden\": true,\n                                \"aria-label\": 'open'\n                            }\n                        })\n                    );\n                };\n            },\n\n            _loader: function() {\n                this._loading = $('<span class=\"k-icon k-i-loading k-input-loading-icon ' + HIDDENCLASS + '\"></span>').insertAfter(this._inputValuesContainer);\n            },\n\n            _clearButton: function() {\n                List.fn._clearButton.call(this);\n\n                if (this.options.clearButton) {\n                    this._clear.insertAfter(this._inputValuesContainer);\n                    this.wrapper.addClass(\"k-multiselect-clearable\");\n                }\n            },\n\n            _arrowButton: function() {\n                var arrowTitle = encode(this.options.messages.downArrow),\n                    arrow = $(html.renderButton('<button type=\"button\" aria-label=\"' + arrowTitle + '\" class=\"k-input-button k-multiselect-toggle-button\"></button>', $.extend({}, this.options, {\n                        icon: \"caret-alt-down\"\n                    })));\n\n                if (this._arrow) {\n                    this._arrow.remove();\n                    this._arrow = null;\n                }\n\n                if (this.options.downArrow) {\n                    this._arrow = arrow.attr({\n                        \"tabIndex\": -1\n                    });\n\n                    this._arrow.appendTo(this.wrapper);\n                }\n            },\n\n            _textContainer: function() {\n                var computedStyles = kendo.getComputedStyles(this.input[0], styles);\n\n                computedStyles.position = \"absolute\";\n                computedStyles.visibility = \"hidden\";\n                computedStyles.top = -3333;\n                computedStyles.left = -3333;\n\n                this._span = $(\"<span/>\").css(computedStyles).appendTo(this.wrapper);\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    wrapper = element.parent(\"span.k-multiselect\");\n\n                if (!wrapper[0]) {\n                    wrapper = element.wrap('<span class=\"k-multiselect k-input\" unselectable=\"on\" />').parent();\n                    wrapper[0].style.cssText = element[0].style.cssText;\n                }\n\n                that.wrapper = wrapper\n                                .addClass(element[0].className)\n                                .removeClass('input-validation-error').css(\"display\", \"\");\n            },\n\n            _closeHandler: function(e) {\n                if (this.trigger(CLOSE)) {\n                    e.preventDefault();\n                } else {\n                    this.input.attr(ARIA_EXPANDED, false);\n                    this.ul.attr(ARIA_HIDDEN, true);\n                }\n            },\n\n            _openHandler: function(e) {\n                this._adjustListWidth();\n\n                if (this.trigger(OPEN)) {\n                    e.preventDefault();\n                } else {\n                    this.input.attr(ARIA_EXPANDED, true);\n                    this.ul.attr(ARIA_HIDDEN, false);\n                }\n            }\n        });\n\n        function compare(a, b) {\n            var length;\n\n            if ((a === null && b !== null) || (a !== null && b === null)) {\n                return false;\n            }\n\n            length = a.length;\n            if (length !== b.length) {\n                return false;\n            }\n\n            while (length--) {\n                if (a[length] !== b[length]) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n\n        ui.plugin(MultiSelect);\n\n        kendo.cssProperties.registerPrefix(\"MultiSelect\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"MultiSelect\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}