{"version":3,"sources":["raw-js/kendo.slider.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendoslider","js","this","$","undefined$1","kendo","window","Widget","ui","Draggable","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","format","parse","parseFloat","isArray","Array","math","Math","support","pointers","msPointers","CHANGE","SLIDE","NS","MOUSE_DOWN","TRACK_MOUSE_DOWN","MOUSE_UP","TRACK_MOUSE_UP","MOVE_SELECTION","KEY_DOWN","CLICK","MOUSE_OVER","FOCUS","BLUR","DRAG_HANDLE","TRACK_SELECTOR","TICK_SELECTOR","STATE_SELECTED","STATE_FOCUSED","STATE_DISABLED","DISABLED","TABINDEX","getTouches","ARIA_VALUETEXT","ARIA_VALUENOW","SliderBase","init","element","options","that","fn","call","_isHorizontal","orientation","_isRtl","isRtl","_position","_sizeFn","_outerSize","tooltip","enabled","smallStep","Error","_createHtml","_trackDiv","wrapper","find","_maxSelection","_sliderItemsInit","_reset","_tabindex","rtlDirectionSign","_keyMap","step","setValue","max","min","largeStep","_ariaLabel","notify","events","tickPlacement","_distance","round","_resize","remove","_refresh","enable","sizeBetweenTicks","pixelWidths","_calculateItemsWidth","floor","removeFraction","parent","before","distance","i","result","count","createSliderItems","_setItemsTitle","_calculateSteps","_setItemsLargeTick","first","addClass","last","getSize","dimensions","items","titleNumber","length","attr","item","makeArray","reverse","valueWithoutFraction","_values","html","css","itemsCount","itemWidth","trackDivSize","preciseItemsCount","pixelStep","_roundWidths","pixelWidthsArray","balance","_addAdditionalSize","additionalSize","parseInt","lastItem","val","selection","ceil","splice","pop","_pixelSteps","_getValueFromPosition","mousePosition","draggableArea","position","halfStep","startPoint","abs","_getFormattedValue","drag","tooltipTemplate","selectionStart","selectionEnd","type","template","value","_getDraggableArea","offset","getOffset","left","top","endPoint","inputs","eq","prop","formatValue","wrap","isHorizontal","orientationCssClass","style","cssClasses","tickPlacementCssClass","createWrapper","hide","parents","showButtons","after","createButton","elementValue","minElementValue","maxElementValue","dragHandleCount","is","firstDragHandleTitle","leftDragHandleTitle","dragHandleTitle","rightDragHandleTitle","createTrack","_focus","e","target","_drag","_firstHandleDrag","_activeHandle","_lastHandleDrag","_activeHandleDrag","_updateTooltip","_focusWithMouse","idx","index","setTimeout","focus","_setTooltipTimeout","_blur","removeClass","_removeTooltip","_tooltipTimeout","_clearTooltipTimeout","clearTimeout","tooltipDiv","stop","formId","form","closest","_form","on","_formResetHandler","bind","setOptions","destroy","off","buttonIconName","icon","iconClass","stepValue","replace","cultures","current","numberFormat","precision","power","number","toString","split","calculatePrecision","pow","parseAttr","name","getAttribute","defined","Slider","dragHandle","_selection","Selection","Drag","_refreshAriaAttr","increaseButtonTitle","decreaseButtonTitle","clickHandler","move","disable","touch","location","pageX","pageY","hasClass","_update","dragstart","preventDefault","end","document","documentElement","one","_end","sign","newVal","_nextValueByIndex","_valueIndex","_setValueInRange","mouseDownHandler","which","timeout","timer","setInterval","_clearTimer","currentTarget","_keydown","change","trigger","isNaN","formattedValue","_tooltipDiv","text","clearInterval","keyCode","draggable","moveSelection","selectionValue","sender","owner","_dragstart","dragend","dragcancel","click","prototype","_activeDragHandle","userEvents","cancel","_setZIndex","oldVal","_createTooltip","calloutCssClass","wnd","appendTo","body","tooltipInnerDiv","_scrollOffset","scrollTop","scrollLeft","moveTooltip","slideParams","x","y","constrainValue","values","_disposeAll","noAnimation","fadeOut","dragHandles","sdhOffset","diff","anchorSize","viewport","callout","width","height","_flip","_fit","size","viewPortEnd","output","maxOverflow","plugin","RangeSlider","firstInput","secondInput","console","warn","from","to","handle","dragSelectionStart","dragSelectionEnd","activeHandleDrag","selectionStartValue","selectionEndValue","_value","start","each","selectionStartIndex","selectionEndIndex","selectionPosition","selectionDiv","makeSelection","jQuery"],"mappings":"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","file":"kendo.slider.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.draganddrop.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.draganddrop', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendoslider = global.kendoslider || {}, global.kendoslider.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"slider\",\n        name: \"Slider\",\n        category: \"web\",\n        description: \"The Slider widget provides a rich input for selecting values or ranges of values.\",\n        depends: [ \"draganddrop\", \"icons\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            Draggable = kendo.ui.Draggable,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            extend = $.extend,\n            format = kendo.format,\n            parse = kendo.parseFloat,\n            isArray = Array.isArray,\n            math = Math,\n            support = kendo.support,\n            pointers = support.pointers,\n            msPointers = support.msPointers,\n            CHANGE = \"change\",\n            SLIDE = \"slide\",\n            NS = \".slider\",\n            MOUSE_DOWN = \"touchstart\" + NS + \" mousedown\" + NS,\n            TRACK_MOUSE_DOWN = pointers ? \"pointerdown\" + NS : (msPointers ? \"MSPointerDown\" + NS : MOUSE_DOWN),\n            MOUSE_UP = \"touchend\" + NS + \" mouseup\" + NS,\n            TRACK_MOUSE_UP = pointers ? \"pointerup\" : (msPointers ? \"MSPointerUp\" + NS : MOUSE_UP),\n            MOVE_SELECTION = \"moveSelection\",\n            KEY_DOWN = \"keydown\" + NS,\n            CLICK = \"click\" + NS,\n            MOUSE_OVER = \"mouseover\" + NS,\n            FOCUS = \"focus\" + NS,\n            BLUR = \"blur\" + NS,\n            DRAG_HANDLE = \".k-draghandle\",\n            TRACK_SELECTOR = \".k-slider-track\",\n            TICK_SELECTOR = \".k-tick\",\n            STATE_SELECTED = \"k-selected\",\n            STATE_FOCUSED = \"k-focus\",\n            STATE_DISABLED = \"k-disabled\",\n            DISABLED = \"disabled\",\n            UNDEFINED = \"undefined\",\n            TABINDEX = \"tabindex\",\n            getTouches = kendo.getTouches,\n\n            ARIA_VALUETEXT = \"aria-valuetext\",\n            ARIA_VALUENOW = \"aria-valuenow\";\n\n        var SliderBase = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                options = that.options;\n                that._isHorizontal = options.orientation == \"horizontal\";\n                that._isRtl = that._isHorizontal && kendo.support.isRtl(element);\n                that._position = that._isRtl ? \"right\" : that._isHorizontal ? \"left\" : \"bottom\";\n                that._sizeFn = that._isHorizontal ? \"width\" : \"height\";\n                that._outerSize = that._isHorizontal ? outerWidth : outerHeight;\n\n                options.tooltip.format = options.tooltip.enabled ? options.tooltip.format || \"{0}\" : \"{0}\";\n\n                if (options.smallStep <= 0) {\n                    throw new Error('Kendo UI Slider smallStep must be a positive number.');\n                }\n\n                that._createHtml();\n                that._trackDiv = that.wrapper.find(TRACK_SELECTOR);\n\n                that._maxSelection = that._trackDiv[that._sizeFn]();\n\n                that._sliderItemsInit();\n\n                that._reset();\n\n                that._tabindex(that.wrapper.find(DRAG_HANDLE));\n                that[options.enabled ? \"enable\" : \"disable\"]();\n\n                var rtlDirectionSign = kendo.support.isRtl(that.wrapper) ? -1 : 1;\n\n                that._keyMap = {\n                    37: step(-1 * rtlDirectionSign * options.smallStep), // left arrow\n                    40: step(-options.smallStep), // down arrow\n                    39: step(+1 * rtlDirectionSign * options.smallStep), // right arrow\n                    38: step(+options.smallStep), // up arrow\n                    35: setValue(options.max), // end\n                    36: setValue(options.min), // home\n                    33: step(+options.largeStep), // page up\n                    34: step(-options.largeStep) // page down\n                };\n\n                that._ariaLabel(that.wrapper.find(DRAG_HANDLE));\n\n                kendo.notify(that);\n            },\n\n            events: [\n                CHANGE,\n                SLIDE\n            ],\n\n            options: {\n                enabled: true,\n                min: 0,\n                max: 10,\n                smallStep: 1,\n                largeStep: 5,\n                orientation: \"horizontal\",\n                tickPlacement: \"both\",\n                tooltip: { enabled: true, format: \"{0}\" }\n            },\n\n            _distance: function() {\n                return round(this.options.max - this.options.min);\n            },\n\n            _resize: function() {\n                this.wrapper.find(\".k-slider-items\").remove();\n\n                this._maxSelection = this._trackDiv[this._sizeFn]();\n                this._sliderItemsInit();\n                this._refresh();\n\n                if (this.options.enabled) {\n                    this.enable(true);\n                }\n            },\n\n            _sliderItemsInit: function() {\n                var that = this,\n                    options = that.options;\n\n                // [Backwards compatibilty]: maxSelection is reduced with 2 to compensate new styling and preserve automatic calculation to not show ticks.\n                var sizeBetweenTicks = (that._maxSelection - 2) / ((options.max - options.min) / options.smallStep);\n\n                var pixelWidths = that._calculateItemsWidth(math.floor(removeFraction(that._distance()) / removeFraction(options.smallStep)));\n\n                if (options.tickPlacement != \"none\" && sizeBetweenTicks >= 2) {\n                    $(this.element).parent().find(\".k-slider-items\").remove();\n                    that._trackDiv.before(createSliderItems(options, that._distance()));\n                    that._setItemsTitle();\n                }\n\n                that._calculateSteps(pixelWidths);\n\n                if (options.tickPlacement != \"none\" && sizeBetweenTicks >= 2 &&\n                    options.largeStep >= options.smallStep) {\n                    that._setItemsLargeTick();\n                    that.wrapper.find(TICK_SELECTOR).first().addClass(\"k-first\");\n                    that.wrapper.find(TICK_SELECTOR).last().addClass(\"k-last\");\n                }\n            },\n\n            getSize: function() {\n                return kendo.dimensions(this.wrapper);\n            },\n\n            _setItemsTitle: function() {\n                var that = this,\n                    options = that.options,\n                    items = that.wrapper.find(TICK_SELECTOR),\n                    titleNumber = options.min,\n                    count = items.length;\n\n                for (var i = 0; i <= count; i += 1) {\n                    $(items[i]).attr(\"title\", format(options.tooltip.format, round(titleNumber)));\n                    titleNumber += options.smallStep;\n                }\n            },\n\n            _setItemsLargeTick: function() {\n                var that = this,\n                    options = that.options,\n                    items = that.wrapper.find(TICK_SELECTOR),\n                    i = 0, item, value;\n\n                if (removeFraction(options.largeStep) % removeFraction(options.smallStep) === 0 || that._distance() / options.largeStep >= 3) {\n                    if (!that._isHorizontal && !that._isRtl) {\n                        items = $.makeArray(items).reverse();\n                    }\n\n                    for (i = 0; i < items.length; i++) {\n                        item = $(items[i]);\n                        value = that._values[i];\n                        var valueWithoutFraction = round(removeFraction(value - this.options.min));\n                        if (valueWithoutFraction % removeFraction(options.smallStep) === 0 && valueWithoutFraction % removeFraction(options.largeStep) === 0) {\n                            item.addClass(\"k-tick-large\")\n                                .html(\"<span class='k-label'>\" + item.attr(\"title\") + \"</span>\");\n\n                            if (i !== 0 && i !== items.length - 1) {\n                                item.css(\"line-height\", item[that._sizeFn]() + \"px\");\n                            }\n                        }\n                    }\n                }\n            },\n\n            _calculateItemsWidth: function(itemsCount) {\n                var that = this,\n                    options = that.options,\n                    trackDivSize = parseFloat(that._trackDiv.css(that._sizeFn)) + 1,\n                    distance = that._distance(),\n                    preciseItemsCount = removeFraction(distance) / removeFraction(options.smallStep),\n                    pixelStep = trackDivSize / removeFraction(distance),\n                    itemWidth,\n                    pixelWidths,\n                    i;\n\n                if (preciseItemsCount - itemsCount > 0) {\n                    trackDivSize -= ((removeFraction(distance) % removeFraction(options.smallStep)) * pixelStep);\n                }\n\n                itemWidth = trackDivSize / itemsCount;\n                pixelWidths = [];\n\n                for (i = 0; i < itemsCount - 1; i++) {\n                    pixelWidths[i] = itemWidth;\n                }\n\n                pixelWidths[itemsCount - 1] = pixelWidths[itemsCount] = itemWidth / 2;\n                return that._roundWidths(pixelWidths);\n            },\n\n            _roundWidths: function(pixelWidthsArray) {\n                var balance = 0,\n                    count = pixelWidthsArray.length,\n                    i;\n\n                for (i = 0; i < count; i++) {\n                    balance += (pixelWidthsArray[i] - math.floor(pixelWidthsArray[i]));\n                    pixelWidthsArray[i] = math.floor(pixelWidthsArray[i]);\n                }\n\n                balance = math.round(balance);\n\n                return this._addAdditionalSize(balance, pixelWidthsArray);\n            },\n\n            _addAdditionalSize: function(additionalSize, pixelWidthsArray) {\n                if (additionalSize === 0) {\n                    return pixelWidthsArray;\n                }\n\n                //set step size\n                var step = parseFloat(pixelWidthsArray.length - 1) / parseFloat(additionalSize == 1 ? additionalSize : additionalSize - 1),\n                    i;\n\n                for (i = 0; i < additionalSize; i++) {\n                    pixelWidthsArray[parseInt(math.round(step * i), 10)] += 1;\n                }\n\n                return pixelWidthsArray;\n            },\n\n            _calculateSteps: function(pixelWidths) {\n                var that = this,\n                    options = that.options,\n                    val = options.min,\n                    selection = 0,\n                    distance = that._distance(),\n                    itemsCount = math.ceil(removeFraction(distance) / removeFraction(options.smallStep)),\n                    i = 1,\n                    lastItem;\n\n                itemsCount += (removeFraction(distance) / removeFraction(options.smallStep)) % 1 === 0 ? 1 : 0;\n                pixelWidths.splice(0, 0, pixelWidths[itemsCount - 2] * 2);\n                pixelWidths.splice(itemsCount - 1, 1, pixelWidths.pop() * 2);\n\n                that._pixelSteps = [selection];\n                that._values = [val];\n\n                if (itemsCount === 0) {\n                    return;\n                }\n\n                while (i < itemsCount) {\n                    selection += (pixelWidths[i - 1] + pixelWidths[i]) / 2;\n                    that._pixelSteps[i] = selection;\n                    val += options.smallStep;\n                    that._values[i] = round(val);\n\n                    i++;\n                }\n\n                lastItem = (removeFraction(distance) % removeFraction(options.smallStep)) === 0 ? itemsCount - 1 : itemsCount;\n\n                that._pixelSteps[lastItem] = that._maxSelection;\n                that._values[lastItem] = options.max;\n            },\n\n            _getValueFromPosition: function(mousePosition, draggableArea) {\n                var that = this,\n                    options = that.options,\n                    step = math.max(options.smallStep * (that._maxSelection / that._distance()), 0),\n                    position = 0,\n                    halfStep = (step / 2),\n                    i;\n\n                if (that._isHorizontal) {\n                    position = mousePosition - draggableArea.startPoint;\n                    if (that._isRtl) {\n                        position = that._maxSelection - position;\n                    }\n                } else {\n                    position = draggableArea.startPoint - mousePosition;\n                }\n\n                if (that._maxSelection - ((parseInt(that._maxSelection % step, 10) - 3) / 2) < position) {\n                    return options.max;\n                }\n\n                for (i = 0; i < that._pixelSteps.length; i++) {\n                    if (math.abs(that._pixelSteps[i] - position) - 1 <= halfStep) {\n                        return round(that._values[i]);\n                    }\n                }\n            },\n\n            _getFormattedValue: function(val, drag) {\n                var that = this,\n                    html = \"\",\n                    tooltip = that.options.tooltip,\n                    tooltipTemplate,\n                    selectionStart,\n                    selectionEnd;\n\n                if (isArray(val)) {\n                    selectionStart = val[0];\n                    selectionEnd = val[1];\n                } else if (drag && drag.type) {\n                    selectionStart = drag.selectionStart;\n                    selectionEnd = drag.selectionEnd;\n                }\n\n                if (drag) {\n                    tooltipTemplate = drag.tooltipTemplate;\n                }\n\n                if (!tooltipTemplate && tooltip.template) {\n                    tooltipTemplate = kendo.template(tooltip.template);\n                }\n\n                if (isArray(val) || (drag && drag.type)) {\n\n                    if (tooltipTemplate) {\n                        html = tooltipTemplate({\n                            selectionStart: selectionStart,\n                            selectionEnd: selectionEnd\n                        });\n                    } else {\n                        selectionStart = format(tooltip.format, selectionStart);\n                        selectionEnd = format(tooltip.format, selectionEnd);\n                        html = selectionStart + \" - \" + selectionEnd;\n                    }\n                } else {\n                    if (drag) {\n                        drag.val = val;\n                    }\n\n                    if (tooltipTemplate) {\n                        html = tooltipTemplate({\n                            value: val\n                        });\n                    } else {\n                        html = format(tooltip.format, val);\n                    }\n                }\n                return html;\n            },\n\n            _getDraggableArea: function() {\n                var that = this,\n                    offset = kendo.getOffset(that._trackDiv);\n\n                return {\n                    startPoint: that._isHorizontal ? offset.left : offset.top + that._maxSelection,\n                    endPoint: that._isHorizontal ? offset.left + that._maxSelection : offset.top\n                };\n            },\n\n            _createHtml: function() {\n                var that = this,\n                    element = that.element,\n                    options = that.options,\n                    inputs = element.find(\"input\");\n\n                if (inputs.length == 2) {\n                    inputs.eq(0).prop(\"value\", formatValue(options.selectionStart));\n                    inputs.eq(1).prop(\"value\", formatValue(options.selectionEnd));\n                } else {\n                    element.prop(\"value\", formatValue(options.value));\n                }\n\n                that.wrapper = element.wrap(createWrapper(options, element, that._isHorizontal)).hide().parents(\".k-slider\");\n\n                if (options.showButtons) {\n                    that.wrapper.find(\".k-slider-track-wrap\")\n                           .after(createButton(options, \"increase\", that._isHorizontal, that._isRtl))\n                           .before(createButton(options, \"decrease\", that._isHorizontal, that._isRtl));\n                }\n\n                element.before(createTrack(options, element, that._isHorizontal));\n            },\n\n            _focus: function(e) {\n                var that = this,\n                    target = e.target,\n                    val = that.value(),\n                    drag = that._drag;\n\n                if (!drag) {\n                    if (target == that.wrapper.find(DRAG_HANDLE).eq(0)[0]) {\n                        drag = that._firstHandleDrag;\n                        that._activeHandle = 0;\n                    } else {\n                        drag = that._lastHandleDrag;\n                        that._activeHandle = 1;\n                    }\n                    val = val[that._activeHandle];\n                }\n\n                $(target).addClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n\n                if (drag) {\n                    that._activeHandleDrag = drag;\n\n                    drag.selectionStart = that.options.selectionStart;\n                    drag.selectionEnd = that.options.selectionEnd;\n\n                    drag._updateTooltip(val);\n                }\n            },\n\n            _focusWithMouse: function(target) {\n                target = $(target);\n\n                var that = this,\n                    idx = target.is(DRAG_HANDLE) ? target.index() : 0;\n\n                window.setTimeout(function() {\n                    that.wrapper.find(DRAG_HANDLE)[idx == 2 ? 1 : 0].focus();\n                }, 1);\n\n                that._setTooltipTimeout();\n            },\n\n            _blur: function(e) {\n                var that = this,\n                    drag = that._activeHandleDrag;\n\n                $(e.target).removeClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n\n                if (drag) {\n                    drag._removeTooltip();\n                    delete that._activeHandleDrag;\n                    delete that._activeHandle;\n                }\n            },\n\n            _setTooltipTimeout: function() {\n                var that = this;\n                that._tooltipTimeout = window.setTimeout(function() {\n                    var drag = that._drag || that._activeHandleDrag;\n                    if (drag) {\n                        drag._removeTooltip();\n                    }\n                }, 300);\n            },\n\n            _clearTooltipTimeout: function() {\n                var that = this;\n                window.clearTimeout(this._tooltipTimeout);\n                var drag = that._drag || that._activeHandleDrag;\n                if (drag && drag.tooltipDiv) {\n                    drag.tooltipDiv.stop(true, false).css(\"opacity\", 1);\n                }\n            },\n\n            _reset: function() {\n                var that = this,\n                    element = that.element,\n                    formId = element.attr(\"form\"),\n                    form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n                if (form[0]) {\n                    that._form = form.on(\"reset\", that._formResetHandler.bind(that));\n                }\n            },\n\n            min: function(value) {\n                if (!value) {\n                    return this.options.min;\n                }\n                this.setOptions({ \"min\": value });\n            },\n\n            max: function(value) {\n                if (!value) {\n                    return this.options.max;\n                }\n                this.setOptions({ \"max\": value });\n            },\n\n            setOptions: function(options) {\n                Widget.fn.setOptions.call(this, options);\n                this._sliderItemsInit();\n                this._refresh();\n            },\n\n            destroy: function() {\n                if (this._form) {\n                    this._form.off(\"reset\", this._formResetHandler);\n                }\n                Widget.fn.destroy.call(this);\n            }\n        });\n\n        function createWrapper(options, element, isHorizontal) {\n            var orientationCssClass = isHorizontal ? \" k-slider-horizontal\" : \" k-slider-vertical\",\n                style = options.style ? options.style : element.attr(\"style\"),\n                cssClasses = element.attr(\"class\") ? (\" \" + element.attr(\"class\")) : \"\",\n                tickPlacementCssClass = \"\";\n\n            if (options.tickPlacement == \"bottomRight\") {\n                tickPlacementCssClass = \" k-slider-bottomright\";\n            } else if (options.tickPlacement == \"topLeft\") {\n                tickPlacementCssClass = \" k-slider-topleft\";\n            }\n\n            style = style ? \" style='\" + style + \"'\" : \"\";\n\n            return \"<div class='k-slider\" + orientationCssClass + cssClasses + \"'\" + style + \">\" +\n                   \"<div class='k-slider-track-wrap\" + tickPlacementCssClass +\n                   \"'></div></div>\";\n        }\n\n        function createButton(options, type, isHorizontal, isRtl) {\n            var buttonIconName = \"\";\n\n            if (isHorizontal) {\n                if (type === \"increase\") {\n                    buttonIconName = isRtl ? \"caret-alt-left\" : \"caret-alt-right\";\n                } else {\n                    buttonIconName = isRtl ? \"caret-alt-right\" : \"caret-alt-left\";\n                }\n            } else {\n                if (type == \"increase\") {\n                    buttonIconName = \"caret-alt-up\";\n                } else {\n                    buttonIconName = \"caret-alt-down\";\n                }\n            }\n\n            return \"<button class='k-button k-button-md k-rounded-full k-button-solid k-button-solid-base k-icon-button k-button-\" + type + \"' \" +\n                    \"title='\" + options[type + \"ButtonTitle\"] + \"' \" +\n                    \"aria-label='\" + options[type + \"ButtonTitle\"] + \"'>\" +\n                        kendo.ui.icon({ icon: buttonIconName, iconClass: \"k-button-icon\" }) +\n                    \"</button>\";\n        }\n\n        function createSliderItems(options, distance) {\n            var result = \"<ul class='k-reset k-slider-items' role='presentation'>\",\n                count = math.floor(round(distance / options.smallStep)) + 1,\n                i;\n\n            for (i = 0; i < count; i++) {\n                result += \"<li class='k-tick'></li>\";\n            }\n\n            result += \"</ul>\";\n\n            return result;\n        }\n\n        function createTrack(options, element, isHorizontal) {\n            var dragHandleCount = element.is(\"input\") ? 1 : 2,\n                firstDragHandleTitle = dragHandleCount == 2 ? options.leftDragHandleTitle : options.dragHandleTitle,\n                value = options.value,\n                min = options.selectionStart,\n                max = options.selectionEnd,\n                elementValue, minElementValue, maxElementValue;\n\n            if (dragHandleCount === 1) {\n                elementValue = element.val();\n\n                if (elementValue !== null && elementValue !== undefined$1 && elementValue !== 'null') {\n                    if (value === null || value === undefined$1) {\n                        value = elementValue;\n                    }\n                }\n            } else {\n                minElementValue = element.find(\"input\").eq(0).val();\n                maxElementValue = element.find(\"input\").eq(1).val();\n\n                if (minElementValue !== null && minElementValue !== undefined$1 && minElementValue !== 'null') {\n                    if (min === null || min === undefined$1) {\n                        min = minElementValue;\n                    }\n                }\n\n                if (maxElementValue !== null && maxElementValue !== undefined$1 && maxElementValue !== 'null') {\n                    if (max === null || max === undefined$1) {\n                        max = maxElementValue;\n                    }\n                }\n            }\n\n            var result = \"<div class='k-slider-track'><div class='k-slider-selection'><!-- --></div>\" +\n                   \"<span tabindex='0' class='k-draghandle' title='\" + firstDragHandleTitle + \"' role='slider' \" +\n                   (isHorizontal === false ? \"aria-orientation='vertical' \" : \"\") +\n                   \"aria-valuemin='\" + options.min + \"' aria-valuemax='\" + options.max + \"' aria-valuenow='\" + (dragHandleCount > 1 ? (min || options.min) : value || options.min) + \"'></span>\" +\n                   (dragHandleCount > 1 ? \"<span tabindex='0' class='k-draghandle' title='\" + options.rightDragHandleTitle + \"'role='slider' \" +\n                   (isHorizontal === false ? \"aria-orientation='vertical' \" : \"\") +\n                   \"aria-valuemin='\" + options.min + \"' aria-valuemax='\" + options.max + \"' aria-valuenow='\" + (max || options.max) + \"'></span>\" : \"\") +\n                   \"</div>\";\n\n            return result;\n        }\n\n        function step(stepValue) {\n            return function(value) {\n                return value + stepValue;\n            };\n        }\n\n        function setValue(value) {\n            return function() {\n                return value;\n            };\n        }\n\n        function formatValue(value) {\n            return (value + \"\").replace(\".\", kendo.cultures.current.numberFormat[\".\"]);\n        }\n\n        function calculatePrecision(value) {\n            var number = value.toString();\n            var precision = 0;\n\n            number = number.split(\".\");\n\n            if (number[1]) {\n                precision = number[1].length;\n            }\n\n            precision = precision > 10 ? 10 : precision;\n            return precision;\n        }\n\n        function round(value) {\n            var precision, power;\n\n            value = parseFloat(value, 10);\n            precision = calculatePrecision(value);\n            power = math.pow(10, precision || 0);\n\n            return math.round(value * power) / power;\n        }\n\n        function parseAttr(element, name) {\n            var value = parse(element.getAttribute(name));\n            if (value === null) {\n                value = undefined$1;\n            }\n            return value;\n        }\n\n        function defined(value) {\n            return typeof value !== UNDEFINED;\n        }\n\n        function removeFraction(value) {\n            return value * 10000;\n        }\n\n        var Slider = SliderBase.extend({\n            init: function(element, options) {\n                var that = this,\n                    dragHandle;\n\n                element.type = \"text\";\n                options = extend({}, {\n                    value: parseAttr(element, \"value\"),\n                    min: parseAttr(element, \"min\"),\n                    max: parseAttr(element, \"max\"),\n                    smallStep: parseAttr(element, \"step\")\n                }, options);\n\n                element = $(element);\n\n                if (options && options.enabled === undefined$1) {\n                    options.enabled = !element.is(\"[disabled]\");\n                }\n\n                SliderBase.fn.init.call(that, element, options);\n                options = that.options;\n                if (!defined(options.value) || options.value === null) {\n                    options.value = options.min;\n                    element.prop(\"value\", formatValue(options.min));\n                }\n                options.value = math.max(math.min(options.value, options.max), options.min);\n\n                dragHandle = that.wrapper.find(DRAG_HANDLE);\n\n                that._selection = new Slider.Selection(dragHandle, that, options);\n                that._drag = new Slider.Drag(dragHandle, \"\", that, options);\n\n                that._refreshAriaAttr(options.value);\n            },\n\n            options: {\n                name: \"Slider\",\n                showButtons: true,\n                increaseButtonTitle: \"Increase\",\n                decreaseButtonTitle: \"Decrease\",\n                dragHandleTitle: \"drag\",\n                tooltip: { format: \"{0:#,#.##}\" },\n                value: null\n            },\n\n            enable: function(enable) {\n                var that = this,\n                    options = that.options,\n                    clickHandler,\n                    move;\n\n                that.disable();\n                if (enable === false) {\n                    return;\n                }\n\n                that.wrapper\n                    .removeClass(STATE_DISABLED);\n\n                that.wrapper.find(\"input\").prop(DISABLED, false);\n\n                clickHandler = function(e) {\n                    var touch = getTouches(e)[0];\n\n                    if (!touch) {\n                        return;\n                    }\n\n                    var mousePosition = that._isHorizontal ? touch.location.pageX : touch.location.pageY,\n                        draggableArea = that._getDraggableArea(),\n                        target = $(e.target);\n\n                    if (target.hasClass(\"k-draghandle\")) {\n                        target.addClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n                        return;\n                    }\n\n                    that._update(that._getValueFromPosition(mousePosition, draggableArea));\n\n                    that._focusWithMouse(e.target);\n\n                    that._drag.dragstart(e);\n                    e.preventDefault();\n                };\n\n                that.wrapper\n                    .find(TICK_SELECTOR + \", \" + TRACK_SELECTOR)\n                        .on(TRACK_MOUSE_DOWN, clickHandler)\n                        .end()\n                        .on(TRACK_MOUSE_DOWN, function() {\n                            $(document.documentElement).one(\"selectstart\", kendo.preventDefault);\n                        })\n                        .on(TRACK_MOUSE_UP, function() {\n                            that._drag._end();\n                        });\n\n                that.wrapper\n                    .find(DRAG_HANDLE)\n                    .attr(TABINDEX, 0)\n                    .on(MOUSE_UP, function() {\n                        that._setTooltipTimeout();\n                    })\n                    .on(CLICK, function(e) {\n                        that._focusWithMouse(e.target);\n                        e.preventDefault();\n                    })\n                    .on(FOCUS, that._focus.bind(that))\n                    .on(BLUR, that._blur.bind(that));\n\n                move = (function(sign) {\n                    var newVal = that._nextValueByIndex(that._valueIndex + (sign * 1));\n                    that._setValueInRange(newVal);\n                    that._drag._updateTooltip(newVal);\n                });\n\n                if (options.showButtons) {\n                    var mouseDownHandler = (function(e, sign) {\n                        this._clearTooltipTimeout();\n                        if (e.which === 1 || (support.touch && e.which === 0)) {\n                            move(sign);\n\n                            this.timeout = setTimeout((function() {\n                                this.timer = setInterval(function() {\n                                    move(sign);\n                                }, 60);\n                            }).bind(this), 200);\n                        }\n                    }).bind(that);\n\n                    that.wrapper.find(\".k-button\")\n                        .on(MOUSE_UP, (function(e) {\n                            this._clearTimer();\n                            that._focusWithMouse(e.target);\n                        }).bind(that))\n                        .on(MOUSE_OVER, function(e) {\n                            $(e.currentTarget).addClass(\"k-hover\");\n                        })\n                        .on(\"mouseout\" + NS, (function(e) {\n                            $(e.currentTarget).removeClass(\"k-hover\");\n                            this._clearTimer();\n                        }).bind(that))\n                        .on(MOUSE_DOWN, (function(e) {\n                            var sign = $(e.target).closest(\".k-button\").is(\".k-button-increase\") ? 1 : -1;\n                            mouseDownHandler(e, sign);\n                        }))\n                        .on(\"click\", kendo.preventDefault);\n                }\n\n                that.wrapper\n                    .find(DRAG_HANDLE)\n                    .off(KEY_DOWN, false)\n                    .on(KEY_DOWN, this._keydown.bind(that));\n\n                options.enabled = true;\n            },\n\n            disable: function() {\n                var that = this;\n\n                that.wrapper\n                    .addClass(STATE_DISABLED);\n\n                $(that.element).prop(DISABLED, DISABLED);\n\n                that.wrapper\n                    .find(\".k-button\")\n                    .off(MOUSE_DOWN)\n                    .on(MOUSE_DOWN, function(e) {\n                        e.preventDefault();\n                        $(this).addClass(\"k-active\");\n                    })\n                    .off(MOUSE_UP)\n                    .on(MOUSE_UP, function(e) {\n                        e.preventDefault();\n                        $(this).removeClass(\"k-active\");\n                    })\n                    .off(\"mouseleave\" + NS)\n                    .on(\"mouseleave\" + NS, kendo.preventDefault)\n                    .off(MOUSE_OVER)\n                    .on(MOUSE_OVER, kendo.preventDefault);\n\n                that.wrapper\n                    .find(TICK_SELECTOR + \", \" + TRACK_SELECTOR).off(TRACK_MOUSE_DOWN).off(TRACK_MOUSE_UP);\n\n                that.wrapper\n                    .find(DRAG_HANDLE)\n                    .attr(TABINDEX, -1)\n                    .off(MOUSE_UP)\n                    .off(KEY_DOWN)\n                    .off(CLICK)\n                    .off(FOCUS)\n                    .off(BLUR);\n\n                that.options.enabled = false;\n            },\n\n            _update: function(val) {\n                var that = this,\n                    change = that.value() != val;\n\n                that.value(val);\n\n                if (change) {\n                    that.trigger(CHANGE, { value: that.options.value });\n                }\n            },\n\n            value: function(value) {\n                var that = this,\n                    options = that.options;\n\n                value = round(value);\n                if (isNaN(value)) {\n                    return options.value;\n                }\n\n                if (value >= options.min && value <= options.max) {\n                    if (options.value != value) {\n                        that.element.prop(\"value\", formatValue(value));\n                        options.value = value;\n                        that._refreshAriaAttr(value);\n                        that._refresh();\n                    }\n                }\n            },\n\n            _refresh: function() {\n                this.trigger(MOVE_SELECTION, { value: this.options.value });\n            },\n\n            _refreshAriaAttr: function(value) {\n                var that = this,\n                    drag = that._drag,\n                    formattedValue;\n\n                if (drag && drag._tooltipDiv) {\n                    formattedValue = drag._tooltipDiv.text();\n                } else {\n                    formattedValue = that._getFormattedValue(value, null);\n                }\n                this.wrapper.find(DRAG_HANDLE).attr(ARIA_VALUENOW, value).attr(ARIA_VALUETEXT, formattedValue);\n            },\n\n            _clearTimer: function() {\n                clearTimeout(this.timeout);\n                clearInterval(this.timer);\n            },\n\n            _keydown: function(e) {\n                var that = this;\n\n                if (e.keyCode in that._keyMap) {\n                    that._clearTooltipTimeout();\n                    that._setValueInRange(that._keyMap[e.keyCode](that.options.value));\n                    that._drag._updateTooltip(that.value());\n                    e.preventDefault();\n                }\n            },\n\n            _setValueInRange: function(val) {\n                var that = this,\n                    options = that.options;\n\n                val = round(val);\n                if (isNaN(val)) {\n                    that._update(options.min);\n                    return;\n                }\n\n                val = math.max(math.min(val, options.max), options.min);\n                that._update(val);\n            },\n\n            _nextValueByIndex: function(index) {\n                var count = this._values.length;\n\n                return this._values[math.max(0, math.min(index, count - 1))];\n            },\n\n            _formResetHandler: function() {\n                var that = this,\n                    min = that.options.min;\n\n                setTimeout(function() {\n                    var value = that.element[0].value;\n                    that.value(value === \"\" || isNaN(value) ? min : value);\n                });\n            },\n\n            destroy: function() {\n                var that = this;\n\n                SliderBase.fn.destroy.call(that);\n\n                that.wrapper.off(NS)\n                    .find(\".k-button\").off(NS)\n                    .end()\n                    .find(DRAG_HANDLE).off(NS)\n                    .end()\n                    .find(TICK_SELECTOR + \", \" + TRACK_SELECTOR).off(NS)\n                    .end();\n\n                that._drag.draggable.destroy();\n                that._drag._removeTooltip(true);\n            }\n        });\n\n        Slider.Selection = function(dragHandle, that, options) {\n            function moveSelection(val) {\n                var selectionValue = val - options.min,\n                    index = that._valueIndex = math.ceil(round(selectionValue / options.smallStep)),\n                    selection = parseInt(that._pixelSteps[index], 10),\n                    selectionDiv = that._trackDiv.find(\".k-slider-selection\");\n\n                selectionDiv[that._sizeFn](selection);\n                dragHandle.css(that._position, selection);\n            }\n\n            moveSelection(options.value);\n\n            that.bind([SLIDE, MOVE_SELECTION], function(e) {\n                moveSelection(parseFloat(e.value, 10));\n            });\n\n            that.bind(CHANGE, function(e) {\n                moveSelection(parseFloat(e.sender.value(), 10));\n            });\n        };\n\n        Slider.Drag = function(element, type, owner, options) {\n            var that = this;\n            that.owner = owner;\n            that.options = options;\n            that.element = element;\n            that.type = type;\n\n            that.draggable = new Draggable(element, {\n                distance: 0,\n                dragstart: that._dragstart.bind(that),\n                drag: that.drag.bind(that),\n                dragend: that.dragend.bind(that),\n                dragcancel: that.dragcancel.bind(that)\n            });\n\n            element.click(false);\n\n            // Disable link dragging\n            element.on(\"dragstart\", function(e) {\n                e.preventDefault();\n            });\n        };\n\n        Slider.Drag.prototype = {\n            dragstart: function(e) {\n                // add reference to the last active drag handle.\n                this.owner._activeDragHandle = this;\n                // HACK to initiate click on the line\n                this.draggable.userEvents.cancel();\n                this._dragstart(e);\n                this.dragend();\n            },\n\n            _dragstart: function(e) {\n                var that = this,\n                    owner = that.owner,\n                    options = that.options;\n\n                if (!options.enabled) {\n                    e.preventDefault();\n                    return;\n                }\n\n                // add reference to the last active drag handle.\n                this.owner._activeDragHandle = this;\n\n                owner.element.off(MOUSE_OVER);\n                owner.wrapper.find(\".\" + STATE_FOCUSED).removeClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n                that.element.addClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n                $(document.documentElement).css(\"cursor\", \"pointer\");\n\n                that.draggableArea = owner._getDraggableArea();\n                that.step = math.max(options.smallStep * (owner._maxSelection / owner._distance()), 0);\n\n                if (that.type) {\n                    that.selectionStart = options.selectionStart;\n                    that.selectionEnd = options.selectionEnd;\n                    owner._setZIndex(that.type);\n                } else {\n                    that.oldVal = that.val = options.value;\n                }\n\n                that._removeTooltip(true);\n                that._createTooltip();\n            },\n\n            _createTooltip: function() {\n                var that = this,\n                    owner = that.owner,\n                    tooltip = that.options.tooltip,\n                    html = '',\n                    wnd = $(window),\n                    tooltipTemplate, calloutCssClass;\n\n                if (!tooltip.enabled) {\n                    return;\n                }\n\n                if (tooltip.template) {\n                    tooltipTemplate = that.tooltipTemplate = kendo.template(tooltip.template);\n                }\n\n                $(\".k-slider-tooltip\").remove(); // if user changes window while tooltip is visible, a second one will be created\n                that.tooltipDiv = $(\"<div role='tooltip' class='k-tooltip k-slider-tooltip'><!-- --></div>\").appendTo(document.body);\n\n                html = owner._getFormattedValue(that.val || owner.value(), that);\n\n                if (!that.type) {\n                    calloutCssClass = \"k-callout-\" + (owner._isHorizontal ? 's' : 'e');\n                    that.tooltipInnerDiv = \"<div class='k-callout \" + calloutCssClass + \"'><!-- --></div>\";\n                    html += that.tooltipInnerDiv;\n                }\n\n                that.tooltipDiv.html(html);\n\n                that._scrollOffset = {\n                    top: wnd.scrollTop(),\n                    left: kendo.scrollLeft(wnd)\n                };\n\n                that.moveTooltip();\n            },\n\n            drag: function(e) {\n                var that = this,\n                    owner = that.owner,\n                    x = e.x.location,\n                    y = e.y.location,\n                    startPoint = that.draggableArea.startPoint,\n                    endPoint = that.draggableArea.endPoint,\n                    slideParams;\n\n                e.preventDefault();\n\n                if (owner._isHorizontal) {\n                    if (owner._isRtl) {\n                        that.val = that.constrainValue(x, startPoint, endPoint, x < endPoint);\n                    } else {\n                        that.val = that.constrainValue(x, startPoint, endPoint, x >= endPoint);\n                    }\n                } else {\n                    that.val = that.constrainValue(y, endPoint, startPoint, y <= endPoint);\n                }\n\n                if (that.oldVal != that.val) {\n                    that.oldVal = that.val;\n\n                    if (that.type) {\n                        if (that.type == \"firstHandle\") {\n                            if (that.val < that.selectionEnd) {\n                                that.selectionStart = that.val;\n                            } else {\n                                that.selectionStart = that.selectionEnd = that.val;\n                            }\n                        } else {\n                            if (that.val > that.selectionStart) {\n                                that.selectionEnd = that.val;\n                            } else {\n                                that.selectionStart = that.selectionEnd = that.val;\n                            }\n                        }\n                        slideParams = {\n                            values: [that.selectionStart, that.selectionEnd],\n                            value: [that.selectionStart, that.selectionEnd]\n                        };\n                    } else {\n                        slideParams = { value: that.val };\n                    }\n\n                    owner.trigger(SLIDE, slideParams);\n                }\n                that._updateTooltip(that.val);\n            },\n\n            _updateTooltip: function(val) {\n                var that = this,\n                    options = that.options,\n                    tooltip = options.tooltip,\n                    html = \"\";\n\n                if (!tooltip.enabled) {\n                    return;\n                }\n\n                if (!that.tooltipDiv) {\n                    that._createTooltip();\n                }\n\n                html = that.owner._getFormattedValue(round(val), that);\n\n                if (!that.type) {\n                    html += that.tooltipInnerDiv;\n                }\n\n                that.tooltipDiv.html(html);\n                that.moveTooltip();\n            },\n\n            dragcancel: function() {\n                this.owner._refresh();\n                $(document.documentElement).css(\"cursor\", \"\");\n                return this._end();\n            },\n\n            dragend: function() {\n                var that = this,\n                    owner = that.owner;\n\n                $(document.documentElement).css(\"cursor\", \"\");\n\n                if (that.type) {\n                    owner._update(that.selectionStart, that.selectionEnd);\n                } else {\n                    owner._update(that.val);\n                    that.draggable.userEvents._disposeAll();\n                }\n\n                that.draggable.userEvents.cancel();\n                return that._end();\n            },\n\n            _end: function() {\n                var that = this,\n                    owner = that.owner;\n\n                owner._focusWithMouse(that.element);\n\n                owner.element.on(MOUSE_OVER);\n\n                return false;\n            },\n\n            _removeTooltip: function(noAnimation) {\n                var that = this,\n                    owner = that.owner;\n\n                if (that.tooltipDiv && owner.options.tooltip.enabled && owner.options.enabled) {\n                    if (noAnimation) {\n                        that.tooltipDiv.remove();\n                        that.tooltipDiv = null;\n                    } else {\n                        that.tooltipDiv.fadeOut(\"slow\", function() {\n                            $(this).remove();\n                            that.tooltipDiv = null;\n                        });\n                    }\n                }\n            },\n\n            moveTooltip: function() {\n                var that = this,\n                    owner = that.owner,\n                    top = 0,\n                    left = 0,\n                    element = that.element,\n                    offset = kendo.getOffset(element),\n                    margin = 8,\n                    viewport = $(window),\n                    callout = that.tooltipDiv.find(\".k-callout\"),\n                    width = outerWidth(that.tooltipDiv),\n                    height = outerHeight(that.tooltipDiv),\n                    dragHandles, sdhOffset, diff, anchorSize;\n\n                if (that.type) {\n                    dragHandles = owner.wrapper.find(DRAG_HANDLE);\n                    offset = kendo.getOffset(dragHandles.eq(0));\n                    sdhOffset = kendo.getOffset(dragHandles.eq(1));\n\n                    if (owner._isHorizontal) {\n                        top = sdhOffset.top;\n                        left = offset.left + ((sdhOffset.left - offset.left) / 2);\n                    } else {\n                        top = offset.top + ((sdhOffset.top - offset.top) / 2);\n                        left = sdhOffset.left;\n                    }\n\n                    anchorSize = outerWidth(dragHandles.eq(0)) + 2 * margin;\n                } else {\n                    top = offset.top;\n                    left = offset.left;\n                    anchorSize = outerWidth(element) + 2 * margin;\n                }\n\n                if (owner._isHorizontal) {\n                    left -= parseInt((width - owner._outerSize(element)) / 2, 10);\n                    top -= height + margin + (callout.length ? callout.height() : 0);\n                } else {\n                    top -= parseInt((height - owner._outerSize(element)) / 2, 10);\n                    left -= width + margin + (callout.length ? callout.width() : 0);\n                }\n\n                if (owner._isHorizontal) {\n                    diff = that._flip(top, height, anchorSize, outerHeight(viewport) + that._scrollOffset.top);\n                    top += diff;\n                    left += that._fit(left, width, outerWidth(viewport) + that._scrollOffset.left);\n                } else {\n                    diff = that._flip(left, width, anchorSize, outerWidth(viewport) + that._scrollOffset.left);\n                    top += that._fit(top, height, outerHeight(viewport) + that._scrollOffset.top);\n                    left += diff;\n                }\n\n                if (diff > 0 && callout) {\n                    callout.removeClass();\n                    callout.addClass(\"k-callout k-callout-\" + (owner._isHorizontal ? \"n\" : \"w\"));\n                }\n\n                that.tooltipDiv.css({ top: top, left: left });\n            },\n\n            _fit: function(position, size, viewPortEnd) {\n                var output = 0;\n\n                if (position + size > viewPortEnd) {\n                    output = viewPortEnd - (position + size);\n                }\n\n                if (position < 0) {\n                    output = -position;\n                }\n\n                return output;\n            },\n\n            _flip: function(offset, size, anchorSize, viewPortEnd) {\n                var output = 0;\n\n                if (offset + size > viewPortEnd) {\n                    output += -(anchorSize + size);\n                }\n\n                if (offset + output < 0) {\n                    output += anchorSize + size;\n                }\n\n                return output;\n            },\n\n            constrainValue: function(position, min, max, maxOverflow) {\n                var that = this,\n                    val = 0;\n\n                if (min < position && position < max) {\n                    val = that.owner._getValueFromPosition(position, that.draggableArea);\n                } else {\n                    if (maxOverflow ) {\n                        val = that.options.max;\n                    } else {\n                        val = that.options.min;\n                    }\n                }\n\n                return val;\n            }\n\n        };\n\n        kendo.ui.plugin(Slider);\n\n        var RangeSlider = SliderBase.extend({\n            init: function(element, options) {\n                var that = this,\n                    inputs = $(element).find(\"input\"),\n                    firstInput = inputs.eq(0)[0],\n                    secondInput = inputs.eq(1)[0];\n\n                firstInput.type = \"text\";\n                secondInput.type = \"text\";\n\n                if (options && options.showButtons) {\n                    if (window.console) {\n                        window.console.warn(\"showbuttons option is not supported for the range slider, ignoring\");\n                    }\n\n                    options.showButtons = false;\n                }\n\n                options = extend({}, {\n                    selectionStart: parseAttr(firstInput, \"value\"),\n                    min: parseAttr(firstInput, \"min\"),\n                    max: parseAttr(firstInput, \"max\"),\n                    smallStep: parseAttr(firstInput, \"step\")\n                }, {\n                    selectionEnd: parseAttr(secondInput, \"value\"),\n                    min: parseAttr(secondInput, \"min\"),\n                    max: parseAttr(secondInput, \"max\"),\n                    smallStep: parseAttr(secondInput, \"step\")\n                }, options);\n\n                if (options && options.enabled === undefined$1) {\n                    options.enabled = !inputs.is(\"[disabled]\");\n                }\n\n                SliderBase.fn.init.call(that, element, options);\n                options = that.options;\n                if (!defined(options.selectionStart) || options.selectionStart === null) {\n                    options.selectionStart = options.min;\n                    inputs.eq(0).prop(\"value\", formatValue(options.min));\n                }\n\n                if (!defined(options.selectionEnd) || options.selectionEnd === null) {\n                    options.selectionEnd = options.max;\n                    inputs.eq(1).prop(\"value\", formatValue(options.max));\n                }\n\n                var dragHandles = that.wrapper.find(DRAG_HANDLE);\n\n                this._selection = new RangeSlider.Selection(dragHandles, that, options);\n                that._firstHandleDrag = new Slider.Drag(dragHandles.eq(0), \"firstHandle\", that, options);\n                that._lastHandleDrag = new Slider.Drag(dragHandles.eq(1), \"lastHandle\" , that, options);\n\n                that._refreshAriaAttr(options.selectionStart , options.selectionEnd);\n            },\n\n            options: {\n                name: \"RangeSlider\",\n                leftDragHandleTitle: \"drag\",\n                rightDragHandleTitle: \"drag\",\n                tooltip: { format: \"{0:#,#.##}\" },\n                selectionStart: null,\n                selectionEnd: null\n            },\n\n            enable: function(enable) {\n                var that = this,\n                    options = that.options,\n                    clickHandler;\n\n                that.disable();\n                if (enable === false) {\n                    return;\n                }\n\n                that.wrapper\n                    .removeClass(STATE_DISABLED);\n\n                that.wrapper.find(\"input\").prop(DISABLED, false);\n\n                clickHandler = function(e) {\n                    var touch = getTouches(e)[0];\n\n                    if (!touch) {\n                        return;\n                    }\n\n                    var mousePosition = that._isHorizontal ? touch.location.pageX : touch.location.pageY,\n                        draggableArea = that._getDraggableArea(),\n                        val = that._getValueFromPosition(mousePosition, draggableArea),\n                        target = $(e.target),\n                        from, to, drag;\n\n                    if (target.hasClass(\"k-draghandle\")) {\n                        that.wrapper.find(\".\" + STATE_FOCUSED).removeClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n                        target.addClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n                        return;\n                    }\n\n                    if (val < options.selectionStart) {\n                        from = val;\n                        to = options.selectionEnd;\n                        drag = that._firstHandleDrag;\n                    } else if (val > that.selectionEnd) {\n                        from = options.selectionStart;\n                        to = val;\n                        drag = that._lastHandleDrag;\n                    } else {\n                        if (val - options.selectionStart <= options.selectionEnd - val) {\n                            from = val;\n                            to = options.selectionEnd;\n                            drag = that._firstHandleDrag;\n                        } else {\n                            from = options.selectionStart;\n                            to = val;\n                            drag = that._lastHandleDrag;\n                        }\n                    }\n\n                    drag.dragstart(e);\n                    that._setValueInRange(from, to);\n                    that._focusWithMouse(drag.element);\n                };\n\n                that.wrapper\n                    .find(TICK_SELECTOR + \", \" + TRACK_SELECTOR)\n                        .on(TRACK_MOUSE_DOWN, clickHandler)\n                        .end()\n                        .on(TRACK_MOUSE_DOWN, function() {\n                            $(document.documentElement).one(\"selectstart\", kendo.preventDefault);\n                        })\n                        .on(TRACK_MOUSE_UP, function() {\n                            if (that._activeDragHandle) {\n                                that._activeDragHandle._end();\n                            }\n                        });\n\n                that.wrapper\n                    .find(DRAG_HANDLE)\n                    .attr(TABINDEX, 0)\n                    .on(MOUSE_UP, function() {\n                        that._setTooltipTimeout();\n                    })\n                    .on(CLICK, function(e) {\n                        that._focusWithMouse(e.target);\n                        e.preventDefault();\n                    })\n                    .on(FOCUS, that._focus.bind(that))\n                    .on(BLUR, that._blur.bind(that));\n\n                that.wrapper.find(DRAG_HANDLE)\n                    .off(KEY_DOWN, kendo.preventDefault)\n                    .eq(0).on(KEY_DOWN,\n                        (function(e) {\n                            this._keydown(e, \"firstHandle\");\n                        }).bind(that)\n                    )\n                    .end()\n                    .eq(1).on(KEY_DOWN,\n                        (function(e) {\n                            this._keydown(e, \"lastHandle\");\n                        }).bind(that)\n                    );\n\n                that.options.enabled = true;\n            },\n\n            disable: function() {\n                var that = this;\n\n                that.wrapper\n                    .addClass(STATE_DISABLED);\n\n                that.wrapper.find(\"input\").prop(DISABLED, DISABLED);\n\n                that.wrapper\n                    .find(TICK_SELECTOR + \", \" + TRACK_SELECTOR).off(TRACK_MOUSE_DOWN).off(TRACK_MOUSE_UP);\n\n                that.wrapper\n                    .find(DRAG_HANDLE)\n                    .attr(TABINDEX, -1)\n                    .off(MOUSE_UP)\n                    .off(KEY_DOWN)\n                    .off(CLICK)\n                    .off(FOCUS)\n                    .off(BLUR);\n\n                that.options.enabled = false;\n            },\n\n            _keydown: function(e, handle) {\n                var that = this,\n                    selectionStartValue = that.options.selectionStart,\n                    selectionEndValue = that.options.selectionEnd,\n                    dragSelectionStart,\n                    dragSelectionEnd,\n                    activeHandleDrag;\n\n                if (e.keyCode in that._keyMap) {\n\n                    that._clearTooltipTimeout();\n\n                    if (handle == \"firstHandle\") {\n                        activeHandleDrag = that._activeHandleDrag = that._firstHandleDrag;\n                        selectionStartValue = that._keyMap[e.keyCode](selectionStartValue);\n\n                        if (selectionStartValue > selectionEndValue) {\n                            selectionEndValue = selectionStartValue;\n                        }\n                    } else {\n                        activeHandleDrag = that._activeHandleDrag = that._lastHandleDrag;\n                        selectionEndValue = that._keyMap[e.keyCode](selectionEndValue);\n\n                        if (selectionStartValue > selectionEndValue) {\n                            selectionStartValue = selectionEndValue;\n                        }\n                    }\n\n                    that._setValueInRange(round(selectionStartValue), round(selectionEndValue));\n\n                    dragSelectionStart = Math.max(selectionStartValue, that.options.selectionStart);\n                    dragSelectionEnd = Math.min(selectionEndValue, that.options.selectionEnd);\n\n                    activeHandleDrag.selectionEnd = Math.max(dragSelectionEnd, that.options.selectionStart);\n                    activeHandleDrag.selectionStart = Math.min(dragSelectionStart, that.options.selectionEnd);\n\n                    activeHandleDrag._updateTooltip(that.value()[that._activeHandle]);\n\n                    e.preventDefault();\n                }\n            },\n\n            _update: function(selectionStart, selectionEnd) {\n                var that = this,\n                    values = that.value();\n\n                var change = values[0] != selectionStart || values[1] != selectionEnd;\n\n                that.value([selectionStart, selectionEnd]);\n\n                if (change) {\n                    that.trigger(CHANGE, {\n                        values: [selectionStart, selectionEnd],\n                        value: [selectionStart, selectionEnd]\n                    });\n                }\n            },\n\n            value: function(value) {\n                if (value && value.length) {\n                    return this._value(value[0], value[1]);\n                } else {\n                    return this._value();\n                }\n            },\n\n            _value: function(start, end) {\n                var that = this,\n                    options = that.options,\n                    selectionStart = options.selectionStart,\n                    selectionEnd = options.selectionEnd;\n\n                if (isNaN(start) && isNaN(end)) {\n                    return [selectionStart, selectionEnd];\n                } else {\n                    start = round(start);\n                    end = round(end);\n                }\n\n                if (start >= options.min && start <= options.max &&\n                    end >= options.min && end <= options.max && start <= end) {\n                    if (selectionStart != start || selectionEnd != end) {\n                        that.element.find(\"input\")\n                            .eq(0).prop(\"value\", formatValue(start))\n                            .end()\n                            .eq(1).prop(\"value\", formatValue(end));\n\n                        options.selectionStart = start;\n                        options.selectionEnd = end;\n                        that._refresh();\n                        that._refreshAriaAttr(start, end);\n                    }\n                }\n            },\n\n            values: function(start, end) {\n                if (isArray(start)) {\n                    return this._value(start[0], start[1]);\n                } else {\n                    return this._value(start, end);\n                }\n            },\n\n            _refresh: function() {\n                var that = this,\n                    options = that.options;\n\n                that.trigger(MOVE_SELECTION, {\n                    values: [options.selectionStart, options.selectionEnd],\n                    value: [options.selectionStart, options.selectionEnd]\n                });\n\n                if (options.selectionStart == options.max && options.selectionEnd == options.max) {\n                    that._setZIndex(\"firstHandle\");\n                }\n            },\n\n            _refreshAriaAttr: function(start, end) {\n                var that = this,\n                    dragHandles = that.wrapper.find(DRAG_HANDLE),\n                    drag = that._activeHandleDrag,\n                    formattedValue;\n\n                formattedValue = that._getFormattedValue([start, end], drag);\n\n                dragHandles.eq(0).attr(ARIA_VALUENOW, start);\n                dragHandles.eq(1).attr(ARIA_VALUENOW, end);\n                dragHandles.attr(ARIA_VALUETEXT, formattedValue);\n            },\n\n            _setValueInRange: function(selectionStart, selectionEnd) {\n                var options = this.options;\n\n                selectionStart = math.max(math.min(selectionStart, options.max), options.min);\n\n                selectionEnd = math.max(math.min(selectionEnd, options.max), options.min);\n\n                if (selectionStart == options.max && selectionEnd == options.max) {\n                    this._setZIndex(\"firstHandle\");\n                }\n\n                this._update(math.min(selectionStart, selectionEnd), math.max(selectionStart, selectionEnd));\n            },\n\n            _setZIndex: function(type) {\n                this.wrapper.find(DRAG_HANDLE).each(function(index) {\n                    $(this).css(\"z-index\", type == \"firstHandle\" ? 1 - index : index);\n                });\n            },\n\n            _formResetHandler: function() {\n                var that = this,\n                    options = that.options;\n\n                setTimeout(function() {\n                    var inputs = that.element.find(\"input\");\n                    var start = inputs[0].value;\n                    var end = inputs[1].value;\n                    that.values(start === \"\" || isNaN(start) ? options.min : start, end === \"\" || isNaN(end) ? options.max : end);\n                });\n            },\n\n            destroy: function() {\n                var that = this;\n\n                SliderBase.fn.destroy.call(that);\n\n                that.wrapper.off(NS)\n                    .find(TICK_SELECTOR + \", \" + TRACK_SELECTOR).off(NS)\n                    .end()\n                    .find(DRAG_HANDLE).off(NS);\n\n                that._firstHandleDrag.draggable.destroy();\n                that._lastHandleDrag.draggable.destroy();\n            }\n        });\n\n        RangeSlider.Selection = function(dragHandles, that, options) {\n            function moveSelection(value) {\n                value = value || [];\n                var selectionStartValue = value[0] - options.min,\n                    selectionEndValue = value[1] - options.min,\n                    selectionStartIndex = math.ceil(round(selectionStartValue / options.smallStep)),\n                    selectionEndIndex = math.ceil(round(selectionEndValue / options.smallStep)),\n                    selectionStart = that._pixelSteps[selectionStartIndex],\n                    selectionEnd = that._pixelSteps[selectionEndIndex];\n\n                dragHandles.eq(0).css(that._position, selectionStart)\n                           .end()\n                           .eq(1).css(that._position, selectionEnd);\n\n                makeSelection(selectionStart, selectionEnd);\n            }\n\n            function makeSelection(selectionStart, selectionEnd) {\n                var selection,\n                    selectionPosition,\n                    selectionDiv = that._trackDiv.find(\".k-slider-selection\");\n\n                selection = math.abs(selectionStart - selectionEnd);\n\n                selectionDiv[that._sizeFn](selection);\n                selectionPosition = math.min(selectionStart, selectionEnd);\n                selectionDiv.css(that._position, selectionPosition - 1);\n            }\n\n            moveSelection(that.value());\n\n            that.bind([ CHANGE, SLIDE, MOVE_SELECTION ], function(e) {\n                moveSelection(e.values);\n            });\n        };\n\n        kendo.ui.plugin(RangeSlider);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}