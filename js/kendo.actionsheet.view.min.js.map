{"version":3,"sources":["raw-js/kendo.actionsheet.view.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendoactionsheet","view","js","this","$","encode","kendo","htmlEncode","Widget","ui","template","extend","ACTIONSHEET_TITLE_ID","guid","STATEDISABLED","ARIA_DISABLED","hexColor","ACTIONSHEET_VIEW","ACTIONSHEET_CONTENT","HEADER_TEMPLATE","options","startButtonHtml","startButton","html","renderButton","attr","text","icon","fillMode","size","subtitleHtml","closeButton","subtitle","title","ITEM_TEMPLATE","disabled","description","defaultItem","iconClass","iconSize","iconColor","click","noop","group","defaultActionButton","defaultItemsMapper","item","defaultActionButtonsMapper","actionButton","ActionSheetView","init","element","that","fn","call","_hasItems","items","length","_hasActionButtons","actionButtons","index","ref","_mapItems","_mapActionButtons","_createContent","_createHeader","_createFooter","_wrapInView","id","name","headerTemplate","contentTemplate","footerTemplate","actionButtonsAlignment","actionButtonsOrientation","addAnimationClass","_hasOtherView","views","children","last","map","viewTemplate","contentElement","previousView","append","wrapInner","contentContainer","_content","empty","_items","groupedItems","reduce","itemsByGroup","currentItem","push","Map","topItems","bottomItems","_createItems","idx","itemTemplate","itemElement","data","result","inlineStyles","itemsContainer","renderIcon","test","color","addClass","fontSize","Object","keys","css","prop","_header","before","prepend","actionsContainer","_footer","insertAfter","_createActionButtons","actionButtonElement","i","action","enable","toggleClass","removeAttr","wrapper","hasClass","add","wrapAll","parent","destroy","remove","plugin","window","jQuery"],"mappings":"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","file":"kendo.actionsheet.view.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.icons.js'), require('kendo.button.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.icons', 'kendo.button'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendoactionsheet = global.kendoactionsheet || {}, global.kendoactionsheet.view = global.kendoactionsheet.view || {}, global.kendoactionsheet.view.js = factory()));\n})(this, (function () {\n    (function($) {\n        const encode = kendo.htmlEncode;\n        const Widget = kendo.ui.Widget;\n        const template = kendo.template;\n        const extend = $.extend;\n        const ACTIONSHEET_TITLE_ID = kendo.guid();\n        const STATEDISABLED = \"k-disabled\";\n        const ARIA_DISABLED = \"aria-disabled\";\n        const DISABLED = \"disabled\";\n        const hexColor = /^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/;\n        const ACTIONSHEET_VIEW = \"k-actionsheet-view\";\n        const ACTIONSHEET_CONTENT = \"k-actionsheet-content\";\n\n        const HEADER_TEMPLATE = (options) => {\n            const startButtonHtml = options.startButton ?\n                '<div class=\"k-actionsheet-actions\">' +\n                    kendo.html.renderButton(`<button ${kendo.attr(\"ref-actionsheet-start-button\")} aria-label=\"${options.startButton.text || \"Start\"}\"></button>`, { icon: \"chevron-left\", fillMode: \"flat\", size: \"large\", ...options.startButton }) +\n                '</div>' : \"\";\n\n            const closeButtonHtml = options.closeButton ?\n                '<div class=\"k-actionsheet-actions\">' +\n                    kendo.html.renderButton(`<button ${kendo.attr(\"ref-actionsheet-close-button\")}></button>`, { icon: \"x\", fillMode: \"flat\", size: \"large\" }) +\n                '</div>' : \"\";\n\n            const subtitleHtml = options.subtitle || options.subtitle === \"\" ? `<div class=\"k-actionsheet-subtitle k-text-center\">${options.subtitle || \"\"}</div>` : \"\";\n\n            return `<div class=\"k-text-center k-actionsheet-titlebar\" >` +\n                (options.title || options.title === \"\" ?\n                    '<div class=\"k-actionsheet-titlebar-group k-hbox\">' +\n                        startButtonHtml +\n                        `<div id=\"${ACTIONSHEET_TITLE_ID}\" class=\"k-actionsheet-title\">` +\n                            `<div class=\"k-text-center\">${options.title}</div>` +\n                            subtitleHtml +\n                        '</div>' +\n                        (options.closeButton ?\n                        '<div class=\"k-actionsheet-actions\">' +\n                            kendo.html.renderButton(`<button ${kendo.attr(\"ref-actionsheet-close-button\")} aria-label=\"${options.closeButton.text || \"Close\"}\"></button>`, { icon: \"x\", fillMode: \"flat\", size: \"large\", ...options.closeButton }) +\n                        '</div>'\n                        : \"\") +\n                    '</div>'\n                : \"\") +\n            '</div>';\n        };\n        const ITEM_TEMPLATE = ({ disabled, icon, text, description }) =>\n                        `<span role=\"button\" tabindex=\"0\" class=\"k-actionsheet-item ${disabled ? STATEDISABLED : \"\"}\">` +\n                            `<span class=\"k-actionsheet-action\">` +\n                                (icon ? `<span class=\"k-icon-wrap\">${icon}</span>` : \"\") +\n                                `<span class=\"k-actionsheet-item-text\">` +\n                                    `<span class=\"k-actionsheet-item-title\">${encode(text)}</span>` +\n                                    `${description ? '<span class=\"k-actionsheet-item-description\">' + encode(description) + '</span>' : ''}` +\n                                '</span>' +\n                            '</span>' +\n                        '</span>';\n        const SEPARATOR = '<hr class=\"k-hr\" />';\n        const defaultItem = {\n            text: \"\",\n            description: \"\",\n            iconClass: \"\",\n            iconSize: 0,\n            iconColor: \"\",\n            click: $.noop,\n            group: \"top\",\n            disabled: false\n        };\n\n        const defaultActionButton = {\n            text: \"\",\n            icon: \"\",\n            iconClass: \"\",\n            click: $.noop,\n            disabled: false\n        };\n\n        function createIcon(data) {\n            var result;\n            var inlineStyles = {};\n\n            if (!data.iconClass && !data.icon) {\n                return '';\n            }\n\n            result = $(kendo.html.renderIcon({ icon: data.icon, iconClass: data.iconClass + \" k-actionsheet-item-icon\" }));\n\n            if (data.iconColor && hexColor.test(data.iconColor)) {\n                inlineStyles.color = data.iconColor;\n            } else if (data.iconColor) {\n                result.addClass(\"k-text-\" + data.iconColor);\n            }\n\n            if (data.iconSize) {\n                inlineStyles.fontSize = data.iconSize + \"px\";\n            }\n\n            if (Object.keys(inlineStyles).length) {\n                result.css(inlineStyles);\n            }\n\n            return result;\n        }\n\n        function defaultItemsMapper(item) {\n            return extend({}, defaultItem, item);\n        }\n\n        function defaultActionButtonsMapper(actionButton) {\n            return extend({}, defaultActionButton, actionButton);\n        }\n\n        const ActionSheetView = Widget.extend({\n            init: function(element, options) {\n                const that = this;\n                options = options || {};\n                Widget.fn.init.call(that, element, options);\n\n                options = extend(true, {}, that.options, options);\n\n                that._hasItems = options.items && options.items.length;\n                that._hasActionButtons = options.actionButtons && options.actionButtons.length;\n                that.index = options.index || 1;\n                that.ref = that.options.ref;\n                that._mapItems();\n                that._mapActionButtons();\n                that._createContent();\n                that._createHeader();\n                that._createFooter();\n                that._wrapInView();\n            },\n\n            options: {\n                id: \"actionsheet-view\",\n                name: \"ActionSheetView\",\n                headerTemplate: null,\n                contentTemplate: null,\n                footerTemplate: null,\n                actionButtons: [],\n                title: null,\n                items: [],\n                actionButtonsAlignment: \"stretched\",\n                actionButtonsOrientation: \"horizontal\",\n                closeButton: false,\n                startButton: false,\n                ref: \"actionsheet-view\",\n                addAnimationClass: false,\n            },\n\n            _hasOtherView: function() {\n                const that = this;\n                const views = that.element.children(`.${ACTIONSHEET_VIEW}`);\n\n                return views.length && views.last();\n            },\n\n            _mapItems: function() {\n                var that = this;\n\n                if (!that._hasItems) {\n                    return;\n                }\n\n                that.options.items = that.options.items.map(defaultItemsMapper);\n            },\n\n            _mapActionButtons: function() {\n                var that = this;\n\n                if (!that._hasActionButtons) {\n                    return;\n                }\n\n                that.options.actionButtons = that.options.actionButtons.map(defaultActionButtonsMapper);\n            },\n\n            _createContent: function(viewTemplate) {\n                const that = this;\n                const options = that.options;\n                const contentElement = $(`<div class='${ACTIONSHEET_CONTENT}'></div>`);\n                const previousView = that._hasOtherView();\n\n                if (previousView && previousView.length) {\n                    that.element.append(contentElement);\n                } else {\n                    that.element.wrapInner(contentElement);\n                }\n                const contentContainer = that._content = that.element.children(\".\" + ACTIONSHEET_CONTENT);\n\n                if (that._hasItems) {\n                    contentContainer.empty();\n                    that._items();\n                    return;\n                }\n\n                if (options.contentTemplate || viewTemplate) {\n                    contentContainer.html(template(viewTemplate || options.contentTemplate)(options));\n                }\n            },\n\n            _items: function() {\n                var that = this;\n\n                if (!that._hasItems) {\n                    return;\n                }\n\n                var groupedItems = that.options.items.reduce((itemsByGroup, currentItem) => {\n                    const group = currentItem[\"group\"] || \"top\";\n                    itemsByGroup[group] = itemsByGroup[group] || [];\n                    itemsByGroup[group].push(currentItem);\n                    return itemsByGroup;\n                }, new Map());\n\n                var topItems = groupedItems[\"top\"];\n                var bottomItems = groupedItems[\"bottom\"];\n\n                that._createItems(topItems);\n\n                if (topItems && topItems.length && bottomItems && bottomItems.length) {\n                    that._content.append(SEPARATOR);\n                }\n\n                that._createItems(bottomItems);\n            },\n\n            _createItems: function(items) {\n                var that = this;\n                var idx;\n                var item;\n                var itemTemplate;\n                var itemElement;\n                var contentContainer = that._content;\n                var itemsContainer = $(\"<div class='k-list-ul' role='group'></div>\");\n                var icon;\n\n                if (!items || !items.length) {\n                    return;\n                }\n\n                contentContainer.append(itemsContainer);\n                itemTemplate = template(ITEM_TEMPLATE);\n\n                for (idx = 0; idx < items.length; idx++) {\n                    item = items[idx];\n                    icon = createIcon(item);\n                    itemElement = $(itemTemplate(extend({}, item, { icon: icon && icon.prop('outerHTML') })));\n                    itemsContainer.append(itemElement);\n\n                    if (item.click) {\n                        itemElement.data(\"action\", item.click);\n                    }\n                }\n            },\n\n            _createHeader: function() {\n                var that = this;\n                var options = that.options;\n\n                if ((!options.title && options.title !== \"\") && !options.headerTemplate) {\n                    return;\n                }\n\n                const previousView = that._hasOtherView();\n\n                that._header = $(template(options.headerTemplate || HEADER_TEMPLATE)(options));\n\n                if (previousView && previousView.length) {\n                    that._content.before(that._header);\n                } else {\n                    that.element.prepend(that._header);\n                }\n            },\n\n            _createFooter: function(viewTemplate) {\n                const that = this;\n                const options = that.options;\n                let actionsContainer;\n\n                if (!that._hasActionButtons && !options.footerTemplate && !viewTemplate) {\n                    return;\n                }\n\n                actionsContainer = that._footer = $(\"<div class='k-actionsheet-footer'></div>\");\n                actionsContainer.insertAfter(that._content);\n\n                if (that._hasActionButtons) {\n                    actionsContainer.addClass(`k-actions k-actions-${options.actionButtonsAlignment} k-actions-${options.actionButtonsOrientation}`);\n                    that._createActionButtons();\n                    return;\n                }\n\n                if (options.footerTemplate || viewTemplate) {\n                    that._footer.append(template(viewTemplate || options.footerTemplate)(options));\n                }\n            },\n\n            _createActionButtons: function() {\n                var that = this;\n                var options = that.options;\n                var actionButtons = options.actionButtons;\n                var actionsContainer = that._footer;\n                var actionButtonElement;\n\n                for (var i = 0; i < actionButtons.length; i++) {\n                    var action = actionButtons[i];\n                    var enable = action.disabled !== true;\n                    actionButtonElement = $(kendo.html.renderButton(`<button ref-actionsheet-action-button>${action.text || \"\"}</button>`, $.extend({ size: \"large\" }, action)));\n                    actionsContainer.append(actionButtonElement);\n                    actionButtonElement.toggleClass(STATEDISABLED, !enable);\n                    actionButtonElement.attr(DISABLED, !enable);\n\n                    if (enable) {\n                        actionButtonElement.removeAttr(ARIA_DISABLED);\n                    } else {\n                        actionButtonElement.attr(ARIA_DISABLED, !enable);\n                    }\n\n                    if (action.click) {\n                        actionButtonElement.data(\"action\", action.click);\n                    }\n                }\n            },\n\n            _wrapInView: function() {\n                const that = this;\n\n                if (that.wrapper && that.wrapper.hasClass(ACTIONSHEET_VIEW)) {\n                    return;\n                }\n\n                that.wrapper = that._content\n                    .add(that._footer)\n                    .add(that._header)\n                    .wrapAll($(`<div ref-${that.options.ref} class='${ACTIONSHEET_VIEW}${that.options.addAnimationClass ? \" k-actionsheet-view-animated\" : \"\"}'></div>`)).parent();\n            },\n\n            destroy: function() {\n                const that = this;\n                Widget.fn.destroy.call(that);\n\n                if (that._content) {\n                    that._content.remove();\n                    that._content = null;\n                }\n\n                if (that._footer) {\n                    that._footer.remove();\n                    that._footer = null;\n                }\n\n                if (that._header) {\n                    that._header.remove();\n                    that._header = null;\n                }\n\n                if (that.wrapper) {\n                    that.wrapper.remove();\n                    that.wrapper = null;\n                }\n            },\n        });\n        kendo.ui.plugin(ActionSheetView);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}