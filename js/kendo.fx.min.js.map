{"version":3,"sources":["raw-js/kendo.fx.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendofx","js","this","$","undefined$1","kendo","window","fx","effects","each","extend","support","browser","transforms","transitions","scaleProperties","scale","scalex","scaley","scale3d","translateProperties","translate","translatex","translatey","translate3d","hasZoom","document","documentElement","style","zoom","matrix3dRegExp","cssParamsRegExp","translateXRegExp","oldEffectsRegExp","singleEffectRegExp","unitRegExp","transformProps","transform2d","transform2units","rotate","skew","cssPrefix","css","round","Math","PX","AUTO","WIDTH","HEIGHT","HIDDEN","ORIGIN","ABORT_ID","OVERFLOW","TRANSLATE","POSITION","COMPLETE_CALLBACK","TRANSITION","TRANSFORM","BACKFACE","PERSPECTIVE","DEFAULT_PERSPECTIVE","TRANSFORM_PERSPECTIVE","directions","left","reverse","property","transition","vertical","modifier","right","down","up","top","bottom","in","out","horizontal","fn","kendoStop","clearQueue","gotoEnd","stopQueue","stop","idx","value","val","animationProperty","that","transformValue","replace","cssText","indexOf","RegExp","step","elem","now","curProxy","prototype","cur","prop","parseFloat","apply","arguments","parseInteger","parseInt","parseCSS","element","strip3DTransforms","properties","key","normalizeCSS","lowerKey","isTransformed","transformation","cssValues","toLowerCase","hasHW3D","push","length","join","transform","match","computed","test","atan2","toggleClass","classes","options","add","split","exclusive","duration","ease","setTimeout","parseEffects","input","mirror","redirectedEffect","effect","$1","$2","direction","effectBody","timeoutID","delay","oldKeys","data","complete","stopTransitionCalled","stopTransition","clearTimeout","removeData","dequeue","call","speeds","merge","obj","acc","propertyName","keys","hasOwnProperty","uniqueSort","height","unique","event","one","taskKeys","retainPosition","completeCallback","getComputedStyles","EffectSet","Class","init","restore","run","jdx","target","children","childrenLength","deferred","Deferred","start","end","done","bind","setReverse","setOptions","addRestoreProperties","prepare","effectName","is","display","reset","setup","animate","resolve","promise","i","restoreCallback","hide","teardown","effectClass","effectSet","parsedEffects","capitalize","elements","useTransition","queue","show","multiple","params","currentValue","single","position","isFixed","originalPosition","dX","dY","isNaN","marginLeft","marginTop","msie","animatedPromise","Effect","_direction","_additionalEffects","_reverse","play","additional","_duration","compositeRun","concat","_complete","shouldHide","noop","word","charAt","toUpperCase","substring","createEffect","name","definition","Element","opt1","opt2","opt3","theDirection","FOUR_DIRECTIONS","IN_OUT","createToggleEffect","defaultStart","defaultEnd","startValue","_startValue","endValue","_endValue","_shouldHide","startDataValue","divisor","tmp","outerWidth","_outerWidth","outerHeight","_outerHeight","previous","previousDivisor","dir","slideIn","margin","origin","offset","axis","setLength","oldLength","realLength","overflow","TRANSFER_START_STATE","appendTo","body","outerBox","box","innerBox","currentScale","fillScale","transformOrigin","x","y","CLIPS","ROTATIONS","clipInHalf","container","size","_container","rotation","zIndex","_clipInHalf","clip","append","face","_face","temporary","addClass","opacity","back","temp","reverseDirection","faceClone","clone","removeAttr","backClone","staticPage","turningPage","transformStyle","find","remove","RESTORE_OVERFLOW","mobileOS","android","_before","_after","transitionClass","_previous","_transitionClass","Error","beforeTransition","callback","afterTransition","_both","_element","_containerClass","containerClass","e","removeClass","off","completeProxy","isAbsolute","parents","filter","first","both","parent","on","animationFrame","Animation","_tickProxy","_tick","_started","tick","onEnd","onCancel","enabled","cancel","Transition","timePassed","min","Date","startDate","moveTo","movable","initial","delta","location","_easeProxy","moveAxis","easeOutExpo","t","b","c","d","pow","easeOutBack","s","result","width","inner","outer","fitScale","max","jQuery"],"mappings":"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","file":"kendo.fx.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendofx = global.kendofx || {}, global.kendofx.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"fx\",\n        name: \"Effects\",\n        category: \"framework\",\n        description: \"Required for animation effects in all Kendo UI widgets.\",\n        depends: [ \"core\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            fx = kendo.effects,\n            each = $.each,\n            extend = $.extend,\n            support = kendo.support,\n            browser = support.browser,\n            transforms = support.transforms,\n            transitions = support.transitions,\n            scaleProperties = { scale: 0, scalex: 0, scaley: 0, scale3d: 0 },\n            translateProperties = { translate: 0, translatex: 0, translatey: 0, translate3d: 0 },\n            hasZoom = (typeof document.documentElement.style.zoom !== \"undefined\") && !transforms,\n            matrix3dRegExp = /matrix3?d?\\s*\\(.*,\\s*([\\d\\.\\-]+)\\w*?,\\s*([\\d\\.\\-]+)\\w*?,\\s*([\\d\\.\\-]+)\\w*?,\\s*([\\d\\.\\-]+)\\w*?/i,\n            cssParamsRegExp = /^(-?[\\d\\.\\-]+)?[\\w\\s]*,?\\s*(-?[\\d\\.\\-]+)?[\\w\\s]*/i,\n            translateXRegExp = /translatex?$/i,\n            oldEffectsRegExp = /(zoom|fade|expand)(\\w+)/,\n            singleEffectRegExp = /(zoom|fade|expand)/,\n            unitRegExp = /[xy]$/i,\n            transformProps = [\"perspective\", \"rotate\", \"rotatex\", \"rotatey\", \"rotatez\", \"rotate3d\", \"scale\", \"scalex\", \"scaley\", \"scalez\", \"scale3d\", \"skew\", \"skewx\", \"skewy\", \"translate\", \"translatex\", \"translatey\", \"translatez\", \"translate3d\", \"matrix\", \"matrix3d\"],\n            transform2d = [\"rotate\", \"scale\", \"scalex\", \"scaley\", \"skew\", \"skewx\", \"skewy\", \"translate\", \"translatex\", \"translatey\", \"matrix\"],\n            transform2units = { \"rotate\": \"deg\", scale: \"\", skew: \"px\", translate: \"px\" },\n            cssPrefix = transforms.css,\n            round = Math.round,\n            BLANK = \"\",\n            PX = \"px\",\n            NONE = \"none\",\n            AUTO = \"auto\",\n            WIDTH = \"width\",\n            HEIGHT = \"height\",\n            HIDDEN = \"hidden\",\n            ORIGIN = \"origin\",\n            ABORT_ID = \"abortId\",\n            OVERFLOW = \"overflow\",\n            TRANSLATE = \"translate\",\n            POSITION = \"position\",\n            COMPLETE_CALLBACK = \"completeCallback\",\n            TRANSITION = cssPrefix + \"transition\",\n            TRANSFORM = cssPrefix + \"transform\",\n            BACKFACE = cssPrefix + \"backface-visibility\",\n            PERSPECTIVE = cssPrefix + \"perspective\",\n            DEFAULT_PERSPECTIVE = \"1500px\",\n            TRANSFORM_PERSPECTIVE = \"perspective(\" + DEFAULT_PERSPECTIVE + \")\",\n            directions = {\n                left: {\n                    reverse: \"right\",\n                    property: \"left\",\n                    transition: \"translatex\",\n                    vertical: false,\n                    modifier: -1\n                },\n                right: {\n                    reverse: \"left\",\n                    property: \"left\",\n                    transition: \"translatex\",\n                    vertical: false,\n                    modifier: 1\n                },\n                down: {\n                    reverse: \"up\",\n                    property: \"top\",\n                    transition: \"translatey\",\n                    vertical: true,\n                    modifier: 1\n                },\n                up: {\n                    reverse: \"down\",\n                    property: \"top\",\n                    transition: \"translatey\",\n                    vertical: true,\n                    modifier: -1\n                },\n                top: {\n                    reverse: \"bottom\"\n                },\n                bottom: {\n                    reverse: \"top\"\n                },\n                \"in\": {\n                    reverse: \"out\",\n                    modifier: -1\n                },\n                out: {\n                    reverse: \"in\",\n                    modifier: 1\n                },\n\n                vertical: {\n                    reverse: \"vertical\"\n                },\n\n                horizontal: {\n                    reverse: \"horizontal\"\n                }\n            };\n\n        kendo.directions = directions;\n\n        extend($.fn, {\n            kendoStop: function(clearQueue, gotoEnd) {\n                if (transitions) {\n                    return fx.stopQueue(this, clearQueue || false, gotoEnd || false);\n                } else {\n                    return this.stop(clearQueue, gotoEnd);\n                }\n            }\n        });\n\n        /* jQuery support for all transform animations (FF 3.5/3.6, Opera 10.x, IE9 */\n\n        if (transforms && !transitions) {\n            each(transform2d, function(idx, value) {\n                $.fn[value] = function(val) {\n                    if (typeof val == \"undefined\") {\n                        return animationProperty(this, value);\n                    } else {\n                        var that = $(this)[0],\n                            transformValue = value + \"(\" + val + transform2units[value.replace(unitRegExp, \"\")] + \")\";\n\n                        if (that.style.cssText.indexOf(TRANSFORM) == -1) {\n                            $(this).css(TRANSFORM, transformValue);\n                        } else {\n                            that.style.cssText = that.style.cssText.replace(new RegExp(value + \"\\\\(.*?\\\\)\", \"i\"), transformValue);\n                        }\n                    }\n                    return this;\n                };\n\n                $.fx.step[value] = function(fx) {\n                    $(fx.elem)[value](fx.now);\n                };\n            });\n\n            var curProxy = $.fx.prototype.cur;\n            $.fx.prototype.cur = function() {\n                if (transform2d.indexOf(this.prop) != -1) {\n                    return parseFloat($(this.elem)[this.prop]());\n                }\n\n                return curProxy.apply(this, arguments);\n            };\n        }\n\n        kendo.toggleClass = function(element, classes, options, add) {\n            if (classes) {\n                classes = classes.split(\" \");\n\n                if (transitions) {\n                    options = extend({\n                        exclusive: \"all\",\n                        duration: 400,\n                        ease: \"ease-out\"\n                    }, options);\n\n                    element.css(TRANSITION, options.exclusive + \" \" + options.duration + \"ms \" + options.ease);\n                    setTimeout(function() {\n                        element.css(TRANSITION, \"\").css(HEIGHT);\n                    }, options.duration); // TODO: this should fire a kendoAnimate session instead.\n                }\n\n                each(classes, function(idx, value) {\n                    element.toggleClass(value, add);\n                });\n            }\n\n            return element;\n        };\n\n        kendo.parseEffects = function(input, mirror) {\n            var effects = {};\n\n            if (typeof input === \"string\") {\n                each(input.split(\" \"), function(idx, value) {\n                    var redirectedEffect = !singleEffectRegExp.test(value),\n                        resolved = value.replace(oldEffectsRegExp, function(match, $1, $2) {\n                            return $1 + \":\" + $2.toLowerCase();\n                        }), // Support for old zoomIn/fadeOut style, now deprecated.\n                        effect = resolved.split(\":\"),\n                        direction = effect[1],\n                        effectBody = {};\n\n                    if (effect.length > 1) {\n                        effectBody.direction = (mirror && redirectedEffect ? directions[direction].reverse : direction);\n                    }\n\n                    effects[effect[0]] = effectBody;\n                });\n            } else {\n                each(input, function(idx) {\n                    var direction = this.direction;\n\n                    if (direction && mirror && !singleEffectRegExp.test(idx)) {\n                        this.direction = directions[direction].reverse;\n                    }\n\n                    effects[idx] = this;\n                });\n            }\n\n            return effects;\n        };\n\n        function parseInteger(value) {\n            return parseInt(value, 10);\n        }\n\n        function parseCSS(element, property) {\n            return parseInteger(element.css(property));\n        }\n\n        function keys(obj) {\n            var acc = [];\n            for (var propertyName in obj) {\n                acc.push(propertyName);\n            }\n            return acc;\n        }\n\n        function strip3DTransforms(properties) {\n            for (var key in properties) {\n                if (transformProps.indexOf(key) != -1 && transform2d.indexOf(key) == -1) {\n                    delete properties[key];\n                }\n            }\n\n            return properties;\n        }\n\n        function normalizeCSS(element, properties) {\n            var transformation = [], cssValues = {}, lowerKey, key, value, isTransformed;\n\n            for (key in properties) {\n                lowerKey = key.toLowerCase();\n                isTransformed = transforms && transformProps.indexOf(lowerKey) != -1;\n\n                if (!support.hasHW3D && isTransformed && transform2d.indexOf(lowerKey) == -1) {\n                    delete properties[key];\n                } else {\n                    value = properties[key];\n\n                    if (isTransformed) {\n                        transformation.push(key + \"(\" + value + \")\");\n                    } else {\n                        cssValues[key] = value;\n                    }\n                }\n            }\n\n            if (transformation.length) {\n                cssValues[TRANSFORM] = transformation.join(\" \");\n            }\n\n            return cssValues;\n        }\n\n        if (transitions) {\n            extend(fx, {\n                transition: function(element, properties, options) {\n                    var css,\n                        delay = 0,\n                        oldKeys = element.data(\"keys\") || [],\n                        timeoutID;\n\n                    options = extend({\n                            duration: 200,\n                            ease: \"ease-out\",\n                            complete: null,\n                            exclusive: \"all\"\n                        },\n                        options\n                    );\n\n                    var stopTransitionCalled = false;\n\n                    var stopTransition = function() {\n                        if (!stopTransitionCalled) {\n                            stopTransitionCalled = true;\n\n                            if (timeoutID) {\n                                clearTimeout(timeoutID);\n                                timeoutID = null;\n                            }\n\n                            element\n                            .removeData(ABORT_ID)\n                            .dequeue()\n                            .css(TRANSITION, \"\")\n                            .css(TRANSITION);\n\n                            options.complete.call(element);\n                        }\n                    };\n\n                    options.duration = $.fx ? $.fx.speeds[options.duration] || options.duration : options.duration;\n\n                    css = normalizeCSS(element, properties);\n\n                    $.merge(oldKeys, keys(css));\n\n                    if ($.hasOwnProperty(\"uniqueSort\")) {\n                        element\n                            .data(\"keys\", $.uniqueSort(oldKeys))\n                            .height();\n                    } else {\n                        element\n                            .data(\"keys\", $.unique(oldKeys))\n                            .height();\n                    }\n\n                    element.css(TRANSITION, options.exclusive + \" \" + options.duration + \"ms \" + options.ease).css(TRANSITION);\n                    element.css(css).css(TRANSFORM);\n\n                    /**\n                     * Use transitionEnd event for browsers who support it - but duplicate it with setTimeout, as the transitionEnd event will not be triggered if no CSS properties change.\n                     * This should be cleaned up at some point (widget by widget), and refactored to widgets not relying on the complete callback if no transition occurs.\n                     *\n                     * For IE9 and below, resort to setTimeout.\n                     */\n                    if (transitions.event) {\n                        element.one(transitions.event, stopTransition);\n                        if (options.duration !== 0) {\n                            delay = 500;\n                        }\n                    }\n\n                    timeoutID = setTimeout(stopTransition, options.duration + delay);\n                    element.data(ABORT_ID, timeoutID);\n                    element.data(COMPLETE_CALLBACK, stopTransition);\n                },\n\n                stopQueue: function(element, clearQueue, gotoEnd) {\n                    var cssValues,\n                        taskKeys = element.data(\"keys\"),\n                        retainPosition = (!gotoEnd && taskKeys),\n                        completeCallback = element.data(COMPLETE_CALLBACK);\n\n                    if (retainPosition) {\n                        cssValues = kendo.getComputedStyles(element[0], taskKeys);\n                    }\n\n                    if (completeCallback) {\n                        completeCallback();\n                    }\n\n                    if (retainPosition) {\n                        element.css(cssValues);\n                    }\n\n                    return element\n                            .removeData(\"keys\")\n                            .stop(clearQueue);\n                }\n            });\n        }\n\n        function animationProperty(element, property) {\n            if (transforms) {\n                var transform = element.css(TRANSFORM);\n                if (transform == NONE) {\n                    return property == \"scale\" ? 1 : 0;\n                }\n\n                var match = transform.match(new RegExp(property + \"\\\\s*\\\\(([\\\\d\\\\w\\\\.]+)\")),\n                    computed = 0;\n\n                if (match) {\n                    computed = parseInteger(match[1]);\n                } else {\n                    match = transform.match(matrix3dRegExp) || [0, 0, 0, 0, 0];\n                    property = property.toLowerCase();\n\n                    if (translateXRegExp.test(property)) {\n                        computed = parseFloat(match[3] / match[2]);\n                    } else if (property == \"translatey\") {\n                        computed = parseFloat(match[4] / match[2]);\n                    } else if (property == \"scale\") {\n                        computed = parseFloat(match[2]);\n                    } else if (property == \"rotate\") {\n                        computed = parseFloat(Math.atan2(match[2], match[1]));\n                    }\n                }\n\n                return computed;\n            } else {\n                return parseFloat(element.css(property));\n            }\n        }\n\n        var EffectSet = kendo.Class.extend({\n            init: function(element, options) {\n                var that = this;\n\n                that.element = element;\n                that.effects = [];\n                that.options = options;\n                that.restore = [];\n            },\n\n            run: function(effects) {\n                var that = this,\n                    effect,\n                    idx, jdx,\n                    length = effects.length,\n                    element = that.element,\n                    options = that.options,\n                    deferred = $.Deferred(),\n                    start = {},\n                    end = {},\n                    target,\n                    children,\n                    childrenLength;\n\n                that.effects = effects;\n\n                deferred.done(that.complete.bind(that));\n\n                element.data(\"animating\", true);\n\n                for (idx = 0; idx < length; idx ++) {\n                    effect = effects[idx];\n\n                    effect.setReverse(options.reverse);\n                    effect.setOptions(options);\n\n                    that.addRestoreProperties(effect.restore);\n\n                    effect.prepare(start, end);\n\n                    children = effect.children();\n\n                    for (jdx = 0, childrenLength = children.length; jdx < childrenLength; jdx ++) {\n                        children[jdx].duration(options.duration).run();\n                    }\n                }\n\n                // legacy support for options.properties\n                for (var effectName in options.effects) {\n                    extend(end, options.effects[effectName].properties);\n                }\n\n                // Show the element initially\n                if (!element.is(\":visible\")) {\n                    extend(start, { display: element.data(\"olddisplay\") || \"block\" });\n                }\n\n                if (transforms && !options.reset) {\n                    target = element.data(\"targetTransform\");\n\n                    if (target) {\n                        start = extend(target, start);\n                    }\n                }\n\n                start = normalizeCSS(element, start);\n\n                if (transforms && !transitions) {\n                    start = strip3DTransforms(start);\n                }\n\n                element.css(start)\n                       .css(TRANSFORM); // Nudge\n\n                for (idx = 0; idx < length; idx ++) {\n                    effects[idx].setup();\n                }\n\n                if (options.init) {\n                    options.init();\n                }\n\n                element.data(\"targetTransform\", end);\n                fx.animate(element, end, extend({}, options, { complete: deferred.resolve }));\n\n                return deferred.promise();\n            },\n\n            stop: function() {\n                $(this.element).kendoStop(true, true);\n            },\n\n            addRestoreProperties: function(restore) {\n                var element = this.element,\n                    value,\n                    i = 0,\n                    length = restore.length;\n\n                for (; i < length; i ++) {\n                    value = restore[i];\n\n                    this.restore.push(value);\n\n                    if (!element.data(value)) {\n                        element.data(value, element.css(value));\n                    }\n                }\n            },\n\n            restoreCallback: function() {\n                var element = this.element;\n\n                for (var i = 0, length = this.restore.length; i < length; i ++) {\n                    var value = this.restore[i];\n                    element.css(value, element.data(value));\n                }\n            },\n\n            complete: function() {\n                var that = this,\n                    idx = 0,\n                    element = that.element,\n                    options = that.options,\n                    effects = that.effects,\n                    length = effects.length;\n\n                element\n                    .removeData(\"animating\")\n                    .dequeue(); // call next animation from the queue\n\n                if (options.hide) {\n                    element.data(\"olddisplay\", element.css(\"display\")).hide();\n                }\n\n                this.restoreCallback();\n\n                if (hasZoom && !transforms) {\n                    setTimeout(this.restoreCallback.bind(this), 0); // Again jQuery callback in IE8-\n                }\n\n                for (; idx < length; idx ++) {\n                    effects[idx].teardown();\n                }\n\n                if (options.completeCallback) {\n                    options.completeCallback(element);\n                }\n            }\n        });\n\n        fx.promise = function(element, options) {\n            var effects = [],\n                effectClass,\n                effectSet = new EffectSet(element, options),\n                parsedEffects = kendo.parseEffects(options.effects),\n                effect;\n\n            options.effects = parsedEffects;\n\n            for (var effectName in parsedEffects) {\n                effectClass = fx[capitalize(effectName)];\n\n                if (effectClass) {\n                    effect = new effectClass(element, parsedEffects[effectName].direction);\n                    effects.push(effect);\n               }\n            }\n\n            if (effects[0]) {\n                effectSet.run(effects);\n            } else { // Not sure how would an fx promise reach this state - means that you call kendoAnimate with no valid effects? Why?\n                if (!element.is(\":visible\")) {\n                    element.css({ display: element.data(\"olddisplay\") || \"block\" }).css(\"display\");\n                }\n\n                if (options.init) {\n                    options.init();\n                }\n\n                element.dequeue();\n                effectSet.complete();\n            }\n        };\n\n        extend(fx, {\n            animate: function(elements, properties, options) {\n                var useTransition = options.transition !== false;\n                delete options.transition;\n\n                if (transitions && \"transition\" in fx && useTransition) {\n                    fx.transition(elements, properties, options);\n                } else {\n                    if (transforms) {\n                        elements.animate(strip3DTransforms(properties), { queue: false, show: false, hide: false, duration: options.duration, complete: options.complete }); // Stop animate from showing/hiding the element to be able to hide it later on.\n                    } else {\n                        elements.each(function() {\n                            var element = $(this),\n                                multiple = {};\n\n                            each(transformProps, function(idx, value) { // remove transforms to avoid IE and older browsers confusion\n                                var params,\n                                    currentValue = properties ? properties[value] + \" \" : null; // We need to match\n\n                                if (currentValue) {\n                                    var single = properties;\n\n                                    if (value in scaleProperties && properties[value] !== undefined$1) {\n                                        params = currentValue.match(cssParamsRegExp);\n                                        if (transforms) {\n                                            extend(single, { scale: +params[0] });\n                                        }\n                                    } else {\n                                        if (value in translateProperties && properties[value] !== undefined$1) {\n                                            var position = element.css(POSITION),\n                                                isFixed = (position == \"absolute\" || position == \"fixed\");\n\n                                            if (!element.data(TRANSLATE)) {\n                                                if (isFixed) {\n                                                    element.data(TRANSLATE, {\n                                                        top: parseCSS(element, \"top\") || 0,\n                                                        left: parseCSS(element, \"left\") || 0,\n                                                        bottom: parseCSS(element, \"bottom\"),\n                                                        right: parseCSS(element, \"right\")\n                                                    });\n                                                } else {\n                                                    element.data(TRANSLATE, {\n                                                        top: parseCSS(element, \"marginTop\") || 0,\n                                                        left: parseCSS(element, \"marginLeft\") || 0\n                                                    });\n                                                }\n                                            }\n\n                                            var originalPosition = element.data(TRANSLATE);\n\n                                            params = currentValue.match(cssParamsRegExp);\n                                            if (params) {\n\n                                                var dX = value == TRANSLATE + \"y\" ? +null : +params[1],\n                                                    dY = value == TRANSLATE + \"y\" ? +params[1] : +params[2];\n\n                                                if (isFixed) {\n                                                    if (!isNaN(originalPosition.right)) {\n                                                        if (!isNaN(dX)) { extend(single, { right: originalPosition.right - dX }); }\n                                                    } else {\n                                                        if (!isNaN(dX)) { extend(single, { left: originalPosition.left + dX }); }\n                                                    }\n\n                                                    if (!isNaN(originalPosition.bottom)) {\n                                                        if (!isNaN(dY)) { extend(single, { bottom: originalPosition.bottom - dY }); }\n                                                    } else {\n                                                        if (!isNaN(dY)) { extend(single, { top: originalPosition.top + dY }); }\n                                                    }\n                                                } else {\n                                                    if (!isNaN(dX)) { extend(single, { marginLeft: originalPosition.left + dX }); }\n                                                    if (!isNaN(dY)) { extend(single, { marginTop: originalPosition.top + dY }); }\n                                                }\n                                            }\n                                        }\n                                    }\n\n                                    if (!transforms && value != \"scale\" && value in single) {\n                                        delete single[value];\n                                    }\n\n                                    if (single) {\n                                        extend(multiple, single);\n                                    }\n                                }\n                            });\n\n                            if (browser.msie) {\n                                delete multiple.scale;\n                            }\n\n                            element.animate(multiple, { queue: false, show: false, hide: false, duration: options.duration, complete: options.complete }); // Stop animate from showing/hiding the element to be able to hide it later on.\n                        });\n                    }\n                }\n            }\n        });\n\n        fx.animatedPromise = fx.promise;\n\n        var Effect = kendo.Class.extend({\n            init: function(element, direction) {\n                var that = this;\n                that.element = element;\n                that._direction = direction;\n                that.options = {};\n                that._additionalEffects = [];\n\n                if (!that.restore) {\n                    that.restore = [];\n                }\n            },\n\n    // Public API\n            reverse: function() {\n                this._reverse = true;\n                return this.run();\n            },\n\n            play: function() {\n                this._reverse = false;\n                return this.run();\n            },\n\n            add: function(additional) {\n                this._additionalEffects.push(additional);\n                return this;\n            },\n\n            direction: function(value) {\n                this._direction = value;\n                return this;\n            },\n\n            duration: function(duration) {\n                this._duration = duration;\n                return this;\n            },\n\n            compositeRun: function() {\n                var that = this,\n                    effectSet = new EffectSet(that.element, { reverse: that._reverse, duration: that._duration }),\n                    effects = that._additionalEffects.concat([ that ]);\n\n                return effectSet.run(effects);\n            },\n\n            run: function() {\n                if (this._additionalEffects && this._additionalEffects[0]) {\n                    return this.compositeRun();\n                }\n\n                var that = this,\n                    element = that.element,\n                    idx = 0,\n                    restore = that.restore,\n                    length = restore.length,\n                    value,\n                    deferred = $.Deferred(),\n                    start = {},\n                    end = {},\n                    target,\n                    children = that.children(),\n                    childrenLength = children.length;\n\n                deferred.done(that._complete.bind(that));\n\n                element.data(\"animating\", true);\n\n                for (idx = 0; idx < length; idx ++) {\n                    value = restore[idx];\n\n                    if (!element.data(value)) {\n                        element.data(value, element.css(value));\n                    }\n                }\n\n                for (idx = 0; idx < childrenLength; idx ++) {\n                    children[idx].duration(that._duration).run();\n                }\n\n                that.prepare(start, end);\n\n                if (!element.is(\":visible\")) {\n                    extend(start, { display: element.data(\"olddisplay\") || \"block\" });\n                }\n\n                if (transforms) {\n                    target = element.data(\"targetTransform\");\n\n                    if (target) {\n                        start = extend(target, start);\n                    }\n                }\n\n                start = normalizeCSS(element, start);\n\n                if (transforms && !transitions) {\n                    start = strip3DTransforms(start);\n                }\n\n                element.css(start).css(TRANSFORM); // Trick webkit into re-rendering\n\n                that.setup();\n\n                element.data(\"targetTransform\", end);\n                fx.animate(element, end, { duration: that._duration, complete: deferred.resolve });\n\n                return deferred.promise();\n            },\n\n            stop: function() {\n                var idx = 0,\n                    children = this.children(),\n                    childrenLength = children.length;\n\n                for (idx = 0; idx < childrenLength; idx ++) {\n                    children[idx].stop();\n                }\n\n                $(this.element).kendoStop(true, true);\n                return this;\n            },\n\n            restoreCallback: function() {\n                var element = this.element;\n\n                for (var i = 0, length = this.restore.length; i < length; i ++) {\n                    var value = this.restore[i];\n                    element.css(value, element.data(value));\n                }\n            },\n\n            _complete: function() {\n                var that = this,\n                    element = that.element;\n\n                element\n                    .removeData(\"animating\")\n                    .dequeue(); // call next animation from the queue\n\n                that.restoreCallback();\n\n                if (that.shouldHide()) {\n                    element.data(\"olddisplay\", element.css(\"display\")).hide();\n                }\n\n                if (hasZoom && !transforms) {\n                    setTimeout(that.restoreCallback.bind(that), 0); // Again jQuery callback in IE8-\n                }\n\n                that.teardown();\n            },\n\n            /////////////////////////// Support for kendo.animate;\n            setOptions: function(options) {\n                extend(true, this.options, options);\n            },\n\n            children: function() {\n                return [];\n            },\n\n            shouldHide: $.noop,\n\n            setup: $.noop,\n            prepare: $.noop,\n            teardown: $.noop,\n            directions: [],\n\n            setReverse: function(reverse) {\n                this._reverse = reverse;\n                return this;\n            }\n        });\n\n        function capitalize(word) {\n            return word.charAt(0).toUpperCase() + word.substring(1);\n        }\n\n        function createEffect(name, definition) {\n            var effectClass = Effect.extend(definition),\n                directions = effectClass.prototype.directions;\n\n            fx[capitalize(name)] = effectClass;\n\n            fx.Element.prototype[name] = function(direction, opt1, opt2, opt3) {\n                return new effectClass(this.element, direction, opt1, opt2, opt3);\n            };\n\n            each(directions, function(idx, theDirection) {\n                fx.Element.prototype[name + capitalize(theDirection)] = function(opt1, opt2, opt3) {\n                    return new effectClass(this.element, theDirection, opt1, opt2, opt3);\n                };\n            });\n        }\n\n        var FOUR_DIRECTIONS = [\"left\", \"right\", \"up\", \"down\"],\n            IN_OUT = [\"in\", \"out\"];\n\n        createEffect(\"slideIn\", {\n            directions: FOUR_DIRECTIONS,\n\n            divisor: function(value) {\n                this.options.divisor = value;\n                return this;\n            },\n\n            prepare: function(start, end) {\n                var that = this,\n                    tmp,\n                    element = that.element,\n                    outerWidth = kendo._outerWidth,\n                    outerHeight = kendo._outerHeight,\n                    direction = directions[that._direction],\n                    offset = -direction.modifier * (direction.vertical ? outerHeight(element) : outerWidth(element)),\n                    startValue = offset / (that.options && that.options.divisor || 1) + PX,\n                    endValue = \"0px\";\n\n                if (that._reverse) {\n                    tmp = start;\n                    start = end;\n                    end = tmp;\n                }\n\n                if (transforms) {\n                    start[direction.transition] = startValue;\n                    end[direction.transition] = endValue;\n                } else {\n                    start[direction.property] = startValue;\n                    end[direction.property] = endValue;\n                }\n            }\n        });\n\n        createEffect(\"tile\", {\n            directions: FOUR_DIRECTIONS,\n\n            init: function(element, direction, previous) {\n                Effect.prototype.init.call(this, element, direction);\n                this.options = { previous: previous };\n            },\n\n            previousDivisor: function(value) {\n                this.options.previousDivisor = value;\n                return this;\n            },\n\n            children: function() {\n                var that = this,\n                    reverse = that._reverse,\n                    previous = that.options.previous,\n                    divisor = that.options.previousDivisor || 1,\n                    dir = that._direction;\n\n                var children = [ kendo.fx(that.element).slideIn(dir).setReverse(reverse) ];\n\n                if (previous) {\n                    children.push( kendo.fx(previous).slideIn(directions[dir].reverse).divisor(divisor).setReverse(!reverse) );\n                }\n\n                return children;\n            }\n        });\n\n        function createToggleEffect(name, property, defaultStart, defaultEnd) {\n            createEffect(name, {\n                directions: IN_OUT,\n\n                startValue: function(value) {\n                    this._startValue = value;\n                    return this;\n                },\n\n                endValue: function(value) {\n                    this._endValue = value;\n                    return this;\n                },\n\n                shouldHide: function() {\n                   return this._shouldHide;\n                },\n\n                prepare: function(start, end) {\n                    var that = this,\n                        startValue,\n                        endValue,\n                        out = this._direction === \"out\",\n                        startDataValue = that.element.data(property),\n                        startDataValueIsSet = !(isNaN(startDataValue) || startDataValue == defaultStart);\n\n                    if (startDataValueIsSet) {\n                        startValue = startDataValue;\n                    } else if (typeof this._startValue !== \"undefined\") {\n                        startValue = this._startValue;\n                    } else {\n                        startValue = out ? defaultStart : defaultEnd;\n                    }\n\n                    if (typeof this._endValue !== \"undefined\") {\n                        endValue = this._endValue;\n                    } else {\n                        endValue = out ? defaultEnd : defaultStart;\n                    }\n\n                    if (this._reverse) {\n                        start[property] = endValue;\n                        end[property] = startValue;\n                    } else {\n                        start[property] = startValue;\n                        end[property] = endValue;\n                    }\n\n                    that._shouldHide = end[property] === defaultEnd;\n                }\n            });\n        }\n\n        createToggleEffect(\"fade\", \"opacity\", 1, 0);\n        createToggleEffect(\"zoom\", \"scale\", 1, 0.01);\n\n        createEffect(\"slideMargin\", {\n            prepare: function(start, end) {\n                var that = this,\n                    element = that.element,\n                    options = that.options,\n                    origin = element.data(ORIGIN),\n                    offset = options.offset,\n                    margin,\n                    reverse = that._reverse;\n\n                if (!reverse && origin === null) {\n                    element.data(ORIGIN, parseFloat(element.css(\"margin-\" + options.axis)));\n                }\n\n                margin = (element.data(ORIGIN) || 0);\n                end[\"margin-\" + options.axis] = !reverse ? margin + offset : margin;\n            }\n        });\n\n        createEffect(\"slideTo\", {\n            prepare: function(start, end) {\n                var that = this,\n                    element = that.element,\n                    options = that.options,\n                    offset = options.offset.split(\",\"),\n                    reverse = that._reverse;\n\n                if (transforms) {\n                    end.translatex = !reverse ? offset[0] : 0;\n                    end.translatey = !reverse ? offset[1] : 0;\n                } else {\n                    end.left = !reverse ? offset[0] : 0;\n                    end.top = !reverse ? offset[1] : 0;\n                }\n                element.css(\"left\");\n            }\n        });\n\n        createEffect(\"expand\", {\n            directions: [\"horizontal\", \"vertical\"],\n\n            restore: [ OVERFLOW ],\n\n            prepare: function(start, end) {\n                var that = this,\n                    element = that.element,\n                    options = that.options,\n                    reverse = that._reverse,\n                    property = that._direction === \"vertical\" ? HEIGHT : WIDTH,\n                    setLength = element[0].style[property],\n                    oldLength = element.data(property),\n                    length = parseFloat(oldLength || setLength),\n                    realLength = round(element.css(property, AUTO)[property]());\n\n                start.overflow = HIDDEN;\n\n                length = (options && options.reset) ? realLength || length : length || realLength;\n\n                end[property] = (reverse ? 0 : length) + PX;\n                start[property] = (reverse ? length : 0) + PX;\n\n                if (oldLength === undefined$1) {\n                    element.data(property, setLength);\n                }\n            },\n\n            shouldHide: function() {\n               return this._reverse;\n            },\n\n            teardown: function() {\n                var that = this,\n                    element = that.element,\n                    property = that._direction === \"vertical\" ? HEIGHT : WIDTH,\n                    length = element.data(property);\n\n                if (length == AUTO || length === BLANK) {\n                    setTimeout(function() { element.css(property, AUTO).css(property); }, 0); // jQuery animate complete callback in IE is called before the last animation step!\n                }\n            }\n        });\n\n        var TRANSFER_START_STATE = { position: \"absolute\", marginLeft: 0, marginTop: 0, scale: 1 };\n        /**\n         * Intersection point formulas are taken from here - http://zonalandeducation.com/mmts/intersections/intersectionOfTwoLines1/intersectionOfTwoLines1.html\n         * Formula for a linear function from two points from here - http://demo.activemath.org/ActiveMath2/search/show.cmd?id=mbase://AC_UK_calculus/functions/ex_linear_equation_two_points\n         * The transform origin point is the intersection point of the two lines from the top left corners/top right corners of the element and target.\n         * The math and variables below MAY BE SIMPLIFIED (zeroes removed), but this would make the formula too cryptic.\n         */\n        createEffect(\"transfer\", {\n            init: function(element, target) {\n                this.element = element;\n                this.options = { target: target };\n                this.restore = [];\n            },\n\n            setup: function() {\n                this.element.appendTo(document.body);\n            },\n\n            prepare: function(start, end) {\n                var that = this,\n                    element = that.element,\n                    outerBox = fx.box(element),\n                    innerBox = fx.box(that.options.target),\n                    currentScale = animationProperty(element, \"scale\"),\n                    scale = fx.fillScale(innerBox, outerBox),\n                    transformOrigin = fx.transformOrigin(innerBox, outerBox);\n\n                extend(start, TRANSFER_START_STATE);\n                end.scale = 1;\n\n                element.css(TRANSFORM, \"scale(1)\").css(TRANSFORM);\n                element.css(TRANSFORM, \"scale(\" + currentScale + \")\");\n\n                start.top = outerBox.top;\n                start.left = outerBox.left;\n                start.transformOrigin = transformOrigin.x + PX + \" \" + transformOrigin.y + PX;\n\n                if (that._reverse) {\n                    start.scale = scale;\n                } else {\n                    end.scale = scale;\n                }\n            }\n        });\n\n\n        var CLIPS = {\n            top: \"rect(auto auto $size auto)\",\n            bottom: \"rect($size auto auto auto)\",\n            left: \"rect(auto $size auto auto)\",\n            right: \"rect(auto auto auto $size)\"\n        };\n\n        var ROTATIONS = {\n            top: { start: \"rotatex(0deg)\", end: \"rotatex(180deg)\" },\n            bottom: { start: \"rotatex(-180deg)\", end: \"rotatex(0deg)\" },\n            left: { start: \"rotatey(0deg)\", end: \"rotatey(-180deg)\" },\n            right: { start: \"rotatey(180deg)\", end: \"rotatey(0deg)\" }\n        };\n\n        function clipInHalf(container, direction) {\n            var vertical = kendo.directions[direction].vertical,\n                size = (container[vertical ? HEIGHT : WIDTH]() / 2) + \"px\";\n\n            return CLIPS[direction].replace(\"$size\", size);\n        }\n\n        createEffect(\"turningPage\", {\n            directions: FOUR_DIRECTIONS,\n\n            init: function(element, direction, container) {\n                Effect.prototype.init.call(this, element, direction);\n                this._container = container;\n            },\n\n            prepare: function(start, end) {\n                var that = this,\n                    reverse = that._reverse,\n                    direction = reverse ? directions[that._direction].reverse : that._direction,\n                    rotation = ROTATIONS[direction];\n\n                start.zIndex = 1;\n\n                if (that._clipInHalf) {\n                   start.clip = clipInHalf(that._container, kendo.directions[direction].reverse);\n                }\n\n                start[BACKFACE] = HIDDEN;\n\n                end[TRANSFORM] = TRANSFORM_PERSPECTIVE + (reverse ? rotation.start : rotation.end);\n                start[TRANSFORM] = TRANSFORM_PERSPECTIVE + (reverse ? rotation.end : rotation.start);\n            },\n\n            setup: function() {\n                this._container.append(this.element);\n            },\n\n            face: function(value) {\n                this._face = value;\n                return this;\n            },\n\n            shouldHide: function() {\n                var that = this,\n                    reverse = that._reverse,\n                    face = that._face;\n\n                return (reverse && !face) || (!reverse && face);\n            },\n\n            clipInHalf: function(value) {\n                this._clipInHalf = value;\n                return this;\n            },\n\n            temporary: function() {\n                this.element.addClass('temp-page');\n                return this;\n            }\n        });\n\n        createEffect(\"staticPage\", {\n            directions: FOUR_DIRECTIONS,\n\n            init: function(element, direction, container) {\n                Effect.prototype.init.call(this, element, direction);\n                this._container = container;\n            },\n\n            restore: [\"clip\"],\n\n            prepare: function(start, end) {\n                var that = this,\n                    direction = that._reverse ? directions[that._direction].reverse : that._direction;\n\n                start.clip = clipInHalf(that._container, direction);\n                start.opacity = 0.999;\n                end.opacity = 1;\n            },\n\n            shouldHide: function() {\n                var that = this,\n                    reverse = that._reverse,\n                    face = that._face;\n\n                return (reverse && !face) || (!reverse && face);\n            },\n\n            face: function(value) {\n                this._face = value;\n                return this;\n            }\n        });\n\n        createEffect(\"pageturn\", {\n            directions: [\"horizontal\", \"vertical\"],\n\n            init: function(element, direction, face, back) {\n                Effect.prototype.init.call(this, element, direction);\n                this.options = {};\n                this.options.face = face;\n                this.options.back = back;\n            },\n\n            children: function() {\n                var that = this,\n                    options = that.options,\n                    direction = that._direction === \"horizontal\" ? \"left\" : \"top\",\n                    reverseDirection = kendo.directions[direction].reverse,\n                    reverse = that._reverse,\n                    temp,\n                    faceClone = options.face.clone(true).removeAttr(\"id\"),\n                    backClone = options.back.clone(true).removeAttr(\"id\"),\n                    element = that.element;\n\n                if (reverse) {\n                    temp = direction;\n                    direction = reverseDirection;\n                    reverseDirection = temp;\n                }\n\n                return [\n                    kendo.fx(options.face).staticPage(direction, element).face(true).setReverse(reverse),\n                    kendo.fx(options.back).staticPage(reverseDirection, element).setReverse(reverse),\n                    kendo.fx(faceClone).turningPage(direction, element).face(true).clipInHalf(true).temporary().setReverse(reverse),\n                    kendo.fx(backClone).turningPage(reverseDirection, element).clipInHalf(true).temporary().setReverse(reverse)\n                ];\n            },\n\n            prepare: function(start, end) {\n                start[PERSPECTIVE] = DEFAULT_PERSPECTIVE;\n                start.transformStyle = \"preserve-3d\";\n                // hack to trigger transition end.\n                start.opacity = 0.999;\n                end.opacity = 1;\n            },\n\n            teardown: function() {\n                this.element.find(\".temp-page\").remove();\n            }\n        });\n\n        createEffect(\"flip\", {\n            directions: [\"horizontal\", \"vertical\"],\n\n            init: function(element, direction, face, back) {\n                Effect.prototype.init.call(this, element, direction);\n                this.options = {};\n                this.options.face = face;\n                this.options.back = back;\n            },\n\n            children: function() {\n                var that = this,\n                    options = that.options,\n                    direction = that._direction === \"horizontal\" ? \"left\" : \"top\",\n                    reverseDirection = kendo.directions[direction].reverse,\n                    reverse = that._reverse,\n                    temp,\n                    element = that.element;\n\n                if (reverse) {\n                    temp = direction;\n                    direction = reverseDirection;\n                    reverseDirection = temp;\n                }\n\n                return [\n                    kendo.fx(options.face).turningPage(direction, element).face(true).setReverse(reverse),\n                    kendo.fx(options.back).turningPage(reverseDirection, element).setReverse(reverse)\n                ];\n            },\n\n            prepare: function(start) {\n                start[PERSPECTIVE] = DEFAULT_PERSPECTIVE;\n                start.transformStyle = \"preserve-3d\";\n            }\n        });\n\n        var RESTORE_OVERFLOW = !support.mobileOS.android;\n        var IGNORE_TRANSITION_EVENT_SELECTOR = \".km-touch-scrollbar, .km-actionsheet-wrapper\";\n\n        createEffect(\"replace\", {\n            _before: $.noop,\n            _after: $.noop,\n            init: function(element, previous, transitionClass) {\n                Effect.prototype.init.call(this, element);\n                this._previous = $(previous);\n                this._transitionClass = transitionClass;\n            },\n\n            duration: function() {\n                throw new Error(\"The replace effect does not support duration setting; the effect duration may be customized through the transition class rule\");\n            },\n\n            beforeTransition: function(callback) {\n                this._before = callback;\n                return this;\n            },\n\n            afterTransition: function(callback) {\n                this._after = callback;\n                return this;\n            },\n\n            _both: function() {\n                return $().add(this._element).add(this._previous);\n            },\n\n            _containerClass: function() {\n                var direction = this._direction,\n                    containerClass = \"k-fx k-fx-start k-fx-\" + this._transitionClass;\n\n                if (direction) {\n                    containerClass += \" k-fx-\" + direction;\n                }\n\n                if (this._reverse) {\n                    containerClass += \" k-fx-reverse\";\n                }\n\n                return containerClass;\n            },\n\n            complete: function(e) {\n                if (!this.deferred || (e && $(e.target).is(IGNORE_TRANSITION_EVENT_SELECTOR))) {\n                    return;\n                }\n\n                var container = this.container;\n\n                container\n                    .removeClass(\"k-fx-end\")\n                    .removeClass(this._containerClass())\n                    .off(transitions.event, this.completeProxy);\n\n                this._previous.hide().removeClass(\"k-fx-current\");\n                this.element.removeClass(\"k-fx-next\");\n\n                if (RESTORE_OVERFLOW) {\n                    container.css(OVERFLOW, \"\");\n                }\n\n                if (!this.isAbsolute) {\n                    this._both().css(POSITION, \"\");\n                }\n\n                this.deferred.resolve();\n                delete this.deferred;\n            },\n\n            run: function() {\n                if (this._additionalEffects && this._additionalEffects[0]) {\n                    return this.compositeRun();\n                }\n\n                var that = this,\n                    element = that.element,\n                    previous = that._previous,\n                    container = element.parents().filter(previous.parents()).first(),\n                    both = that._both(),\n                    deferred = $.Deferred(),\n                    originalPosition = element.css(POSITION),\n                    originalOverflow;\n\n                // edge case for grid/scheduler, where the previous is already destroyed.\n                if (!container.length) {\n                    container = element.parent();\n                }\n\n                this.container = container;\n                this.deferred = deferred;\n                this.isAbsolute = originalPosition == \"absolute\";\n\n                if (!this.isAbsolute) {\n                    both.css(POSITION, \"absolute\");\n                }\n\n                if (RESTORE_OVERFLOW) {\n                    originalOverflow = container.css(OVERFLOW);\n                    container.css(OVERFLOW, \"hidden\");\n                }\n\n                if (!transitions) {\n                    this.complete();\n                } else {\n                    element.addClass(\"k-fx-hidden\");\n\n                    container.addClass(this._containerClass());\n\n                    this.completeProxy = this.complete.bind(this);\n                    container.on(transitions.event, this.completeProxy);\n\n                    kendo.animationFrame(function() {\n                        element.removeClass(\"k-fx-hidden\").addClass(\"k-fx-next\");\n                        previous.css(\"display\", \"\").addClass(\"k-fx-current\");\n                        that._before(previous, element);\n                        kendo.animationFrame(function() {\n                            container.removeClass(\"k-fx-start\").addClass(\"k-fx-end\");\n                            that._after(previous, element);\n                        });\n                    });\n                }\n\n                return deferred.promise();\n            },\n\n            stop: function() {\n                this.complete();\n            }\n        });\n\n        var Animation = kendo.Class.extend({\n            init: function() {\n                var that = this;\n                that._tickProxy = that._tick.bind(that);\n                that._started = false;\n            },\n\n            tick: $.noop,\n            done: $.noop,\n            onEnd: $.noop,\n            onCancel: $.noop,\n\n            start: function() {\n                if (!this.enabled()) {\n                    return;\n                }\n\n                if (!this.done()) {\n                    this._started = true;\n                    kendo.animationFrame(this._tickProxy);\n                } else {\n                    this.onEnd();\n                }\n            },\n\n            enabled: function() {\n                return true;\n            },\n\n            cancel: function() {\n                this._started = false;\n                this.onCancel();\n            },\n\n            _tick: function() {\n                var that = this;\n                if (!that._started) { return; }\n\n                that.tick();\n\n                if (!that.done()) {\n                    kendo.animationFrame(that._tickProxy);\n                } else {\n                    that._started = false;\n                    that.onEnd();\n                }\n            }\n        });\n\n        var Transition = Animation.extend({\n            init: function(options) {\n                var that = this;\n                extend(that, options);\n                Animation.fn.init.call(that);\n            },\n\n            done: function() {\n                return this.timePassed() >= this.duration;\n            },\n\n            timePassed: function() {\n                return Math.min(this.duration, (new Date()) - this.startDate);\n            },\n\n            moveTo: function(options) {\n                var that = this,\n                    movable = that.movable;\n\n                that.initial = movable[that.axis];\n                that.delta = options.location - that.initial;\n\n                that.duration = typeof options.duration == \"number\" ? options.duration : 300;\n\n                that.tick = that._easeProxy(options.ease);\n\n                that.startDate = new Date();\n                that.start();\n            },\n\n            _easeProxy: function(ease) {\n                var that = this;\n\n                return function() {\n                    that.movable.moveAxis(that.axis, ease(that.timePassed(), that.initial, that.delta, that.duration));\n                };\n            }\n        });\n\n        extend(Transition, {\n            easeOutExpo: function(t, b, c, d) {\n                return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n            },\n\n            easeOutBack: function(t, b, c, d, s) {\n                s = 1.70158;\n                return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n            }\n        });\n\n        fx.Animation = Animation;\n        fx.Transition = Transition;\n        fx.createEffect = createEffect;\n\n        fx.box = function(element) {\n            element = $(element);\n            var result = element.offset();\n            result.width = kendo._outerWidth(element);\n            result.height = kendo._outerHeight(element);\n            return result;\n        };\n\n        fx.transformOrigin = function(inner, outer) {\n            var x = (inner.left - outer.left) * outer.width / (outer.width - inner.width),\n                y = (inner.top - outer.top) * outer.height / (outer.height - inner.height);\n\n            return {\n                x: isNaN(x) ? 0 : x,\n                y: isNaN(y) ? 0 : y\n            };\n        };\n\n        fx.fillScale = function(inner, outer) {\n            return Math.min(inner.width / outer.width, inner.height / outer.height);\n        };\n\n        fx.fitScale = function(inner, outer) {\n            return Math.max(inner.width / outer.width, inner.height / outer.height);\n        };\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}