{"version":3,"sources":["raw-js/kendo.virtuallist.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendovirtuallist","js","this","$","undefined$1","kendo","window","ui","encode","htmlEncode","Widget","DataBoundWidget","percentageUnitsRegex","LIST_ITEM","TABLE_ITEM","GROUPITEM","SELECTED","FOCUSED","HOVER","CHANGE","CLICK","LISTBOUND","ITEMCHANGE","ACTIVATE","DEACTIVATE","GROUP_ROW_SEL","VIRTUAL_LIST_NS","lastFrom","array","length","toArray","value","Array","isPrimitive","dataItem","appendChild","parent","className","tagName","element","document","createElement","render","data","templates","itemTemplate","template","hasColumns","options","columns","altRow","index","item","placeholderTemplate","header","group","html","fixedGroupTemplate","attr","uid","addClass","removeClass","renderedColumns","i","currentWidth","width","currentWidthInt","parseInt","widthStyle","widthValue","test","renderColumns","applyStylesFromKendoAttributes","empty","append","find","remove","toggleClass","current","selected","newGroup","isLastGroupedItem","groupTemplate","appendTo","top","y","style","webkitTransform","transform","position","isActivePromise","promise","state","VirtualList","extend","init","listSize","lineHeight","mockList","that","contentClasses","bound","_fetching","fn","call","itemHeight","css","left","visibility","body","parseFloat","getComputedStyles","height","contentSelector","split","join","wrapper","closest","content","wrap","thead","row","TABLE_LIST","before","prev","ariaLabel","ariaLabelledBy","on","_values","_selectedDataItems","_selectedIndexes","_rangesList","_promisesList","_optionID","guid","_templates","setDataSource","dataSource","throttle","_renderItems","_triggerListBound","delay","_selectable","name","autoBind","listScreens","threshold","oppositeBuffer","type","selectable","dataValueField","mapValueTo","valueMapper","events","setOptions","itemClass","_selectProxy","off","refresh","items","_items","destroy","unbind","_refreshHandler","source","isArray","DataSource","create","_clean","_deferValueSet","mute","bind","setDSFilter","filter","view","fetch","skip","currentRangeStart","_selectingValue","_skip","trigger","_getValues","dataItems","getter","_valueGetter","map","_highlightSelectedItems","_getElementByDataItem","e","result","action","isItemChange","filtered","isFiltered","_mute","focus","_createList","skipUpdateOnBind","_emptySearch","done","itemsToMatch","found","j","itemsLength","selectedLength","changed","unchanged","push","mapChangedItems","removeAt","splice","_removeSelectedDataItem","valueGetter","idx","setValue","_forcePrefetch","slice","_valueDeferred","Deferred","select","_prefetchByValue","_checkValuesOrder","_removedAddedIndexes","newValue","dataView","_dataView","forSelection","success","response","mapValueToIndex","mapValueToDataItem","indexes","removed","_deselect","_triggerChange","added","_getIndecies","resolve","deferredRange","take","itemCount","ranges","defs","low","Math","floor","high","ceil","pages","each","_","deferred","end","existingRange","_multiplePrefetch","when","apply","prefetch","isEmptyList","_activeDeferred","_getSkip","_findDataItem","_getRange","_findRange","min","total","dataItemByIndex","progress","range","selectedDataItems","scrollWith","scrollTop","scrollTo","scrollToIndex","candidate","id","triggerEvent","flatView","isNaN","_getElementByIndex","_focusedIndex","hasClass","removeAttr","_getElementLocation","_screenHeight","focusIndex","focusFirst","focusLast","lastIndex","heightContainer","offsetHeight","focusPrev","focusNext","indices","initialIndices","isAlreadySelected","singleSelection","prefetchStarted","_selectDeferred","_deselectCurrentValues","_select","_listCreated","callback","_lastDSFilter","Query","compareFilters","skipUpdate","noop","_lastScrollTop","_height","hasData","setScreenHeight","screenHeight","yPosition","yDownPostion","screenEnd","key","forEach","column","templateText","field","toString","_generateItems","count","text","tabIndex","setAttribute","minHeight","_saveInitialRanges","_ranges","start","reorder","get","_buildValueGetter","_setHeight","hide","show","_getter","_onScroll","force","getList","_listItems","_fixedHeader","_whenChanged","_reorderList","list","_calculateGroupPadding","_calculateColumnsHeaderPadding","currentHeight","innerHTML","padHeight","lastRequestedRange","lastRangeStart","pageSize","flatGroups","rangeStart","inRange","flatGroup","groups","len","groupLength","_getterDeferred","reject","then","firstItemIndex","_indexConstraint","currentVisibleGroup","firstVisibleDataItemIndex","firstVisibleDataItem","firstVisibleGroup","fixedGroupText","_itemMapper","listType","currentIndex","_currentGroup","_range","_view","_getDataItemsCollection","lastScrollTop","_listIndex","theValidator","downThreshold","upThreshold","listValidator","theNew","currentOffset","Infinity","arr1","arr2","ns","list2","offset","range2","diff","abs","unshift","reshift","_bufferSizes","opposite","down","up","max","buffers","_clickHandler","getElementIndex","jQuery","elementIndex","selectedIndex","selectedIndexes","removedindexesCounter","inArray","_deselectSingleItem","children","values","oldSkip","currentTarget","isDefaultPrevented","firstItem","first","groupHeader","padding","display","support","scrollbar","isRtl","columnsHeader","plugin"],"mappings":"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","file":"kendo.virtuallist.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.data.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.data'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendovirtuallist = global.kendovirtuallist || {}, global.kendovirtuallist.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"virtuallist\",\n        name: \"VirtualList\",\n        category: \"framework\",\n        depends: [ \"data\" ],\n        hidden: true\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            encode = kendo.htmlEncode,\n            Widget = ui.Widget,\n            DataBoundWidget = ui.DataBoundWidget,\n            percentageUnitsRegex = /^\\d+(\\.\\d+)?%$/i,\n            LIST_CONTENT = \"k-list-content k-virtual-content\",\n            TABLE_CONTENT = \"k-table-body k-table-scroller\",\n            HEADER = \"k-list-group-sticky-header\",\n            LIST_ITEM = \"k-list-item\",\n            TABLE_ITEM = \"k-table-row\",\n            HEIGHTCONTAINER = \"k-height-container\",\n            GROUPITEM = \"k-list-item-group-label\",\n            LIST_UL = \"k-list-ul\",\n            TABLE_LIST = \"k-table-list\",\n\n            SELECTED = \"k-selected\",\n            FOCUSED = \"k-focus\",\n            HOVER = \"k-hover\",\n            CHANGE = \"change\",\n            CLICK = \"click\",\n            LISTBOUND = \"listBound\",\n            ITEMCHANGE = \"itemChange\",\n\n            ACTIVATE = \"activate\",\n            DEACTIVATE = \"deactivate\",\n\n            GROUP_ROW_SEL = \".k-table-group-row\",\n\n            VIRTUAL_LIST_NS = \".VirtualList\";\n\n        function lastFrom(array) {\n            return array[array.length - 1];\n        }\n\n        function toArray(value) {\n            return value instanceof Array ? value : [value];\n        }\n\n        function isPrimitive(dataItem) {\n            return typeof dataItem === \"string\" || typeof dataItem === \"number\" || typeof dataItem === \"boolean\";\n        }\n\n        function getItemCount(screenHeight, listScreens, itemHeight) {\n            return Math.ceil(screenHeight * listScreens / itemHeight);\n        }\n\n        function appendChild(parent, className, tagName) {\n            var element = document.createElement(tagName || \"div\");\n            if (className) {\n                element.className = className;\n            }\n            parent.appendChild(element);\n\n            return element;\n        }\n\n        function getDefaultItemHeight(listSize) {\n            var mockList = $('<div class=\"k-list ' + listSize + ' k-virtual-list\">' +\n                    '<div class=\"k-list-content k-virtual-content\">' +\n                        '<ul class=\"k-list-ul\">' +\n                            '<li class=\"k-list-item\">' +\n                                '<span class=\"k-list-item-text\">test</span>' +\n                            '</li>' +\n                        '</ul>' +\n                    '</div>' +\n                '</div>');\n            var lineHeight;\n\n            mockList.css({\n                position: \"absolute\",\n                left: \"-200000px\",\n                visibility: \"hidden\"\n            });\n            mockList.appendTo(document.body);\n            lineHeight = parseFloat(kendo.getComputedStyles(mockList.find(\".k-list-item\")[0], [\"height\"]).height);\n            mockList.remove();\n\n            return lineHeight;\n        }\n\n        function bufferSizes(screenHeight, listScreens, opposite) { //in pixels\n            return {\n                down: screenHeight * opposite,\n                up: screenHeight * (listScreens - 1 - opposite)\n            };\n        }\n\n        function listValidator(options, screenHeight) {\n            var downThreshold = (options.listScreens - 1 - options.threshold) * screenHeight;\n            var upThreshold = options.threshold * screenHeight;\n\n            return function(list, scrollTop, lastScrollTop) {\n                if (scrollTop > lastScrollTop) {\n                    return scrollTop - list.top < downThreshold;\n                } else {\n                    return list.top === 0 || scrollTop - list.top > upThreshold;\n                }\n            };\n        }\n\n        function scrollCallback(element, callback) {\n            return function(force) {\n                return callback(element.scrollTop, force);\n            };\n        }\n\n        function syncList(reorder) {\n            return function(list, force) {\n                reorder(list.items, list.index, force);\n                return list;\n            };\n        }\n\n        function position(element, y) {\n            element.style.webkitTransform = 'translateY(' + y + \"px)\";\n            element.style.transform = 'translateY(' + y + \"px)\";\n        }\n\n        function map2(callback, templates) {\n            return function(arr1, arr2) {\n                for (var i = 0, len = arr1.length; i < len; i++) {\n                    callback(arr1[i], arr2[i], templates);\n                    if (arr2[i].item) {\n                        this.trigger(ITEMCHANGE, { item: $(arr1[i]), data: arr2[i].item, ns: kendo.ui });\n                    }\n                }\n            };\n        }\n\n        function reshift(items, diff) {\n            var range;\n\n            if (diff > 0) { // down\n                range = items.splice(0, diff);\n                items.push.apply(items, range);\n            } else { // up\n                range = items.splice(diff, -diff);\n                items.unshift.apply(items, range);\n            }\n\n            return range;\n        }\n\n        function render(element, data, templates) {\n            var itemTemplate = templates.template,\n                hasColumns = this.options.columns && this.options.columns.length,\n                altRow = data.index % 2 === 1 ? \"k-table-alt-row\" : \"\";\n\n            element = $(element);\n\n            if (!data.item) {\n                itemTemplate = templates.placeholderTemplate;\n            }\n\n            if (data.index === 0 && this.header && data.group) {\n                this.header.html(templates.fixedGroupTemplate(data.group));\n            }\n\n            element\n                .attr(\"data-uid\", data.item ? data.item.uid : \"\")\n                .attr(\"data-offset-index\", data.index);\n\n            if (hasColumns && data.item) {\n                if (altRow.length > 0) {\n                    element.addClass(altRow);\n                } else {\n                    element.removeClass(\"k-table-alt-row\");\n                }\n\n                let renderedColumns = $(renderColumns(this.options, data.item, templates));\n                kendo.applyStylesFromKendoAttributes(renderedColumns, [\"width\", \"max-width\"]);\n                element.empty().append(renderedColumns);\n            } else {\n                element.find(\".\" + GROUPITEM).remove();\n                element.find(\".k-list-item-text\").html(itemTemplate(data.item || {}));\n            }\n\n            element.toggleClass(FOCUSED, data.current);\n            element.toggleClass(SELECTED, data.selected);\n            element.toggleClass(\"k-first\", data.newGroup);\n            element.toggleClass(\"k-last\", data.isLastGroupedItem);\n            element.toggleClass(\"k-loading-item\", !data.item);\n\n            if (data.index !== 0 && data.newGroup) {\n                if (hasColumns) {\n                    $('<span class=\"k-table-td k-table-group-td\"><span>' + templates.groupTemplate(data.group) + '</span></span>')\n                        .appendTo(element);\n                } else {\n                    $(\"<div class=\" + GROUPITEM + \"></div>\")\n                        .appendTo(element)\n                        .html(templates.groupTemplate(data.group));\n                }\n            } else if (data.group && hasColumns) {\n                element.append($('<span class=\"k-table-td k-table-spacer-td\"></span>'));\n            }\n\n            if (data.top !== undefined$1) {\n                position(element[0], data.top);\n            }\n        }\n\n        function renderColumns(options, dataItem, templates) {\n            var item = \"\";\n\n            for (var i = 0; i < options.columns.length; i++) {\n                var currentWidth = options.columns[i].width;\n                var currentWidthInt = parseInt(currentWidth, 10);\n                var widthStyle = '';\n\n                if (currentWidth) {\n                    let widthValue = `${currentWidthInt}${percentageUnitsRegex.test(currentWidth) ? \"%\" : \"px\"}`;\n                    widthStyle = `${kendo.attr(\"style-width\")}=\"${widthValue}\" ${kendo.attr(\"style-max-width\")}=\"${widthValue}\"`;\n                }\n\n                item += \"<span class='k-table-td' \" + widthStyle + \">\";\n                item += templates[\"column\" + i](dataItem);\n                item += \"</span>\";\n            }\n\n            return item;\n        }\n\n        function mapChangedItems(selected, itemsToMatch) {\n            var itemsLength = itemsToMatch.length;\n            var selectedLength = selected.length;\n            var dataItem;\n            var found;\n            var i, j;\n\n            var changed = [];\n            var unchanged = [];\n\n            if (selectedLength) {\n                for (i = 0; i < selectedLength; i++) {\n                    dataItem = selected[i];\n                    found = false;\n\n                    for (j = 0; j < itemsLength; j++) {\n                        if (dataItem === itemsToMatch[j]) {\n                            found = true;\n                            changed.push({ index: i, item: dataItem });\n                            break;\n                        }\n                    }\n\n                    if (!found) {\n                        unchanged.push(dataItem);\n                    }\n                }\n            }\n\n            return {\n                changed: changed,\n                unchanged: unchanged\n            };\n        }\n\n        function isActivePromise(promise) {\n            return promise && promise.state() !== \"resolved\";\n        }\n\n        var VirtualList = DataBoundWidget.extend({\n            init: function(element, options) {\n                var that = this,\n                    contentClasses = options.columns && options.columns.length ? TABLE_CONTENT : LIST_CONTENT;\n\n                that.bound(false);\n                that._fetching = false;\n\n                Widget.fn.init.call(that, element, options);\n\n                if (!that.options.itemHeight) {\n                    that.options.itemHeight = getDefaultItemHeight(options.listSize);\n                }\n\n                options = that.options;\n\n                that.element.attr(\"role\", \"listbox\");\n\n                var contentSelector = \".\" + contentClasses.split(' ').join('.');\n                var wrapper = that.element.closest(contentSelector);\n\n                that.content = that.wrapper = wrapper.length ? wrapper : that.element.wrap(\"<div unselectable='on' class='\" + contentClasses + \"'></div>\").parent();\n\n                if (that.options.columns && that.options.columns.length) {\n                    var thead = that.element.closest(\".k-data-table\").find('.k-table-thead');\n                    var row = $('<tr class=\"k-table-group-row\">' +\n                        '<th class=\"k-table-th\" colspan=\"' + that.options.columns.length + '\"></th>' +\n                    '</tr>');\n\n                    thead.append(row);\n\n                    that.header = row.find(\".k-table-th\");\n                    that.element.addClass(TABLE_LIST + \" k-virtual-table\");\n                } else {\n                    that.header = that.content.before(\"<div class='\" + HEADER + \"'></div>\").prev();\n                    that.element.addClass(LIST_UL);\n                }\n\n                if (options.ariaLabel) {\n                    this.element.attr(\"aria-label\", options.ariaLabel);\n                } else if (options.ariaLabelledBy) {\n                    this.element.attr(\"aria-labelledby\", options.ariaLabelledBy);\n                }\n\n                that.element.on(\"mouseenter\" + VIRTUAL_LIST_NS, \"li:not(.k-loading-item)\", function() { $(this).addClass(HOVER); })\n                            .on(\"mouseleave\" + VIRTUAL_LIST_NS, \"li\", function() { $(this).removeClass(HOVER); });\n\n                that._values = toArray(that.options.value);\n                that._selectedDataItems = [];\n                that._selectedIndexes = [];\n                that._rangesList = {};\n                that._promisesList = [];\n                that._optionID = kendo.guid();\n\n                that._templates();\n\n                that.setDataSource(options.dataSource);\n\n                that.content.on(\"scroll\" + VIRTUAL_LIST_NS, kendo.throttle(function() {\n                    that._renderItems();\n                    that._triggerListBound();\n                }, options.delay));\n\n                that._selectable();\n            },\n\n            options: {\n                name: \"VirtualList\",\n                autoBind: true,\n                delay: 100,\n                height: null,\n                listScreens: 4,\n                threshold: 0.5,\n                itemHeight: null,\n                oppositeBuffer: 1,\n                type: \"flat\",\n                selectable: false,\n                value: [],\n                dataValueField: null,\n                template: (data) => encode(data),\n                placeholderTemplate: () => \"loading...\",\n                groupTemplate: (data) => encode(data),\n                fixedGroupTemplate: (data) => encode(data),\n                mapValueTo: \"index\",\n                valueMapper: null,\n                ariaLabel: null,\n                ariaLabelledBy: null\n            },\n\n            events: [\n                CHANGE,\n                CLICK,\n                LISTBOUND,\n                ITEMCHANGE,\n                ACTIVATE,\n                DEACTIVATE\n            ],\n\n            setOptions: function(options) {\n                var itemClass = this.options.columns && this.options.columns.length ? TABLE_ITEM : LIST_ITEM;\n\n                Widget.fn.setOptions.call(this, options);\n\n                if (this._selectProxy && this.options.selectable === false) {\n                    this.element.off(CLICK, \".\" + itemClass, this._selectProxy);\n                } else if (!this._selectProxy && this.options.selectable) {\n                    this._selectable();\n                }\n\n                this._templates();\n                this.refresh();\n            },\n\n            items: function() {\n                return $(this._items);\n            },\n\n            destroy: function() {\n                this.wrapper.off(VIRTUAL_LIST_NS);\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n                Widget.fn.destroy.call(this);\n            },\n\n            setDataSource: function(source) {\n                var that = this;\n                var dataSource = source || {};\n                var value;\n\n                dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n                dataSource = kendo.data.DataSource.create(dataSource);\n\n                if (that.dataSource) {\n                    that.dataSource.unbind(CHANGE, that._refreshHandler);\n\n                    that._clean();\n                    that.bound(false);\n\n                    that._deferValueSet = true;\n                    value = that.value();\n\n                    that.value([]);\n                    that.mute(function() {\n                        that.value(value);\n                    });\n                } else {\n                    that._refreshHandler = that.refresh.bind(that);\n                }\n\n                that.dataSource = dataSource.bind(CHANGE, that._refreshHandler);\n\n                that.setDSFilter(dataSource.filter());\n\n                if (dataSource.view().length !== 0) {\n                    that.refresh();\n                } else if (that.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n\n            skip: function() {\n                return this.dataSource.currentRangeStart();\n            },\n\n            _triggerListBound: function() {\n                var that = this;\n                var skip = that.skip();\n\n                if (that.bound() && !that._selectingValue && that._skip !== skip) {\n                    that._skip = skip;\n                    that.trigger(LISTBOUND);\n                }\n            },\n\n            _getValues: function(dataItems) {\n                var getter = this._valueGetter;\n\n                return $.map(dataItems, function(dataItem) {\n                    return getter(dataItem);\n                });\n            },\n\n            _highlightSelectedItems: function() {\n                for (var i = 0; i < this._selectedDataItems.length; i++) {\n                    var item = this._getElementByDataItem(this._selectedDataItems[i]);\n                    if (item.length) {\n                        item.addClass(SELECTED);\n                    }\n                }\n            },\n\n            refresh: function(e) {\n                var that = this;\n                var action = e && e.action;\n                var isItemChange = action === \"itemchange\";\n                var filtered = this.isFiltered();\n                var result;\n\n                if (that._mute) { return; }\n\n                that._deferValueSet = false;\n\n                if (!that._fetching) {\n                    if (filtered) {\n                        that.focus(0);\n                    }\n\n                    that._createList();\n                    if (!action && that._values.length && !filtered &&\n                         !that.options.skipUpdateOnBind && !that._emptySearch) {\n                        that._selectingValue = true;\n\n                        that.bound(true);\n                        that.value(that._values, true).done(function() {\n                            that._selectingValue = false;\n                            that._triggerListBound();\n                        });\n                    } else {\n                        that.bound(true);\n                        that._highlightSelectedItems();\n                        that._triggerListBound();\n                    }\n                } else {\n                    if (that._renderItems) {\n                        that._renderItems(true);\n                    }\n\n                    that._triggerListBound();\n                }\n\n                if (isItemChange || action === \"remove\") {\n                    result = mapChangedItems(that._selectedDataItems, e.items);\n                    if (result.changed.length) {\n                        if (isItemChange) {\n                            that.trigger(\"selectedItemChange\", {\n                                items: result.changed\n                            });\n                        } else {\n                            that.value(that._getValues(result.unchanged));\n                        }\n                    }\n                }\n\n                that._fetching = false;\n            },\n\n            removeAt: function(position) {\n                var value = this._values.splice(position, 1)[0];\n\n                return {\n                    position: position,\n                    dataItem: this._removeSelectedDataItem(value)\n                };\n            },\n\n            _removeSelectedDataItem: function(value) {\n                var that = this,\n                    valueGetter = that._valueGetter;\n\n                for (var idx in that._selectedDataItems) {\n                    if (valueGetter(that._selectedDataItems[idx]) === value) {\n                        that._selectedIndexes.splice(idx, 1);\n                        return that._selectedDataItems.splice(idx, 1)[0];\n                    }\n                }\n            },\n\n            setValue: function(value) {\n                this._values = toArray(value);\n            },\n\n            value: function(value, _forcePrefetch) {\n                var that = this;\n\n                if (value === undefined$1) {\n                    return that._values.slice();\n                }\n\n                if (value === null) {\n                    value = [];\n                }\n\n                value = toArray(value);\n\n                if (!that._valueDeferred || that._valueDeferred.state() === \"resolved\") {\n                    that._valueDeferred = $.Deferred();\n                }\n\n                var shouldClear = that.options.selectable === \"multiple\" && that.select().length && value.length;\n\n                if (shouldClear || !value.length) {\n                    that.select(-1);\n                }\n\n                that._values = value;\n\n                if ((that.bound() && !that._mute && !that._deferValueSet) || _forcePrefetch) {\n                    that._prefetchByValue(value);\n                }\n\n                return that._valueDeferred;\n            },\n\n            _checkValuesOrder: function(value) {\n                if (this._removedAddedIndexes &&\n                    this._removedAddedIndexes.length === value.length) {\n                        var newValue = this._removedAddedIndexes.slice();\n                        this._removedAddedIndexes = null;\n                    return newValue;\n                }\n\n                return value;\n            },\n\n            _prefetchByValue: function(value) {\n                var that = this,\n                    dataView = that._dataView,\n                    valueGetter = that._valueGetter,\n                    mapValueTo = that.options.mapValueTo,\n                    item, match = false,\n                    forSelection = [];\n\n                //try to find the items in the loaded data\n                for (var i = 0; i < value.length; i++) {\n                    for (var idx = 0; idx < dataView.length; idx++) {\n                        item = dataView[idx].item;\n                        if (item) {\n                            match = isPrimitive(item) ? value[i] === item : value[i] === valueGetter(item);\n\n                            if (match) {\n                                forSelection.push(dataView[idx].index);\n                            }\n                        }\n                    }\n                }\n\n                if (forSelection.length === value.length) {\n                    that._values = [];\n                    that.select(forSelection);\n                    return;\n                }\n\n                //prefetch the items\n                if (typeof that.options.valueMapper === \"function\") {\n                    that.options.valueMapper({\n                        value: (this.options.selectable === \"multiple\") ? value : value[0],\n                        success: function(response) {\n                            if (mapValueTo === \"index\") {\n                                that.mapValueToIndex(response);\n                            } else if (mapValueTo === \"dataItem\") {\n                                that.mapValueToDataItem(response);\n                            }\n                        }\n                    });\n                } else {\n                     if (!that.value()[0]) {\n                         that.select([-1]);\n                     } else {\n                        that._selectingValue = false;\n                        that._triggerListBound();\n                     }\n                }\n            },\n\n            mapValueToIndex: function(indexes) {\n                if (indexes === undefined$1 || indexes === -1 || indexes === null) {\n                    indexes = [];\n                } else {\n                    indexes = toArray(indexes);\n                }\n\n                if (!indexes.length) {\n                    indexes = [-1];\n                } else {\n                    var removed = this._deselect([]).removed;\n                    if (removed.length) {\n                        this._triggerChange(removed, []);\n                    }\n                }\n\n                this.select(indexes);\n            },\n\n            mapValueToDataItem: function(dataItems) {\n                var removed, added;\n\n                if (dataItems === undefined$1 || dataItems === null) {\n                    dataItems = [];\n                } else {\n                    dataItems = toArray(dataItems);\n                }\n\n                if (!dataItems.length) {\n                    this.select([-1]);\n                } else {\n                    removed = $.map(this._selectedDataItems, function(item, index) {\n                        return { index: index, dataItem: item };\n                    });\n\n                    added = $.map(dataItems, function(item, index) {\n                        return { index: index, dataItem: item };\n                    });\n\n                    this._selectedDataItems = dataItems;\n\n                    this._selectedIndexes = [];\n\n                    for (var i = 0; i < this._selectedDataItems.length; i++) {\n                        var item = this._getElementByDataItem(this._selectedDataItems[i]);\n                        this._selectedIndexes.push(this._getIndecies(item)[0]);\n                        item.addClass(SELECTED);\n                    }\n\n                    this._triggerChange(removed, added);\n\n                    if (this._valueDeferred) {\n                        this._valueDeferred.resolve();\n                    }\n                }\n            },\n\n            deferredRange: function(index) {\n                var dataSource = this.dataSource;\n                var take = this.itemCount;\n                var ranges = this._rangesList;\n                var result = $.Deferred();\n                var defs = [];\n\n                var low = Math.floor(index / take) * take;\n                var high = Math.ceil(index / take) * take;\n\n                var pages = high === low ? [ high ] : [ low, high ];\n\n                $.each(pages, function(_, skip) {\n                    var end = skip + take;\n                    var existingRange = ranges[skip];\n                    var deferred;\n\n                    if (!existingRange || (existingRange.end !== end)) {\n                        deferred = $.Deferred();\n                        ranges[skip] = { end: end, deferred: deferred };\n\n                        dataSource._multiplePrefetch(skip, take, function() {\n                            deferred.resolve();\n                        });\n                    } else {\n                        deferred = existingRange.deferred;\n                    }\n\n                    defs.push(deferred);\n                });\n\n                $.when.apply($, defs).done(function() {\n                    result.resolve();\n                });\n\n                return result;\n            },\n\n            prefetch: function(indexes) {\n                var that = this,\n                    take = this.itemCount,\n                    isEmptyList = !that._promisesList.length;\n\n                if (!isActivePromise(that._activeDeferred)) {\n                    that._activeDeferred = $.Deferred();\n                    that._promisesList = [];\n                }\n\n                $.each(indexes, function(_, index) {\n                    that._promisesList.push(that.deferredRange(that._getSkip(index, take)));\n                });\n\n                if (isEmptyList) {\n                    $.when.apply($, that._promisesList).done(function() {\n                        that._promisesList = [];\n                        that._activeDeferred.resolve();\n                    });\n                }\n\n                return that._activeDeferred;\n            },\n\n            _findDataItem: function(view, index) {\n                var group;\n\n                //find in grouped view\n                if (this.options.type === \"group\") {\n                    for (var i = 0; i < view.length; i++) {\n                        group = view[i].items;\n                        if (group.length <= index) {\n                            index = index - group.length;\n                        } else {\n                            return group[index];\n                        }\n                    }\n                }\n\n                //find in flat view\n                return view[index];\n            },\n\n            _getRange: function(skip, take) {\n                return this.dataSource._findRange(skip, Math.min(skip + take, this.dataSource.total()));\n            },\n\n            dataItemByIndex: function(index) {\n                var that = this;\n                var take = that.itemCount;\n                var skip = that._getSkip(index, take);\n                var view = this._getRange(skip, take);\n\n                //should not return item if data is not loaded\n                if (!that._getRange(skip, take).length) {\n                    return null;\n                }\n\n                if (that.options.type === \"group\") {\n                    kendo.ui.progress($(that.wrapper), true);\n                    that.mute(function() {\n                        that.dataSource.range(skip, take, function() {\n                            kendo.ui.progress($(that.wrapper), false);\n                        });\n                        view = that.dataSource.view();\n                    });\n                }\n\n                return that._findDataItem(view, [index - skip]);\n            },\n\n            selectedDataItems: function() {\n                return this._selectedDataItems.slice();\n            },\n\n            scrollWith: function(value) {\n                this.content.scrollTop(this.content.scrollTop() + value);\n            },\n\n            scrollTo: function(y) {\n                this.content.scrollTop(y); //works only if the element is visible\n            },\n\n            scrollToIndex: function(index) {\n                this.scrollTo(index * this.options.itemHeight);\n            },\n\n            focus: function(candidate) {\n                var element,\n                    index,\n                    data,\n                    current,\n                    itemHeight = this.options.itemHeight,\n                    id = this._optionID,\n                    triggerEvent = true;\n\n                if (candidate === undefined$1) {\n                    current = this.element.find(\".\" + FOCUSED);\n                    return current.length ? current : null;\n                }\n\n                if (typeof candidate === \"function\") {\n                    data = this.dataSource.flatView();\n                    for (var idx = 0; idx < data.length; idx++) {\n                        if (candidate(data[idx])) {\n                            candidate = idx;\n                            break;\n                        }\n                    }\n                }\n\n                if (candidate instanceof Array) {\n                    candidate = lastFrom(candidate);\n                }\n\n                if (isNaN(candidate)) {\n                    element = $(candidate);\n                    index = parseInt($(element).attr(\"data-offset-index\"), 10);\n                } else {\n                    index = candidate;\n                    element = this._getElementByIndex(index);\n                }\n\n                if (index === -1) {\n                    this.element.find(\".\" + FOCUSED).removeClass(FOCUSED);\n                    this._focusedIndex = undefined$1;\n                    return;\n                }\n\n                if (element.length) { /*focus rendered item*/\n                    if (element.hasClass(FOCUSED)) {\n                        triggerEvent = false;\n                    }\n                    if (this._focusedIndex !== undefined$1) {\n                        current = this._getElementByIndex(this._focusedIndex);\n                        current\n                            .removeClass(FOCUSED)\n                            .removeAttr(\"id\");\n\n                        if (triggerEvent) {\n                            this.trigger(DEACTIVATE);\n                        }\n                    }\n\n                    this._focusedIndex = index;\n\n                    element\n                        .addClass(FOCUSED)\n                        .attr(\"id\", id);\n\n                    var position = this._getElementLocation(index);\n\n                    if (position === \"top\") {\n                        this.scrollTo(index * itemHeight);\n                    } else if (position === \"bottom\") {\n                        this.scrollTo((index * itemHeight + itemHeight) - this._screenHeight);\n                    } else if (position === \"outScreen\") {\n                        this.scrollTo(index * itemHeight);\n                    }\n\n                    if (triggerEvent) {\n                        this.trigger(ACTIVATE);\n                    }\n                } else { /*focus non rendered item*/\n                    this._focusedIndex = index;\n                    this.items().removeClass(FOCUSED);\n                    this.scrollToIndex(index);\n                }\n            },\n\n            focusIndex: function() {\n                return this._focusedIndex;\n            },\n\n            focusFirst: function() {\n                this.scrollTo(0);\n                this.focus(0);\n            },\n\n            focusLast: function() {\n                var lastIndex = this.dataSource.total();\n                this.scrollTo(this.heightContainer.offsetHeight);\n                this.focus(lastIndex - 1);\n            },\n\n            focusPrev: function() {\n                var index = this._focusedIndex;\n                var current;\n\n                if (!isNaN(index) && index > 0) {\n                    index -= 1;\n                    this.focus(index);\n\n                    current = this.focus();\n                    if (current && current.hasClass(\"k-loading-item\")) {\n                        index += 1;\n                        this.focus(index);\n                    }\n\n                    return index;\n                } else {\n                    index = this.dataSource.total() - 1;\n                    this.focus(index);\n                    return index;\n                }\n            },\n\n            focusNext: function() {\n                var index = this._focusedIndex;\n                var lastIndex = this.dataSource.total() - 1;\n                var current;\n\n                if (!isNaN(index) && index < lastIndex) {\n                    index += 1;\n                    this.focus(index);\n\n                    current = this.focus();\n                    if (current && current.hasClass(\"k-loading-item\")) {\n                        index -= 1;\n                        this.focus(index);\n                    }\n\n                    return index;\n                } else {\n                    index = 0;\n                    this.focus(index);\n                    return index;\n                }\n            },\n\n            _triggerChange: function(removed, added) {\n                removed = removed || [];\n                added = added || [];\n\n                if (removed.length || added.length) {\n                     this.trigger(CHANGE, {\n                        removed: removed,\n                        added: added\n                    });\n                }\n            },\n\n            select: function(candidate) {\n                var that = this,\n                    indices,\n                    initialIndices,\n                    singleSelection = that.options.selectable !== \"multiple\",\n                    prefetchStarted = isActivePromise(that._activeDeferred),\n                    filtered = this.isFiltered(),\n                    isAlreadySelected,\n                    deferred,\n                    result,\n                    removed = [];\n\n                if (candidate === undefined$1) {\n                    return that._selectedIndexes.slice();\n                }\n\n                if (!that._selectDeferred || that._selectDeferred.state() === \"resolved\") {\n                    that._selectDeferred = $.Deferred();\n                }\n\n                indices = that._getIndecies(candidate);\n                isAlreadySelected = singleSelection && !filtered && lastFrom(indices) === lastFrom(this._selectedIndexes);\n                removed = that._deselectCurrentValues(indices);\n\n                if (removed.length || !indices.length || isAlreadySelected) {\n                    that._triggerChange(removed);\n\n                    if (that._valueDeferred) {\n                        that._valueDeferred.resolve().promise();\n                    }\n\n                    return that._selectDeferred.resolve().promise();\n                }\n\n                if (indices.length === 1 && indices[0] === -1) {\n                    indices = [];\n                }\n\n                initialIndices = indices;\n                result = that._deselect(indices);\n                removed = result.removed;\n                indices = result.indices;\n\n                if (singleSelection) {\n                    prefetchStarted = false;\n                    if (indices.length) {\n                        indices = [lastFrom(indices)];\n                    }\n                }\n\n                var done = function() {\n                    var added = that._select(indices);\n\n                    if (initialIndices.length === indices.length || singleSelection) {\n                        that.focus(indices);\n                    }\n\n                    that._triggerChange(removed, added);\n\n                    if (that._valueDeferred) {\n                        that._valueDeferred.resolve();\n                    }\n\n                    that._selectDeferred.resolve();\n                };\n\n                deferred = that.prefetch(indices);\n\n                if (!prefetchStarted) {\n                    if (deferred) {\n                        deferred.done(done);\n                    } else {\n                        done();\n                    }\n                }\n\n                return that._selectDeferred.promise();\n            },\n\n            bound: function(bound) {\n                if (bound === undefined$1) {\n                    return this._listCreated;\n                }\n\n                this._listCreated = bound;\n            },\n\n            mute: function(callback) {\n                this._mute = true;\n                callback();\n                this._mute = false;\n            },\n\n            setDSFilter: function(filter) {\n                this._lastDSFilter = $.extend({}, filter);\n            },\n\n            isFiltered: function() {\n                if (!this._lastDSFilter) {\n                    this.setDSFilter(this.dataSource.filter());\n                }\n\n                return !kendo.data.Query.compareFilters(this.dataSource.filter(), this._lastDSFilter);\n            },\n\n            skipUpdate: $.noop,\n\n            _getElementByIndex: function(index) {\n                return this.items().filter(function(idx, element) {\n                    return index === parseInt($(element).attr(\"data-offset-index\"), 10);\n                });\n            },\n\n            _getElementByDataItem: function(dataItem) {\n                var dataView = this._dataView,\n                valueGetter = this._valueGetter,\n                    element, match;\n\n                for (var i = 0; i < dataView.length; i++) {\n                    match = dataView[i].item && isPrimitive(dataView[i].item) ? dataView[i].item === dataItem : dataView[i].item && dataItem && valueGetter(dataView[i].item) == valueGetter(dataItem);\n                    if (match) {\n                        element = dataView[i];\n                        break;\n                    }\n                }\n\n                return element ? this._getElementByIndex(element.index) : $();\n            },\n\n            _clean: function() {\n                this.result = undefined$1;\n                this._lastScrollTop = undefined$1;\n                this._skip = undefined$1;\n                $(this.heightContainer).remove();\n                this.heightContainer = undefined$1;\n                this.element.empty();\n            },\n\n            _height: function() {\n                var hasData = !!this.dataSource.view().length,\n                    height = this.options.height,\n                    itemHeight = this.options.itemHeight,\n                    total = this.dataSource.total();\n\n                if (!hasData) {\n                    height = 0;\n                } else if (height / itemHeight > total) {\n                    height = total * itemHeight;\n                }\n\n                return height;\n            },\n\n            setScreenHeight: function() {\n                var height = this._height();\n\n                this.content.height(height);\n                this._screenHeight = height;\n            },\n\n            screenHeight: function() {\n                return this._screenHeight;\n            },\n\n            _getElementLocation: function(index) {\n                var scrollTop = this.content.scrollTop(),\n                    screenHeight = this._screenHeight,\n                    itemHeight = this.options.itemHeight,\n                    yPosition = index * itemHeight,\n                    yDownPostion = yPosition + itemHeight,\n                    screenEnd = scrollTop + screenHeight,\n                    position;\n\n                if (yPosition === (scrollTop - itemHeight) || (yDownPostion > scrollTop && yPosition < scrollTop)) {\n                    position = \"top\";\n                } else if (yPosition === screenEnd || (yPosition < screenEnd && screenEnd < yDownPostion)) {\n                    position = \"bottom\";\n                } else if ((yPosition >= scrollTop) && (yPosition <= scrollTop + (screenHeight - itemHeight))) {\n                    position = \"inScreen\";\n                } else {\n                    position = \"outScreen\";\n                }\n\n                return position;\n            },\n\n            _templates: function() {\n                var options = this.options;\n                var templates = {\n                    template: options.template,\n                    placeholderTemplate: options.placeholderTemplate,\n                    groupTemplate: options.groupTemplate,\n                    fixedGroupTemplate: options.fixedGroupTemplate\n                };\n\n                if (options.columns) {\n                    options.columns.forEach((column, i) => {\n                        var templateText = column.field ? column.field.toString() : \"text\";\n                        var templateFunc = data => encode(kendo.getter(templateText)(data));\n\n                        templates[\"column\" + i] = column.template || templateFunc;\n                    });\n                }\n\n                for (var key in templates) {\n                    if (typeof templates[key] !== \"function\") {\n                        templates[key] = kendo.template(templates[key] || \"\");\n                    }\n                }\n\n                this.templates = templates;\n            },\n\n            _generateItems: function(element, count) {\n                var items = [],\n                    item, text,\n                    itemHeight = this.options.itemHeight + \"px\",\n                    itemClass = this.options.columns && this.options.columns.length ? TABLE_ITEM : LIST_ITEM;\n\n                while (count-- > 0) {\n                    text = document.createElement(\"span\");\n                    text.className = \"k-list-item-text\";\n\n                    item = document.createElement(\"li\");\n                    item.tabIndex = -1;\n                    item.className = itemClass;\n                    item.setAttribute(\"role\", \"option\");\n                    item.style.height = itemHeight;\n                    item.style.minHeight = itemHeight;\n                    item.appendChild(text);\n\n                    element.appendChild(item);\n\n                    items.push(item);\n                }\n\n                return items;\n            },\n\n            _saveInitialRanges: function() {\n                var ranges = this.dataSource._ranges;\n                var deferred = $.Deferred();\n                deferred.resolve();\n\n                this._rangesList = {};\n                for (var i = 0; i < ranges.length; i++) {\n                    this._rangesList[ranges[i].start] = { end: ranges[i].end, deferred: deferred };\n                }\n            },\n\n            _createList: function() {\n                var that = this,\n                    content = that.content.get(0),\n                    options = that.options,\n                    dataSource = that.dataSource;\n\n                if (that.bound()) {\n                    that._clean();\n                }\n\n                that._saveInitialRanges();\n                that._buildValueGetter();\n                that.setScreenHeight();\n                that.itemCount = getItemCount(that._screenHeight, options.listScreens, options.itemHeight);\n\n                if (that.itemCount > dataSource.total()) {\n                    that.itemCount = dataSource.total();\n                }\n\n                that._items = that._generateItems(that.element[0], that.itemCount);\n\n                that._setHeight(options.itemHeight * dataSource.total());\n                that.options.type = (dataSource.group() || []).length ? \"group\" : \"flat\";\n\n                if (that.options.type === \"flat\") {\n                    if (that.header.closest(GROUP_ROW_SEL).length) {\n                        that.header.closest(GROUP_ROW_SEL).hide();\n                    } else {\n                        that.header.hide();\n                    }\n                } else {\n                    if (that.header.closest(GROUP_ROW_SEL).length) {\n                        that.header.closest(GROUP_ROW_SEL).show();\n                    } else {\n                        that.header.show();\n                    }\n                }\n\n                that.getter = that._getter(function() {\n                    that._renderItems(true);\n                });\n\n                that._onScroll = function(scrollTop, force) {\n                    var getList = that._listItems(that.getter);\n                    return that._fixedHeader(scrollTop, getList(scrollTop, force));\n                };\n\n                that._renderItems = that._whenChanged(\n                    scrollCallback(content, that._onScroll),\n                    syncList(that._reorderList(that._items, render.bind(that)))\n                );\n\n                that._renderItems();\n                that._calculateGroupPadding(that._screenHeight);\n                that._calculateColumnsHeaderPadding();\n            },\n\n            _setHeight: function(height) {\n                var currentHeight,\n                    heightContainer = this.heightContainer;\n\n                if (!heightContainer) {\n                    heightContainer = this.heightContainer = appendChild(this.content[0], HEIGHTCONTAINER);\n                } else {\n                    currentHeight = heightContainer.offsetHeight;\n                }\n\n                if (height !== currentHeight) {\n                    heightContainer.innerHTML = \"\";\n\n                    while (height > 0) {\n                        var padHeight = Math.min(height, 250000); //IE workaround, should not create elements with height larger than 250000px\n                        appendChild(heightContainer).style.height = padHeight + \"px\";\n                        height -= padHeight;\n                    }\n                }\n            },\n\n            _getter: function() {\n                var lastRequestedRange = null,\n                    dataSource = this.dataSource,\n                    lastRangeStart = dataSource.skip(),\n                    type = this.options.type,\n                    pageSize = this.itemCount,\n                    flatGroups = {};\n\n                if (dataSource.pageSize() < pageSize) {\n                    this.mute(function() {\n                        dataSource.pageSize(pageSize);\n                    });\n                }\n\n                return function(index, rangeStart) {\n                    var that = this;\n                    if (!dataSource.inRange(rangeStart, pageSize)) {\n                        if (lastRequestedRange !== rangeStart) {\n                            lastRequestedRange = rangeStart;\n                            lastRangeStart = rangeStart;\n\n                            if (that._getterDeferred) {\n                                that._getterDeferred.reject();\n                            }\n\n                            that._getterDeferred = that.deferredRange(rangeStart);\n                            that._getterDeferred.then(function() {\n                                var firstItemIndex = that._indexConstraint(that.content[0].scrollTop);\n\n                                that._getterDeferred = null;\n\n                                if (rangeStart <= firstItemIndex && firstItemIndex <= (rangeStart + pageSize)) {\n                                    that._fetching = true;\n                                    dataSource.range(rangeStart, pageSize);\n                                }\n                            });\n                        }\n\n                        return null;\n                    } else {\n                        if (lastRangeStart !== rangeStart) {\n                            this.mute(function() {\n                                dataSource.range(rangeStart, pageSize);\n                                lastRangeStart = rangeStart;\n                            });\n                        }\n\n                        var result;\n                        if (type === \"group\") { //grouped list\n                            if (!flatGroups[rangeStart]) {\n                                var flatGroup = flatGroups[rangeStart] = [];\n                                var groups = dataSource.view();\n                                for (var i = 0, len = groups.length; i < len; i++) {\n                                    var group = groups[i];\n                                    for (var j = 0, groupLength = group.items.length; j < groupLength; j++) {\n                                        flatGroup.push({ item: group.items[j], group: group.value });\n                                    }\n                                }\n                            }\n\n                            result = flatGroups[rangeStart][index - rangeStart];\n                        } else { //flat list\n                            result = dataSource.view()[index - rangeStart];\n                        }\n\n                        return result;\n                    }\n                };\n            },\n\n            _fixedHeader: function(scrollTop, list) {\n                var group = this.currentVisibleGroup,\n                    itemHeight = this.options.itemHeight,\n                    firstVisibleDataItemIndex = Math.floor((scrollTop - list.top) / itemHeight),\n                    firstVisibleDataItem = list.items[firstVisibleDataItemIndex];\n\n                if (firstVisibleDataItem && firstVisibleDataItem.item) {\n                    var firstVisibleGroup = firstVisibleDataItem.group;\n\n                    if (firstVisibleGroup !== group) {\n                        var fixedGroupText = firstVisibleGroup || \"\";\n                        this.header.html(this.templates.fixedGroupTemplate(fixedGroupText));\n                        this.currentVisibleGroup = firstVisibleGroup;\n                    }\n                }\n\n                return list;\n            },\n\n            _itemMapper: function(item, index, value) {\n                var listType = this.options.type,\n                    itemHeight = this.options.itemHeight,\n                    currentIndex = this._focusedIndex,\n                    selected = false,\n                    current = false,\n                    newGroup = false,\n                    group = null,\n                    match = false,\n                    valueGetter = this._valueGetter;\n\n                if (listType === \"group\") {\n                    if (item) {\n                        newGroup = index === 0 || (this._currentGroup !== false && this._currentGroup !== item.group);\n                        this._currentGroup = item.group;\n                    }\n\n                    group = item ? item.group : null;\n                    item = item ? item.item : null;\n                }\n\n                if (this.options.mapValueTo === \"dataItem\" && this._selectedDataItems.length && item) {\n                    for (var i = 0; i < this._selectedDataItems.length; i++) {\n                        match = valueGetter(this._selectedDataItems[i]) === valueGetter(item);\n                        if (match) {\n                            selected = true;\n                            break;\n                        }\n                    }\n                } else if (!this.isFiltered() && value.length && item) {\n                    for (var j = 0; j < value.length; j++) {\n                        match = isPrimitive(item) ? value[j] === item : value[j] === valueGetter(item);\n                        if (match) {\n                            value.splice(j , 1);\n                            selected = true;\n                            break;\n                        }\n                    }\n                }\n\n                if (currentIndex === index) {\n                    current = true;\n                }\n\n                return {\n                    item: item ? item : null,\n                    group: group,\n                    newGroup: newGroup,\n                    selected: selected,\n                    current: current,\n                    index: index,\n                    top: index * itemHeight\n                };\n            },\n\n            _range: function(index) {\n                var itemCount = this.itemCount,\n                    value = this._values.slice(),\n                    items = [],\n                    item;\n\n                this._view = {};\n                this._currentGroup = false;\n\n                for (var i = index, length = index + itemCount; i < length; i++) {\n                    item = this._itemMapper(this.getter(i, index), i, value);\n                    if (items[items.length - 1]) {\n                        items[items.length - 1].isLastGroupedItem = item.newGroup;\n                    }\n                    items.push(item);\n                    this._view[item.index] = item;\n                }\n\n                this._dataView = items;\n                return items;\n            },\n\n            _getDataItemsCollection: function(scrollTop, lastScrollTop) {\n                var items = this._range(this._listIndex(scrollTop, lastScrollTop));\n                return {\n                    index: items.length ? items[0].index : 0,\n                    top: items.length ? items[0].top : 0,\n                    items: items\n                };\n            },\n\n            _listItems: function() {\n                var screenHeight = this._screenHeight,\n                    options = this.options;\n\n                var theValidator = listValidator(options, screenHeight);\n\n                return (function(value, force) {\n                    var result = this.result,\n                        lastScrollTop = this._lastScrollTop;\n\n                    if (force || !result || !theValidator(result, value, lastScrollTop)) {\n                        result = this._getDataItemsCollection(value, lastScrollTop);\n                    }\n\n                    this._lastScrollTop = value;\n                    this.result = result;\n\n                    return result;\n                }).bind(this);\n            },\n\n            _whenChanged: function(getter, callback) {\n                var current;\n\n                return function(force) {\n                    var theNew = getter(force);\n\n                    if (theNew !== current) {\n                        current = theNew;\n                        callback(theNew, force);\n                    }\n                };\n            },\n\n            _reorderList: function(list, reorder) {\n                var that = this;\n                var length = list.length;\n                var currentOffset = -Infinity;\n                reorder = map2(reorder, this.templates).bind(this);\n\n                return function(list2, offset, force) {\n                    var diff = offset - currentOffset;\n                    var range, range2;\n\n                    if (force || Math.abs(diff) >= length) { // full reorder\n                        range = list;\n                        range2 = list2;\n                    } else { // partial reorder\n                        range = reshift(list, diff);\n                        range2 = diff > 0 ? list2.slice(-diff) : list2.slice(0, -diff);\n                    }\n\n                    reorder(range, range2, that.bound());\n\n                    currentOffset = offset;\n                };\n            },\n\n            _bufferSizes: function() {\n                var options = this.options;\n\n                return bufferSizes(this._screenHeight, options.listScreens, options.oppositeBuffer);\n            },\n\n            _indexConstraint: function(position) {\n                var itemCount = this.itemCount,\n                    itemHeight = this.options.itemHeight,\n                    total = this.dataSource.total();\n\n                return Math.min(Math.max(total - itemCount, 0), Math.max(0, Math.floor(position / itemHeight )));\n            },\n\n            _listIndex: function(scrollTop, lastScrollTop) {\n                var buffers = this._bufferSizes(),\n                    position;\n\n                position = scrollTop - ((scrollTop > lastScrollTop) ? buffers.down : buffers.up);\n\n                return this._indexConstraint(position);\n            },\n\n            _selectable: function() {\n                var itemClass = this.options.columns && this.options.columns.length ? TABLE_ITEM : LIST_ITEM;\n\n                if (this.options.selectable) {\n                    this._selectProxy = this._clickHandler.bind(this);\n                    this.element.on(CLICK + VIRTUAL_LIST_NS, \".\" + itemClass, this._selectProxy);\n                }\n            },\n\n            getElementIndex: function(element) {\n                if (!(element instanceof jQuery)) {\n                    return undefined$1;\n                }\n\n                return parseInt(element.attr(\"data-offset-index\"), 10);\n            },\n\n            _getIndecies: function(candidate) {\n                var result = [], data;\n\n                if (typeof candidate === \"function\") {\n                    data = this.dataSource.flatView();\n                    for (var idx = 0; idx < data.length; idx++) {\n                        if (candidate(data[idx])) {\n                            result.push(idx);\n                            break;\n                        }\n                    }\n                }\n\n                if (typeof candidate === \"number\") {\n                    result.push(candidate);\n                }\n\n                var elementIndex = this.getElementIndex(candidate);\n                if (!isNaN(elementIndex)) {\n                    result.push(elementIndex);\n                }\n\n                if (candidate instanceof Array) {\n                    result = candidate;\n                }\n\n                return result;\n            },\n\n            _deselect: function(indices) {\n                var removed = [],\n                    selectedIndex,\n                    dataItem,\n                    selectedIndexes = this._selectedIndexes,\n                    selectedDataItems = this._selectedDataItems,\n                    position = 0,\n                    selectable = this.options.selectable,\n                    removedindexesCounter = 0,\n                    valueGetter = this._valueGetter,\n                    item, match,\n                    result = null;\n\n                indices = indices.slice();\n\n                if (selectable === true || !indices.length) { //deselect everything\n                    for (var idx = 0; idx < selectedIndexes.length; idx++) {\n                        if (selectedIndexes[idx] !== undefined$1) {\n                            this._getElementByIndex(selectedIndexes[idx]).removeClass(SELECTED);\n                        } else if (selectedDataItems[idx]) {\n                            this._getElementByDataItem(selectedDataItems[idx]).removeClass(SELECTED);\n                        }\n\n                        removed.push({\n                            index: selectedIndexes[idx],\n                            position: idx,\n                            dataItem: selectedDataItems[idx]\n                        });\n                    }\n\n                    this._values = [];\n                    this._selectedDataItems = [];\n                    this._selectedIndexes = [];\n                } else if (selectable === \"multiple\") {\n                    for (var i = 0; i < indices.length; i++) {\n                        result = null;\n                        position = $.inArray(indices[i], selectedIndexes);\n                        dataItem = this.dataItemByIndex(indices[i]);\n\n                        if (position === -1 && dataItem) {\n                            for (var j = 0; j < selectedDataItems.length; j++) {\n                                match = isPrimitive(dataItem) ? selectedDataItems[j] === dataItem : valueGetter(selectedDataItems[j]) === valueGetter(dataItem);\n                                if (match) {\n                                    item = this._getElementByIndex(indices[i]);\n                                    result = this._deselectSingleItem(item, j, indices[i], removedindexesCounter);\n                                }\n                            }\n                        } else {\n                            selectedIndex = selectedIndexes[position];\n\n                            if (selectedIndex !== undefined$1) {\n                                item = this._getElementByIndex(selectedIndex);\n                                result = this._deselectSingleItem(item, position, selectedIndex, removedindexesCounter);\n                            }\n                        }\n\n                        if (result) {\n                            indices.splice(i, 1);\n                            removed.push(result);\n\n                            removedindexesCounter++;\n                            i--;\n                        }\n                    }\n                }\n\n                return {\n                    indices: indices,\n                    removed: removed\n                };\n            },\n\n            _deselectSingleItem: function(item, position, selectedIndex, removedindexesCounter) {\n                var dataItem;\n\n                if (!item.hasClass(SELECTED)) {\n                    return;\n                }\n\n                item.removeClass(SELECTED);\n                this._values.splice(position, 1);\n                this._selectedIndexes.splice(position, 1);\n                dataItem = this._selectedDataItems.splice(position, 1)[0];\n\n                return {\n                    index: selectedIndex,\n                    position: position + removedindexesCounter,\n                    dataItem: dataItem\n                };\n            },\n\n            _deselectCurrentValues: function(indices) {\n                var children = this.element[0].children;\n                var value, index, position;\n                var values = this._values;\n                var removed = [];\n                var idx = 0;\n                var j;\n\n                if (this.options.selectable !== \"multiple\" || !this.isFiltered()) {\n                    return [];\n                }\n\n                if (indices[0] === -1) {\n                    $(children).removeClass(SELECTED);\n                    removed = $.map(this._selectedDataItems.slice(0), function(dataItem, idx) {\n                       return {\n                          dataItem: dataItem,\n                          position: idx\n                       };\n                    });\n                    this._selectedIndexes = [];\n                    this._selectedDataItems = [];\n                    this._values = [];\n                    return removed;\n                }\n\n                for (; idx < indices.length; idx++) {\n                    position = -1;\n                    index = indices[idx];\n                    if (this.dataItemByIndex(index)) {\n                        value = this._valueGetter(this.dataItemByIndex(index));\n                    }\n\n                    for (j = 0; j < values.length; j++) {\n                        if (value == values[j]) {\n                            position = j;\n                            break;\n                        }\n                    }\n\n                    if (position > -1) {\n                        removed.push(this.removeAt(position));\n                        $(children[index]).removeClass(SELECTED);\n                    }\n                }\n\n                return removed;\n            },\n\n            _getSkip: function(index, take) {\n                var page = index < take ? 1 : Math.floor(index / take) + 1;\n\n                return (page - 1) * take;\n            },\n\n            _select: function(indexes) {\n                var that = this,\n                    singleSelection = this.options.selectable !== \"multiple\",\n                    dataSource = this.dataSource,\n                    dataItem, oldSkip,\n                    take = this.itemCount,\n                    valueGetter = this._valueGetter,\n                    added = [];\n\n                if (singleSelection) {\n                    that._selectedIndexes = [];\n                    that._selectedDataItems = [];\n                    that._values = [];\n                }\n\n                oldSkip = dataSource.skip();\n\n                $.each(indexes, function(_, index) {\n                    var skip = that._getSkip(index, take);\n\n                    that.mute(function() {\n                        dataSource.range(skip, take); //switch the range to get the dataItem\n\n                        dataItem = that._findDataItem(dataSource.view(), [index - skip]);\n                        that._selectedIndexes.push(index);\n                        that._selectedDataItems.push(dataItem);\n                        that._values.push(isPrimitive(dataItem) ? dataItem : valueGetter(dataItem));\n\n                        added.push({\n                            index: index,\n                            dataItem: dataItem\n                        });\n\n                        that._getElementByIndex(index).addClass(SELECTED);\n\n                        dataSource.range(oldSkip, take); //switch back the range\n                    });\n                });\n\n                that._values = that._checkValuesOrder(that._values);\n\n                return added;\n            },\n\n            _clickHandler: function(e) {\n                var item = $(e.currentTarget);\n\n                if (!e.isDefaultPrevented() && item.attr(\"data-uid\")) {\n                    this.trigger(CLICK, { item: item });\n                }\n            },\n\n            _buildValueGetter: function() {\n                this._valueGetter = kendo.getter(this.options.dataValueField);\n            },\n\n            _calculateGroupPadding: function(height) {\n                var firstItem = this.items().first(),\n                    groupHeader = this.header,\n                    padding = 0;\n\n                if (groupHeader[0] && groupHeader[0].style.display !== \"none\") {\n                    if (height !== \"auto\") {\n                        padding = kendo.support.scrollbar();\n                    }\n\n                    padding += parseFloat(firstItem.css(\"border-right-width\"), 10) + parseFloat(firstItem.children(\".k-group\").css(\"right\"), 10);\n\n                    groupHeader.css(\"padding-right\", padding);\n                }\n            },\n\n            _calculateColumnsHeaderPadding: function() {\n                if (this.options.columns && this.options.columns.length) {\n                    var isRtl = kendo.support.isRtl(this.wrapper);\n                    var scrollbar = kendo.support.scrollbar();\n                    var columnsHeader = this.content.parent().parent().find(\".k-table-header\");\n                    var total = this.dataSource.total();\n\n                    columnsHeader.css((isRtl ? \"padding-left\" : \"padding-right\"), total ? scrollbar : 0);\n                }\n            }\n\n        });\n\n        kendo.ui.VirtualList = VirtualList;\n        kendo.ui.plugin(VirtualList);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}