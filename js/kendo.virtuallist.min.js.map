{"version":3,"sources":["raw-js/kendo.virtuallist.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendovirtuallist","js","this","kendo","jQuery","$","undefined$1","window","ui","encode","htmlEncode","Widget","DataBoundWidget","percentageUnitsRegex","LIST_ITEM","TABLE_ITEM","GROUPITEM","SELECTED","FOCUSED","HOVER","CHANGE","CLICK","LISTBOUND","ITEMCHANGE","ACTIVATE","DEACTIVATE","GROUP_ROW_SEL","VIRTUAL_LIST_NS","lastFrom","array","length","toArray","value","Array","isPrimitive","dataItem","appendChild","parent","className","tagName","element","document","createElement","render","data","templates","itemTemplate","template","hasColumns","options","columns","altRow","index","item","placeholderTemplate","header","group","html","fixedGroupTemplate","attr","uid","addClass","removeClass","renderedColumns","i","currentWidth","width","currentWidthInt","parseInt","widthStyle","widthValue","test","renderColumns","applyStylesFromKendoAttributes","empty","append","find","remove","toggleClass","current","selected","newGroup","isLastGroupedItem","groupTemplate","appendTo","top","y","style","webkitTransform","transform","position","isActivePromise","promise","state","VirtualList","extend","init","listSize","lineHeight","mockList","that","contentClasses","bound","_fetching","fn","call","itemHeight","css","left","visibility","body","parseFloat","getComputedStyles","height","contentSelector","split","join","wrapper","closest","content","wrap","thead","row","TABLE_LIST","before","prev","ariaLabel","ariaLabelledBy","on","_values","_selectedDataItems","_selectedIndexes","_rangesList","_promisesList","_optionID","guid","_templates","setDataSource","dataSource","throttle","_renderItems","_triggerListBound","delay","_selectable","name","autoBind","listScreens","threshold","oppositeBuffer","type","selectable","dataValueField","mapValueTo","valueMapper","events","setOptions","itemClass","_selectProxy","off","refresh","items","_items","destroy","unbind","_refreshHandler","source","isArray","DataSource","create","_clean","_deferValueSet","mute","bind","setDSFilter","filter","view","fetch","skip","currentRangeStart","_selectingValue","_skip","trigger","_getValues","dataItems","getter","_valueGetter","map","_highlightSelectedItems","_getElementByDataItem","e","result","action","isItemChange","filtered","isFiltered","_mute","focus","_createList","skipUpdateOnBind","_emptySearch","done","itemsToMatch","found","j","itemsLength","selectedLength","changed","unchanged","push","mapChangedItems","removeAt","splice","_removeSelectedDataItem","valueGetter","idx","setValue","_forcePrefetch","slice","_valueDeferred","Deferred","select","_prefetchByValue","_checkValuesOrder","_removedAddedIndexes","newValue","dataView","_dataView","forSelection","callback","mapValueToIndex","mapValueToDataItem","checkboxes","success","response","valueMapperOptions","indexes","removed","_deselect","_triggerChange","added","_getIndecies","resolve","deferredRange","take","itemCount","ranges","defs","low","Math","floor","high","ceil","pages","each","_","deferred","end","existingRange","_multiplePrefetch","when","apply","prefetch","isEmptyList","_activeDeferred","_getSkip","_findDataItem","_getRange","_findRange","min","total","dataItemByIndex","progress","range","selectedDataItems","scrollWith","scrollTop","scrollTo","scrollToIndex","candidate","id","triggerEvent","flatView","isNaN","_getElementByIndex","_focusedIndex","hasClass","removeAttr","_getElementLocation","_screenHeight","focusIndex","focusFirst","focusLast","lastIndex","heightContainer","offsetHeight","focusPrev","focusNext","indices","initialIndices","isAlreadySelected","singleSelection","prefetchStarted","_selectDeferred","_deselectCurrentValues","_select","_listCreated","_lastDSFilter","Query","compareFilters","skipUpdate","noop","_lastScrollTop","_height","hasData","setScreenHeight","screenHeight","yPosition","yDownPostion","screenEnd","key","forEach","column","templateText","field","toString","_generateItems","count","text","tabIndex","setAttribute","minHeight","_saveInitialRanges","_ranges","start","reorder","get","_buildValueGetter","_setHeight","hide","show","_getter","_onScroll","force","getList","_listItems","_fixedHeader","_whenChanged","_reorderList","list","_calculateGroupPadding","_calculateColumnsHeaderPadding","currentHeight","innerHTML","padHeight","lastRequestedRange","lastRangeStart","pageSize","flatGroups","rangeStart","inRange","flatGroup","groups","len","groupLength","_getterDeferred","reject","then","firstItemIndex","_indexConstraint","currentVisibleGroup","firstVisibleDataItemIndex","firstVisibleDataItem","firstVisibleGroup","fixedGroupText","_itemMapper","listType","currentIndex","_currentGroup","_range","_view","_getDataItemsCollection","lastScrollTop","_listIndex","theValidator","downThreshold","upThreshold","listValidator","theNew","currentOffset","Infinity","arr1","arr2","ns","list2","offset","range2","diff","abs","unshift","reshift","_bufferSizes","opposite","down","up","max","buffers","_clickHandler","getElementIndex","elementIndex","selectedIndex","selectedIndexes","removedindexesCounter","inArray","_deselectSingleItem","children","values","oldSkip","currentTarget","isDefaultPrevented","firstItem","first","groupHeader","padding","display","support","scrollbar","isRtl","columnsHeader","plugin"],"mappings":"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","file":"kendo.virtuallist.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.data.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.data'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendovirtuallist = global.kendovirtuallist || {}, global.kendovirtuallist.js = factory()));\n})(this, (function () {\n    let $ = kendo.jQuery;\n\n    function valueMapperOptions(options, value, callback) {\n        return {\n            value: (options.selectable === \"multiple\" || options.checkboxes) ? value : value[0],\n            success: function(response) {\n                callback(response);\n            }\n        };\n    }\n\n    var __meta__ = {\n        id: \"virtuallist\",\n        name: \"VirtualList\",\n        category: \"framework\",\n        depends: [ \"data\" ],\n        hidden: true\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            encode = kendo.htmlEncode,\n            Widget = ui.Widget,\n            DataBoundWidget = ui.DataBoundWidget,\n            percentageUnitsRegex = /^\\d+(\\.\\d+)?%$/i,\n            LIST_CONTENT = \"k-list-content k-virtual-content\",\n            TABLE_CONTENT = \"k-table-body k-table-scroller\",\n            HEADER = \"k-list-group-sticky-header\",\n            LIST_ITEM = \"k-list-item\",\n            TABLE_ITEM = \"k-table-row\",\n            HEIGHTCONTAINER = \"k-height-container\",\n            GROUPITEM = \"k-list-item-group-label\",\n            LIST_UL = \"k-list-ul\",\n            TABLE_LIST = \"k-table-list\",\n\n            SELECTED = \"k-selected\",\n            FOCUSED = \"k-focus\",\n            HOVER = \"k-hover\",\n            CHANGE = \"change\",\n            CLICK = \"click\",\n            LISTBOUND = \"listBound\",\n            ITEMCHANGE = \"itemChange\",\n\n            ACTIVATE = \"activate\",\n            DEACTIVATE = \"deactivate\",\n\n            GROUP_ROW_SEL = \".k-table-group-row\",\n\n            VIRTUAL_LIST_NS = \".VirtualList\";\n\n        function lastFrom(array) {\n            return array[array.length - 1];\n        }\n\n        function toArray(value) {\n            return value instanceof Array ? value : [value];\n        }\n\n        function isPrimitive(dataItem) {\n            return typeof dataItem === \"string\" || typeof dataItem === \"number\" || typeof dataItem === \"boolean\";\n        }\n\n        function getItemCount(screenHeight, listScreens, itemHeight) {\n            return Math.ceil(screenHeight * listScreens / itemHeight);\n        }\n\n        function appendChild(parent, className, tagName) {\n            var element = document.createElement(tagName || \"div\");\n            if (className) {\n                element.className = className;\n            }\n            parent.appendChild(element);\n\n            return element;\n        }\n\n        function getDefaultItemHeight(listSize) {\n            var mockList = $('<div class=\"k-list ' + listSize + ' k-virtual-list\">' +\n                    '<div class=\"k-list-content k-virtual-content\">' +\n                        '<ul class=\"k-list-ul\">' +\n                            '<li class=\"k-list-item\">' +\n                                '<span class=\"k-list-item-text\">test</span>' +\n                            '</li>' +\n                        '</ul>' +\n                    '</div>' +\n                '</div>');\n            var lineHeight;\n\n            mockList.css({\n                position: \"absolute\",\n                left: \"-200000px\",\n                visibility: \"hidden\"\n            });\n            mockList.appendTo(document.body);\n            lineHeight = parseFloat(kendo.getComputedStyles(mockList.find(\".k-list-item\")[0], [\"height\"]).height);\n            mockList.remove();\n\n            return lineHeight;\n        }\n\n        function bufferSizes(screenHeight, listScreens, opposite) { //in pixels\n            return {\n                down: screenHeight * opposite,\n                up: screenHeight * (listScreens - 1 - opposite)\n            };\n        }\n\n        function listValidator(options, screenHeight) {\n            var downThreshold = (options.listScreens - 1 - options.threshold) * screenHeight;\n            var upThreshold = options.threshold * screenHeight;\n\n            return function(list, scrollTop, lastScrollTop) {\n                if (scrollTop > lastScrollTop) {\n                    return scrollTop - list.top < downThreshold;\n                } else {\n                    return list.top === 0 || scrollTop - list.top > upThreshold;\n                }\n            };\n        }\n\n        function scrollCallback(element, callback) {\n            return function(force) {\n                return callback(element.scrollTop, force);\n            };\n        }\n\n        function syncList(reorder) {\n            return function(list, force) {\n                reorder(list.items, list.index, force);\n                return list;\n            };\n        }\n\n        function position(element, y) {\n            element.style.webkitTransform = 'translateY(' + y + \"px)\";\n            element.style.transform = 'translateY(' + y + \"px)\";\n        }\n\n        function map2(callback, templates) {\n            return function(arr1, arr2) {\n                for (var i = 0, len = arr1.length; i < len; i++) {\n                    callback(arr1[i], arr2[i], templates);\n                    if (arr2[i].item) {\n                        this.trigger(ITEMCHANGE, { item: $(arr1[i]), data: arr2[i].item, ns: kendo.ui });\n                    }\n                }\n            };\n        }\n\n        function reshift(items, diff) {\n            var range;\n\n            if (diff > 0) { // down\n                range = items.splice(0, diff);\n                items.push.apply(items, range);\n            } else { // up\n                range = items.splice(diff, -diff);\n                items.unshift.apply(items, range);\n            }\n\n            return range;\n        }\n\n        function render(element, data, templates) {\n            var itemTemplate = templates.template,\n                hasColumns = this.options.columns && this.options.columns.length,\n                altRow = data.index % 2 === 1 ? \"k-table-alt-row\" : \"\";\n\n            element = $(element);\n\n            if (!data.item) {\n                itemTemplate = templates.placeholderTemplate;\n            }\n\n            if (data.index === 0 && this.header && data.group) {\n                this.header.html(templates.fixedGroupTemplate(data.group));\n            }\n\n            element\n                .attr(\"data-uid\", data.item ? data.item.uid : \"\")\n                .attr(\"data-offset-index\", data.index);\n\n            if (hasColumns && data.item) {\n                if (altRow.length > 0) {\n                    element.addClass(altRow);\n                } else {\n                    element.removeClass(\"k-table-alt-row\");\n                }\n\n                let renderedColumns = $(renderColumns(this.options, data.item, templates));\n                kendo.applyStylesFromKendoAttributes(renderedColumns, [\"width\", \"max-width\"]);\n                element.empty().append(renderedColumns);\n            } else {\n                element.find(\".\" + GROUPITEM).remove();\n                element.find(\".k-list-item-text\").html(itemTemplate(data.item || {}));\n            }\n\n            element.toggleClass(FOCUSED, data.current);\n            element.toggleClass(SELECTED, data.selected);\n            element.toggleClass(\"k-first\", data.newGroup);\n            element.toggleClass(\"k-last\", data.isLastGroupedItem);\n            element.toggleClass(\"k-loading-item\", !data.item);\n\n            if (data.index !== 0 && data.newGroup) {\n                if (hasColumns) {\n                    $('<span class=\"k-table-td k-table-group-td\"><span>' + templates.groupTemplate(data.group) + '</span></span>')\n                        .appendTo(element);\n                } else {\n                    $(\"<div class=\" + GROUPITEM + \"></div>\")\n                        .appendTo(element)\n                        .html(templates.groupTemplate(data.group));\n                }\n            } else if (data.group && hasColumns) {\n                element.append($('<span class=\"k-table-td k-table-spacer-td\"></span>'));\n            }\n\n            if (data.top !== undefined$1) {\n                position(element[0], data.top);\n            }\n        }\n\n        function renderColumns(options, dataItem, templates) {\n            var item = \"\";\n\n            for (var i = 0; i < options.columns.length; i++) {\n                var currentWidth = options.columns[i].width;\n                var currentWidthInt = parseInt(currentWidth, 10);\n                var widthStyle = '';\n\n                if (currentWidth) {\n                    let widthValue = `${currentWidthInt}${percentageUnitsRegex.test(currentWidth) ? \"%\" : \"px\"}`;\n                    widthStyle = `${kendo.attr(\"style-width\")}=\"${widthValue}\" ${kendo.attr(\"style-max-width\")}=\"${widthValue}\"`;\n                }\n\n                item += \"<span class='k-table-td' \" + widthStyle + \">\";\n                item += templates[\"column\" + i](dataItem);\n                item += \"</span>\";\n            }\n\n            return item;\n        }\n\n        function mapChangedItems(selected, itemsToMatch) {\n            var itemsLength = itemsToMatch.length;\n            var selectedLength = selected.length;\n            var dataItem;\n            var found;\n            var i, j;\n\n            var changed = [];\n            var unchanged = [];\n\n            if (selectedLength) {\n                for (i = 0; i < selectedLength; i++) {\n                    dataItem = selected[i];\n                    found = false;\n\n                    for (j = 0; j < itemsLength; j++) {\n                        if (dataItem === itemsToMatch[j]) {\n                            found = true;\n                            changed.push({ index: i, item: dataItem });\n                            break;\n                        }\n                    }\n\n                    if (!found) {\n                        unchanged.push(dataItem);\n                    }\n                }\n            }\n\n            return {\n                changed: changed,\n                unchanged: unchanged\n            };\n        }\n\n        function isActivePromise(promise) {\n            return promise && promise.state() !== \"resolved\";\n        }\n\n        var VirtualList = DataBoundWidget.extend({\n            init: function(element, options) {\n                var that = this,\n                    contentClasses = options.columns && options.columns.length ? TABLE_CONTENT : LIST_CONTENT;\n\n                that.bound(false);\n                that._fetching = false;\n\n                Widget.fn.init.call(that, element, options);\n\n                if (!that.options.itemHeight) {\n                    that.options.itemHeight = getDefaultItemHeight(options.listSize);\n                }\n\n                options = that.options;\n\n                that.element.attr(\"role\", \"listbox\");\n\n                var contentSelector = \".\" + contentClasses.split(' ').join('.');\n                var wrapper = that.element.closest(contentSelector);\n\n                that.content = that.wrapper = wrapper.length ? wrapper : that.element.wrap(\"<div unselectable='on' class='\" + contentClasses + \"'></div>\").parent();\n\n                if (that.options.columns && that.options.columns.length) {\n                    var thead = that.element.closest(\".k-data-table\").find('.k-table-thead');\n                    var row = $('<tr class=\"k-table-group-row\">' +\n                        '<th class=\"k-table-th\" colspan=\"' + that.options.columns.length + '\"></th>' +\n                    '</tr>');\n\n                    thead.append(row);\n\n                    that.header = row.find(\".k-table-th\");\n                    that.element.addClass(TABLE_LIST + \" k-virtual-table\");\n                } else {\n                    that.header = that.content.before(\"<div class='\" + HEADER + \"'></div>\").prev();\n                    that.element.addClass(LIST_UL);\n                }\n\n                if (options.ariaLabel) {\n                    this.element.attr(\"aria-label\", options.ariaLabel);\n                } else if (options.ariaLabelledBy) {\n                    this.element.attr(\"aria-labelledby\", options.ariaLabelledBy);\n                }\n\n                that.element.on(\"mouseenter\" + VIRTUAL_LIST_NS, \"li:not(.k-loading-item)\", function() { $(this).addClass(HOVER); })\n                            .on(\"mouseleave\" + VIRTUAL_LIST_NS, \"li\", function() { $(this).removeClass(HOVER); });\n\n                that._values = toArray(that.options.value);\n                that._selectedDataItems = [];\n                that._selectedIndexes = [];\n                that._rangesList = {};\n                that._promisesList = [];\n                that._optionID = kendo.guid();\n\n                that._templates();\n\n                that.setDataSource(options.dataSource);\n\n                that.content.on(\"scroll\" + VIRTUAL_LIST_NS, kendo.throttle(function() {\n                    that._renderItems();\n                    that._triggerListBound();\n                }, options.delay));\n\n                that._selectable();\n            },\n\n            options: {\n                name: \"VirtualList\",\n                autoBind: true,\n                delay: 100,\n                height: null,\n                listScreens: 4,\n                threshold: 0.5,\n                itemHeight: null,\n                oppositeBuffer: 1,\n                type: \"flat\",\n                selectable: false,\n                value: [],\n                dataValueField: null,\n                template: (data) => encode(data),\n                placeholderTemplate: () => \"loading...\",\n                groupTemplate: (data) => encode(data),\n                fixedGroupTemplate: (data) => encode(data),\n                mapValueTo: \"index\",\n                valueMapper: null,\n                ariaLabel: null,\n                ariaLabelledBy: null\n            },\n\n            events: [\n                CHANGE,\n                CLICK,\n                LISTBOUND,\n                ITEMCHANGE,\n                ACTIVATE,\n                DEACTIVATE\n            ],\n\n            setOptions: function(options) {\n                var itemClass = this.options.columns && this.options.columns.length ? TABLE_ITEM : LIST_ITEM;\n\n                Widget.fn.setOptions.call(this, options);\n\n                if (this._selectProxy && this.options.selectable === false) {\n                    this.element.off(CLICK, \".\" + itemClass, this._selectProxy);\n                } else if (!this._selectProxy && this.options.selectable) {\n                    this._selectable();\n                }\n\n                this._templates();\n                this.refresh();\n            },\n\n            items: function() {\n                return $(this._items);\n            },\n\n            destroy: function() {\n                this.wrapper.off(VIRTUAL_LIST_NS);\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n                Widget.fn.destroy.call(this);\n            },\n\n            setDataSource: function(source) {\n                var that = this;\n                var dataSource = source || {};\n                var value;\n\n                dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n                dataSource = kendo.data.DataSource.create(dataSource);\n\n                if (that.dataSource) {\n                    that.dataSource.unbind(CHANGE, that._refreshHandler);\n\n                    that._clean();\n                    that.bound(false);\n\n                    that._deferValueSet = true;\n                    value = that.value();\n\n                    that.value([]);\n                    that.mute(function() {\n                        that.value(value);\n                    });\n                } else {\n                    that._refreshHandler = that.refresh.bind(that);\n                }\n\n                that.dataSource = dataSource.bind(CHANGE, that._refreshHandler);\n\n                that.setDSFilter(dataSource.filter());\n\n                if (dataSource.view().length !== 0) {\n                    that.refresh();\n                } else if (that.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n\n            skip: function() {\n                return this.dataSource.currentRangeStart();\n            },\n\n            _triggerListBound: function() {\n                var that = this;\n                var skip = that.skip();\n\n                if (that.bound() && !that._selectingValue && that._skip !== skip) {\n                    that._skip = skip;\n                    that.trigger(LISTBOUND);\n                }\n            },\n\n            _getValues: function(dataItems) {\n                var getter = this._valueGetter;\n\n                return $.map(dataItems, function(dataItem) {\n                    return getter(dataItem);\n                });\n            },\n\n            _highlightSelectedItems: function() {\n                for (var i = 0; i < this._selectedDataItems.length; i++) {\n                    var item = this._getElementByDataItem(this._selectedDataItems[i]);\n                    if (item.length) {\n                        item.addClass(SELECTED);\n                    }\n                }\n            },\n\n            refresh: function(e) {\n                var that = this;\n                var action = e && e.action;\n                var isItemChange = action === \"itemchange\";\n                var filtered = this.isFiltered();\n                var result;\n\n                if (that._mute) { return; }\n\n                that._deferValueSet = false;\n\n                if (!that._fetching) {\n                    if (filtered) {\n                        that.focus(0);\n                    }\n\n                    that._createList();\n                    if (!action && that._values.length && !filtered &&\n                         !that.options.skipUpdateOnBind && !that._emptySearch) {\n                        that._selectingValue = true;\n\n                        that.bound(true);\n                        that.value(that._values, true).done(function() {\n                            that._selectingValue = false;\n                            that._triggerListBound();\n                        });\n                    } else {\n                        that.bound(true);\n                        that._highlightSelectedItems();\n                        that._triggerListBound();\n                    }\n                } else {\n                    if (that._renderItems) {\n                        that._renderItems(true);\n                    }\n\n                    that._triggerListBound();\n                }\n\n                if (isItemChange || action === \"remove\") {\n                    result = mapChangedItems(that._selectedDataItems, e.items);\n                    if (result.changed.length) {\n                        if (isItemChange) {\n                            that.trigger(\"selectedItemChange\", {\n                                items: result.changed\n                            });\n                        } else {\n                            that.value(that._getValues(result.unchanged));\n                        }\n                    }\n                }\n\n                that._fetching = false;\n            },\n\n            removeAt: function(position) {\n                var value = this._values.splice(position, 1)[0];\n\n                return {\n                    position: position,\n                    dataItem: this._removeSelectedDataItem(value)\n                };\n            },\n\n            _removeSelectedDataItem: function(value) {\n                var that = this,\n                    valueGetter = that._valueGetter;\n\n                for (var idx in that._selectedDataItems) {\n                    if (valueGetter(that._selectedDataItems[idx]) === value) {\n                        that._selectedIndexes.splice(idx, 1);\n                        return that._selectedDataItems.splice(idx, 1)[0];\n                    }\n                }\n            },\n\n            setValue: function(value) {\n                this._values = toArray(value);\n            },\n\n            value: function(value, _forcePrefetch) {\n                var that = this;\n\n                if (value === undefined$1) {\n                    return that._values.slice();\n                }\n\n                if (value === null) {\n                    value = [];\n                }\n\n                value = toArray(value);\n\n                if (!that._valueDeferred || that._valueDeferred.state() === \"resolved\") {\n                    that._valueDeferred = $.Deferred();\n                }\n\n                var shouldClear = that.options.selectable === \"multiple\" && that.select().length && value.length;\n\n                if (shouldClear || !value.length) {\n                    that.select(-1);\n                }\n\n                that._values = value;\n\n                if ((that.bound() && !that._mute && !that._deferValueSet) || _forcePrefetch) {\n                    that._prefetchByValue(value);\n                }\n\n                return that._valueDeferred;\n            },\n\n            _checkValuesOrder: function(value) {\n                if (this._removedAddedIndexes &&\n                    this._removedAddedIndexes.length === value.length) {\n                        var newValue = this._removedAddedIndexes.slice();\n                        this._removedAddedIndexes = null;\n                    return newValue;\n                }\n\n                return value;\n            },\n\n            _prefetchByValue: function(value) {\n                var that = this,\n                    dataView = that._dataView,\n                    valueGetter = that._valueGetter,\n                    mapValueTo = that.options.mapValueTo,\n                    item, match = false,\n                    forSelection = [];\n\n                //try to find the items in the loaded data\n                for (var i = 0; i < value.length; i++) {\n                    for (var idx = 0; idx < dataView.length; idx++) {\n                        item = dataView[idx].item;\n                        if (item) {\n                            match = isPrimitive(item) ? value[i] === item : value[i] === valueGetter(item);\n\n                            if (match) {\n                                forSelection.push(dataView[idx].index);\n                            }\n                        }\n                    }\n                }\n\n                if (forSelection.length === value.length) {\n                    that._values = [];\n                    that.select(forSelection);\n                    return;\n                }\n\n                //prefetch the items\n                if (typeof that.options.valueMapper === \"function\") {\n                    const callback = mapValueTo === 'index' ? that.mapValueToIndex : that.mapValueToDataItem;\n                    that.options.valueMapper(valueMapperOptions(this.options, value, callback.bind(that)));\n                } else {\n                     if (!that.value()[0]) {\n                         that.select([-1]);\n                     } else {\n                        that._selectingValue = false;\n                        that._triggerListBound();\n                     }\n                }\n            },\n\n            mapValueToIndex: function(indexes) {\n                if (indexes === undefined$1 || indexes === -1 || indexes === null) {\n                    indexes = [];\n                } else {\n                    indexes = toArray(indexes);\n                }\n\n                if (!indexes.length) {\n                    indexes = [-1];\n                } else {\n                    var removed = this._deselect([]).removed;\n                    if (removed.length) {\n                        this._triggerChange(removed, []);\n                    }\n                }\n\n                this.select(indexes);\n            },\n\n            mapValueToDataItem: function(dataItems) {\n                var removed, added;\n\n                if (dataItems === undefined$1 || dataItems === null) {\n                    dataItems = [];\n                } else {\n                    dataItems = toArray(dataItems);\n                }\n\n                if (!dataItems.length) {\n                    this.select([-1]);\n                } else {\n                    removed = $.map(this._selectedDataItems, function(item, index) {\n                        return { index: index, dataItem: item };\n                    });\n\n                    added = $.map(dataItems, function(item, index) {\n                        return { index: index, dataItem: item };\n                    });\n\n                    this._selectedDataItems = dataItems;\n\n                    this._selectedIndexes = [];\n\n                    for (var i = 0; i < this._selectedDataItems.length; i++) {\n                        var item = this._getElementByDataItem(this._selectedDataItems[i]);\n                        this._selectedIndexes.push(this._getIndecies(item)[0]);\n                        item.addClass(SELECTED);\n                    }\n\n                    this._triggerChange(removed, added);\n\n                    if (this._valueDeferred) {\n                        this._valueDeferred.resolve();\n                    }\n                }\n            },\n\n            deferredRange: function(index) {\n                var dataSource = this.dataSource;\n                var take = this.itemCount;\n                var ranges = this._rangesList;\n                var result = $.Deferred();\n                var defs = [];\n\n                var low = Math.floor(index / take) * take;\n                var high = Math.ceil(index / take) * take;\n\n                var pages = high === low ? [ high ] : [ low, high ];\n\n                $.each(pages, function(_, skip) {\n                    var end = skip + take;\n                    var existingRange = ranges[skip];\n                    var deferred;\n\n                    if (!existingRange || (existingRange.end !== end)) {\n                        deferred = $.Deferred();\n                        ranges[skip] = { end: end, deferred: deferred };\n\n                        dataSource._multiplePrefetch(skip, take, function() {\n                            deferred.resolve();\n                        });\n                    } else {\n                        deferred = existingRange.deferred;\n                    }\n\n                    defs.push(deferred);\n                });\n\n                $.when.apply($, defs).done(function() {\n                    result.resolve();\n                });\n\n                return result;\n            },\n\n            prefetch: function(indexes) {\n                var that = this,\n                    take = this.itemCount,\n                    isEmptyList = !that._promisesList.length;\n\n                if (!isActivePromise(that._activeDeferred)) {\n                    that._activeDeferred = $.Deferred();\n                    that._promisesList = [];\n                }\n\n                $.each(indexes, function(_, index) {\n                    that._promisesList.push(that.deferredRange(that._getSkip(index, take)));\n                });\n\n                if (isEmptyList) {\n                    $.when.apply($, that._promisesList).done(function() {\n                        that._promisesList = [];\n                        that._activeDeferred.resolve();\n                    });\n                }\n\n                return that._activeDeferred;\n            },\n\n            _findDataItem: function(view, index) {\n                var group;\n\n                //find in grouped view\n                if (this.options.type === \"group\") {\n                    for (var i = 0; i < view.length; i++) {\n                        group = view[i].items;\n                        if (group.length <= index) {\n                            index = index - group.length;\n                        } else {\n                            return group[index];\n                        }\n                    }\n                }\n\n                //find in flat view\n                return view[index];\n            },\n\n            _getRange: function(skip, take) {\n                return this.dataSource._findRange(skip, Math.min(skip + take, this.dataSource.total()));\n            },\n\n            dataItemByIndex: function(index) {\n                var that = this;\n                var take = that.itemCount;\n                var skip = that._getSkip(index, take);\n                var view = this._getRange(skip, take);\n\n                //should not return item if data is not loaded\n                if (!that._getRange(skip, take).length) {\n                    return null;\n                }\n\n                if (that.options.type === \"group\") {\n                    kendo.ui.progress($(that.wrapper), true);\n                    that.mute(function() {\n                        that.dataSource.range(skip, take, function() {\n                            kendo.ui.progress($(that.wrapper), false);\n                        });\n                        view = that.dataSource.view();\n                    });\n                }\n\n                return that._findDataItem(view, [index - skip]);\n            },\n\n            selectedDataItems: function() {\n                return this._selectedDataItems.slice();\n            },\n\n            scrollWith: function(value) {\n                this.content.scrollTop(this.content.scrollTop() + value);\n            },\n\n            scrollTo: function(y) {\n                this.content.scrollTop(y); //works only if the element is visible\n            },\n\n            scrollToIndex: function(index) {\n                this.scrollTo(index * this.options.itemHeight);\n            },\n\n            focus: function(candidate) {\n                var element,\n                    index,\n                    data,\n                    current,\n                    itemHeight = this.options.itemHeight,\n                    id = this._optionID,\n                    triggerEvent = true;\n\n                if (candidate === undefined$1) {\n                    current = this.element.find(\".\" + FOCUSED);\n                    return current.length ? current : null;\n                }\n\n                if (typeof candidate === \"function\") {\n                    data = this.dataSource.flatView();\n                    for (var idx = 0; idx < data.length; idx++) {\n                        if (candidate(data[idx])) {\n                            candidate = idx;\n                            break;\n                        }\n                    }\n                }\n\n                if (candidate instanceof Array) {\n                    candidate = lastFrom(candidate);\n                }\n\n                if (isNaN(candidate)) {\n                    element = $(candidate);\n                    index = parseInt($(element).attr(\"data-offset-index\"), 10);\n                } else {\n                    index = candidate;\n                    element = this._getElementByIndex(index);\n                }\n\n                if (index === -1) {\n                    this.element.find(\".\" + FOCUSED).removeClass(FOCUSED);\n                    this._focusedIndex = undefined$1;\n                    return;\n                }\n\n                if (element.length) { /*focus rendered item*/\n                    if (element.hasClass(FOCUSED)) {\n                        triggerEvent = false;\n                    }\n                    if (this._focusedIndex !== undefined$1) {\n                        current = this._getElementByIndex(this._focusedIndex);\n                        current\n                            .removeClass(FOCUSED)\n                            .removeAttr(\"id\");\n\n                        if (triggerEvent) {\n                            this.trigger(DEACTIVATE);\n                        }\n                    }\n\n                    this._focusedIndex = index;\n\n                    element\n                        .addClass(FOCUSED)\n                        .attr(\"id\", id);\n\n                    var position = this._getElementLocation(index);\n\n                    if (position === \"top\") {\n                        this.scrollTo(index * itemHeight);\n                    } else if (position === \"bottom\") {\n                        this.scrollTo((index * itemHeight + itemHeight) - this._screenHeight);\n                    } else if (position === \"outScreen\") {\n                        this.scrollTo(index * itemHeight);\n                    }\n\n                    if (triggerEvent) {\n                        this.trigger(ACTIVATE);\n                    }\n                } else { /*focus non rendered item*/\n                    this._focusedIndex = index;\n                    this.items().removeClass(FOCUSED);\n                    this.scrollToIndex(index);\n                }\n            },\n\n            focusIndex: function() {\n                return this._focusedIndex;\n            },\n\n            focusFirst: function() {\n                this.scrollTo(0);\n                this.focus(0);\n            },\n\n            focusLast: function() {\n                var lastIndex = this.dataSource.total();\n                this.scrollTo(this.heightContainer.offsetHeight);\n                this.focus(lastIndex - 1);\n            },\n\n            focusPrev: function() {\n                var index = this._focusedIndex;\n                var current;\n\n                if (!isNaN(index) && index > 0) {\n                    index -= 1;\n                    this.focus(index);\n\n                    current = this.focus();\n                    if (current && current.hasClass(\"k-loading-item\")) {\n                        index += 1;\n                        this.focus(index);\n                    }\n\n                    return index;\n                } else {\n                    index = this.dataSource.total() - 1;\n                    this.focus(index);\n                    return index;\n                }\n            },\n\n            focusNext: function() {\n                var index = this._focusedIndex;\n                var lastIndex = this.dataSource.total() - 1;\n                var current;\n\n                if (!isNaN(index) && index < lastIndex) {\n                    index += 1;\n                    this.focus(index);\n\n                    current = this.focus();\n                    if (current && current.hasClass(\"k-loading-item\")) {\n                        index -= 1;\n                        this.focus(index);\n                    }\n\n                    return index;\n                } else {\n                    index = 0;\n                    this.focus(index);\n                    return index;\n                }\n            },\n\n            _triggerChange: function(removed, added) {\n                removed = removed || [];\n                added = added || [];\n\n                if (removed.length || added.length) {\n                     this.trigger(CHANGE, {\n                        removed: removed,\n                        added: added\n                    });\n                }\n            },\n\n            select: function(candidate) {\n                var that = this,\n                    indices,\n                    initialIndices,\n                    singleSelection = that.options.selectable !== \"multiple\",\n                    prefetchStarted = isActivePromise(that._activeDeferred),\n                    filtered = this.isFiltered(),\n                    isAlreadySelected,\n                    deferred,\n                    result,\n                    removed = [];\n\n                if (candidate === undefined$1) {\n                    return that._selectedIndexes.slice();\n                }\n\n                if (!that._selectDeferred || that._selectDeferred.state() === \"resolved\") {\n                    that._selectDeferred = $.Deferred();\n                }\n\n                indices = that._getIndecies(candidate);\n                isAlreadySelected = singleSelection && !filtered && lastFrom(indices) === lastFrom(this._selectedIndexes);\n                removed = that._deselectCurrentValues(indices);\n\n                if (removed.length || !indices.length || isAlreadySelected) {\n                    that._triggerChange(removed);\n\n                    if (that._valueDeferred) {\n                        that._valueDeferred.resolve().promise();\n                    }\n\n                    return that._selectDeferred.resolve().promise();\n                }\n\n                if (indices.length === 1 && indices[0] === -1) {\n                    indices = [];\n                }\n\n                initialIndices = indices;\n                result = that._deselect(indices);\n                removed = result.removed;\n                indices = result.indices;\n\n                if (singleSelection) {\n                    prefetchStarted = false;\n                    if (indices.length) {\n                        indices = [lastFrom(indices)];\n                    }\n                }\n\n                var done = function() {\n                    var added = that._select(indices);\n\n                    if (initialIndices.length === indices.length || singleSelection) {\n                        that.focus(indices);\n                    }\n\n                    that._triggerChange(removed, added);\n\n                    if (that._valueDeferred) {\n                        that._valueDeferred.resolve();\n                    }\n\n                    that._selectDeferred.resolve();\n                };\n\n                deferred = that.prefetch(indices);\n\n                if (!prefetchStarted) {\n                    if (deferred) {\n                        deferred.done(done);\n                    } else {\n                        done();\n                    }\n                }\n\n                return that._selectDeferred.promise();\n            },\n\n            bound: function(bound) {\n                if (bound === undefined$1) {\n                    return this._listCreated;\n                }\n\n                this._listCreated = bound;\n            },\n\n            mute: function(callback) {\n                this._mute = true;\n                callback();\n                this._mute = false;\n            },\n\n            setDSFilter: function(filter) {\n                this._lastDSFilter = $.extend({}, filter);\n            },\n\n            isFiltered: function() {\n                if (!this._lastDSFilter) {\n                    this.setDSFilter(this.dataSource.filter());\n                }\n\n                return !kendo.data.Query.compareFilters(this.dataSource.filter(), this._lastDSFilter);\n            },\n\n            skipUpdate: $.noop,\n\n            _getElementByIndex: function(index) {\n                return this.items().filter(function(idx, element) {\n                    return index === parseInt($(element).attr(\"data-offset-index\"), 10);\n                });\n            },\n\n            _getElementByDataItem: function(dataItem) {\n                var dataView = this._dataView,\n                valueGetter = this._valueGetter,\n                    element, match;\n\n                for (var i = 0; i < dataView.length; i++) {\n                    match = dataView[i].item && isPrimitive(dataView[i].item) ? dataView[i].item === dataItem : dataView[i].item && dataItem && valueGetter(dataView[i].item) == valueGetter(dataItem);\n                    if (match) {\n                        element = dataView[i];\n                        break;\n                    }\n                }\n\n                return element ? this._getElementByIndex(element.index) : $();\n            },\n\n            _clean: function() {\n                this.result = undefined$1;\n                this._lastScrollTop = undefined$1;\n                this._skip = undefined$1;\n                $(this.heightContainer).remove();\n                this.heightContainer = undefined$1;\n                this.element.empty();\n            },\n\n            _height: function() {\n                var hasData = !!this.dataSource.view().length,\n                    height = this.options.height,\n                    itemHeight = this.options.itemHeight,\n                    total = this.dataSource.total();\n\n                if (!hasData) {\n                    height = 0;\n                } else if (height / itemHeight > total) {\n                    height = total * itemHeight;\n                }\n\n                return height;\n            },\n\n            setScreenHeight: function() {\n                var height = this._height();\n\n                this.content.height(height);\n                this._screenHeight = height;\n            },\n\n            screenHeight: function() {\n                return this._screenHeight;\n            },\n\n            _getElementLocation: function(index) {\n                var scrollTop = this.content.scrollTop(),\n                    screenHeight = this._screenHeight,\n                    itemHeight = this.options.itemHeight,\n                    yPosition = index * itemHeight,\n                    yDownPostion = yPosition + itemHeight,\n                    screenEnd = scrollTop + screenHeight,\n                    position;\n\n                if (yPosition === (scrollTop - itemHeight) || (yDownPostion > scrollTop && yPosition < scrollTop)) {\n                    position = \"top\";\n                } else if (yPosition === screenEnd || (yPosition < screenEnd && screenEnd < yDownPostion)) {\n                    position = \"bottom\";\n                } else if ((yPosition >= scrollTop) && (yPosition <= scrollTop + (screenHeight - itemHeight))) {\n                    position = \"inScreen\";\n                } else {\n                    position = \"outScreen\";\n                }\n\n                return position;\n            },\n\n            _templates: function() {\n                var options = this.options;\n                var templates = {\n                    template: options.template,\n                    placeholderTemplate: options.placeholderTemplate,\n                    groupTemplate: options.groupTemplate,\n                    fixedGroupTemplate: options.fixedGroupTemplate\n                };\n\n                if (options.columns) {\n                    options.columns.forEach((column, i) => {\n                        var templateText = column.field ? column.field.toString() : \"text\";\n                        var templateFunc = data => encode(kendo.getter(templateText)(data));\n\n                        templates[\"column\" + i] = column.template || templateFunc;\n                    });\n                }\n\n                for (var key in templates) {\n                    if (typeof templates[key] !== \"function\") {\n                        templates[key] = kendo.template(templates[key] || \"\");\n                    }\n                }\n\n                this.templates = templates;\n            },\n\n            _generateItems: function(element, count) {\n                var items = [],\n                    item, text,\n                    itemHeight = this.options.itemHeight + \"px\",\n                    itemClass = this.options.columns && this.options.columns.length ? TABLE_ITEM : LIST_ITEM;\n\n                while (count-- > 0) {\n                    text = document.createElement(\"span\");\n                    text.className = \"k-list-item-text\";\n\n                    item = document.createElement(\"li\");\n                    item.tabIndex = -1;\n                    item.className = itemClass;\n                    item.setAttribute(\"role\", \"option\");\n                    item.style.height = itemHeight;\n                    item.style.minHeight = itemHeight;\n                    item.appendChild(text);\n\n                    element.appendChild(item);\n\n                    items.push(item);\n                }\n\n                return items;\n            },\n\n            _saveInitialRanges: function() {\n                var ranges = this.dataSource._ranges;\n                var deferred = $.Deferred();\n                deferred.resolve();\n\n                this._rangesList = {};\n                for (var i = 0; i < ranges.length; i++) {\n                    this._rangesList[ranges[i].start] = { end: ranges[i].end, deferred: deferred };\n                }\n            },\n\n            _createList: function() {\n                var that = this,\n                    content = that.content.get(0),\n                    options = that.options,\n                    dataSource = that.dataSource;\n\n                if (that.bound()) {\n                    that._clean();\n                }\n\n                that._saveInitialRanges();\n                that._buildValueGetter();\n                that.setScreenHeight();\n                that.itemCount = getItemCount(that._screenHeight, options.listScreens, options.itemHeight);\n\n                if (that.itemCount > dataSource.total()) {\n                    that.itemCount = dataSource.total();\n                }\n\n                that._items = that._generateItems(that.element[0], that.itemCount);\n\n                that._setHeight(options.itemHeight * dataSource.total());\n                that.options.type = (dataSource.group() || []).length ? \"group\" : \"flat\";\n\n                if (that.options.type === \"flat\") {\n                    if (that.header.closest(GROUP_ROW_SEL).length) {\n                        that.header.closest(GROUP_ROW_SEL).hide();\n                    } else {\n                        that.header.hide();\n                    }\n                } else {\n                    if (that.header.closest(GROUP_ROW_SEL).length) {\n                        that.header.closest(GROUP_ROW_SEL).show();\n                    } else {\n                        that.header.show();\n                    }\n                }\n\n                that.getter = that._getter(function() {\n                    that._renderItems(true);\n                });\n\n                that._onScroll = function(scrollTop, force) {\n                    var getList = that._listItems(that.getter);\n                    return that._fixedHeader(scrollTop, getList(scrollTop, force));\n                };\n\n                that._renderItems = that._whenChanged(\n                    scrollCallback(content, that._onScroll),\n                    syncList(that._reorderList(that._items, render.bind(that)))\n                );\n\n                that._renderItems();\n                that._calculateGroupPadding(that._screenHeight);\n                that._calculateColumnsHeaderPadding();\n            },\n\n            _setHeight: function(height) {\n                var currentHeight,\n                    heightContainer = this.heightContainer;\n\n                if (!heightContainer) {\n                    heightContainer = this.heightContainer = appendChild(this.content[0], HEIGHTCONTAINER);\n                } else {\n                    currentHeight = heightContainer.offsetHeight;\n                }\n\n                if (height !== currentHeight) {\n                    heightContainer.innerHTML = \"\";\n\n                    while (height > 0) {\n                        var padHeight = Math.min(height, 250000); //IE workaround, should not create elements with height larger than 250000px\n                        appendChild(heightContainer).style.height = padHeight + \"px\";\n                        height -= padHeight;\n                    }\n                }\n            },\n\n            _getter: function() {\n                var lastRequestedRange = null,\n                    dataSource = this.dataSource,\n                    lastRangeStart = dataSource.skip(),\n                    type = this.options.type,\n                    pageSize = this.itemCount,\n                    flatGroups = {};\n\n                if (dataSource.pageSize() < pageSize) {\n                    this.mute(function() {\n                        dataSource.pageSize(pageSize);\n                    });\n                }\n\n                return function(index, rangeStart) {\n                    var that = this;\n                    if (!dataSource.inRange(rangeStart, pageSize)) {\n                        if (lastRequestedRange !== rangeStart) {\n                            lastRequestedRange = rangeStart;\n                            lastRangeStart = rangeStart;\n\n                            if (that._getterDeferred) {\n                                that._getterDeferred.reject();\n                            }\n\n                            that._getterDeferred = that.deferredRange(rangeStart);\n                            that._getterDeferred.then(function() {\n                                var firstItemIndex = that._indexConstraint(that.content[0].scrollTop);\n\n                                that._getterDeferred = null;\n\n                                if (rangeStart <= firstItemIndex && firstItemIndex <= (rangeStart + pageSize)) {\n                                    that._fetching = true;\n                                    dataSource.range(rangeStart, pageSize);\n                                }\n                            });\n                        }\n\n                        return null;\n                    } else {\n                        if (lastRangeStart !== rangeStart) {\n                            this.mute(function() {\n                                dataSource.range(rangeStart, pageSize);\n                                lastRangeStart = rangeStart;\n                            });\n                        }\n\n                        var result;\n                        if (type === \"group\") { //grouped list\n                            if (!flatGroups[rangeStart]) {\n                                var flatGroup = flatGroups[rangeStart] = [];\n                                var groups = dataSource.view();\n                                for (var i = 0, len = groups.length; i < len; i++) {\n                                    var group = groups[i];\n                                    for (var j = 0, groupLength = group.items.length; j < groupLength; j++) {\n                                        flatGroup.push({ item: group.items[j], group: group.value });\n                                    }\n                                }\n                            }\n\n                            result = flatGroups[rangeStart][index - rangeStart];\n                        } else { //flat list\n                            result = dataSource.view()[index - rangeStart];\n                        }\n\n                        return result;\n                    }\n                };\n            },\n\n            _fixedHeader: function(scrollTop, list) {\n                var group = this.currentVisibleGroup,\n                    itemHeight = this.options.itemHeight,\n                    firstVisibleDataItemIndex = Math.floor((scrollTop - list.top) / itemHeight),\n                    firstVisibleDataItem = list.items[firstVisibleDataItemIndex];\n\n                if (firstVisibleDataItem && firstVisibleDataItem.item) {\n                    var firstVisibleGroup = firstVisibleDataItem.group;\n\n                    if (firstVisibleGroup !== group) {\n                        var fixedGroupText = firstVisibleGroup || \"\";\n                        this.header.html(this.templates.fixedGroupTemplate(fixedGroupText));\n                        this.currentVisibleGroup = firstVisibleGroup;\n                    }\n                }\n\n                return list;\n            },\n\n            _itemMapper: function(item, index, value) {\n                var listType = this.options.type,\n                    itemHeight = this.options.itemHeight,\n                    currentIndex = this._focusedIndex,\n                    selected = false,\n                    current = false,\n                    newGroup = false,\n                    group = null,\n                    match = false,\n                    valueGetter = this._valueGetter;\n\n                if (listType === \"group\") {\n                    if (item) {\n                        newGroup = index === 0 || (this._currentGroup !== false && this._currentGroup !== item.group);\n                        this._currentGroup = item.group;\n                    }\n\n                    group = item ? item.group : null;\n                    item = item ? item.item : null;\n                }\n\n                if (this.options.mapValueTo === \"dataItem\" && this._selectedDataItems.length && item) {\n                    for (var i = 0; i < this._selectedDataItems.length; i++) {\n                        match = valueGetter(this._selectedDataItems[i]) === valueGetter(item);\n                        if (match) {\n                            selected = true;\n                            break;\n                        }\n                    }\n                } else if (!this.isFiltered() && value.length && item) {\n                    for (var j = 0; j < value.length; j++) {\n                        match = isPrimitive(item) ? value[j] === item : value[j] === valueGetter(item);\n                        if (match) {\n                            value.splice(j , 1);\n                            selected = true;\n                            break;\n                        }\n                    }\n                }\n\n                if (currentIndex === index) {\n                    current = true;\n                }\n\n                return {\n                    item: item ? item : null,\n                    group: group,\n                    newGroup: newGroup,\n                    selected: selected,\n                    current: current,\n                    index: index,\n                    top: index * itemHeight\n                };\n            },\n\n            _range: function(index) {\n                var itemCount = this.itemCount,\n                    value = this._values.slice(),\n                    items = [],\n                    item;\n\n                this._view = {};\n                this._currentGroup = false;\n\n                for (var i = index, length = index + itemCount; i < length; i++) {\n                    item = this._itemMapper(this.getter(i, index), i, value);\n                    if (items[items.length - 1]) {\n                        items[items.length - 1].isLastGroupedItem = item.newGroup;\n                    }\n                    items.push(item);\n                    this._view[item.index] = item;\n                }\n\n                this._dataView = items;\n                return items;\n            },\n\n            _getDataItemsCollection: function(scrollTop, lastScrollTop) {\n                var items = this._range(this._listIndex(scrollTop, lastScrollTop));\n                return {\n                    index: items.length ? items[0].index : 0,\n                    top: items.length ? items[0].top : 0,\n                    items: items\n                };\n            },\n\n            _listItems: function() {\n                var screenHeight = this._screenHeight,\n                    options = this.options;\n\n                var theValidator = listValidator(options, screenHeight);\n\n                return (function(value, force) {\n                    var result = this.result,\n                        lastScrollTop = this._lastScrollTop;\n\n                    if (force || !result || !theValidator(result, value, lastScrollTop)) {\n                        result = this._getDataItemsCollection(value, lastScrollTop);\n                    }\n\n                    this._lastScrollTop = value;\n                    this.result = result;\n\n                    return result;\n                }).bind(this);\n            },\n\n            _whenChanged: function(getter, callback) {\n                var current;\n\n                return function(force) {\n                    var theNew = getter(force);\n\n                    if (theNew !== current) {\n                        current = theNew;\n                        callback(theNew, force);\n                    }\n                };\n            },\n\n            _reorderList: function(list, reorder) {\n                var that = this;\n                var length = list.length;\n                var currentOffset = -Infinity;\n                reorder = map2(reorder, this.templates).bind(this);\n\n                return function(list2, offset, force) {\n                    var diff = offset - currentOffset;\n                    var range, range2;\n\n                    if (force || Math.abs(diff) >= length) { // full reorder\n                        range = list;\n                        range2 = list2;\n                    } else { // partial reorder\n                        range = reshift(list, diff);\n                        range2 = diff > 0 ? list2.slice(-diff) : list2.slice(0, -diff);\n                    }\n\n                    reorder(range, range2, that.bound());\n\n                    currentOffset = offset;\n                };\n            },\n\n            _bufferSizes: function() {\n                var options = this.options;\n\n                return bufferSizes(this._screenHeight, options.listScreens, options.oppositeBuffer);\n            },\n\n            _indexConstraint: function(position) {\n                var itemCount = this.itemCount,\n                    itemHeight = this.options.itemHeight,\n                    total = this.dataSource.total();\n\n                return Math.min(Math.max(total - itemCount, 0), Math.max(0, Math.floor(position / itemHeight )));\n            },\n\n            _listIndex: function(scrollTop, lastScrollTop) {\n                var buffers = this._bufferSizes(),\n                    position;\n\n                position = scrollTop - ((scrollTop > lastScrollTop) ? buffers.down : buffers.up);\n\n                return this._indexConstraint(position);\n            },\n\n            _selectable: function() {\n                var itemClass = this.options.columns && this.options.columns.length ? TABLE_ITEM : LIST_ITEM;\n\n                if (this.options.selectable) {\n                    this._selectProxy = this._clickHandler.bind(this);\n                    this.element.on(CLICK + VIRTUAL_LIST_NS, \".\" + itemClass, this._selectProxy);\n                }\n            },\n\n            getElementIndex: function(element) {\n                if (!(element instanceof jQuery)) {\n                    return undefined$1;\n                }\n\n                return parseInt(element.attr(\"data-offset-index\"), 10);\n            },\n\n            _getIndecies: function(candidate) {\n                var result = [], data;\n\n                if (typeof candidate === \"function\") {\n                    data = this.dataSource.flatView();\n                    for (var idx = 0; idx < data.length; idx++) {\n                        if (candidate(data[idx])) {\n                            result.push(idx);\n                            break;\n                        }\n                    }\n                }\n\n                if (typeof candidate === \"number\") {\n                    result.push(candidate);\n                }\n\n                var elementIndex = this.getElementIndex(candidate);\n                if (!isNaN(elementIndex)) {\n                    result.push(elementIndex);\n                }\n\n                if (candidate instanceof Array) {\n                    result = candidate;\n                }\n\n                return result;\n            },\n\n            _deselect: function(indices) {\n                var removed = [],\n                    selectedIndex,\n                    dataItem,\n                    selectedIndexes = this._selectedIndexes,\n                    selectedDataItems = this._selectedDataItems,\n                    position = 0,\n                    selectable = this.options.selectable,\n                    removedindexesCounter = 0,\n                    valueGetter = this._valueGetter,\n                    item, match,\n                    result = null;\n\n                indices = indices.slice();\n\n                if (selectable === true || !indices.length) { //deselect everything\n                    for (var idx = 0; idx < selectedIndexes.length; idx++) {\n                        if (selectedIndexes[idx] !== undefined$1) {\n                            this._getElementByIndex(selectedIndexes[idx]).removeClass(SELECTED);\n                        } else if (selectedDataItems[idx]) {\n                            this._getElementByDataItem(selectedDataItems[idx]).removeClass(SELECTED);\n                        }\n\n                        removed.push({\n                            index: selectedIndexes[idx],\n                            position: idx,\n                            dataItem: selectedDataItems[idx]\n                        });\n                    }\n\n                    this._values = [];\n                    this._selectedDataItems = [];\n                    this._selectedIndexes = [];\n                } else if (selectable === \"multiple\") {\n                    for (var i = 0; i < indices.length; i++) {\n                        result = null;\n                        position = $.inArray(indices[i], selectedIndexes);\n                        dataItem = this.dataItemByIndex(indices[i]);\n\n                        if (position === -1 && dataItem) {\n                            for (var j = 0; j < selectedDataItems.length; j++) {\n                                match = isPrimitive(dataItem) ? selectedDataItems[j] === dataItem : valueGetter(selectedDataItems[j]) === valueGetter(dataItem);\n                                if (match) {\n                                    item = this._getElementByIndex(indices[i]);\n                                    result = this._deselectSingleItem(item, j, indices[i], removedindexesCounter);\n                                }\n                            }\n                        } else {\n                            selectedIndex = selectedIndexes[position];\n\n                            if (selectedIndex !== undefined$1) {\n                                item = this._getElementByIndex(selectedIndex);\n                                result = this._deselectSingleItem(item, position, selectedIndex, removedindexesCounter);\n                            }\n                        }\n\n                        if (result) {\n                            indices.splice(i, 1);\n                            removed.push(result);\n\n                            removedindexesCounter++;\n                            i--;\n                        }\n                    }\n                }\n\n                return {\n                    indices: indices,\n                    removed: removed\n                };\n            },\n\n            _deselectSingleItem: function(item, position, selectedIndex, removedindexesCounter) {\n                var dataItem;\n\n                if (!item.hasClass(SELECTED)) {\n                    return;\n                }\n\n                item.removeClass(SELECTED);\n                this._values.splice(position, 1);\n                this._selectedIndexes.splice(position, 1);\n                dataItem = this._selectedDataItems.splice(position, 1)[0];\n\n                return {\n                    index: selectedIndex,\n                    position: position + removedindexesCounter,\n                    dataItem: dataItem\n                };\n            },\n\n            _deselectCurrentValues: function(indices) {\n                var children = this.element[0].children;\n                var value, index, position;\n                var values = this._values;\n                var removed = [];\n                var idx = 0;\n                var j;\n\n                if (this.options.selectable !== \"multiple\" || !this.isFiltered()) {\n                    return [];\n                }\n\n                if (indices[0] === -1) {\n                    $(children).removeClass(SELECTED);\n                    removed = $.map(this._selectedDataItems.slice(0), function(dataItem, idx) {\n                       return {\n                          dataItem: dataItem,\n                          position: idx\n                       };\n                    });\n                    this._selectedIndexes = [];\n                    this._selectedDataItems = [];\n                    this._values = [];\n                    return removed;\n                }\n\n                for (; idx < indices.length; idx++) {\n                    position = -1;\n                    index = indices[idx];\n                    if (this.dataItemByIndex(index)) {\n                        value = this._valueGetter(this.dataItemByIndex(index));\n                    }\n\n                    for (j = 0; j < values.length; j++) {\n                        if (value == values[j]) {\n                            position = j;\n                            break;\n                        }\n                    }\n\n                    if (position > -1) {\n                        removed.push(this.removeAt(position));\n                        $(children[index]).removeClass(SELECTED);\n                    }\n                }\n\n                return removed;\n            },\n\n            _getSkip: function(index, take) {\n                var page = index < take ? 1 : Math.floor(index / take) + 1;\n\n                return (page - 1) * take;\n            },\n\n            _select: function(indexes) {\n                var that = this,\n                    singleSelection = this.options.selectable !== \"multiple\",\n                    dataSource = this.dataSource,\n                    dataItem, oldSkip,\n                    take = this.itemCount,\n                    valueGetter = this._valueGetter,\n                    added = [];\n\n                if (singleSelection) {\n                    that._selectedIndexes = [];\n                    that._selectedDataItems = [];\n                    that._values = [];\n                }\n\n                oldSkip = dataSource.skip();\n\n                $.each(indexes, function(_, index) {\n                    var skip = that._getSkip(index, take);\n\n                    that.mute(function() {\n                        dataSource.range(skip, take); //switch the range to get the dataItem\n\n                        dataItem = that._findDataItem(dataSource.view(), [index - skip]);\n                        that._selectedIndexes.push(index);\n                        that._selectedDataItems.push(dataItem);\n                        that._values.push(isPrimitive(dataItem) ? dataItem : valueGetter(dataItem));\n\n                        added.push({\n                            index: index,\n                            dataItem: dataItem\n                        });\n\n                        that._getElementByIndex(index).addClass(SELECTED);\n\n                        dataSource.range(oldSkip, take); //switch back the range\n                    });\n                });\n\n                that._values = that._checkValuesOrder(that._values);\n\n                return added;\n            },\n\n            _clickHandler: function(e) {\n                var item = $(e.currentTarget);\n\n                if (!e.isDefaultPrevented() && item.attr(\"data-uid\")) {\n                    this.trigger(CLICK, { item: item });\n                }\n            },\n\n            _buildValueGetter: function() {\n                this._valueGetter = kendo.getter(this.options.dataValueField);\n            },\n\n            _calculateGroupPadding: function(height) {\n                var firstItem = this.items().first(),\n                    groupHeader = this.header,\n                    padding = 0;\n\n                if (groupHeader[0] && groupHeader[0].style.display !== \"none\") {\n                    if (height !== \"auto\") {\n                        padding = kendo.support.scrollbar();\n                    }\n\n                    padding += parseFloat(firstItem.css(\"border-right-width\"), 10) + parseFloat(firstItem.children(\".k-group\").css(\"right\"), 10);\n\n                    groupHeader.css(\"padding-right\", padding);\n                }\n            },\n\n            _calculateColumnsHeaderPadding: function() {\n                if (this.options.columns && this.options.columns.length) {\n                    var isRtl = kendo.support.isRtl(this.wrapper);\n                    var scrollbar = kendo.support.scrollbar();\n                    var columnsHeader = this.content.parent().parent().find(\".k-table-header\");\n                    var total = this.dataSource.total();\n\n                    columnsHeader.css((isRtl ? \"padding-left\" : \"padding-right\"), total ? scrollbar : 0);\n                }\n            }\n\n        });\n\n        kendo.ui.VirtualList = VirtualList;\n        kendo.ui.plugin(VirtualList);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}