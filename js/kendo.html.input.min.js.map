{"version":3,"sources":["raw-js/kendo.html.input.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendohtml","input","js","this","$","undefined$1","kendo","window","HTMLBase","html","HTMLInput","extend","init","element","options","that","fn","call","_wrapper","_addClasses","label","labelPosition","labelId","encoded","elementId","id","wrapper","addClass","inputClass","prop","type","guid","labelEl","labelClass","text","attr","optional","append","optionalClass","optionalText","after","wrapperHtml","outerHTML","HTMLCheckBox","name","rounded","size","stylingOptions","HTMLRadioButton","renderCheckBox","arguments","isPlainObject","renderRadioButton","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","jQuery"],"mappings":"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","file":"kendo.html.input.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.html.base.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.html.base'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendohtml = global.kendohtml || {}, global.kendohtml.input = global.kendohtml.input || {}, global.kendohtml.input.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"html.input\",\n        name: \"Html.Input\",\n        category: \"web\",\n        description: \"HTML rendering utility for Kendo UI for jQuery.\",\n        depends: [ \"html.base\" ],\n        features: []\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            HTMLBase = kendo.html.HTMLBase;\n\n        var renderCheckBox = function(element, options) {\n            if (arguments[0] === undefined$1 || $.isPlainObject(arguments[0])) {\n                options = element;\n                element = $(\"<input />\");\n            }\n\n            return (new HTMLCheckBox(element, options)).html();\n        };\n\n        var renderRadioButton = function(element, options) {\n            if (arguments[0] === undefined$1 || $.isPlainObject(arguments[0])) {\n                options = element;\n                element = $(\"<input />\");\n            }\n\n            return (new HTMLRadioButton(element, options)).html();\n        };\n\n        var HTMLInput = HTMLBase.extend({\n            init: function(element, options) {\n                var that = this;\n                HTMLBase.fn.init.call(that, element, options);\n                that._wrapper();\n                that._addClasses();\n            },\n            options: {\n                label: null,\n                labelPosition: \"after\",\n                labelId: null,\n                encoded: true\n            },\n            _wrapper: function() {\n                var that = this,\n                    element = that.element[0],\n                    options = that.options,\n                    elementId = element.id;\n\n                that.wrapper = that.element\n                    .addClass(options.inputClass)\n                    .prop(\"type\", options.type);\n\n                if (!elementId && !!options.label) {\n                    element.id = elementId = kendo.guid();\n                }\n\n                if (!!options.label) {\n                    that.labelEl = $(\"<label for='\" + elementId + \"' class='\" + options.labelClass + \"'>\");\n\n                    if (options.encoded) {\n                        that.labelEl.text(options.label);\n                    } else {\n                        that.labelEl.html(options.label);\n                    }\n\n                    if (options.labelId) {\n                        that.labelEl.attr(\"id\", options.labelId);\n                    }\n\n                    if (options.optional) {\n                        that.labelEl.append(\"<span class='\" + options.optionalClass + \"'>\" + options.optionalText + \"</span>\");\n                    }\n\n                    that.element[options.labelPosition](that.labelEl);\n                }\n            },\n            html: function() {\n                var that = this,\n                    after = that.options.labelPosition === \"after\",\n                    wrapperHtml = HTMLBase.fn.html.call(that);\n\n                if (!that.labelEl) {\n                    return wrapperHtml;\n                }\n\n                if (after) {\n                    return wrapperHtml + that.labelEl[0].outerHTML;\n                }\n\n                return that.labelEl[0].outerHTML + wrapperHtml;\n            }\n        });\n\n        var HTMLCheckBox = HTMLInput.extend({\n            init: function(element, options) {\n                var that = this;\n                HTMLInput.fn.init.call(that, element, options);\n                that._addClasses();\n            },\n            options: {\n                name: \"HTMLCheckBox\",\n                inputClass: \"k-checkbox\",\n                labelClass: \"k-checkbox-label\",\n                optionalClass: \"k-label-optional\",\n                optionalText: \"(Optional)\",\n                type: \"checkbox\",\n                rounded: \"medium\",\n                size: \"medium\",\n                stylingOptions: [ \"size\", \"rounded\" ]\n            }\n        });\n\n        var HTMLRadioButton = HTMLInput.extend({\n            init: function(element, options) {\n                var that = this;\n                HTMLInput.fn.init.call(that, element, options);\n                that._addClasses();\n            },\n            options: {\n                name: \"HTMLRadioButton\",\n                inputClass: \"k-radio\",\n                labelClass: \"k-radio-label\",\n                optionalClass: \"k-label-optional\",\n                optionalText: \"(Optional)\",\n                type: \"radio\",\n                size: \"medium\",\n                stylingOptions: [ \"size\"]\n            }\n        });\n\n        $.extend(kendo.html, {\n            renderCheckBox: renderCheckBox,\n            renderRadioButton: renderRadioButton,\n            HTMLInput: HTMLInput,\n            HTMLCheckBox: HTMLCheckBox,\n            HTMLRadioButton: HTMLRadioButton\n        });\n\n        kendo.cssProperties.registerPrefix(\"HTMLCheckBox\", \"k-checkbox-\");\n\n        kendo.cssProperties.registerValues(\"HTMLCheckBox\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        kendo.cssProperties.registerPrefix(\"HTMLRadioButton\", \"k-radio-\");\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}