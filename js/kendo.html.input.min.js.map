{"version":3,"file":"kendo.html.input.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendohtml","input","js","this","$","undefined$1","kendo","window","HTMLBase","html","HTMLInput","extend","init","element","options","that","fn","call","_wrapper","_addClasses","label","labelPosition","labelId","encoded","elementId","id","wrapper","addClass","inputClass","prop","type","guid","labelEl","labelClass","text","attr","optional","append","optionalClass","optionalText","after","wrapperHtml","outerHTML","HTMLCheckBox","name","rounded","size","stylingOptions","HTMLRadioButton","renderCheckBox","arguments","isPlainObject","renderRadioButton","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","jQuery"],"sources":["kendo.html.input.js"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.html.base.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.html.base'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendohtml = global.kendohtml || {}, global.kendohtml.input = global.kendohtml.input || {}, global.kendohtml.input.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"html.input\",\n        name: \"Html.Input\",\n        category: \"web\",\n        description: \"HTML rendering utility for Kendo UI for jQuery.\",\n        depends: [ \"html.base\" ],\n        features: []\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            HTMLBase = kendo.html.HTMLBase;\n\n        var renderCheckBox = function(element, options) {\n            if (arguments[0] === undefined$1 || $.isPlainObject(arguments[0])) {\n                options = element;\n                element = $(\"<input />\");\n            }\n\n            return (new HTMLCheckBox(element, options)).html();\n        };\n\n        var renderRadioButton = function(element, options) {\n            if (arguments[0] === undefined$1 || $.isPlainObject(arguments[0])) {\n                options = element;\n                element = $(\"<input />\");\n            }\n\n            return (new HTMLRadioButton(element, options)).html();\n        };\n\n        var HTMLInput = HTMLBase.extend({\n            init: function(element, options) {\n                var that = this;\n                HTMLBase.fn.init.call(that, element, options);\n                that._wrapper();\n                that._addClasses();\n            },\n            options: {\n                label: null,\n                labelPosition: \"after\",\n                labelId: null,\n                encoded: true\n            },\n            _wrapper: function() {\n                var that = this,\n                    element = that.element[0],\n                    options = that.options,\n                    elementId = element.id;\n\n                that.wrapper = that.element\n                    .addClass(options.inputClass)\n                    .prop(\"type\", options.type);\n\n                if (!elementId && !!options.label) {\n                    element.id = elementId = kendo.guid();\n                }\n\n                if (!!options.label) {\n                    that.labelEl = $(\"<label for='\" + elementId + \"' class='\" + options.labelClass + \"'>\");\n\n                    if (options.encoded) {\n                        that.labelEl.text(options.label);\n                    } else {\n                        that.labelEl.html(options.label);\n                    }\n\n                    if (options.labelId) {\n                        that.labelEl.attr(\"id\", options.labelId);\n                    }\n\n                    if (options.optional) {\n                        that.labelEl.append(\"<span class='\" + options.optionalClass + \"'>\" + options.optionalText + \"</span>\");\n                    }\n\n                    that.element[options.labelPosition](that.labelEl);\n                }\n            },\n            html: function() {\n                var that = this,\n                    after = that.options.labelPosition === \"after\",\n                    wrapperHtml = HTMLBase.fn.html.call(that);\n\n                if (!that.labelEl) {\n                    return wrapperHtml;\n                }\n\n                if (after) {\n                    return wrapperHtml + that.labelEl[0].outerHTML;\n                }\n\n                return that.labelEl[0].outerHTML + wrapperHtml;\n            }\n        });\n\n        var HTMLCheckBox = HTMLInput.extend({\n            init: function(element, options) {\n                var that = this;\n                HTMLInput.fn.init.call(that, element, options);\n                that._addClasses();\n            },\n            options: {\n                name: \"HTMLCheckBox\",\n                inputClass: \"k-checkbox\",\n                labelClass: \"k-checkbox-label\",\n                optionalClass: \"k-label-optional\",\n                optionalText: \"(Optional)\",\n                type: \"checkbox\",\n                rounded: \"medium\",\n                size: \"medium\",\n                stylingOptions: [ \"size\", \"rounded\" ]\n            }\n        });\n\n        var HTMLRadioButton = HTMLInput.extend({\n            init: function(element, options) {\n                var that = this;\n                HTMLInput.fn.init.call(that, element, options);\n                that._addClasses();\n            },\n            options: {\n                name: \"HTMLRadioButton\",\n                inputClass: \"k-radio\",\n                labelClass: \"k-radio-label\",\n                optionalClass: \"k-label-optional\",\n                optionalText: \"(Optional)\",\n                type: \"radio\",\n                size: \"medium\",\n                stylingOptions: [ \"size\"]\n            }\n        });\n\n        $.extend(kendo.html, {\n            renderCheckBox: renderCheckBox,\n            renderRadioButton: renderRadioButton,\n            HTMLInput: HTMLInput,\n            HTMLCheckBox: HTMLCheckBox,\n            HTMLRadioButton: HTMLRadioButton\n        });\n\n        kendo.cssProperties.registerPrefix(\"HTMLCheckBox\", \"k-checkbox-\");\n\n        kendo.cssProperties.registerValues(\"HTMLCheckBox\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        kendo.cssProperties.registerPrefix(\"HTMLRadioButton\", \"k-radio-\");\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}