{"version":3,"sources":["raw-js/kendo.textarea.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendotextarea","js","this","$","kendo","jQuery","addInputPrefixSuffixContainers","widget","wrapper","options","prefixInsertBefore","suffixInsertAfter","prefixContainer","suffixContainer","prefix","prefixOptions","suffix","suffixOptions","hasPrefixContent","template","icon","hasSuffixContent","layoutFlow","containerOrientation","INPUT_SEPARATOR","children","_isInInlineAIPrompt","insertBefore","prependTo","html","renderIcon","separator","insertAfter","appendTo","_prefixContainer","_suffixContainer","undefined$1","window","Widget","ui","isPlainObject","NS","CHANGE","DISABLED","READONLY","FOCUSED","STATEDISABLED","STATEREADONLY","ARIA_DISABLED","TextArea","extend","init","element","that","fn","call","value","val","readonly","Boolean","attr","enable","placeholder","maxLength","inputMode","replace","length","_wrapper","_label","_editable","disable","_applyAttributes","_applyCssClasses","floatingLabel","refresh","notify","events","attributes","name","label","resizable","maxRows","cols","rows","rounded","size","fillMode","resize","overflow","action","cssProperties","getValidClass","propName","property","_value","focus","destroy","_inputLabel","remove","style","cssText","off","unwrap","setOptions","toggleClass","prop","removeClass","on","_focusin","bind","_focusout","_input","floating","labelText","id","content","_floatingLabelContainer","wrap","parent","FloatingLabel","addClass","isFunction","guid","newValue","trigger","computedStyle","getComputedStyle","lineHeight","parseInt","totalPadding","paddingTop","paddingBottom","minHeight","maxHeight","css","height","scrollHeight","DOMElement","width","className","registerPrefix","registerValues","values","roundedValues","concat","plugin","kendo$1","__meta__","category","description","depends","Object","defineProperty"],"mappings":"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","file":"kendo.textarea.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.floatinglabel.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.floatinglabel'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendotextarea = global.kendotextarea || {}, global.kendotextarea.js = {})));\n})(this, (function (exports) {\n    let $ = kendo.jQuery;\n\n    function addInputPrefixSuffixContainers({ widget, wrapper, options, prefixInsertBefore, suffixInsertAfter }) {\n        var prefix = options.prefixOptions,\n            suffix = options.suffixOptions,\n            hasPrefixContent = prefix.template || prefix.icon,\n            hasSuffixContent = suffix.template || suffix.icon,\n            suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n            layoutFlow = options.layoutFlow,\n            containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n            separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n            INPUT_SEPARATOR = `<span class=\"k-input-separator k-input-separator-${separatorOrientation}\"></span>`,\n            prefixContainer,\n            suffixContainer;\n\n        if (prefix && hasPrefixContent) {\n            prefixContainer = wrapper.children(\".k-input-prefix\");\n\n            if (!prefixContainer[0]) {\n                if (options._isInInlineAIPrompt) {\n                    containerOrientation = layoutFlow || \"horizontal\";\n                }\n\n                prefixContainer = $(`<span class=\"k-input-prefix k-input-prefix-${containerOrientation}\" />`);\n                if (prefixInsertBefore) {\n                    prefixContainer.insertBefore(prefixInsertBefore);\n                } else {\n                    prefixContainer.prependTo(wrapper);\n                }\n            }\n\n            if (prefix.icon) {\n                prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n            }\n\n            if (prefix.template) {\n                prefixContainer.html(kendo.template(prefix.template)({}));\n            }\n\n            if (prefix.separator) {\n                $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n            }\n        }\n\n        if (suffix && hasSuffixContent) {\n            suffixContainer = wrapper.children(\".k-input-suffix\");\n\n            if (!suffixContainer[0]) {\n                suffixContainer = $(`<span class=\"k-input-suffix k-input-suffix-${containerOrientation}\" />`).appendTo(wrapper);\n                if (suffixInsertAfter) {\n                    suffixContainer.insertAfter(suffixInsertAfter);\n                } else {\n                    suffixContainer.appendTo(wrapper);\n                }\n            }\n\n            if (suffix.icon) {\n                suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n            }\n\n            if (suffix.template) {\n                suffixContainer.html(kendo.template(suffix.template)({}));\n            }\n\n            if (suffix.separator) {\n                $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n            }\n        }\n\n        widget._prefixContainer = prefixContainer;\n        widget._suffixContainer = suffixContainer;\n    }\n\n    const __meta__ = {\n        id: \"textarea\",\n        name: \"TextArea\",\n        category: \"web\",\n        description: \"The TextArea widget represents a multi-line plain-text editing control which enables you to style and provide a floating label functionality to textarea elements\",\n        depends: [\"core\", \"floatinglabel\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            ui = kendo.ui,\n            isPlainObject = $.isPlainObject,\n            NS = \".kendoTextArea\",\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            INPUT = \"k-input-inner\",\n            FOCUSED = \"k-focus\",\n            LABELCLASSES = \"k-label k-input-label\",\n            FLOATINGLABELCLASS = \"k-floating-label\",\n            STATEDISABLED = \"k-disabled\",\n            STATEREADONLY = \"k-readonly\",\n            ARIA_DISABLED = \"aria-disabled\",\n            TEXTAREACONTAINER = \"k-textarea-container\";\n\n        var TextArea = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n                options = $.extend(true, {}, options);\n\n                that.options.value = options.value || that.element.val();\n                that.options.readonly = options.readonly !== undefined$1 ? options.readonly : Boolean(that.element.attr(\"readonly\"));\n                that.options.enable = options.enable !== undefined$1 ? options.enable : !(Boolean(that.element.attr(\"disabled\")));\n                that.options.placeholder = options.placeholder || that.element.attr(\"placeholder\");\n                that.options.maxLength = options.maxLength || that.element.attr(\"maxlength\");\n                that.options.inputMode = options.inputMode || that.element.attr(\"inputmode\") || \"text\";\n\n                if (!that.options.value.replace(/\\s/g, '').length) {\n                    that.options.value = '';\n                    that.element.val('');\n                }\n\n                that.value(that.options.value);\n                that._wrapper();\n                that._label();\n                that._editable({\n                    readonly: that.options.readonly,\n                    disable: !(that.options.enable)\n                });\n                that._applyAttributes();\n                that._applyCssClasses();\n                that.element.attr(\"autocomplete\", \"off\");\n                that.element.attr(\"inputmode\", that.options.inputMode);\n\n                addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options });\n                if (that.floatingLabel) {\n                    that.floatingLabel.refresh();\n                }\n\n                kendo.notify(that);\n            },\n\n            events: [\n                CHANGE\n            ],\n\n            attributes: [\n                \"maxLength\",\n                \"rows\",\n                \"placeholder\"\n            ],\n\n            options: {\n                name: 'TextArea',\n                value: '',\n                readonly: false,\n                enable: true,\n                placeholder: '',\n                label: null,\n                resizable: \"none\",\n                maxLength: null,\n                maxRows: null,\n                cols: 20,\n                rows: 1,\n                rounded: \"medium\",\n                size: \"medium\",\n                fillMode: \"solid\",\n                resize: \"none\",\n                overflow: \"auto\",\n                layoutFlow: \"vertical\",\n                prefixOptions: {\n                    separator: true\n                },\n                suffixOptions: {\n                    separator: true\n                }\n            },\n\n            _applyCssClasses: function(action) {\n                let that = this;\n                let options = that.options;\n                let resize = kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: \"resize\",\n                    value: options.resize\n                });\n\n                let overflow = kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: \"overflow\",\n                    value: options.overflow\n                });\n\n                let layoutFlow = kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: \"layoutFlow\",\n                    value: options.layoutFlow\n                });\n\n                Widget.fn._applyCssClasses.call(that);\n\n                if (!resize && (options.resize === \"none\" || options.resize === \"auto\")) {\n                    resize = \"k-resize-none\";\n                }\n\n                if (overflow) {\n                    overflow = \"!\" + overflow;\n                }\n\n                action = action || \"addClass\";\n\n                that.element[action](resize);\n                that.element[action](overflow);\n                that.element[action](INPUT);\n                that.wrapper[action](layoutFlow);\n                if (options.layoutFlow == \"vertical\") {\n                    that.element[action](\"!k-flex-none\");\n                }\n            },\n\n            _applyAttributes: function() {\n                var that = this;\n                var property;\n                var attributes = {};\n\n                for (property in that.attributes) {\n                    attributes[that.attributes[property]] = that.options[that.attributes[property]];\n                }\n\n                that.element.attr(attributes);\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                that._value = value;\n                that.element.val(value);\n            },\n\n            readonly: function(readonly) {\n                var that = this;\n\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                var that = this;\n\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            focus: function() {\n                var that = this;\n\n                that.element[0].focus();\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that._applyCssClasses(\"removeClass\");\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.destroy();\n                }\n\n                if (that._inputLabel) {\n                    that._inputLabel.remove();\n                    that._inputLabel = null;\n                }\n\n                // Move the styles back to the element.\n                that.element[0].style.cssText = that.wrapper[0].style.cssText;\n\n                that.element.off(NS);\n                that.element.unwrap();\n                that.wrapper = null;\n                Widget.fn.destroy.call(that);\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                that.destroy();\n                that.init(that.element, options);\n            },\n\n            _editable: function(options) {\n                var that = this;\n                var element = that.element;\n                var wrapper = that.wrapper;\n                var disable = options.disable;\n                var readonly = options.readonly;\n\n                element.off(NS);\n\n                if (!readonly && !disable) {\n                    element.prop(DISABLED, false)\n                           .prop(READONLY, false)\n                           .attr(ARIA_DISABLED, false);\n\n                    wrapper.removeClass(STATEDISABLED)\n                            .removeClass(STATEREADONLY);\n\n                    element.on(\"focusin\" + NS, that._focusin.bind(that));\n                    element.on(\"focusout\" + NS, that._focusout.bind(that));\n                    element.on(\"input\" + NS, that._input.bind(that));\n                } else {\n                    element.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable);\n\n                    wrapper.toggleClass(STATEDISABLED, disable)\n                            .toggleClass(STATEREADONLY, readonly);\n                }\n            },\n\n            _label: function() {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var id = element.attr(\"id\");\n                var floating;\n                var labelText;\n\n                if (options.label !== null) {\n                    floating = isPlainObject(options.label) ? options.label.floating : false;\n                    labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                    if (floating) {\n                        that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                        that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                        that._floatingLabelContainer.addClass(TEXTAREACONTAINER);\n                    }\n\n                    if (kendo.isFunction(labelText)) {\n                        labelText = labelText.call(that);\n                    }\n\n                    if (!labelText) {\n                        labelText = \"\";\n                    }\n\n                    if (!id) {\n                        id = options.name + \"_\" + kendo.guid();\n                        element.attr(\"id\", id);\n                    }\n\n                    that._inputLabel = $(\"<label class='\" + (floating ? FLOATINGLABELCLASS : LABELCLASSES) + \"' for='\" + id + \"'>\" + labelText + \"</label>'\")[floating ? \"insertAfter\" : \"insertBefore\"](that.wrapper);\n                }\n            },\n\n            _focusin: function() {\n                var that = this;\n\n                that.wrapper.addClass(FOCUSED);\n            },\n\n            _focusout: function() {\n                var that = this;\n                var value = that._value;\n                var newValue = that.element.val();\n\n                that.wrapper.removeClass(FOCUSED);\n\n                if (value === null) {\n                    value = \"\";\n                }\n\n                if (value !== newValue) {\n                    that._value = newValue;\n\n                    that.trigger(CHANGE);\n                }\n            },\n\n            _input: function() {\n                const that = this;\n                const element = that.element;\n                const options = that.options;\n\n                if (options.resize === \"auto\" && options.maxRows) {\n                    const computedStyle = getComputedStyle(element[0]);\n                    const lineHeight = parseInt(computedStyle.lineHeight, 10) || 16;\n                    const paddingTop = parseInt(computedStyle.paddingTop, 10) || 0;\n                    const paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0;\n                    const totalPadding = paddingTop + paddingBottom;\n                    const minHeight = (options.rows * lineHeight) + totalPadding;\n                    const maxHeight = (options.maxRows * lineHeight) + totalPadding;\n\n                    element.css({\n                        height: minHeight + \"px\"\n                    });\n\n                    const scrollHeight = element[0].scrollHeight;\n\n                    element.css({\n                        maxHeight: maxHeight + \"px\",\n                        height: scrollHeight + \"px\"\n                    });\n                }\n            },\n\n            _wrapper: function() {\n                var that = this;\n                var element = that.element;\n                var DOMElement = element[0];\n                var wrapper;\n\n                wrapper = element.wrap(\"<span class='k-input k-textarea'></span>\").parent();\n                wrapper[0].style.cssText = DOMElement.style.cssText;\n                DOMElement.style.width = \"\";\n\n                that.wrapper = wrapper.addClass(DOMElement.className).removeClass('input-validation-error');\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"TextArea\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"TextArea\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(TextArea);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports[\"default\"] = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}