{"version":3,"sources":["raw-js/kendo.textarea.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendotextarea","js","this","$","kendo","jQuery","addInputPrefixSuffixContainers","widget","wrapper","options","prefixInsertBefore","suffixInsertAfter","prefixContainer","suffixContainer","prefix","prefixOptions","suffix","suffixOptions","hasPrefixContent","template","icon","hasSuffixContent","layoutFlow","containerOrientation","INPUT_SEPARATOR","children","insertBefore","prependTo","html","renderIcon","separator","insertAfter","appendTo","_prefixContainer","_suffixContainer","undefined$1","window","Widget","ui","isPlainObject","NS","CHANGE","DISABLED","READONLY","FOCUSED","STATEDISABLED","STATEREADONLY","ARIA_DISABLED","TextArea","extend","init","element","that","fn","call","value","val","readonly","Boolean","attr","enable","placeholder","maxLength","replace","length","_wrapper","_label","_editable","disable","_applyAttributes","_applyCssClasses","floatingLabel","refresh","notify","events","attributes","name","label","resizable","cols","rows","rounded","size","fillMode","resize","overflow","action","cssProperties","getValidClass","propName","property","_value","focus","destroy","_inputLabel","remove","style","cssText","off","unwrap","setOptions","toggleClass","prop","removeClass","on","_focusin","bind","_focusout","floating","labelText","id","content","_floatingLabelContainer","wrap","parent","FloatingLabel","addClass","isFunction","guid","newValue","trigger","DOMElement","width","className","registerPrefix","registerValues","values","roundedValues","concat","plugin","kendo$1","__meta__","category","description","depends","Object","defineProperty"],"mappings":"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","file":"kendo.textarea.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.floatinglabel.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.floatinglabel'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendotextarea = global.kendotextarea || {}, global.kendotextarea.js = {})));\n})(this, (function (exports) {\n    let $ = kendo.jQuery;\n\n    function addInputPrefixSuffixContainers({ widget, wrapper, options, prefixInsertBefore, suffixInsertAfter }) {\n        var prefix = options.prefixOptions,\n            suffix = options.suffixOptions,\n            hasPrefixContent = prefix.template || prefix.icon,\n            hasSuffixContent = suffix.template || suffix.icon,\n            suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n            layoutFlow = options.layoutFlow,\n            containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n            separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n            INPUT_SEPARATOR = `<span class=\"k-input-separator k-input-separator-${separatorOrientation}\"></span>`,\n            prefixContainer,\n            suffixContainer;\n\n        if (prefix && hasPrefixContent) {\n            prefixContainer = wrapper.children(\".k-input-prefix\");\n\n            if (!prefixContainer[0]) {\n                prefixContainer = $(`<span class=\"k-input-prefix k-input-prefix-${containerOrientation}\" />`);\n                if (prefixInsertBefore) {\n                    prefixContainer.insertBefore(prefixInsertBefore);\n                } else {\n                    prefixContainer.prependTo(wrapper);\n                }\n            }\n\n            if (prefix.icon) {\n                prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n            }\n\n            if (prefix.template) {\n                prefixContainer.html(kendo.template(prefix.template)({}));\n            }\n\n            if (prefix.separator) {\n                $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n            }\n        }\n\n        if (suffix && hasSuffixContent) {\n            suffixContainer = wrapper.children(\".k-input-suffix\");\n\n            if (!suffixContainer[0]) {\n                suffixContainer = $(`<span class=\"k-input-suffix k-input-suffix-${containerOrientation}\" />`).appendTo(wrapper);\n                if (suffixInsertAfter) {\n                    suffixContainer.insertAfter(suffixInsertAfter);\n                } else {\n                    suffixContainer.appendTo(wrapper);\n                }\n            }\n\n            if (suffix.icon) {\n                suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n            }\n\n            if (suffix.template) {\n                suffixContainer.html(kendo.template(suffix.template)({}));\n            }\n\n            if (suffix.separator) {\n                $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n            }\n        }\n\n        widget._prefixContainer = prefixContainer;\n        widget._suffixContainer = suffixContainer;\n    }\n\n    const __meta__ = {\n        id: \"textarea\",\n        name: \"TextArea\",\n        category: \"web\",\n        description: \"The TextArea widget represents a multi-line plain-text editing control which enables you to style and provide a floating label functionality to textarea elements\",\n        depends: [\"core\", \"floatinglabel\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            ui = kendo.ui,\n            isPlainObject = $.isPlainObject,\n            NS = \".kendoTextArea\",\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            INPUT = \"k-input-inner\",\n            FOCUSED = \"k-focus\",\n            LABELCLASSES = \"k-label k-input-label\",\n            FLOATINGLABELCLASS = \"k-floating-label\",\n            STATEDISABLED = \"k-disabled\",\n            STATEREADONLY = \"k-readonly\",\n            ARIA_DISABLED = \"aria-disabled\",\n            TEXTAREACONTAINER = \"k-textarea-container\";\n\n        var TextArea = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n                options = $.extend(true, {}, options);\n\n                that.options.value = options.value || that.element.val();\n                that.options.readonly = options.readonly !== undefined$1 ? options.readonly : Boolean(that.element.attr(\"readonly\"));\n                that.options.enable = options.enable !== undefined$1 ? options.enable : !(Boolean(that.element.attr(\"disabled\")));\n                that.options.placeholder = options.placeholder || that.element.attr(\"placeholder\");\n                that.options.maxLength = options.maxLength || that.element.attr(\"maxlength\");\n\n                if (!that.options.value.replace(/\\s/g, '').length) {\n                    that.options.value = '';\n                    that.element.val('');\n                }\n\n                that.value(that.options.value);\n                that._wrapper();\n                that._label();\n                that._editable({\n                    readonly: that.options.readonly,\n                    disable: !(that.options.enable)\n                });\n                that._applyAttributes();\n                that._applyCssClasses();\n                that.element.attr(\"autocomplete\", \"off\");\n\n                addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options });\n                if (that.floatingLabel) {\n                    that.floatingLabel.refresh();\n                }\n\n                kendo.notify(that);\n            },\n\n            events: [\n                CHANGE\n            ],\n\n            attributes: [\n                \"maxLength\",\n                \"rows\",\n                \"placeholder\"\n            ],\n\n            options: {\n                name: 'TextArea',\n                value: '',\n                readonly: false,\n                enable: true,\n                placeholder: '',\n                label: null,\n                resizable: \"none\",\n                maxLength: null,\n                cols: 20,\n                rows: 1,\n                rounded: \"medium\",\n                size: \"medium\",\n                fillMode: \"solid\",\n                resize: \"none\",\n                overflow: \"auto\",\n                layoutFlow: \"vertical\",\n                prefixOptions: {\n                    separator: true\n                },\n                suffixOptions: {\n                    separator: true\n                }\n            },\n\n            _applyCssClasses: function(action) {\n                var that = this,\n                    options = that.options,\n                    resize = kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: \"resize\",\n                        value: options.resize\n                    }),\n                    overflow = kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: \"overflow\",\n                        value: options.overflow\n                    }),\n                    layoutFlow = kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: \"layoutFlow\",\n                        value: options.layoutFlow\n                    });\n\n                Widget.fn._applyCssClasses.call(that);\n\n                if (!resize && options.resize === \"none\") {\n                    resize = \"k-resize-none\";\n                }\n\n                if (overflow) {\n                    overflow = \"!\" + overflow;\n                }\n\n                action = action || \"addClass\";\n\n                that.element[action](resize);\n                that.element[action](overflow);\n                that.element[action](INPUT);\n                that.wrapper[action](layoutFlow);\n                if (options.layoutFlow == \"vertical\") {\n                    that.element[action](\"!k-flex-none\");\n                }\n            },\n\n            _applyAttributes: function() {\n                var that = this;\n                var property;\n                var attributes = {};\n\n                for (property in that.attributes) {\n                    attributes[that.attributes[property]] = that.options[that.attributes[property]];\n                }\n\n                that.element.attr(attributes);\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                that._value = value;\n                that.element.val(value);\n            },\n\n            readonly: function(readonly) {\n                var that = this;\n\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                var that = this;\n\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            focus: function() {\n                var that = this;\n\n                that.element[0].focus();\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that._applyCssClasses(\"removeClass\");\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.destroy();\n                }\n\n                if (that._inputLabel) {\n                    that._inputLabel.remove();\n                    that._inputLabel = null;\n                }\n\n                // Move the styles back to the element.\n                that.element[0].style.cssText = that.wrapper[0].style.cssText;\n\n                that.element.off(NS);\n                that.element.unwrap();\n                that.wrapper = null;\n                Widget.fn.destroy.call(that);\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                that.destroy();\n                that.init(that.element, options);\n            },\n\n            _editable: function(options) {\n                var that = this;\n                var element = that.element;\n                var wrapper = that.wrapper;\n                var disable = options.disable;\n                var readonly = options.readonly;\n\n                element.off(NS);\n\n                if (!readonly && !disable) {\n                    element.prop(DISABLED, false)\n                           .prop(READONLY, false)\n                           .attr(ARIA_DISABLED, false);\n\n                    wrapper.removeClass(STATEDISABLED)\n                            .removeClass(STATEREADONLY);\n\n                    element.on(\"focusin\" + NS, that._focusin.bind(that));\n                    element.on(\"focusout\" + NS, that._focusout.bind(that));\n                } else {\n                    element.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable);\n\n                    wrapper.toggleClass(STATEDISABLED, disable)\n                            .toggleClass(STATEREADONLY, readonly);\n                }\n            },\n\n            _label: function() {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var id = element.attr(\"id\");\n                var floating;\n                var labelText;\n\n                if (options.label !== null) {\n                    floating = isPlainObject(options.label) ? options.label.floating : false;\n                    labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                    if (floating) {\n                        that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                        that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                        that._floatingLabelContainer.addClass(TEXTAREACONTAINER);\n                    }\n\n                    if (kendo.isFunction(labelText)) {\n                        labelText = labelText.call(that);\n                    }\n\n                    if (!labelText) {\n                        labelText = \"\";\n                    }\n\n                    if (!id) {\n                        id = options.name + \"_\" + kendo.guid();\n                        element.attr(\"id\", id);\n                    }\n\n                    that._inputLabel = $(\"<label class='\" + (floating ? FLOATINGLABELCLASS : LABELCLASSES) + \"' for='\" + id + \"'>\" + labelText + \"</label>'\")[floating ? \"insertAfter\" : \"insertBefore\"](that.wrapper);\n                }\n            },\n\n            _focusin: function() {\n                var that = this;\n\n                that.wrapper.addClass(FOCUSED);\n            },\n\n            _focusout: function() {\n                var that = this;\n                var value = that._value;\n                var newValue = that.element.val();\n\n                that.wrapper.removeClass(FOCUSED);\n\n                if (value === null) {\n                    value = \"\";\n                }\n\n                if (value !== newValue) {\n                    that._value = newValue;\n\n                    that.trigger(CHANGE);\n                }\n            },\n\n            _wrapper: function() {\n                var that = this;\n                var element = that.element;\n                var DOMElement = element[0];\n                var wrapper;\n\n                wrapper = element.wrap(\"<span class='k-input k-textarea'></span>\").parent();\n                wrapper[0].style.cssText = DOMElement.style.cssText;\n                DOMElement.style.width = \"\";\n\n                that.wrapper = wrapper.addClass(DOMElement.className).removeClass('input-validation-error');\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"TextArea\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"TextArea\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(TextArea);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports[\"default\"] = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}