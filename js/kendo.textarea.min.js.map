{"version":3,"sources":["raw-js/kendo.textarea.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendotextarea","js","this","$","kendo","jQuery","addInputPrefixSuffixContainers","widget","wrapper","options","prefixInsertBefore","suffixInsertAfter","prefixContainer","suffixContainer","prefix","prefixOptions","suffix","suffixOptions","hasPrefixContent","template","icon","hasSuffixContent","layoutFlow","containerOrientation","INPUT_SEPARATOR","children","insertBefore","prependTo","html","renderIcon","separator","insertAfter","appendTo","_prefixContainer","_suffixContainer","undefined$1","window","Widget","ui","isPlainObject","NS","CHANGE","DISABLED","READONLY","FOCUSED","STATEDISABLED","STATEREADONLY","ARIA_DISABLED","TextArea","extend","init","element","that","fn","call","value","val","readonly","Boolean","attr","enable","placeholder","replace","length","_wrapper","_label","_editable","disable","_applyAttributes","_applyCssClasses","addClass","floatingLabel","refresh","notify","events","attributes","name","label","resizable","maxLength","cols","rows","rounded","size","fillMode","resize","overflow","action","cssProperties","getValidClass","propName","property","_value","focus","destroy","off","setOptions","toggleClass","prop","removeClass","on","_focusin","bind","_focusout","floating","labelText","id","content","_floatingLabelContainer","wrap","parent","FloatingLabel","isFunction","guid","_inputLabel","newValue","trigger","DOMElement","style","cssText","width","className","registerPrefix","registerValues","values","roundedValues","concat","plugin"],"mappings":"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","file":"kendo.textarea.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.floatinglabel.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.floatinglabel'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendotextarea = global.kendotextarea || {}, global.kendotextarea.js = factory()));\n})(this, (function () {\n    let $ = kendo.jQuery;\n\n    function addInputPrefixSuffixContainers({ widget, wrapper, options, prefixInsertBefore, suffixInsertAfter }) {\n        var prefix = options.prefixOptions,\n            suffix = options.suffixOptions,\n            hasPrefixContent = prefix.template || prefix.icon,\n            hasSuffixContent = suffix.template || suffix.icon,\n            suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n            layoutFlow = options.layoutFlow,\n            containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n            separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n            INPUT_SEPARATOR = `<span class=\"k-input-separator k-input-separator-${separatorOrientation}\"></span>`,\n            prefixContainer,\n            suffixContainer;\n\n        if (prefix && hasPrefixContent) {\n            prefixContainer = wrapper.children(\".k-input-prefix\");\n\n            if (!prefixContainer[0]) {\n                prefixContainer = $(`<span class=\"k-input-prefix k-input-prefix-${containerOrientation}\" />`);\n                if (prefixInsertBefore) {\n                    prefixContainer.insertBefore(prefixInsertBefore);\n                } else {\n                    prefixContainer.prependTo(wrapper);\n                }\n            }\n\n            if (prefix.icon) {\n                prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n            }\n\n            if (prefix.template) {\n                prefixContainer.html(kendo.template(prefix.template)({}));\n            }\n\n            if (prefix.separator) {\n                $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n            }\n        }\n\n        if (suffix && hasSuffixContent) {\n            suffixContainer = wrapper.children(\".k-input-suffix\");\n\n            if (!suffixContainer[0]) {\n                suffixContainer = $(`<span class=\"k-input-suffix k-input-suffix-${containerOrientation}\" />`).appendTo(wrapper);\n                if (suffixInsertAfter) {\n                    suffixContainer.insertAfter(suffixInsertAfter);\n                } else {\n                    suffixContainer.appendTo(wrapper);\n                }\n            }\n\n            if (suffix.icon) {\n                suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n            }\n\n            if (suffix.template) {\n                suffixContainer.html(kendo.template(suffix.template)({}));\n            }\n\n            if (suffix.separator) {\n                $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n            }\n        }\n\n        widget._prefixContainer = prefixContainer;\n        widget._suffixContainer = suffixContainer;\n    }\n\n    var __meta__ = {\n        id: \"textarea\",\n        name: \"TextArea\",\n        category: \"web\",\n        description: \"The TextArea widget represents a multi-line plain-text editing control which enables you to style and provide a floating label functionality to textarea elements\",\n        depends: [\"core\", \"floatinglabel\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            ui = kendo.ui,\n            isPlainObject = $.isPlainObject,\n            NS = \".kendoTextArea\",\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            INPUT = \"k-input-inner\",\n            FOCUSED = \"k-focus\",\n            LABELCLASSES = \"k-label k-input-label\",\n            FLOATINGLABELCLASS = \"k-floating-label\",\n            STATEDISABLED = \"k-disabled\",\n            STATEREADONLY = \"k-readonly\",\n            ARIA_DISABLED = \"aria-disabled\",\n            TEXTAREACONTAINER = \"k-textarea-container\";\n\n        var TextArea = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n                options = $.extend(true, {}, options);\n\n                that.options.value = options.value || that.element.val();\n                that.options.readonly = options.readonly !== undefined$1 ? options.readonly : Boolean(that.element.attr(\"readonly\"));\n                that.options.enable = options.enable !== undefined$1 ? options.enable : !(Boolean(that.element.attr(\"disabled\")));\n                that.options.placeholder = options.placeholder || that.element.attr(\"placeholder\");\n\n                if (!that.options.value.replace(/\\s/g, '').length) {\n                    that.options.value = '';\n                    that.element.val('');\n                }\n\n                that.value(that.options.value);\n                that._wrapper();\n                that._label();\n                that._editable({\n                    readonly: that.options.readonly,\n                    disable: !(that.options.enable)\n                });\n                that._applyAttributes();\n                that._applyCssClasses();\n                that.element\n                    .addClass(INPUT)\n                    .attr(\"autocomplete\", \"off\");\n\n                addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options });\n                if (that.floatingLabel) {\n                    that.floatingLabel.refresh();\n                }\n\n                kendo.notify(that);\n            },\n\n            events: [\n                CHANGE\n            ],\n\n            attributes: [\n                \"maxLength\",\n                \"rows\",\n                \"placeholder\"\n            ],\n\n            options: {\n                name: 'TextArea',\n                value: '',\n                readonly: false,\n                enable: true,\n                placeholder: '',\n                label: null,\n                resizable: \"none\",\n                maxLength: null,\n                cols: 20,\n                rows: 1,\n                rounded: \"medium\",\n                size: \"medium\",\n                fillMode: \"solid\",\n                resize: \"none\",\n                overflow: \"auto\",\n                layoutFlow: \"vertical\",\n                prefixOptions: {\n                    separator: true\n                },\n                suffixOptions: {\n                    separator: true\n                }\n            },\n\n            _applyCssClasses: function(action) {\n                var that = this,\n                    options = that.options,\n                    resize = kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: \"resize\",\n                        value: options.resize\n                    }),\n                    overflow = kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: \"overflow\",\n                        value: options.overflow\n                    }),\n                    layoutFlow = kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: \"layoutFlow\",\n                        value: options.layoutFlow\n                    });\n\n                Widget.fn._applyCssClasses.call(that);\n\n                if (!resize && options.resize === \"none\") {\n                    resize = \"k-resize-none\";\n                }\n\n                if (overflow) {\n                    overflow = \"!\" + overflow;\n                }\n\n                action = action || \"addClass\";\n\n                that.element[action](resize);\n                that.element[action](overflow);\n                that.wrapper[action](layoutFlow);\n                if (options.layoutFlow == \"vertical\") {\n                    that.element[action](\"!k-flex-none\");\n                }\n            },\n\n            _applyAttributes: function() {\n                var that = this;\n                var property;\n                var attributes = {};\n\n                for (property in that.attributes) {\n                    attributes[that.attributes[property]] = that.options[that.attributes[property]];\n                }\n\n                that.element.attr(attributes);\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                that._value = value;\n                that.element.val(value);\n            },\n\n            readonly: function(readonly) {\n                var that = this;\n\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                var that = this;\n\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            focus: function() {\n                var that = this;\n\n                that.element[0].focus();\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.destroy();\n                }\n\n                that.element.off(NS);\n                Widget.fn.destroy.call(that);\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                that._applyCssClasses(\"removeClass\");\n                Widget.fn.setOptions.call(that, options);\n            },\n\n            _editable: function(options) {\n                var that = this;\n                var element = that.element;\n                var wrapper = that.wrapper;\n                var disable = options.disable;\n                var readonly = options.readonly;\n\n                element.off(NS);\n\n                if (!readonly && !disable) {\n                    element.prop(DISABLED, false)\n                           .prop(READONLY, false)\n                           .attr(ARIA_DISABLED, false);\n\n                    wrapper.removeClass(STATEDISABLED)\n                            .removeClass(STATEREADONLY);\n\n                    element.on(\"focusin\" + NS, that._focusin.bind(that));\n                    element.on(\"focusout\" + NS, that._focusout.bind(that));\n                } else {\n                    element.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable);\n\n                    wrapper.toggleClass(STATEDISABLED, disable)\n                            .toggleClass(STATEREADONLY, readonly);\n                }\n            },\n\n            _label: function() {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var id = element.attr(\"id\");\n                var floating;\n                var labelText;\n\n                if (options.label !== null) {\n                    floating = isPlainObject(options.label) ? options.label.floating : false;\n                    labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                    if (floating) {\n                        that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                        that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                        that._floatingLabelContainer.addClass(TEXTAREACONTAINER);\n                    }\n\n                    if (kendo.isFunction(labelText)) {\n                        labelText = labelText.call(that);\n                    }\n\n                    if (!labelText) {\n                        labelText = \"\";\n                    }\n\n                    if (!id) {\n                        id = options.name + \"_\" + kendo.guid();\n                        element.attr(\"id\", id);\n                    }\n\n                    that._inputLabel = $(\"<label class='\" + (floating ? FLOATINGLABELCLASS : LABELCLASSES) + \"' for='\" + id + \"'>\" + labelText + \"</label>'\")[floating ? \"insertAfter\" : \"insertBefore\"](that.wrapper);\n                }\n            },\n\n            _focusin: function() {\n                var that = this;\n\n                that.wrapper.addClass(FOCUSED);\n            },\n\n            _focusout: function() {\n                var that = this;\n                var value = that._value;\n                var newValue = that.element.val();\n\n                that.wrapper.removeClass(FOCUSED);\n\n                if (value === null) {\n                    value = \"\";\n                }\n\n                if (value !== newValue) {\n                    that._value = newValue;\n\n                    that.trigger(CHANGE);\n                }\n            },\n\n            _wrapper: function() {\n                var that = this;\n                var element = that.element;\n                var DOMElement = element[0];\n                var wrapper;\n\n                wrapper = element.wrap(\"<span class='k-input k-textarea'></span>\").parent();\n                wrapper[0].style.cssText = DOMElement.style.cssText;\n                DOMElement.style.width = \"\";\n\n                that.wrapper = wrapper.addClass(DOMElement.className).removeClass('input-validation-error');\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"TextArea\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"TextArea\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(TextArea);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}