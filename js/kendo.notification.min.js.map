{"version":3,"sources":["raw-js/kendo.notification.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendonotification","js","this","$","undefined$1","kendo","window","Widget","ui","extend","encode","htmlEncode","setTimeout","CLICK","SHOW","HIDE","KNOTIFICATION","KCLOSEICONCLASS","KCLOSEICONSELECTOR","KHIDING","INFO","SUCCESS","WARNING","ERROR","TYPEICONS","TOP","LEFT","BOTTOM","RIGHT","NS","GET_TEMPLATE_FUNC","encodeContent","typeIcon","content","closeButton","icon","TEMPLATE","SAFE_TEMPLATE","defaultActions","close","template","iconClass","Notification","init","element","options","that","fn","call","appendTo","is","hide","_compileTemplates","templates","_guid","guid","_isRtl","support","isRtl","_compileStacking","stacking","position","top","left","notify","events","name","pinned","bottom","right","hideOnClick","button","allowHideAfter","autoHideAfter","width","height","title","animation","open","effects","duration","kendoTemplate","_compiled","each","key","value","type","templateId","html","_defaultCompiled","_safeCompiled","_getCompiled","safe","defaultCompiled","origin","paddings","paddingTop","paddingRight","paddingBottom","paddingLeft","horizontalAlignment","_popupOrigin","_popupPosition","_popupPaddings","_attachPopupEvents","popup","closeIcon","attachDelay","isNaN","attachClick","target","on","_hidePopup","bind","find","_showPopup","wrapper","openPopup","x","y","last","Popup","anchor","document","body","_resizeOnWrap","copyAnchorStyles","autosize","modal","collision","_triggerHide","deactivate","e","sender","off","destroy","removeClass","outerWidth","outerHeight","addClass","css","margin","zIndex","_togglePin","pin","win","sign","parseInt","scrollTop","scrollLeft","_attachStaticEvents","_hideStatic","_showStatic","insertionMethod","_hideTimeouts","kendoAnimate","getNotifications","idx","attr","push","complete","remove","trigger","show","args","defaultArgs","contentId","isFunction","isPlainObject","toggleClass","append","addActions","showText","info","success","warning","error","openedNotifications","forEach","clearTimeout","data","guidElements","setOptions","newOptions","actions","actionsContainer","Array","isArray","action","wrap","parent","plugin","jQuery"],"mappings":"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","file":"kendo.notification.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.popup.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.popup', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendonotification = global.kendonotification || {}, global.kendonotification.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"notification\",\n        name: \"Notification\",\n        category: \"web\",\n        description: \"The Notification widget displays user alerts.\",\n        depends: [ \"core\", \"popup\", \"icons\" ],\n        features: [ {\n            id: \"notification-fx\",\n            name: \"Animation\",\n            description: \"Support for animation\",\n            depends: [ \"fx\" ]\n        } ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n            setTimeout = window.setTimeout,\n            CLICK = \"click\",\n            SHOW = \"show\",\n            HIDE = \"hide\",\n            KNOTIFICATION = \"k-notification\",\n            KCLOSEICONCLASS = \"k-close-icon\",\n            KCLOSEICONSELECTOR = `.k-notification-actions .${KCLOSEICONCLASS}`,\n            KHIDING = \"k-hiding\",\n            INFO = \"info\",\n            SUCCESS = \"success\",\n            WARNING = \"warning\",\n            ERROR = \"error\",\n            TYPEICONS = { [INFO]: \"info-circle\", [ERROR]: \"x-outline\", [WARNING]: \"exclamation-circle\", [SUCCESS]: \"check-outline\" },\n            TOP = \"top\",\n            LEFT = \"left\",\n            BOTTOM = \"bottom\",\n            RIGHT = \"right\",\n            UP = \"up\",\n            NS = \".kendoNotification\",\n            WRAPPER = '<div role=\"alert\" aria-live=\"polite\" class=\"k-notification\"></div>',\n            GET_TEMPLATE_FUNC = (encodeContent) =>\n                ({ typeIcon, content, closeButton }) =>\n                    kendo.ui.icon($(`<span title=\"${encode(typeIcon)}\"></span>`), { icon: TYPEICONS[encode(typeIcon)] || encode(typeIcon) }) +\n                    `<div class=\"k-notification-content\">${encodeContent ? encode(content) : content}</div>`,\n            TEMPLATE = GET_TEMPLATE_FUNC(false),\n            SAFE_TEMPLATE = GET_TEMPLATE_FUNC(true),\n            defaultActions = {\n                close: {\n                    template: kendo.ui.icon($('<span aria-hidden=\"true\" title=\"Hide\"></span>'), { icon: \"x\", iconClass: KCLOSEICONCLASS })\n                }\n            };\n\n        var Notification = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                options = that.options;\n\n                if (!options.appendTo || !$(options.appendTo).is(element)) {\n                    that.element.hide();\n                }\n\n                that._compileTemplates(options.templates);\n                that._guid = \"_\" + kendo.guid();\n                that._isRtl = kendo.support.isRtl(element);\n                that._compileStacking(options.stacking, options.position.top, options.position.left);\n\n                kendo.notify(that);\n            },\n\n            events: [\n                SHOW,\n                HIDE\n            ],\n\n            options: {\n                name: \"Notification\",\n                position: {\n                    pinned: true,\n                    top: null,\n                    left: null,\n                    bottom: 20,\n                    right: 20\n                },\n                stacking: \"default\",\n                hideOnClick: true,\n                button: false,\n                allowHideAfter: 0,\n                autoHideAfter: 5000,\n                appendTo: null,\n                width: null,\n                height: null,\n                templates: [],\n                title: null,\n                animation: {\n                    open: {\n                        effects: \"fade:in\",\n                        duration: 300\n                    },\n                    close: {\n                        effects: \"fade:out\",\n                        duration: 600,\n                        hide: true\n                    }\n                }\n            },\n\n            _compileTemplates: function(templates) {\n                var that = this;\n                var kendoTemplate = kendo.template;\n\n                that._compiled = {};\n\n                $.each(templates, function(key, value) {\n                    that._compiled[value.type] = kendoTemplate(value.template || $(\"#\" + value.templateId).html());\n                });\n\n                that._defaultCompiled = kendoTemplate(TEMPLATE);\n                that._safeCompiled = kendoTemplate(SAFE_TEMPLATE);\n            },\n\n            _getCompiled: function(type, safe) {\n                var defaultCompiled = safe ? this._safeCompiled : this._defaultCompiled;\n\n                return type ? this._compiled[type] || defaultCompiled : defaultCompiled;\n            },\n\n            _compileStacking: function(stacking, top, left) {\n                var that = this,\n                    paddings = { paddingTop: 0, paddingRight: 0, paddingBottom: 0, paddingLeft: 0 },\n                    horizontalAlignment = left !== null ? LEFT : RIGHT,\n                    origin, position;\n\n                switch (stacking) {\n                    case \"down\":\n                        origin = BOTTOM + \" \" + horizontalAlignment;\n                        position = TOP + \" \" + horizontalAlignment;\n                        delete paddings.paddingBottom;\n                    break;\n                    case RIGHT:\n                        origin = TOP + \" \" + RIGHT;\n                        position = TOP + \" \" + LEFT;\n                        delete paddings.paddingRight;\n                    break;\n                    case LEFT:\n                        origin = TOP + \" \" + LEFT;\n                        position = TOP + \" \" + RIGHT;\n                        delete paddings.paddingLeft;\n                    break;\n                    case UP:\n                        origin = TOP + \" \" + horizontalAlignment;\n                        position = BOTTOM + \" \" + horizontalAlignment;\n                        delete paddings.paddingTop;\n                    break;\n                    default:\n                        if (top !== null) {\n                            origin = BOTTOM + \" \" + horizontalAlignment;\n                            position = TOP + \" \" + horizontalAlignment;\n                            delete paddings.paddingBottom;\n                        } else {\n                            origin = TOP + \" \" + horizontalAlignment;\n                            position = BOTTOM + \" \" + horizontalAlignment;\n                            delete paddings.paddingTop;\n                        }\n                    break;\n                }\n\n                that._popupOrigin = origin;\n                that._popupPosition = position;\n                that._popupPaddings = paddings;\n            },\n\n            _attachPopupEvents: function(options, popup) {\n                var that = this,\n                    allowHideAfter = options.allowHideAfter,\n                    attachDelay = !isNaN(allowHideAfter) && allowHideAfter > 0,\n                    closeIcon;\n\n                function attachClick(target) {\n                    target.on(CLICK + NS, function() {\n                        that._hidePopup(popup);\n                    });\n                }\n\n                if (options.hideOnClick) {\n                    popup.bind(\"activate\", function() {\n                        if (attachDelay) {\n                            setTimeout(function() {\n                                attachClick(popup.element);\n                            }, allowHideAfter);\n                        } else {\n                            attachClick(popup.element);\n                        }\n                    });\n                } else if (options.button) {\n                    closeIcon = popup.element.find(KCLOSEICONSELECTOR);\n                    if (attachDelay) {\n                        setTimeout(function() {\n                            attachClick(closeIcon);\n                        }, allowHideAfter);\n                    } else {\n                        attachClick(closeIcon);\n                    }\n                }\n            },\n\n            _showPopup: function(wrapper, options) {\n                var that = this,\n                    autoHideAfter = options.autoHideAfter,\n                    x = options.position.left,\n                    y = options.position.top,\n                    popup, openPopup;\n\n                openPopup = $(\".\" + that._guid + \":not(.\" + KHIDING + \")\").last();\n\n                popup = new kendo.ui.Popup(wrapper, {\n                    anchor: openPopup[0] ? openPopup : document.body,\n                    origin: that._popupOrigin,\n                    position: that._popupPosition,\n                    _resizeOnWrap: true,\n                    animation: options.animation,\n                    copyAnchorStyles: false,\n                    autosize: true,\n                    modal: true,\n                    collision: \"\",\n                    isRtl: that._isRtl,\n                    close: function() {\n                        that._triggerHide(this.element);\n                    },\n                    deactivate: function(e) {\n                        e.sender.element.off(NS);\n                        e.sender.element.find(KCLOSEICONSELECTOR).off(NS);\n                        e.sender.destroy();\n                    }\n                });\n\n                that._attachPopupEvents(options, popup);\n\n                wrapper.removeClass(\"k-group k-reset k-popup\");\n\n                if (openPopup[0]) {\n                    popup.open();\n                } else {\n                    if (x === null) {\n                        x = $(window).width() - wrapper.outerWidth() - options.position.right;\n                    }\n\n                    if (y === null) {\n                        y = $(window).height() - wrapper.outerHeight() - options.position.bottom;\n                    }\n\n                    popup.open(x, y);\n                }\n                wrapper.removeClass(\"k-popup\");\n\n                popup.wrapper.addClass(that._guid).css(extend({ margin: 0,zIndex: 10050 }, that._popupPaddings));\n\n                if (options.position.pinned) {\n                    popup.wrapper.css(\"position\", \"fixed\");\n                    if (openPopup[0]) {\n                        that._togglePin(popup.wrapper, true);\n                    }\n                } else if (!openPopup[0]) {\n                    that._togglePin(popup.wrapper, false);\n                }\n\n                if (autoHideAfter > 0) {\n                    setTimeout(function() {\n                        that._hidePopup(popup);\n                    }, autoHideAfter);\n                }\n            },\n\n            _hidePopup: function(popup) {\n                popup.wrapper.addClass(KHIDING);\n                popup.close();\n            },\n\n            _togglePin: function(wrapper, pin) {\n                var win = $(window),\n                    sign = pin ? -1 : 1;\n\n                wrapper.css({\n                    top: parseInt(wrapper.css(TOP), 10) + sign * win.scrollTop(),\n                    left: parseInt(wrapper.css(LEFT), 10) + sign * win.scrollLeft()\n                });\n            },\n\n            _attachStaticEvents: function(options, wrapper) {\n                var that = this,\n                    allowHideAfter = options.allowHideAfter,\n                    attachDelay = !isNaN(allowHideAfter) && allowHideAfter > 0;\n\n                function attachClick(target) {\n                    target.on(CLICK + NS, that._hideStatic.bind(that, wrapper));\n                }\n\n                if (options.hideOnClick) {\n                    if (attachDelay) {\n                        setTimeout(function() {\n                            attachClick(wrapper);\n                        }, allowHideAfter);\n                    } else {\n                        attachClick(wrapper);\n                    }\n                } else if (options.button) {\n                    if (attachDelay) {\n                        setTimeout(function() {\n                            attachClick(wrapper.find(KCLOSEICONSELECTOR));\n                        }, allowHideAfter);\n                    } else {\n                        attachClick(wrapper.find(KCLOSEICONSELECTOR));\n                    }\n                }\n            },\n\n            _showStatic: function(wrapper, options) {\n                var that = this,\n                    autoHideAfter = options.autoHideAfter,\n                    animation = options.animation,\n                    insertionMethod = options.stacking == UP || options.stacking == LEFT ? \"prependTo\" : \"appendTo\",\n                    initializedNotifications;\n\n                if (!that._hideTimeouts) {\n                    that._hideTimeouts = [];\n                }\n\n                wrapper\n                    .removeClass(\"k-popup\")\n                    .addClass(that._guid)\n                    [insertionMethod](options.appendTo)\n                    .hide()\n                    .kendoAnimate(animation.open || false);\n\n                wrapper.css(\"display\", \"\");\n                initializedNotifications = that.getNotifications();\n                initializedNotifications.each(function(idx, element) {\n                    that._attachStaticEvents(options, $(element));\n\n                    if (autoHideAfter > 0 && !$(element).attr(kendo.attr(\"has-hidetimeout\"))) {\n                        $(element).attr(kendo.attr(\"has-hidetimeout\"), true);\n                        that._hideTimeouts.push(\n                            setTimeout(function() {\n                            that._hideStatic($(element));\n                        }, autoHideAfter));\n                    }\n                });\n            },\n\n            _hideStatic: function(wrapper) {\n                wrapper.kendoAnimate(extend(this.options.animation.close || false, { complete: function() {\n                    wrapper.off(NS).find(KCLOSEICONSELECTOR).off(NS);\n                    wrapper.remove();\n                } }));\n                this._triggerHide(wrapper);\n            },\n\n            _triggerHide: function(element) {\n                this.trigger(HIDE, { element: element });\n            },\n\n            show: function(content, type, safe) {\n                var that = this,\n                    options = that.options,\n                    wrapper = $(WRAPPER),\n                    contentId = kendo.guid(),\n                    args, defaultArgs;\n\n                if (!type) {\n                    type = INFO;\n                }\n\n                wrapper.attr(\"aria-label\", type);\n\n                if (content !== null && content !== undefined$1 && content !== \"\") {\n\n                    if (kendo.isFunction(content)) {\n                        content = content();\n                    }\n\n                    defaultArgs = { typeIcon: type, content: \"\", closeButton: options.button };\n\n                    if ($.isPlainObject(content)) {\n                        args = extend(defaultArgs, content);\n                    } else {\n                        args = extend(defaultArgs, { content: content });\n                    }\n\n                    wrapper\n                        .addClass(KNOTIFICATION + \"-\" + type)\n                        .toggleClass(KNOTIFICATION + \"-closable\", options.button)\n                        .attr({\n                            \"data-role\": \"alert\",\n                            title: options.title\n                        })\n                        .css({ width: options.width, height: options.height })\n                        .append(that._getCompiled(type, safe)(args));\n\n                    if (that.options.button) {\n                        wrapper.append(that.addActions(\"close\"));\n                    }\n\n                    wrapper.find(\".k-notification-content\").attr(\"id\", contentId);\n                    wrapper.attr(\"aria-describedby\", contentId);\n\n                    if ($(options.appendTo)[0]) {\n                        that._showStatic(wrapper, options);\n                    } else {\n                        that._showPopup(wrapper, options);\n                    }\n\n                    that.trigger(SHOW, { element: wrapper });\n                }\n\n                return that;\n            },\n\n            showText: function(content, type) {\n                this.show(content, type, true);\n            },\n\n            info: function(content) {\n                return this.show(content, INFO);\n            },\n\n            success: function(content) {\n                return this.show(content, SUCCESS);\n            },\n\n            warning: function(content) {\n                return this.show(content, WARNING);\n            },\n\n            error: function(content) {\n                return this.show(content, ERROR);\n            },\n\n            hide: function() {\n                var that = this,\n                    openedNotifications = that.getNotifications();\n\n                if (that.options.appendTo) {\n                    if (that._hideTimeouts) {\n                        that._hideTimeouts.forEach(clearTimeout);\n                    }\n                    that._hideTimeouts = [];\n                    openedNotifications.each(function(idx, element) {\n                        that._hideStatic($(element));\n                    });\n                } else {\n                    openedNotifications.each(function(idx, element) {\n                        var popup = $(element).data(\"kendoPopup\");\n                        if (popup) {\n                            that._hidePopup(popup);\n                        }\n                    });\n                }\n\n                return that;\n            },\n\n            getNotifications: function() {\n                var that = this,\n                    guidElements = $(\".\" + that._guid + \":not(.\" + KHIDING + \")\");\n\n                if (that.options.appendTo) {\n                    return guidElements;\n                } else {\n                    return guidElements.find(\">.k-child-animation-container >.\" + KNOTIFICATION);\n                }\n            },\n\n            setOptions: function(newOptions) {\n                var that = this,\n                    options;\n\n                Widget.fn.setOptions.call(that, newOptions);\n\n                options = that.options;\n\n                if (newOptions.templates !== undefined$1) {\n                    that._compileTemplates(options.templates);\n                }\n\n                if (newOptions.stacking !== undefined$1 || newOptions.position !== undefined$1) {\n                    that._compileStacking(options.stacking, options.position.top, options.position.left);\n                }\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n                this.getNotifications().off(NS).find(KCLOSEICONSELECTOR).off(NS);\n            },\n\n            addActions: function(actions) {\n                var actionsContainer = $('<span class=\"k-notification-actions\"/>');\n\n                if (!Array.isArray(actions)) {\n                    actions = [actions];\n                }\n\n                actions.forEach(function(action) {\n                    $(defaultActions[action].template)\n                        .wrap(`<span class=\"k-notification-action k-notification-${action}-action\">`)\n                        .parent()\n                        .appendTo(actionsContainer);\n                });\n\n                return actionsContainer;\n            }\n        });\n\n        kendo.ui.plugin(Notification);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}