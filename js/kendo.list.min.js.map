{"version":3,"sources":["raw-js/kendo.list.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendolist","js","this","$","kendo","jQuery","LOADING","SELECTOR","ARIA_BUSY","initLoader","that","loader","addClass","attr","_loading","_showBusy","showBusy","bind","_hideBusy","hideBusy","_toggleLoader","toggleLoader","_showBusyHandler","showBusyHandler","toggle","loaderIsShown","wrapper","hasClass","inputValuesWrapper","find","isMultiSelect","options","name","toLowerCase","_suffixContainer","separators","length","before","_arrow","insertAfter","element","removeClass","remove","_focused","_hideClear","e","isDefaultPrevented","_request","_busy","setTimeout","clearTimeout","_toggleCloseVisibility","_showClear","undefined$1","window","ui","outerHeight","_outerHeight","percentageUnitsRegex","Widget","keys","support","htmlEncode","activeElement","_activeElement","outerWidth","_outerWidth","ObservableArray","data","ID","CHANGE","FOCUSED","HOVER","KSELECTED","LIST_UL","FIXED_GROUP_HEADER","ITEMSELECTOR","OPEN","CLOSE","CASCADE","SELECT","CLICK","MOUSEENTER","ACTIVATE","DEACTIVATE","DATA_BINDING","DATA_BOUND","SELECTED_ITEM_CHANGE","SELECTED","REQUESTSTART","REQUESTEND","FOCUS","extend","isArray","Array","browser","HIDDENCLASS","WIDTH","TEXT","isIE","msie","quotRegExp","alternativeNames","ComboBox","DropDownList","MultiColumnComboBox","ARIA_LABELLEDBY","ARIA_LABEL","ARIA_ACTIVEDESCENDANT","ARIA_EXPANDED","ARIA_HIDDEN","ARIA_SELECTED","GROUP_ROW_SEL","List","DataBoundWidget","init","id","fn","call","_isSelect","is","dataSource","dataTextField","dataValueField","adaptiveMode","largeMQL","mediaQuery","mediumMQL","smallMQL","_bindLoader","_listSize","cssProperties","getValidClass","widget","propName","value","size","_filterHeader","ul","tabIndex","list","append","guid","columns","_columnsHeader","_header","_noData","_footer","_accessors","_initValue","valuePrimitive","footerTemplate","headerTemplate","noDataTemplate","messages","noData","clear","filterInputPlaceholder","setOptions","enable","enabled","_renderFooter","_renderNoData","label","_inputLabel","_unwrapFloating","_label","_initLoader","focus","trigger","readonly","_editable","disable","floatingLabel","labelOptions","isPlainObject","content","Label","floatCheck","_floatCheck","_refreshFloatingLabel","listView","text","popup","visible","refresh","header","template","destroy","parent","filterTemplate","icon","iconClass","actionSheetFilterTemplate","_isFilterEnabled","filterInput","placeholder","title","filterTitle","role","$header","columnsHeader","colGroup","row","idx","currentColumn","field","columnsHeaderTemplate","currentWidth","width","currentWidthInt","parseInt","widthStyle","isNaN","test","applyStylesFromKendoAttributes","prepend","hide","appendTo","footer","footerEl","_listOptions","currentOptions","virtual","changeEventOption","change","_listChange","listBoundHandler","_listBound","focusedElm","inputId","labelElm","labelledBy","_generateLabelId","autoBind","selectable","click","_click","activate","_activateItem","deactivate","_deactivateItem","dataBinding","dataBound","height","groupTemplate","fixedGroupTemplate","ariaLabel","ariaLabelledBy","listSize","getter","_initList","opts","skipValueUpdate","listOptions","selectedItemChange","VirtualList","Object","assign","_hasActionSheet","StaticList","_setListValue","done","_updateSelectionState","noop","_listMousedown","target","preventDefault","filter","_clear","_clearValue","_clearText","_accessor","_customOption","enforceMinLength","_filter","word","open","highlightFirst","_change","_clearFilter","bound","_filterSource","force","isMultiColumnFiltering","filterFields","logic","filters","expression","resetPageSettings","removed","removeFiltersForField","_clearFilterExpressions","Deferred","reject","promise","newExpression","push","_pushFilterExpression","isValidFilterExpr","concat","_cascading","setDSFilter","dataSourceState","page","pageSize","sort","group","aggregate","_mergeState","filtersToRemove","i","splice","html","instance","_toggleNoData","show","_toggleHeader","prev","children","first","_allowOpening","flatView","val","_old","_ignoreCase","model","reader","fields","type","ignoreCase","_focus","candidate","widgetOptions","fromFilter","_buildExpression","_open","accentFoldingFiltering","toLocaleLowerCase","operator","_clearButton","clearTitle","clearButton","search","_inputValue","_typingTimeout","minLength","_state","_emptySearch","trim","_searchByWord","current","items","ns","_unbindDataSource","off","_form","_resetHandler","dataItem","index","selectedDataItems","getByUid","add","removeAttr","textField","valueField","_text","_value","_aria","autocomplete","suggest","_ariaLabel","_blur","close","_userTriggered","_isValueChanged","unifyType","selectedIndex","optionValue","_valueBeforeCascade","_oldIndex","isFiltered","_typing","typing","_data","view","_enable","disabled","isPresent","_dataValue","_offsetHeight","offsetHeight","prevAll","each","_height","isMccb","popups","closest","scrollHeight","_openHandler","_adjustListWidth","computedStyle","computedWidth","style","getComputedStyle","parseFloat","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","css","fontFamily","autoWidth","minWidth","whiteSpace","_closeHandler","closeButton","_onCloseButtonPressed","_focusItem","noFocusedItem","last","select","scrollToIndex","_calculateGroupPadding","li","groupHeader","padding","direction","display","scrollbar","parents","_calculatePopupHeight","_calculateColumnsHeaderPadding","isRtl","_refreshScroll","enableYScroll","overflowX","overflowY","mediaQueryList","matches","_resizePopup","one","_popup","wrap","onEnter","_createPopup","_createActionSheet","fullscreen","_addFilterHeader","popupFilter","_unboundClick","input","_cachedFilterValue","_removeFilterHeader","_removeStaticHeader","Popup","anchor","animation","autosize","autowidth","_postCreatePopup","_onActionSheetCreate","ActionSheet","adaptiveTitle","adaptiveSubtitle","renderButton","fillMode","themeColor","focusOnActivate","adaptive","document","body","listViewValue","on","_clean","tagList","empty","unwrap","_toggleHover","currentTarget","toggleClass","_toggle","preventFocus","touchEnabled","mobileOS","touch","MSPointers","pointers","_prevent","_triggerCascade","_cascadeTriggered","_cascadedValue","userTriggered","_triggerChange","unbind","_requestStartHandler","_requestEndHandler","_errorHandler","requireValueMapper","valueMapper","Error","toString","Boolean","Number","inArray","node","parentNode","siblings","Select","_initial","setDataSource","_dataSource","_initialIndex","_current","fetch","_parentWidget","_cascadeSelect","_select","_cascadeValue","_accessorInput","_accessorSelect","getSelectedOption","selected","_custom","_syncValueAndText","custom","DataSource","create","_firstItem","focusFirst","_lastItem","focusLast","_nextItem","focusNext","_prevItem","focusPrev","_getNormalizedDataItem","isIndex","hasOptionLabel","optionLabel","getElementIndex","dataItemByIndex","_getNormalizedSelectCandidate","normalizedCandidate","_move","key","keyCode","down","DOWN","isVirtual","pressed","moveIndex","selectCandidate","UP","altKey","firstChild","_fetch","total","_get","item","ENTER","TAB","activeFilter","selection","shouldTrigger","_focusElement","focusout","ESC","stopPropagation","PAGEDOWN","PAGEUP","scrollWith","screenHeight","_fetchData","hasItems","cascadeFrom","_options","option","dataText","dataValue","htmlElement","indexOf","replace","setAttribute","_reset","formId","form","_removeDataItems","_dataItems","_shouldRefresh","parentElement","_cascade","_cascadeHandlerProxy","_cascadeHandler","_cascadeFilterRequests","_selectedValue","_toggleCascadeOnFocus","valueBeforeCascade","_clearSelection","_cascadeChange","filterValue","cascadeFromParentField","cascadeFromField","cascadeOnCustomValue","handler","currentHandler","shift","STATIC_LIST_NS","aria","_touchHandlers","thead","_optionID","_selectedIndices","_view","_values","slice","_getter","_templates","_createOnScrollProxy","events","source","_refreshHandler","_fixedHeader","startY","endY","itemSelector","tapPosition","event","originalEvent","changedTouches","pageY","Math","abs","_touchTriggered","_triggerClick","get","skip","_render","_scrollId","clientHeight","scroll","scrollTop","itemOffsetTop","offsetTop","itemOffsetHeight","contentScrollTop","contentOffsetHeight","bottomDistance","dataItems","_getValues","_valueGetter","map","next","hasCandidate","focusIndex","skipUpdate","_skipUpdate","indices","singleSelection","selectedIndices","uiSelectedIndices","added","result","deferred","resolve","filtered","_deselectFiltered","_deselect","_valueComparer","removeAt","position","setValue","_valueDeferred","state","_valueIndices","_onScroll","_renderHeader","_valueExpr","values","comparer","normalized","_valueType","_dataItemPosition","valueExpr","j","templates","forEach","column","templateText","_normalizeIndices","newIndices","_firstVisibleItem","itemHeight","itemIndex","floor","childElementCount","lastChild","forward","nextSibling","previousSibling","isGrouped","visibleItem","_renderItem","context","itemRole","notFirstItem","hasColumns","altRow","newGroup","isLastGroupedItem","_renderColumns","cspCompliantHtml","dataContext","_selected","_lastDSFilter","Query","compareFilters","action","skipUpdateOnBind","isItemChange","itemsToMatch","itemsLength","selectedLength","found","changed","unchanged","mapChangedItems","_bound","isEmptyObject","grep","plugin","registerPrefix","kendo$1","__meta__","category","depends","hidden","defineProperty"],"mappings":"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","file":"kendo.list.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.data.js'), require('kendo.popup.js'), require('kendo.label.js'), require('kendo.icons.js'), require('kendo.actionsheet.js'), require('kendo.core.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.data', 'kendo.popup', 'kendo.label', 'kendo.icons', 'kendo.actionsheet', 'kendo.core'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendolist = global.kendolist || {}, global.kendolist.js = {})));\n})(this, (function (exports) {\n    let $ = kendo.jQuery;\n\n    const LOADING = \"k-loading\",\n          LOADER = \"k-icon k-i-loading k-input-loading-icon\",\n          SELECTOR = \"k-input-inner\",\n          INPUT_VALUES = \"k-input-values\",\n          ARIA_BUSY = \"aria-busy\";\n\n    function initLoader() {\n        const that = this;\n        const loader = $(\"<span></span>\").addClass(LOADER).attr(\"role\", \"presentation\");\n        that._loading = loader;\n\n        that._showBusy = showBusy.bind(that);\n        that._hideBusy = hideBusy.bind(that);\n        that._toggleLoader = toggleLoader.bind(that);\n        that._showBusyHandler = showBusyHandler.bind(that);\n    }\n\n    function toggleLoader(toggle) {\n        const that = this;\n        const loaderIsShown = that.wrapper.hasClass(LOADING);\n        const inputValuesWrapper = that.wrapper.find(`.${INPUT_VALUES}`);\n        const isMultiSelect = that.options.name.toLowerCase() === \"multiselect\";\n        if (that._loading) {\n            if (toggle && !loaderIsShown) {\n                that.wrapper.addClass(LOADING);\n                if (that._suffixContainer) {\n                    const separators = that.wrapper.find('.k-input-separator');\n                    $(separators[separators.length - 1]).before(that._loading);\n                } else if (that._arrow) {\n                    that._arrow.before(that._loading);\n                } else if (inputValuesWrapper.length > 0 && isMultiSelect) {\n                    that._loading.insertAfter(inputValuesWrapper);\n                } else {\n                    const element = that.element.hasClass(SELECTOR) ? that.element : that.wrapper.find(`.${SELECTOR}`);\n                    that._loading.insertAfter(element);\n                }\n            } else if (loaderIsShown) {\n                that.wrapper.removeClass(LOADING);\n                that._loading.remove();\n            }\n        }\n    }\n\n    function showBusyHandler() {\n            const that = this;\n            if (that._focused) {\n                that._focused.attr(ARIA_BUSY, true);\n            } else {\n                const element = that.element.hasClass(SELECTOR) ? that.element : that.wrapper.find(`.${SELECTOR}`);\n                element.attr(ARIA_BUSY, true);\n            }\n\n            that._toggleLoader(true);\n            that._hideClear();\n    }\n\n    function showBusy(e) {\n        const that = this;\n\n        if (e && e.isDefaultPrevented()) {\n            return;\n        }\n\n        that._request = true;\n\n        if (that._busy) {\n            return;\n        }\n\n        that._busy = setTimeout(that._showBusyHandler, 100);\n    }\n\n\n    function hideBusy() {\n        const that = this;\n        clearTimeout(that._busy);\n        that._toggleLoader(false);\n        that._busy = null;\n\n        if (that._request) {\n            that._request = false;\n        }\n\n        if (that._focused) {\n            that._focused.attr(ARIA_BUSY, false);\n        } else {\n            const element = that.element.hasClass(SELECTOR) ? that.element : that.wrapper.find(`.${SELECTOR}`);\n            element.attr(ARIA_BUSY, true);\n        }\n\n        if (that._toggleCloseVisibility) {\n            that._toggleCloseVisibility();\n        } else {\n            that._showClear();\n        }\n    }\n\n    const __meta__ = {\n        id: \"list\",\n        name: \"List\",\n        category: \"framework\",\n        depends: [ \"data\", \"popup\", \"label\", \"icons\", \"actionsheet\" ],\n        hidden: true\n    };\n\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            outerHeight = kendo._outerHeight,\n            percentageUnitsRegex = /^\\d+(\\.\\d+)?%$/i,\n            Widget = ui.Widget,\n            keys = kendo.keys,\n            support = kendo.support,\n            htmlEncode = kendo.htmlEncode,\n            activeElement = kendo._activeElement,\n            outerWidth = kendo._outerWidth,\n            ObservableArray = kendo.data.ObservableArray,\n            ID = \"id\",\n            CHANGE = \"change\",\n            FOCUSED = \"k-focus\",\n            HOVER = \"k-hover\",\n            KSELECTED = \"k-selected\",\n            LIST = \"k-list\",\n            TABLE = \"k-table\",\n            DATA_TABLE = \"k-data-table\",\n            TABLE_MD = \"k-table-md\",\n            LIST_UL = \"k-list-ul\",\n            TABLE_LIST = \"k-table-list\",\n            FIXED_GROUP_HEADER = \".k-list-group-sticky-header\",\n            GROUP_LABEL = \".k-list-item-group-label\",\n            ITEMSELECTOR = \".k-list-item\",\n            ITEMSELECTORTABLE = \".k-table-row\",\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            CASCADE = \"cascade\",\n            SELECT = \"select\",\n            CLICK = \"click\",\n            MOUSELEAVE = \"mouseleave\",\n            MOUSEENTER = \"mouseenter\",\n            ACTIVATE = \"activate\",\n            DEACTIVATE = \"deactivate\",\n            DATA_BINDING = \"dataBinding\",\n            DATA_BOUND = \"dataBound\",\n            SELECTED_ITEM_CHANGE = \"selectedItemChange\",\n            SELECTED = \"selected\",\n            REQUESTSTART = \"requestStart\",\n            REQUESTEND = \"requestEnd\",\n            BLUR = \"blur\",\n            FOCUS = \"focus\",\n            FOCUSOUT = \"focusout\",\n            extend = $.extend,\n            isArray = Array.isArray,\n            browser = support.browser,\n            HIDDENCLASS = \"k-hidden\",\n            WIDTH = \"width\",\n            TEXT = \"text\",\n            VALUE = \"value\",\n            isIE = browser.msie,\n            quotRegExp = /\"/g,\n            alternativeNames = {\n                \"ComboBox\": [ \"DropDownList\", \"MultiColumnComboBox\" ],\n                \"DropDownList\": [ \"ComboBox\", \"MultiColumnComboBox\" ],\n                \"MultiColumnComboBox\": [ \"ComboBox\", \"DropDownList\" ]\n            },\n\n            UL_EL = '<ul unselectable=\"on\"/>',\n            LIST_EL = \"<div class='k-list'/>\",\n            NO_DATA_EL = '<div class=\"k-no-data\"></div>',\n            LIST_FOOTER_EL = '<div class=\"k-list-footer\"></div>',\n            TABLE_FOOTER_EL = '<div class=\"k-table-footer\">' +\n                    '<span class=\"k-table-td\"></span>' +\n                '</div>',\n            MOUSEDOWN = \"mousedown\",\n            LIST_SUFFIX = \"-list\",\n            LISTBOX_SUFFIX = \"_listbox\",\n            ARIA_LABELLEDBY = \"aria-labelledby\",\n            ARIA_LABEL = \"aria-label\",\n            ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n            ARIA_AUTOCOMPLETE = \"aria-autocomplete\",\n            ARIA_CONTROLS = \"aria-controls\",\n            ARIA_LIVE = \"aria-live\",\n            ARIA_EXPANDED = \"aria-expanded\",\n            ARIA_HIDDEN = \"aria-hidden\",\n            ARIA_MULTISELECTABLE = \"aria-multiselectable\",\n            ARIA_SELECTED = \"aria-selected\",\n            GROUP_ROW_SEL = \".k-table-group-row\",\n            ACTIONSHEET_TITLEBAR = \".k-actionsheet-titlebar\";\n\n        var List = kendo.ui.DataBoundWidget.extend({\n            init: function(element, options) {\n                var that = this,\n                    id;\n\n                Widget.fn.init.call(that, element, options);\n                element = that.element;\n                options = that.options;\n\n                that._isSelect = element.is(SELECT);\n\n                if (that._isSelect && that.element[0].length) {\n                    if (!options.dataSource) {\n                        options.dataTextField = options.dataTextField || TEXT;\n                        options.dataValueField = options.dataValueField || VALUE;\n                    }\n                }\n\n                if (options.adaptiveMode === \"auto\") {\n                    that.largeMQL = kendo.mediaQuery(\"large\");\n                    that.mediumMQL = kendo.mediaQuery(\"medium\");\n                    that.smallMQL = kendo.mediaQuery(\"small\");\n                }\n\n                that._bindLoader();\n\n                that._listSize = kendo.cssProperties.getValidClass({\n                    widget: \"List\",\n                    propName: \"size\",\n                    value: options.size\n                });\n\n                that._filterHeader();\n\n                that.ul = $(UL_EL).attr({\n                    tabIndex: -1,\n                    \"aria-hidden\": true\n                });\n\n                that.list = $(LIST_EL)\n                    .addClass(that._listSize)\n                    .append(that.ul);\n\n                id = element.attr(ID);\n\n                if (!id) {\n                    id = kendo.guid();\n                }\n\n                that.list.attr(ID, id + LIST_SUFFIX);\n                that.ul.attr(ID, id + LISTBOX_SUFFIX);\n\n                if (options.columns && options.columns.length) {\n                    that.list.removeClass(LIST).addClass(DATA_TABLE);\n                    that.list.removeClass(that._listSize).addClass(TABLE_MD);\n\n                    that.ul.removeClass(LIST_UL).addClass(TABLE);\n\n                    that._columnsHeader();\n                }\n\n                that._header();\n                that._noData();\n                that._footer();\n                that._accessors();\n                that._initValue();\n            },\n\n            options: {\n                valuePrimitive: false,\n                footerTemplate: \"\",\n                headerTemplate: \"\",\n                noDataTemplate: true,\n                size: \"medium\",\n                messages: {\n                    \"noData\": \"No data found.\",\n                    \"clear\": \"clear\",\n                    \"filterInputPlaceholder\": \"Filter\"\n                },\n                adaptiveMode: \"none\"\n            },\n\n            setOptions: function(options) {\n                Widget.fn.setOptions.call(this, options);\n\n                if (options && options.enable !== undefined$1) {\n                    options.enabled = options.enable;\n                }\n\n                if (options.columns && options.columns.length) {\n                    this._columnsHeader();\n                }\n\n                this._header();\n                this._noData();\n                this._footer();\n\n                this._renderFooter();\n                this._renderNoData();\n\n                if (options.label && this._inputLabel) {\n                    this.label.setOptions(options.label);\n                } else if (options.label === false) {\n                    this.label._unwrapFloating();\n                    this._inputLabel.remove();\n                    delete this._inputLabel;\n                } else if (options.label) {\n                    this._label();\n                }\n            },\n\n            _bindLoader: function() {\n                const that = this;\n\n                that._initLoader = initLoader.bind(that);\n                that._initLoader();\n            },\n\n            focus: function() {\n                this._focused.trigger(FOCUS);\n            },\n\n            readonly: function(readonly) {\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            _label: function() {\n                var that = this;\n                var options = that.options;\n                var labelOptions = $.isPlainObject(options.label) ? options.label : {\n                    content: options.label\n                };\n\n                that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                    widget: that,\n                    floatCheck: that._floatCheck.bind(that)\n                }));\n\n                that._inputLabel = that.label.element;\n                that._refreshFloatingLabel();\n            },\n\n            _floatCheck: function() {\n                if (this.listView) {\n                    var hasValue = this.value() || (this.text ? this.text() : false);\n                    return !hasValue && !this.popup.visible();\n                }\n\n                return true;\n            },\n\n            _refreshFloatingLabel: function() {\n                var that = this;\n\n                if (that.label && that.label.floatingLabel) {\n                    that.label.floatingLabel.refresh();\n                }\n            },\n\n            _header: function() {\n                var list = this;\n                var header = $(list.header);\n                var template = list.options.headerTemplate;\n\n                kendo.destroy(header);\n                header.remove();\n\n                if (!template) {\n                    list.header = null;\n                    return;\n                }\n\n                var headerTemplate = typeof template !== \"function\" ? kendo.template(template) : template;\n                header = $(headerTemplate({}));\n\n                list.header = header[0] ? header : null;\n\n                if (list.list.parent.length > 0) {\n                    list.list.before(header);\n                }\n            },\n\n            _filterHeader: function() {\n                this.filterTemplate = '<div class=\"k-list-filter\">' +\n                    '<span class=\"k-searchbox k-input k-input-md k-rounded-md k-input-solid\" type=\"text\" autocomplete=\"off\">' +\n                        kendo.ui.icon({ icon: \"search\", iconClass: \"k-input-icon\" }) +\n                    '</span>' +\n                '</div>';\n\n                this.actionSheetFilterTemplate = `<div class=\"k-actionsheet-titlebar-group k-actionsheet-filter\">${this.filterTemplate}</div>`;\n\n                if (this._isFilterEnabled()) {\n                    this.filterInput = $('<input class=\"k-input-inner\" type=\"text\" />')\n                        .attr({\n                            placeholder: this.element.attr(\"placeholder\") || this.options.messages.filterInputPlaceholder,\n                            title: this.options.filterTitle || this.element.attr(\"title\"),\n                            role: \"searchbox\",\n                            \"aria-label\": this.options.filterTitle,\n                            \"aria-haspopup\": \"listbox\",\n                            \"aria-autocomplete\": \"list\"\n                        });\n                }\n            },\n\n            _columnsHeader: function() {\n                var list = this;\n                var $header;\n                var columnsHeader = $(list.columnsHeader);\n\n                kendo.destroy(columnsHeader);\n                columnsHeader.remove();\n\n                var header = \"<div class='k-table-header'><div class='k-table-header-wrap'><table class='k-table' role='presentation'>\";\n                var colGroup = \"<colgroup>\";\n                var row = \"<tr class='k-table-row'>\";\n\n                for (var idx = 0; idx < this.options.columns.length; idx++) {\n                    var currentColumn = this.options.columns[idx];\n                    var title = currentColumn.title || currentColumn.field || \"\";\n                    var titleFunc = () => title;\n                    var template = currentColumn.headerTemplate || titleFunc;\n                    var columnsHeaderTemplate = typeof template !== \"function\" ? kendo.template(template) : template;\n                    var currentWidth = currentColumn.width;\n                    var currentWidthInt = parseInt(currentWidth, 10);\n                    var widthStyle = '';\n\n                    if (currentWidth && !isNaN(currentWidthInt)) {\n                        widthStyle += `${kendo.attr('style-width')}=\"${currentWidthInt}${percentageUnitsRegex.test(currentWidth) ? \"%\" : \"px\"}\"`;\n                    }\n\n                    colGroup += \"<col \" + widthStyle + \"/>\";\n\n                    row += \"<th class='k-table-th'>\";\n                    row += columnsHeaderTemplate(currentColumn);\n                    row += \"</th>\";\n                }\n\n                colGroup += \"</colgroup>\";\n                row += \"</tr>\";\n                header += colGroup;\n                header += \"<thead class='k-table-thead'>\";\n                header += row;\n                header += \"</thead></table></div></div>\";\n\n                $header = $(header);\n                kendo.applyStylesFromKendoAttributes($header, [\"width\"]);\n\n                list.columnsHeader = columnsHeader = $header;\n                list.list.prepend(columnsHeader);\n            },\n\n            _noData: function() {\n                var list = this;\n                var noData = $(list.noData);\n                var template = list.options.noDataTemplate === true ? () => htmlEncode(list.options.messages.noData) : list.options.noDataTemplate;\n\n                kendo.destroy(noData);\n                noData.remove();\n\n                if (!template) {\n                    list.noData = null;\n                    return;\n                }\n\n                list.noData = $(NO_DATA_EL).hide().appendTo(list.list);\n                list.noDataTemplate = typeof template !== \"function\" ? kendo.template(template) : template;\n            },\n\n            _footer: function() {\n                var list = this;\n                var footer = $(list.footer);\n                var template = list.options.footerTemplate;\n                var footerEl = this.options.columns && this.options.columns.length ? TABLE_FOOTER_EL : LIST_FOOTER_EL;\n\n                kendo.destroy(footer);\n                footer.remove();\n\n                if (!template) {\n                    list.footer = null;\n                    return;\n                }\n\n                list.footer = $(footerEl).appendTo(list.list);\n                list.footerTemplate = typeof template !== \"function\" ? kendo.template(template) : template;\n            },\n\n            _listOptions: function(options) {\n                var that = this;\n                var currentOptions = that.options;\n                var virtual = currentOptions.virtual;\n                var changeEventOption = { change: that._listChange.bind(that) };\n                var listBoundHandler = that._listBound.bind(that);\n                var focusedElm = that._focused;\n                var inputId = that.element.attr(\"id\");\n                var labelElm = $(\"label[for=\\\"\" + that.element.attr(\"id\") + \"\\\"]\");\n                var labelledBy = focusedElm.attr(ARIA_LABELLEDBY);\n\n                if (!labelledBy && labelElm.length) {\n                    labelledBy = labelElm.attr(\"id\") || that._generateLabelId(labelElm, inputId || kendo.guid());\n                }\n\n                virtual = typeof virtual === \"object\" ? virtual : {};\n\n                options = $.extend({\n                    autoBind: false,\n                    selectable: true,\n                    dataSource: that.dataSource,\n                    click: that._click.bind(that),\n                    activate: that._activateItem.bind(that),\n                    columns: currentOptions.columns,\n                    deactivate: that._deactivateItem.bind(that),\n                    dataBinding: function() {\n                        that.trigger(DATA_BINDING);\n                    },\n                    dataBound: listBoundHandler,\n                    height: currentOptions.height,\n                    dataValueField: currentOptions.dataValueField,\n                    dataTextField: currentOptions.dataTextField,\n                    groupTemplate: currentOptions.groupTemplate,\n                    fixedGroupTemplate: currentOptions.fixedGroupTemplate,\n                    template: currentOptions.template,\n                    ariaLabel: focusedElm.attr(ARIA_LABEL),\n                    ariaLabelledBy: labelledBy,\n                    listSize: that._listSize\n                }, options, virtual, changeEventOption);\n\n                if (!options.template) {\n                    options.template = (data) => htmlEncode(kendo.getter(options.dataTextField)(data));\n                }\n\n                return options;\n            },\n\n            _initList: function(opts) {\n                var that = this;\n                var skipValueUpdate = opts && opts.skipValueUpdate;\n                var listOptions = that._listOptions({\n                    selectedItemChange: that._listChange.bind(that)\n                });\n\n                if (!that.options.virtual) {\n                    that.listView = new kendo.ui.StaticList(that.ul, listOptions);\n                } else {\n                    that.listView = new kendo.ui.VirtualList(that.ul, Object.assign(listOptions, {\n                        height: that._hasActionSheet() ? 362 : that.options.height, // Hardcoded virtual list height for action sheet untill better solution is found\n                    }));\n                    that.list.addClass(\"k-virtual-list\");\n                }\n\n                that.listView.bind(\"listBound\", that._listBound.bind(that));\n\n                if (!skipValueUpdate) {\n                    that._setListValue();\n                }\n            },\n\n            _setListValue: function(value) {\n                value = value || this.options.value;\n\n                if (value !== undefined$1) {\n                    this.listView.value(value)\n                        .done(this._updateSelectionState.bind(this));\n                }\n            },\n\n            _updateSelectionState: $.noop,\n\n            _listMousedown: function(e) {\n                if (!this.filterInput || this.filterInput[0] !== e.target) {\n                    e.preventDefault();\n                }\n            },\n\n            _isFilterEnabled: function() {\n                var filter = this.options.filter;\n                return filter && filter !== \"none\";\n            },\n\n            _hideClear: function() {\n                var list = this;\n\n                if (list._clear) {\n                    list._clear.addClass(HIDDENCLASS);\n                }\n            },\n\n            _showClear: function() {\n                if (this._clear) {\n                    this._clear.removeClass(HIDDENCLASS);\n                }\n            },\n\n            _clearValue: function() {\n                this._clearText();\n                this._accessor(\"\");\n                this.listView.value([]);\n\n                if (this._isSelect) {\n                    this._customOption = undefined$1;\n                }\n\n                if (this._isFilterEnabled() && !this.options.enforceMinLength) {\n                    this._filter({ word: \"\", open: false });\n\n                    if (this.options.highlightFirst) {\n                        this.listView.focus(0);\n                    }\n                }\n                this._change();\n            },\n\n            _clearText: function() {\n                this.text(\"\");\n            },\n\n            _clearFilter: function() {\n                if (!this.options.virtual) {\n                    this.listView.bound(false);\n                }\n\n                this._filterSource();\n            },\n\n            _filterSource: function(filter, force) {\n                var that = this;\n                var options = that.options;\n                var isMultiColumnFiltering = options.filterFields && filter && filter.logic && filter.filters && filter.filters.length;\n                var dataSource = that.dataSource;\n                var expression = extend({}, dataSource.filter() || {});\n                var resetPageSettings = filter || (expression.filters && expression.filters.length && !filter);\n\n                var removed = removeFiltersForField(expression, options.dataTextField);\n\n                this._clearFilterExpressions(expression);\n\n                if ((filter || removed) && that.trigger(\"filtering\", { filter: filter })) {\n                    return $.Deferred().reject().promise();\n                }\n\n                var newExpression = {\n                    filters: [],\n                    logic: \"and\"\n                };\n\n                if (isMultiColumnFiltering) {\n                    newExpression.filters.push(filter);\n                } else {\n                    this._pushFilterExpression(newExpression, filter);\n                }\n\n                if (isValidFilterExpr(expression)) {\n                    if (newExpression.logic === expression.logic) {\n                        newExpression.filters = newExpression.filters.concat(expression.filters);\n                    } else {\n                        newExpression.filters.push(expression);\n                    }\n                }\n\n                if (that._cascading) {\n                    this.listView.setDSFilter(newExpression);\n                }\n\n                var dataSourceState = extend({}, {\n                    page: resetPageSettings ? 1 : dataSource.page(),\n                    pageSize: resetPageSettings ? dataSource.options.pageSize : dataSource.pageSize(),\n                    sort: dataSource.sort(),\n                    filter: dataSource.filter(),\n                    group: dataSource.group(),\n                    aggregate: dataSource.aggregate()\n                }, { filter: newExpression });\n\n                return dataSource[force ? \"read\" : \"query\"](dataSource._mergeState(dataSourceState));\n            },\n\n            _pushFilterExpression: function(newExpression, filter) {\n                if (isValidFilterExpr(filter) && filter.value !== \"\") {\n                    newExpression.filters.push(filter);\n                }\n            },\n\n            _clearFilterExpressions: function(expression) {\n                if (!expression.filters) {\n                    return;\n                }\n\n                var filtersToRemove;\n\n                for (var i = 0; i < expression.filters.length; i++) {\n                    if (\"fromFilter\" in expression.filters[i]) {\n                        filtersToRemove = i;\n                    }\n                }\n\n                if (!isNaN(filtersToRemove)) {\n                    expression.filters.splice(filtersToRemove, 1);\n                }\n            },\n\n            _renderNoData: function() {\n                var list = this;\n                var noData = list.noData;\n\n                if (!noData) {\n                    return;\n                }\n\n                noData.html(list.noDataTemplate({ instance: list }));\n            },\n\n            _toggleNoData: function(show) {\n                $(this.noData).toggle(show);\n            },\n\n            _toggleHeader: function(show) {\n                var groupHeader = this.listView.content.prev(FIXED_GROUP_HEADER);\n                groupHeader.toggle(show);\n            },\n\n            _renderFooter: function() {\n                var list = this,\n                    footer = list.footer ? this.options.columns && this.options.columns.length ? list.footer.children().first() : list.footer : null;\n\n                if (!footer) {\n                    return;\n                }\n\n                footer.html(list.footerTemplate({ instance: list }));\n            },\n\n            _allowOpening: function() {\n                return this.options.noDataTemplate || this.dataSource.flatView().length;\n            },\n\n            _initValue: function() {\n                var that = this,\n                    value = that.options.value;\n\n                if (value !== null) {\n                    that.element.val(value);\n                } else {\n                    value = that._accessor();\n                    that.options.value = value;\n                }\n\n                that._old = value;\n            },\n\n            _ignoreCase: function() {\n                var that = this,\n                    model = that.dataSource.reader.model,\n                    field;\n\n                if (model && model.fields) {\n                    field = model.fields[that.options.dataTextField];\n\n                    if (field && field.type && field.type !== \"string\") {\n                        that.options.ignoreCase = false;\n                    }\n                }\n            },\n\n            _focus: function(candidate) {\n                return this.listView.focus(candidate);\n            },\n\n            _filter: function(options) {\n                var that = this;\n                var widgetOptions = that.options;\n                var word = options.word;\n                var filterFields = widgetOptions.filterFields;\n                var field = widgetOptions.dataTextField;\n                var expression;\n\n                if (filterFields && filterFields.length) {\n                    expression = {\n                        logic: \"or\",\n                        filters: [],\n                        fromFilter: true\n                    };\n                    for (var i = 0; i < filterFields.length; i++) {\n                        this._pushFilterExpression(expression, that._buildExpression(word, filterFields[i]));\n                    }\n                } else {\n                    expression = that._buildExpression(word, field);\n                }\n\n                that._open = options.open;\n                that._filterSource(expression);\n            },\n\n            _buildExpression: function(value, field) {\n                var that = this;\n                var widgetOptions = that.options;\n                var ignoreCase = widgetOptions.ignoreCase;\n                var accentFoldingFiltering = that.dataSource.options.accentFoldingFiltering;\n\n                return {\n                    value: ignoreCase ? (accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase()) : value,\n                    field: field,\n                    operator: widgetOptions.filter,\n                    ignoreCase: ignoreCase\n                };\n            },\n\n            _clearButton: function() {\n                var list = this;\n                var clearTitle = list.options.messages.clear;\n\n                if (!list._clear) {\n                    list._clear = $(`<span unselectable=\"on\" class=\"k-clear-value\" title=\"${clearTitle}\">${kendo.ui.icon(\"x\")}</span>`).attr({\n                        \"role\": \"button\",\n                        \"tabIndex\": -1\n                    });\n                }\n\n                if (!list.options.clearButton) {\n                    list._clear.remove();\n                }\n                this._hideClear();\n            },\n\n            search: function(word) {\n                var options = this.options;\n\n                word = typeof word === \"string\" ? word : this._inputValue();\n\n                clearTimeout(this._typingTimeout);\n\n                if ((!options.enforceMinLength && !word.length) || word.length >= options.minLength) {\n                    this._state = \"filter\";\n                    if (this.listView) {\n                        this.listView._emptySearch = !kendo.trim(word).length;\n                    }\n\n                    if (!this._isFilterEnabled()) {\n                        this._searchByWord(word);\n                    } else {\n                        this._filter({ word: word, open: true });\n                    }\n                }\n            },\n\n            current: function(candidate) {\n                return this._focus(candidate);\n            },\n\n            items: function() {\n                return this.ul[0].children;\n            },\n\n            destroy: function() {\n                var that = this;\n                var ns = that.ns;\n\n                Widget.fn.destroy.call(that);\n\n                that._unbindDataSource();\n\n                if (that.largeMQL || that.mediumMQL || that.smallMQL) {\n                    that.largeMQL.destroy();\n                    that.mediumMQL.destroy();\n                    that.smallMQL.destroy();\n                }\n\n                that.listView.destroy();\n                that.list.off(ns);\n\n                that.popup.destroy();\n\n                if (that._form) {\n                    that._form.off(\"reset\", that._resetHandler);\n                }\n\n                if (that.label) {\n                    that.label.destroy();\n                }\n            },\n\n            dataItem: function(index) {\n                var that = this;\n\n                if (index === undefined$1) {\n                    return that.listView.selectedDataItems()[0];\n                }\n\n                if (typeof index !== \"number\") {\n                    if (that.options.virtual) {\n                        return that.dataSource.getByUid($(index).data(\"uid\"));\n                    }\n\n                    index = $(that.items()).index(index);\n                }\n\n                return that.dataSource.flatView()[index];\n            },\n\n            _activateItem: function() {\n                var current = this.listView.focus();\n                if (current && this.popup.visible()) {\n                    this._focused.add(this.filterInput).attr(ARIA_ACTIVEDESCENDANT, current.attr(\"id\"));\n                }\n            },\n\n            _deactivateItem: function() {\n                this._focused.add(this.filterInput).removeAttr(ARIA_ACTIVEDESCENDANT);\n            },\n\n            _accessors: function() {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var getter = kendo.getter;\n                var textField = element.attr(kendo.attr(\"text-field\"));\n                var valueField = element.attr(kendo.attr(\"value-field\"));\n\n                if (!options.dataTextField && textField) {\n                    options.dataTextField = textField;\n                }\n\n                if (!options.dataValueField && valueField) {\n                    options.dataValueField = valueField;\n                }\n\n                that._text = getter(options.dataTextField);\n                that._value = getter(options.dataValueField);\n            },\n\n            _aria: function(id) {\n                var that = this,\n                    options = that.options,\n                    element = that._focused,\n                    autocomplete;\n\n                if (options.suggest !== undefined$1) {\n                    if (options.filter === \"none\") {\n                        if (options.suggest === true) {\n                            autocomplete = \"inline\";\n                        } else {\n                            autocomplete = \"none\";\n                        }\n                    } else {\n                        if (options.suggest === true) {\n                            autocomplete = \"both\";\n                        } else {\n                            autocomplete = \"list\";\n                        }\n                    }\n\n                    element.attr(ARIA_AUTOCOMPLETE, autocomplete);\n                }\n\n                id = id ? id + \" \" + that.ul[0].id : that.ul[0].id;\n\n                element.attr({\n                    \"aria-controls\": id\n                });\n\n                if (that.filterInput && that.filterInput.length > 0) {\n                    that.filterInput.attr(ARIA_CONTROLS, id);\n                }\n\n                that.ul.attr(ARIA_LIVE, !that._isFilterEnabled() ? \"off\" : \"polite\");\n\n                that._ariaLabel(that._focused);\n            },\n\n            _blur: function() {\n                var that = this;\n\n                that._change();\n                that.close();\n                that._userTriggered = false;\n            },\n\n            _isValueChanged: function(value) {\n                return value !== unifyType(this._old, typeof value);\n            },\n\n            _change: function() {\n                var that = this;\n                var index = that.selectedIndex;\n                var optionValue = that.options.value;\n                var value = that.value();\n                var trigger;\n\n                if (that._isSelect && !that.listView.bound() && optionValue) {\n                    value = optionValue;\n                }\n\n                if (that._isValueChanged(value)) {\n                    trigger = true;\n                } else if (that._valueBeforeCascade !== undefined$1 && that._isValueChanged(that._valueBeforeCascade) && that._userTriggered) {\n                    trigger = true;\n                } else if (index !== undefined$1 && index !== that._oldIndex && !that.listView.isFiltered() && !that.options.virtual) {\n                    trigger = true;\n                }\n\n                if (trigger) {\n\n                    if (that._old === null || that._old === \"\" || value === \"\") {\n                        that._valueBeforeCascade = that._old = value;\n                    } else {\n                        if (that.dataItem()) {\n                            that._valueBeforeCascade = that._old = that.options.dataValueField ? that.dataItem()[that.options.dataValueField] : that.dataItem();\n                        } else {\n                            that._valueBeforeCascade = that._old = null;\n                        }\n                    }\n                    that._oldIndex = index;\n\n                    if (!that._typing) {\n                        // trigger the DOM change event so any subscriber gets notified\n                        that.element.trigger(CHANGE);\n                    }\n\n                    that.trigger(CHANGE);\n                }\n\n                that.typing = false;\n            },\n\n            _data: function() {\n                return this.dataSource.view();\n            },\n\n            _enable: function() {\n                var that = this,\n                    options = that.options,\n                    disabled = that.element.is(\"[disabled]\");\n\n                if (options.enable !== undefined$1) {\n                    options.enabled = options.enable;\n                }\n\n                if (!options.enabled || disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(kendo.isPresent(options.readonly) ? options.readonly : that.element.is(\"[readonly]\"));\n                }\n            },\n\n            _dataValue: function(dataItem) {\n                var value = this._value(dataItem);\n\n                if (value === undefined$1) {\n                    value = this._text(dataItem);\n                }\n\n                return value;\n            },\n\n            _offsetHeight: function() {\n                var offsetHeight = 0;\n                var siblings = this.listView.content.parent().prevAll(\":visible\");\n\n                siblings.each(function() {\n                    var element = $(this);\n\n                    offsetHeight += outerHeight(element, true);\n                });\n\n                return offsetHeight;\n            },\n\n            _height: function(length) {\n                var that = this;\n                var list = that.list;\n                var height = that.options.height;\n                var visible = that.popup.visible();\n                var isMccb = this.options.columns && this.options.columns.length;\n                var offsetTop, popups;\n\n                if (length || that.options.noDataTemplate) {\n                    // Check where animation container stays\n                    popups = list.parent().add(list.closest(\".k-animation-container\").add(list.closest(\".k-child-animation-container\"))).show();\n\n                    if (!list.parent().is(\":visible\")) {\n                        popups.hide();\n                        return;\n                    }\n\n                    height = that.listView.content[0].scrollHeight > height ? height : \"auto\";\n\n                    popups.height(height);\n\n                    if (height !== \"auto\") {\n                        offsetTop = that._offsetHeight();\n\n                        height = height - offsetTop;\n\n                        if (isMccb) {\n                            height = height - (outerHeight($(that.footer)) || 0) - (outerHeight($(that.columnsHeader)) || 0);\n                        }\n                    }\n\n                    if (isMccb) {\n                        that.listView.content.outerHeight(height);\n                    } else {\n                        that.listView.content.parent().outerHeight(height);\n                    }\n\n                    if (!visible) {\n                        list.parent().hide();\n                    }\n                }\n\n                return height;\n            },\n\n            _openHandler: function(e) {\n                var current;\n\n                this._adjustListWidth();\n\n                if (this.trigger(OPEN)) {\n                    e.preventDefault();\n                } else {\n                    this._focused.attr(ARIA_EXPANDED, true);\n                    this.ul.attr(ARIA_HIDDEN, false);\n\n                    current = this.listView.focus();\n                    if (current) {\n                        this._focused.add(this.filterInput).attr(ARIA_ACTIVEDESCENDANT, current.attr(\"id\"));\n                    }\n                }\n            },\n\n            _adjustListWidth: function() {\n                var that = this,\n                    list = that.list.parent(),\n                    width = list[0].style.width,\n                    wrapper = that.wrapper,\n                    computedStyle, computedWidth;\n\n                if ((!list.data(WIDTH) && width) || that._hasActionSheet()) {\n                    return;\n                }\n\n                computedStyle = window.getComputedStyle ? window.getComputedStyle(wrapper[0], null) : 0;\n                computedWidth = parseFloat(computedStyle && computedStyle.width) || outerWidth(wrapper);\n\n                if (computedStyle && browser.msie) { // getComputedStyle returns different box in IE.\n                    computedWidth += parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight) + parseFloat(computedStyle.borderLeftWidth) + parseFloat(computedStyle.borderRightWidth);\n                }\n\n                if (list.css(\"box-sizing\") !== \"border-box\") {\n                    width = computedWidth - (outerWidth(list) - list.width());\n                } else {\n                    width = computedWidth;\n                }\n\n                list.css({\n                    fontFamily: wrapper.css(\"font-family\"),\n                    width: that.options.autoWidth ? \"auto\" : width,\n                    minWidth: width,\n                    whiteSpace: that.options.autoWidth ? \"nowrap\" : \"normal\"\n                })\n                .data(WIDTH, width);\n\n                return true;\n            },\n\n            _closeHandler: function(e) {\n                if (e.closeButton) {\n                    this._onCloseButtonPressed();\n                }\n\n\n                if (this.trigger(CLOSE)) {\n                    e.preventDefault();\n                } else {\n                    this._focused.attr(ARIA_EXPANDED, false);\n                    this.ul.attr(ARIA_HIDDEN, true);\n                    this._focused.add(this.filterInput).removeAttr(ARIA_ACTIVEDESCENDANT);\n                }\n            },\n\n            _focusItem: function() {\n                var listView = this.listView;\n                var noFocusedItem = !listView.focus();\n                var index = last(listView.select());\n\n                if (index === undefined$1 && this.options.highlightFirst && noFocusedItem) {\n                    index = 0;\n                }\n\n                if (index !== undefined$1) {\n                    listView.focus(index);\n                } else if (noFocusedItem) {\n                    listView.scrollToIndex(0);\n                }\n            },\n\n            _calculateGroupPadding: function(height) {\n                var li = this.ul.children(\".k-first\").first();\n                var groupHeader = this.listView.content.prev(FIXED_GROUP_HEADER);\n                var padding = 0;\n                var direction = 'right';\n\n                if (groupHeader[0] && groupHeader[0].style.display !== \"none\") {\n                    if (height !== \"auto\") {\n                        padding = kendo.support.scrollbar();\n                    }\n\n                    if (this.element.parents('.k-rtl').length) {\n                        direction = 'left';\n                    }\n\n                    padding += parseFloat(li.css(\"border-\" + direction + \"-width\"), 10) + parseFloat(li.children(GROUP_LABEL).css(\"padding-\" + direction), 10);\n                    groupHeader.css(\"padding-\" + direction, padding);\n                }\n            },\n\n            _calculatePopupHeight: function(force) {\n                var height = this._height(this.dataSource.flatView().length || force);\n                this._calculateGroupPadding(height);\n                this._calculateColumnsHeaderPadding(height);\n            },\n\n            _calculateColumnsHeaderPadding: function(height) {\n                if (this.options.columns && this.options.columns.length) {\n                    var list = this;\n                    var isRtl = support.isRtl(list.wrapper);\n                    var scrollbar = kendo.support.scrollbar();\n\n                    list.columnsHeader.css((isRtl ? \"padding-left\" : \"padding-right\"), height !== \"auto\" ? scrollbar : 0);\n                }\n            },\n\n            _refreshScroll: function() {\n                var listView = this.listView;\n                var enableYScroll = listView.element.height() > listView.content.height();\n\n                if (this.options.autoWidth) {\n                    listView.content.css({\n                        overflowX: \"hidden\",\n                        overflowY: enableYScroll ? \"scroll\" : \"auto\"\n                    });\n                }\n            },\n\n            _hasActionSheet: function() {\n                return this.options.adaptiveMode === \"auto\" && (this.mediumMQL.mediaQueryList.matches\n                        || this.smallMQL.mediaQueryList.matches);\n            },\n\n            _resizePopup: function(force) {\n                if (this.options.virtual\n                        || this._hasActionSheet()) {\n                    return;\n                }\n\n                if (!this.popup.element.is(\":visible\")) {\n                    this.popup.one(\"open\", (function(force) {\n                        return (function(e) {\n                            if (!e.isDefaultPrevented()) {\n                                this._calculatePopupHeight(force);\n                            }\n                        }).bind(this);\n                    }).call(this, force));\n\n                    this.popup.one(ACTIVATE, this._refreshScroll.bind(this));\n                } else {\n                    this._calculatePopupHeight(force);\n                }\n            },\n\n            _popup: function() {\n                var list = this;\n\n                list.list.wrap(\"<div>\");\n\n                if (list.options.adaptiveMode === \"auto\") {\n                    list.largeMQL.onEnter(list._createPopup.bind(list));\n                    list.mediumMQL.onEnter(list._createActionSheet.bind(list));\n                    list.smallMQL\n                        .onEnter(() => {\n                            if (!list.popup || !list.popup.fullscreen) {\n                                list._createActionSheet();\n                            }\n\n                            list.popup.fullscreen(true);\n                        });\n                } else {\n                    list._createPopup();\n                }\n            },\n\n            _addFilterHeader: function() {\n                var list = this;\n\n                if (list._isFilterEnabled()) {\n                    list._filterHeader();\n\n                    if (list.options.adaptiveMode === \"auto\" && (list.mediumMQL.mediaQueryList.matches || list.smallMQL.mediaQueryList.matches)) {\n                        list.popup.element\n                            .find(ACTIONSHEET_TITLEBAR)\n                            .append($(list.actionSheetFilterTemplate))\n                            .find(\".k-searchbox\")\n                            .append(list.filterInput);\n                        list._enable();\n                    } else if (list.options.popupFilter) {\n                        list.list\n                            .parent()\n                            .prepend($(list.filterTemplate))\n                            .find(\".k-searchbox\")\n                            .append(list.filterInput);\n                    }\n\n                    list._enable();\n                }\n            },\n\n            _createPopup: function() {\n                var list = this;\n                if (list._unboundClick) {\n                    if (list.input) {\n                        list.input.off(CLICK);\n                    } else if (list.element) {\n                        list.element.off(CLICK);\n                    }\n                    list._unboundClick = false;\n                }\n\n                if (list.popup) {\n                    list._cachedFilterValue = list.filterInput ? list.filterInput.val() : null;\n                    list.popup.destroy();\n                    if (list.popup.wrapper) {\n                        list.popup.wrapper.remove();\n                    }\n                    list._removeFilterHeader();\n                    list._removeStaticHeader();\n                }\n\n                list.popup = new ui.Popup(list.list.parent().addClass(\"k-list-container\"), extend({}, list.options.popup, {\n                    anchor: list.wrapper,\n                    open: list._openHandler.bind(list),\n                    close: list._closeHandler.bind(list),\n                    animation: list.options.animation,\n                    isRtl: support.isRtl(list.wrapper),\n                    autosize: list.options.autoWidth,\n                    autowidth: list.options.autoWidth,\n                    activate: () => {\n                        this._refreshFloatingLabel();\n                    },\n                    deactivate: () => {\n                        this._refreshFloatingLabel();\n                    }\n                }));\n\n                list._postCreatePopup();\n            },\n\n            _onActionSheetCreate: $.noop,\n            _onCloseButtonPressed: $.noop,\n\n            _createActionSheet: function() {\n                var list = this;\n\n                if (list.popup) {\n                    list._cachedFilterValue = list.filterInput ? list.filterInput.val() : null;\n                    list.popup.destroy();\n                    if (list.popup.wrapper) {\n                        list.popup.wrapper.remove();\n                    }\n                    list._removeFilterHeader();\n                    list._removeStaticHeader();\n                    list.list.add(list.list.parent()).css({\n                        width: \"\",\n                        height: \"\",\n                        minWidth: \"\"\n                    });\n                }\n\n                list.popup = new ui.ActionSheet(list.list.parent(), {\n                    headerTemplate: (options) =>\n                    `<div class=\"k-text-center k-actionsheet-titlebar\" >` +\n                            '<div class=\"k-actionsheet-titlebar-group k-hbox\">' +\n                                `<div  class=\"k-actionsheet-title\">` +\n                                    (list.options.adaptiveTitle || list.options.label ? `<div class=\"k-text-center\">${list.options.adaptiveTitle || list.options.label}</div>` : '') +\n                                    (list.options.adaptiveSubtitle ? `<div class=\"k-actionsheet-subtitle k-text-center\">${list.options.adaptiveSubtitle || \"\"}</div>` : \"\") +\n                                '</div>' +\n                                (options.closeButton ?\n                                '<div class=\"k-actionsheet-actions\">' +\n                                    kendo.html.renderButton(`<button tabindex=\"-1\" ${kendo.attr(\"ref-actionsheet-close-button\")}></button>`, { icon: \"check\", fillMode: \"flat\", size: \"large\", themeColor: 'primary' }) +\n                                '</div>'\n                                : \"\") +\n                            '</div>' +\n                    '</div>',\n                    open: list._openHandler.bind(list),\n                    close: list._closeHandler.bind(list),\n                    focusOnActivate: false,\n                    adaptive: true,\n                    appendTo: (list.options.popup && list.options.popup.appendTo) || document.body,\n                    closeButton: true,\n                    fullscreen: list.smallMQL.mediaQueryList.matches,\n                    activate: () => {\n                        this._refreshFloatingLabel();\n                    },\n                    deactivate: () => {\n                        this._refreshFloatingLabel();\n                    },\n                    popup: extend({}, list.options.popup, {\n                        autosize: list.options.autoWidth\n                    })\n                });\n\n                list._postCreatePopup();\n                list._onActionSheetCreate();\n            },\n\n            _removeFilterHeader: function() {\n                if (this.filterInput) {\n                    this.filterInput\n                        .off(this.ns)\n                        .closest(\".k-list-filter\")\n                        .remove();\n\n                    this.filterInput = null;\n                }\n            },\n\n            _removeStaticHeader: function() {\n                this.listView.header.remove();\n            },\n\n            _postCreatePopup: function() {\n                var list = this;\n                var listViewValue;\n\n                list._addFilterHeader();\n\n                if (list.filterInput && list._cachedFilterValue) {\n                    list.filterInput.val(list._cachedFilterValue);\n                }\n\n                list.popup.element.prepend(list.header)\n                    .on(MOUSEDOWN + this.ns, this._listMousedown.bind(this));\n\n                if (list.listView) {\n                    listViewValue = list.listView.value();\n\n                    if (list.listView._clean) {\n                        list.listView._clean();\n                    }\n\n                    // Dirty hack to clean MultiSelect taglist\n                    if (list.tagList && list.options.virtual) {\n                        list.tagList.empty();\n                    }\n\n                    list.listView.destroy();\n                    if (list.listView.content) {\n                        this.ul.unwrap();\n                    }\n                    list._initList({ skipValueUpdate: true });\n                    list.listView.value(listViewValue);\n                }\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === MOUSEENTER);\n            },\n\n            _toggle: function(open, preventFocus) {\n                var that = this;\n                var touchEnabled = support.mobileOS && (support.touch || support.MSPointers || support.pointers);\n\n                open = open !== undefined$1 ? open : !that.popup.visible();\n\n                if (!preventFocus && !touchEnabled && that._focused[0] !== activeElement()) {\n                    that._prevent = true;\n                    that._focused.trigger(FOCUS);\n                    that._prevent = false;\n                }\n\n                that[open ? OPEN : CLOSE]();\n            },\n\n            _triggerCascade: function() {\n                var that = this;\n\n                if (!that._cascadeTriggered || that.value() !== unifyType(that._cascadedValue, typeof that.value())) {\n                    that._cascadedValue = that.value();\n                    that._cascadeTriggered = true;\n                    that.trigger(CASCADE, { userTriggered: that._userTriggered });\n                }\n            },\n\n            _triggerChange: function() {\n                if (this._valueBeforeCascade !== this.value()) {\n                    this.trigger(CHANGE);\n                }\n            },\n\n            _unbindDataSource: function() {\n                var that = this;\n\n                that.dataSource.unbind(REQUESTSTART, that._requestStartHandler)\n                               .unbind(REQUESTEND, that._requestEndHandler)\n                               .unbind(\"error\", that._errorHandler);\n            },\n\n            requireValueMapper: function(options, value) {\n                var hasValue = (options.value instanceof Array ? options.value.length : options.value) || (value instanceof Array ? value.length : value);\n                if (hasValue && options.virtual && typeof options.virtual.valueMapper !== \"function\") {\n                    throw new Error(\"ValueMapper is not provided while the value is being set. See http://docs.telerik.com/kendo-ui/controls/editors/combobox/virtualization#the-valuemapper-function\");\n                }\n            }\n        });\n\n        function unifyType(value, type) {\n            if (value !== undefined$1 && value !== \"\" && value !== null) {\n                if (type === \"boolean\") {\n                    if (typeof value !== \"boolean\") {\n                        value = value.toString().toLowerCase() === \"true\";\n                    }\n                    value = Boolean(value);\n                } else if (type === \"number\") {\n                    value = Number(value);\n                } else if (type === \"string\") {\n                    value = value.toString();\n                }\n            }\n\n            return value;\n        }\n\n        extend(List, {\n            inArray: function(node, parentNode) {\n                var idx, length, siblings = parentNode.children;\n\n                if (!node || node.parentNode !== parentNode) {\n                    return -1;\n                }\n\n                for (idx = 0, length = siblings.length; idx < length; idx++) {\n                    if (node === siblings[idx]) {\n                        return idx;\n                    }\n                }\n\n                return -1;\n            },\n            unifyType: unifyType\n        });\n\n        kendo.ui.List = List;\n\n        ui.Select = List.extend({\n            init: function(element, options) {\n                List.fn.init.call(this, element, options);\n                this._initial = this.element.val();\n            },\n\n            setDataSource: function(dataSource) {\n                var that = this;\n                var parent;\n\n                that.options.dataSource = dataSource;\n\n                that._dataSource();\n\n                if (that.listView.bound()) {\n                    that._initialIndex = null;\n                    that.listView._current = null;\n                }\n\n                that.listView.setDataSource(that.dataSource);\n\n                if (that.options.autoBind) {\n                    that.dataSource.fetch();\n                }\n\n                parent = that._parentWidget();\n\n                if (parent) {\n                    that._cascadeSelect(parent);\n                }\n            },\n\n            close: function() {\n                this.popup.close();\n            },\n\n            select: function(candidate) {\n                var that = this;\n\n                if (candidate === undefined$1) {\n                    return that.selectedIndex;\n                } else {\n                    return that._select(candidate).done(function() {\n                        that._cascadeValue = that._old = that._accessor();\n                        that._oldIndex = that.selectedIndex;\n\n                        that._refreshFloatingLabel();\n                    });\n                }\n            },\n\n            _accessor: function(value, idx) {\n                return this[this._isSelect ? \"_accessorSelect\" : \"_accessorInput\"](value, idx);\n            },\n\n            _accessorInput: function(value) {\n                var element = this.element[0];\n\n                if (value === undefined$1) {\n                    return element.value;\n                } else {\n                    if (value === null) {\n                        value = \"\";\n                    }\n                    element.value = value;\n                }\n            },\n\n            _accessorSelect: function(value, idx) {\n                var element = this.element[0];\n                var hasValue;\n\n                if (value === undefined$1) {\n                    return getSelectedOption(element).value || \"\";\n                }\n\n                getSelectedOption(element).selected = false;\n\n                if (idx === undefined$1) {\n                    idx = -1;\n                }\n\n                hasValue = (value !== null && value !== \"\");\n\n                if (hasValue && idx == -1) {\n                    this._custom(value);\n                } else {\n                    if (value) {\n                        element.value = value;\n                    } else {\n                        element.selectedIndex = idx;\n                    }\n                }\n            },\n\n            _syncValueAndText: function() {\n                return true;\n            },\n\n            _custom: function(value) {\n                var that = this;\n                var element = that.element;\n                var custom = that._customOption;\n\n                if (!custom) {\n                    custom = $(\"<option/>\");\n                    that._customOption = custom;\n\n                    element.append(custom);\n                }\n\n                custom.text(value);\n                custom[0].selected = true;\n            },\n\n            _dataSource: function() {\n                var that = this,\n                    element = that.element,\n                    options = that.options,\n                    dataSource = options.dataSource || {},\n                    idx;\n\n                dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                if (that._isSelect) {\n                    idx = element[0].selectedIndex;\n                    if (idx > -1) {\n                        options.index = idx;\n                    }\n\n                    dataSource.select = element;\n                    dataSource.fields = [{ field: options.dataTextField },\n                                         { field: options.dataValueField }];\n                }\n\n                if (that.dataSource) {\n                    that._unbindDataSource();\n                } else {\n                    that._requestStartHandler = that._showBusy;\n                    that._requestEndHandler = that._hideBusy;\n                    that._errorHandler = function() {\n                        that._hideBusy();\n                    };\n                }\n\n                that.dataSource = kendo.data.DataSource.create(dataSource)\n                                       .bind(REQUESTSTART, that._requestStartHandler)\n                                       .bind(REQUESTEND, that._requestEndHandler)\n                                       .bind(\"error\", that._errorHandler);\n            },\n\n            _firstItem: function() {\n                this.listView.focusFirst();\n            },\n\n            _lastItem: function() {\n                this.listView.focusLast();\n            },\n\n            _nextItem: function() {\n                return this.listView.focusNext();\n            },\n\n            _prevItem: function() {\n                return this.listView.focusPrev();\n            },\n\n            _getNormalizedDataItem: function(candidate) {\n                var that = this,\n                    listView = that.listView,\n                    isIndex = typeof candidate === \"number\",\n                    hasOptionLabel = that.optionLabel && that.optionLabel.length,\n                    index;\n\n                if (isIndex) {\n                    index = hasOptionLabel ? --candidate : candidate;\n                } else {\n                    index = listView.getElementIndex(candidate);\n                }\n\n                return listView.dataItemByIndex(index);\n            },\n\n            _getNormalizedSelectCandidate: function(candidate) {\n                var that = this,\n                    hasOptionLabel = that.optionLabel && that.optionLabel.length,\n                    isIndex = typeof candidate === \"number\",\n                    normalizedCandidate = candidate;\n\n                if (hasOptionLabel && isIndex) {\n                    normalizedCandidate++;\n                }\n\n                return normalizedCandidate;\n            },\n\n            _move: function(e) {\n                var that = this;\n                var listView = that.listView;\n                var key = e.keyCode;\n                var down = key === keys.DOWN;\n                var isVirtual = that.options.virtual;\n                var dataItem;\n                var pressed;\n                var current;\n                var moveIndex;\n                var selectCandidate;\n\n                if (key === keys.UP || down) {\n                    if (e.altKey) {\n                        that.toggle(down);\n                    } else {\n                        if (!listView.bound() && !that.ul[0].firstChild) {\n                            if (!that._fetch) {\n                                that.dataSource.one(CHANGE, function() {\n                                    that._fetch = false;\n                                    that._move(e);\n                                });\n\n                                that._fetch = true;\n                                that._filterSource();\n                            }\n\n                            e.preventDefault();\n\n                            return true; //pressed\n                        }\n\n                        current = that._focus();\n\n                        if (!that._fetch && (!current || current.hasClass(KSELECTED))) {\n                            if (down) {\n                                moveIndex = that._nextItem();\n\n                                if ((isVirtual && moveIndex <= 0) || (!that._focus() && !moveIndex) ) {\n                                    that._lastItem();\n                                }\n                            } else {\n                                moveIndex = that._prevItem();\n\n                                if ((isVirtual && moveIndex >= listView.dataSource.total() - 1) || (!that._focus() && !moveIndex)) {\n                                    that._firstItem();\n                                }\n                            }\n                        }\n\n                        selectCandidate = that._getNormalizedSelectCandidate(that._get(that._focus()) || moveIndex || 0);\n\n                        that._select(selectCandidate, true).done(function() {\n                            var done = function() {\n                                if (!that.popup.visible()) {\n                                    that._blur();\n                                }\n\n                                if (that._cascadedValue === null) {\n                                    that._cascadedValue = that.value();\n                                } else {\n                                    that._cascadedValue = that.dataItem() ? that.dataItem()[that.options.dataValueField] || that.dataItem() : null;\n                                }\n                            };\n\n                            if (that.trigger(SELECT, { dataItem: that._getNormalizedDataItem(selectCandidate), item: that._focus() })) {\n                                that._select(current).done(done);\n                            } else {\n                                done();\n                            }\n                        });\n                    }\n\n                    e.preventDefault();\n                    pressed = true;\n                } else if (key === keys.ENTER || key === keys.TAB) {\n                    if (that.popup.visible()) {\n                        e.preventDefault();\n                    }\n\n                    current = that._focus();\n                    dataItem = that.dataItem();\n\n                    if (!that.popup.visible() && (!dataItem || that.text() !== that._text(dataItem))) {\n                        current = null;\n                    }\n\n                    var activeFilter = that.filterInput && that.filterInput[0] === activeElement();\n                    var selection;\n\n                    if (current) {\n                        dataItem = listView.dataItemByIndex(listView.getElementIndex(current));\n                        var shouldTrigger = true;\n\n                        if (dataItem) {\n                            shouldTrigger = that._value(dataItem) !== List.unifyType(that.value(), typeof that._value(dataItem));\n                        }\n\n                        if (shouldTrigger && that.trigger(SELECT, { dataItem: dataItem, item: current })) {\n                            return;\n                        }\n\n                        selection = that._select(current);\n                    } else if (that.input) {\n                        if (that._syncValueAndText() || that._isSelect) {\n                            that._accessor(that.input.val());\n                        }\n                        that.listView.value(that.input.val());\n                    }\n\n                    if (that._focusElement) {\n                        that._focusElement(that.wrapper);\n                    }\n\n                    if (activeFilter && key === keys.TAB) {\n                        that.wrapper.focusout();\n                    } else {\n                        if (selection && typeof selection.done === \"function\") {\n                            selection.done(function() {\n                                that._blur();\n                            });\n                        } else {\n                            that._blur();\n                        }\n                    }\n\n                    that.close();\n                    pressed = true;\n                } else if (key === keys.ESC) {\n                    if (that.popup.visible()) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n                    that.close();\n                    pressed = true;\n                } else if (that.popup.visible() && (key === keys.PAGEDOWN || key === keys.PAGEUP)) {\n                    e.preventDefault();\n\n                    var direction = key === keys.PAGEDOWN ? 1 : -1;\n                    listView.scrollWith(direction * listView.screenHeight());\n\n                    pressed = true;\n                }\n\n                return pressed;\n            },\n\n            _fetchData: function() {\n                var that = this;\n                var hasItems = !!that.dataSource.view().length;\n\n                if (that._request || that.options.cascadeFrom) {\n                    return;\n                }\n\n                if (!that.listView.bound() && !that._fetch && !hasItems) {\n                    that._fetch = true;\n                    that.dataSource.fetch().done(function() {\n                        that._fetch = false;\n                    });\n                }\n            },\n\n            _options: function(data, optionLabel, value) {\n                var that = this,\n                    element = that.element,\n                    htmlElement = element[0],\n                    length = data.length,\n                    options = \"\",\n                    option,\n                    dataItem,\n                    dataText,\n                    dataValue,\n                    idx = 0;\n\n                if (optionLabel) {\n                    options = optionLabel;\n                }\n\n                for (; idx < length; idx++) {\n                    option = \"<option\";\n                    dataItem = data[idx];\n                    dataText = that._text(dataItem);\n                    dataValue = that._value(dataItem);\n\n                    if (dataValue !== undefined$1) {\n                        dataValue += \"\";\n\n                        if (dataValue.indexOf('\"') !== -1) {\n                            dataValue = dataValue.replace(quotRegExp, \"&quot;\");\n                        }\n\n                        option += ' value=\"' + dataValue + '\"';\n                    }\n\n                    option += \">\";\n\n                    if (dataText !== undefined$1) {\n                        option += htmlEncode(dataText);\n                    }\n\n                    option += \"</option>\";\n                    options += option;\n                }\n\n                element.html(options);\n\n                if (value !== undefined$1) {\n                    htmlElement.value = value;\n                    if (htmlElement.value && !value) {\n                        htmlElement.selectedIndex = -1;\n                    }\n                }\n\n                if (htmlElement.selectedIndex !== -1) {\n                    option = getSelectedOption(htmlElement);\n\n                    if (option) {\n                        option.setAttribute(SELECTED, SELECTED);\n                    }\n                }\n            },\n\n            _reset: function() {\n                var that = this,\n                    element = that.element,\n                    formId = element.attr(\"form\"),\n                    form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        setTimeout(function() {\n                            if (that.options._removeDataItems) {\n                                that.listView._dataItems = [];\n                            }\n\n                            that.value(that._initial);\n\n                        if (that.options._shouldRefresh) {\n                            that.text(that._initial);\n                            that.refresh();\n                        }\n                        });\n                    };\n\n                    that._form = form.on(\"reset\", that._resetHandler);\n                }\n            },\n\n            _parentWidget: function() {\n                var name = this.options.name;\n\n                if (!this.options.cascadeFrom) {\n                    return;\n                }\n\n                var parentElement = $(\"#\" + this.options.cascadeFrom);\n                var parent = parentElement.data(\"kendo\" + name);\n\n                if (!parent) {\n                    for (var i = 0; i < alternativeNames[name].length; i += 1) {\n                        parent = parentElement.data(\"kendo\" + alternativeNames[name][i]);\n\n                        if (!!parent) {\n                            break;\n                        }\n                    }\n                }\n\n                return parent;\n            },\n\n            _cascade: function() {\n                var that = this;\n                var options = that.options;\n                var cascade = options.cascadeFrom;\n                var parent;\n\n                if (cascade) {\n                    parent = that._parentWidget();\n\n                    if (!parent) {\n                        return;\n                    }\n\n                    that._cascadeHandlerProxy = that._cascadeHandler.bind(that);\n                    that._cascadeFilterRequests = [];\n\n                    options.autoBind = false;\n\n                    parent.bind(\"set\", function() { //will cascade\n                        that.one(\"set\", function(e) { //get your value\n                            that._selectedValue = e.value || that._accessor();\n                        });\n                    });\n\n                    parent.first(CASCADE, that._cascadeHandlerProxy);\n\n                    //refresh was called\n                    if (parent.listView.bound()) {\n                        that._toggleCascadeOnFocus();\n                        that._cascadeSelect(parent);\n                    } else {\n                        parent.one(DATA_BOUND, function() {\n                            that._toggleCascadeOnFocus();\n                            if (parent.popup.visible()) {\n                                parent._focused.trigger(FOCUS);\n                            }\n                        });\n\n                        if (!parent.value()) {\n                            that.enable(false);\n                        }\n                    }\n                }\n            },\n\n            _toggleCascadeOnFocus: function() {\n                var that = this;\n                var parent = that._parentWidget();\n                var focusout = isIE && parent instanceof ui.DropDownList ? BLUR : FOCUSOUT;\n\n                parent._focused.add(parent.filterInput).on(FOCUS, function() {\n                    parent.unbind(CASCADE, that._cascadeHandlerProxy);\n                    parent.unbind(CHANGE, that._cascadeHandlerProxy);\n                    parent.first(CHANGE, that._cascadeHandlerProxy);\n                });\n\n                parent._focused.add(parent.filterInput).on(focusout, function() {\n                    parent.unbind(CHANGE, that._cascadeHandlerProxy);\n                    parent.unbind(CASCADE, that._cascadeHandlerProxy);\n                    parent.first(CASCADE, that._cascadeHandlerProxy);\n                });\n            },\n\n            _cascadeHandler: function(e) {\n                var parent = this._parentWidget();\n                var valueBeforeCascade = this.value();\n\n                this._userTriggered = e.userTriggered || parent._userTriggered;\n\n                if (this.listView.bound()) {\n                    this._clearSelection(parent, true);\n                }\n\n                this._cascadeSelect(parent, valueBeforeCascade);\n            },\n\n            _cascadeChange: function(parent) {\n                var that = this;\n                var value = that._accessor() || that._selectedValue;\n\n                if (!that._cascadeFilterRequests.length) {\n                    that._selectedValue = null;\n                }\n\n                if (that._userTriggered) {\n                    that._clearSelection(parent, true);\n                } else if (value) {\n                    if (value !== unifyType(that.listView.value()[0], typeof value)) {\n                        that.value(value);\n                    }\n\n                    if (!that.dataSource.view()[0] || that.selectedIndex === -1) {\n                        that._clearSelection(parent, true);\n                    }\n                } else if (that.dataSource.flatView().length) {\n                    that.select(that.options.index);\n                }\n\n                that.enable();\n                that._triggerCascade();\n                that._triggerChange();\n                that._userTriggered = false;\n            },\n\n            _cascadeSelect: function(parent, valueBeforeCascade) {\n                var that = this;\n                var dataItem = parent.dataItem();\n                var filterValue = dataItem ? dataItem[that.options.cascadeFromParentField] || parent._value(dataItem) : null;\n                var valueField = that.options.cascadeFromField || parent.options.dataValueField;\n                var expressions;\n\n                // Applicable only when parent is ComboBox or MultiColumnComboBox\n                if (parent.options.cascadeOnCustomValue &&\n                    filterValue === null &&\n                    (!that.options.cascadeFromParentField || that.options.cascadeFromParentField === parent.options.dataValueField)) {\n                        filterValue = parent.value();\n                }\n\n                that._valueBeforeCascade = valueBeforeCascade !== undefined$1 ? valueBeforeCascade : that.value();\n\n                if (filterValue || filterValue === 0) {\n                    expressions = that.dataSource.filter() || {};\n                    removeFiltersForField(expressions, valueField);\n\n                    var handler = function() {\n                        var currentHandler = that._cascadeFilterRequests.shift();\n                        if (currentHandler) {\n                            that.unbind('dataBound', currentHandler);\n                        }\n\n                        currentHandler = that._cascadeFilterRequests[0];\n                        if (currentHandler) {\n                            that.first('dataBound', currentHandler);\n                        }\n\n                        that._cascadeChange(parent);\n                    };\n\n                    that._cascadeFilterRequests.push(handler);\n\n                    if (that._cascadeFilterRequests.length === 1) {\n                        that.first('dataBound', handler);\n                    }\n\n                    that._cascading = true;\n                    that._filterSource({\n                        field: valueField,\n                        operator: \"eq\",\n                        value: filterValue\n                    });\n                    that._cascading = false;\n                } else {\n                    that.enable(false);\n                    that._clearSelection(parent);\n                    that._triggerCascade();\n                    that._triggerChange();\n                    that._userTriggered = false;\n                }\n\n                that._refreshFloatingLabel();\n            }\n        });\n\n        var STATIC_LIST_NS = \".StaticList\";\n\n        var StaticList = kendo.ui.DataBoundWidget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, options);\n\n                this.element.attr(\"role\", (options.aria && options.aria.role) || 'listbox')\n                            .on(CLICK + STATIC_LIST_NS, \"li\", this._click.bind(this))\n                            .on(MOUSEENTER + STATIC_LIST_NS, \"li\", function() { $(this).addClass(HOVER); })\n                            .on(MOUSELEAVE + STATIC_LIST_NS, \"li\", function() { $(this).removeClass(HOVER); });\n\n                if (options && options.ariaLabel) {\n                    this.element.attr(ARIA_LABEL, options.ariaLabel);\n                } else if (options && options.ariaLabelledBy) {\n                    this.element.attr(ARIA_LABELLEDBY, options.ariaLabelledBy);\n                }\n\n                if (support.touch) {\n                    this._touchHandlers();\n                }\n\n                if (this.options.selectable === \"multiple\") {\n                    this.element.attr(ARIA_MULTISELECTABLE, true);\n                }\n\n                if (this.options.columns && this.options.columns.length) {\n                    var thead = this.element.parent().find('.k-table-thead');\n                    var row = $('<tr class=\"k-table-group-row\">' +\n                        '<th class=\"k-table-th\" colspan=\"' + this.options.columns.length + '\"></th>' +\n                    '</tr>');\n\n                    thead.append(row);\n\n                    this.header = row.find(\".k-table-th\");\n\n                    this.content = this.element.wrap(\"<div class='k-table-body k-table-scroller' unselectable='on'></div>\").parent();\n\n                    this.element.addClass(TABLE_LIST);\n                } else {\n                    this.content = this.element.wrap(\"<div class='k-list-content k-list-scroller' unselectable='on'></div>\").parent();\n                    this.header = this.content.before($('<div class=\"k-list-group-sticky-header\"></div>').hide()).prev();\n                    this.element.addClass(LIST_UL);\n                }\n\n                this.bound(false);\n\n                this._optionID = kendo.guid();\n\n                this._selectedIndices = [];\n\n                this._view = [];\n                this._dataItems = [];\n                this._values = [];\n\n                var value = this.options.value;\n\n                if (value) {\n                    this._values = Array.isArray(value) ? value.slice(0) : [value];\n                }\n\n                this._getter();\n                this._templates();\n\n                this.setDataSource(this.options.dataSource);\n\n                this._createOnScrollProxy();\n            },\n\n            options: {\n                name: \"StaticList\",\n                dataValueField: null,\n                valuePrimitive: false,\n                selectable: true,\n                template: null,\n                groupTemplate: null,\n                fixedGroupTemplate: null,\n                ariaLabel: null,\n                ariaLabelledBy: null\n            },\n\n            events: [\n               CLICK,\n                CHANGE,\n               ACTIVATE,\n               DEACTIVATE,\n               DATA_BINDING,\n               DATA_BOUND,\n               SELECTED_ITEM_CHANGE\n            ],\n\n            setDataSource: function(source) {\n                var that = this;\n                var dataSource = source || {};\n                var value;\n\n                dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n                dataSource = kendo.data.DataSource.create(dataSource);\n\n                if (that.dataSource) {\n                    that.dataSource.unbind(CHANGE, that._refreshHandler);\n\n                    value = that.value();\n\n                    that.value([]);\n                    that.bound(false);\n\n                    that.value(value);\n                } else {\n                    that._refreshHandler = that.refresh.bind(that);\n                }\n\n                that.setDSFilter(dataSource.filter());\n\n                that.dataSource = dataSource.bind(CHANGE, that._refreshHandler);\n                that._fixedHeader();\n            },\n\n            _touchHandlers: function() {\n                var that = this,\n                    itemSelector = this.options.columns && this.options.columns.length ? ITEMSELECTORTABLE : ITEMSELECTOR,\n                    startY, endY,\n                    tapPosition = function(event) {\n                        return (event.originalEvent || event).changedTouches[0].pageY;\n                    };\n\n                that.element.on(\"touchstart\" + STATIC_LIST_NS, function(e) {\n                    startY = tapPosition(e);\n                });\n\n                that.element.on(\"touchend\" + STATIC_LIST_NS, function(e) {\n                    if (e.isDefaultPrevented()) {\n                        return;\n                    }\n\n                    endY = tapPosition(e);\n\n                    if (Math.abs(endY - startY) < 10) {\n                        that._touchTriggered = true;\n                        that._triggerClick($(e.target).closest(itemSelector).get(0));\n                    }\n                });\n            },\n\n            skip: function() {\n                return this.dataSource.skip();\n            },\n\n            setOptions: function(options) {\n                Widget.fn.setOptions.call(this, options);\n\n                this._getter();\n                this._templates();\n                this._render();\n\n                if (this.label && options.label) {\n                    this.label.setOptions(options.label);\n                } else if (this.label && options.label === false) {\n                    this.label._unwrapFloating();\n                    this._inputLabel.remove();\n                    delete this._inputLabel;\n                }\n            },\n\n            destroy: function() {\n                this.element.off(STATIC_LIST_NS);\n\n                if (this._refreshHandler) {\n                    this.dataSource.unbind(CHANGE, this._refreshHandler);\n                }\n\n                clearTimeout(this._scrollId);\n\n                Widget.fn.destroy.call(this);\n            },\n\n            dataItemByIndex: function(index) {\n                return this.dataSource.flatView()[index];\n            },\n\n            screenHeight: function() {\n                return this.content[0].clientHeight;\n            },\n\n            scrollToIndex: function(index) {\n                var item = this.element[0].children[index];\n\n                if (item) {\n                    this.scroll(item);\n                }\n            },\n\n            scrollWith: function(value) {\n                this.content.scrollTop(this.content.scrollTop() + value);\n            },\n\n            scroll: function(item) {\n                if (!item) {\n                    return;\n                }\n\n                if (item[0]) {\n                    item = item[0];\n                }\n\n                var content = this.content[0],\n                    itemOffsetTop = item.offsetTop,\n                    itemOffsetHeight = item.offsetHeight,\n                    contentScrollTop = content.scrollTop,\n                    contentOffsetHeight = content.clientHeight,\n                    bottomDistance = itemOffsetTop + itemOffsetHeight;\n\n                    if (contentScrollTop > itemOffsetTop) {\n                        contentScrollTop = itemOffsetTop;\n                    } else if (bottomDistance > (contentScrollTop + contentOffsetHeight)) {\n                        contentScrollTop = (bottomDistance - contentOffsetHeight);\n                    }\n\n                    content.scrollTop = contentScrollTop;\n            },\n\n            selectedDataItems: function(dataItems) {\n                if (dataItems === undefined$1) {\n                    return this._dataItems.slice();\n                }\n\n                this._dataItems = dataItems;\n                this._values = this._getValues(dataItems);\n            },\n\n            _getValues: function(dataItems) {\n                var getter = this._valueGetter;\n\n                return $.map(dataItems, function(dataItem) {\n                    return getter(dataItem);\n                });\n            },\n\n            focusNext: function() {\n                var current = this.focus();\n\n                if (!current) {\n                    current = 0;\n                } else {\n                    current = current.next();\n                }\n\n                this.focus(current);\n            },\n\n            focusPrev: function() {\n                var current = this.focus();\n\n                if (!current) {\n                    current = this.element[0].children.length - 1;\n                } else {\n                    current = current.prev();\n                }\n\n                this.focus(current);\n            },\n\n            focusFirst: function() {\n                this.focus(this.element[0].children[0]);\n            },\n\n            focusLast: function() {\n                this.focus(last(this.element[0].children));\n            },\n\n            focus: function(candidate) {\n                var that = this;\n                var id = that._optionID;\n                var hasCandidate;\n\n                if (candidate === undefined$1) {\n                    return that._current;\n                }\n\n                candidate = last(that._get(candidate));\n                candidate = $(this.element[0].children[candidate]);\n\n                if (that._current) {\n                    that._current\n                        .removeClass(FOCUSED)\n                        .removeAttr(ID);\n\n                    that.trigger(DEACTIVATE);\n                }\n\n                hasCandidate = !!candidate[0];\n\n                if (hasCandidate) {\n                    candidate.addClass(FOCUSED);\n                    that.scroll(candidate);\n\n                    candidate.attr(\"id\", id);\n                }\n\n                that._current = hasCandidate ? candidate : null;\n                that.trigger(ACTIVATE);\n            },\n\n            focusIndex: function() {\n                return this.focus() ? this.focus().index() : undefined$1;\n            },\n\n            skipUpdate: function(skipUpdate) {\n                this._skipUpdate = skipUpdate;\n            },\n\n            select: function(indices) {\n                var that = this;\n                var selectable = that.options.selectable;\n                var singleSelection = selectable !== \"multiple\" && selectable !== false;\n                var selectedIndices = that._selectedIndices;\n                var uiSelectedIndices = [this.element.find(\".k-selected\").index()];\n\n                var added = [];\n                var removed = [];\n                var result;\n\n                if (indices === undefined$1) {\n                    return selectedIndices.slice();\n                }\n\n                indices = that._get(indices);\n\n                if (indices.length === 1 && indices[0] === -1) {\n                    indices = [];\n                }\n\n                var deferred = $.Deferred().resolve();\n                var filtered = that.isFiltered();\n\n                if (filtered && !singleSelection && that._deselectFiltered(indices)) {\n                    return deferred;\n                }\n\n                if (singleSelection && !filtered &&\n                    $.inArray(last(indices), selectedIndices) !== -1 && $.inArray(last(indices), uiSelectedIndices) !== -1) {\n\n                    if (that._dataItems.length && that._view.length) {\n                        that._dataItems = [that._view[selectedIndices[0]].item];\n                    }\n\n                    return deferred;\n                }\n\n                result = that._deselect(indices);\n\n                removed = result.removed;\n                indices = result.indices;\n\n                if (indices.length) {\n                    if (singleSelection) {\n                        indices = [last(indices)];\n                    }\n\n                    added = that._select(indices);\n\n                }\n\n                if (added.length || removed.length) {\n                    that._valueComparer = null;\n                    that.trigger(CHANGE, {\n                        added: added,\n                        removed: removed\n                    });\n\n                }\n\n                return deferred;\n            },\n\n            removeAt: function(position) {\n                this._selectedIndices.splice(position, 1);\n                this._values.splice(position, 1);\n                this._valueComparer = null;\n\n                return {\n                    position: position,\n                    dataItem: this._dataItems.splice(position, 1)[0]\n                };\n            },\n\n            setValue: function(value) {\n                value = Array.isArray(value) || value instanceof ObservableArray ? value.slice(0) : [value];\n\n                this._values = value;\n\n                this._valueComparer = null;\n            },\n\n            value: function(value) {\n                var that = this;\n                var deferred = that._valueDeferred;\n                var indices;\n\n                if (value === undefined$1) {\n                    return that._values.slice();\n                }\n\n                that.setValue(value);\n\n                if (!deferred || deferred.state() === \"resolved\") {\n                    that._valueDeferred = deferred = $.Deferred();\n                }\n\n                if (that.bound()) {\n                    indices = that._valueIndices(that._values);\n\n                    if (that.options.selectable === \"multiple\") {\n                        that.select(-1);\n                    }\n\n                    that.select(indices);\n\n                    deferred.resolve();\n                }\n\n                that._skipUpdate = false;\n\n                return deferred;\n            },\n\n            items: function() {\n                return this.element.children(ITEMSELECTOR);\n            },\n\n            _click: function(e) {\n                if (this._touchTriggered)\n                {\n                    this._touchTriggered = false;\n                    return;\n                }\n\n                if (!e.isDefaultPrevented()) {\n                    this._triggerClick(e.currentTarget);\n                }\n            },\n\n            _createOnScrollProxy: function() {\n                var onScrollProxy = function() {\n                    var that = this;\n                    clearTimeout(that._scrollId);\n\n                    that._scrollId = setTimeout(function() {\n                        that._renderHeader();\n                    }, 50);\n                };\n\n                this._onScroll = onScrollProxy.bind(this);\n            },\n\n            _triggerClick: function(item) {\n                if (!this.trigger(CLICK, { item: $(item) })) {\n                    this.select(item);\n                }\n            },\n\n            _valueExpr: function(type, values) {\n                var that = this;\n                var idx = 0;\n                var comparer;\n                var normalized = [];\n\n                if (!that._valueComparer || that._valueType !== type) {\n                    that._valueType = type;\n\n                    for (; idx < values.length; idx++) {\n                        normalized.push(unifyType(values[idx], type));\n                    }\n\n                    comparer = (current, values) => {\n                        for (var idx = 0; idx < normalized.length; idx++) {\n                            if (current === values[idx]) {\n                                return idx;\n                            }\n                        }\n                        return -1;\n                    };\n\n                    that._valueComparer = function(current) {\n                        return comparer(current, normalized);\n                    };\n                }\n\n                return that._valueComparer;\n            },\n\n            _dataItemPosition: function(dataItem, values) {\n                var value = this._valueGetter(dataItem);\n\n                var valueExpr = this._valueExpr(typeof value, values);\n\n                return valueExpr(value);\n            },\n\n            _getter: function() {\n                this._valueGetter = kendo.getter(this.options.dataValueField);\n            },\n\n            _deselect: function(indices) {\n                var that = this;\n                var children = that.element[0].children;\n                var selectable = that.options.selectable;\n                var selectedIndices = that._selectedIndices;\n                var dataItems = that._dataItems;\n                var values = that._values;\n                var removed = [];\n                var i = 0;\n                var j = 0;\n\n                var index, selectedIndex;\n                var removedIndices = 0;\n\n                indices = indices.slice();\n\n                if (selectable === true || !indices.length) {\n                    for (; i < selectedIndices.length; i++) {\n                        $(children[selectedIndices[i]]).removeClass(KSELECTED).attr(ARIA_SELECTED, false);\n\n                        removed.push({\n                            position: i,\n                            dataItem: dataItems[i]\n                        });\n                    }\n\n                    that._values = [];\n                    that._dataItems = [];\n                    that._selectedIndices = [];\n                } else if (selectable === \"multiple\") {\n                    while (i < indices.length) {\n                        index = indices[i];\n                        if (!$(children[index]).hasClass(KSELECTED)) {\n                            i++;\n                            continue;\n                        }\n\n                        while (j < selectedIndices.length) {\n                            selectedIndex = selectedIndices[j];\n                            if (selectedIndex === index) {\n                                $(children[selectedIndex]).removeClass(KSELECTED).attr(ARIA_SELECTED, false);\n                                var dataItem = this._view[index].item;\n                                var position = this._dataItemPosition(dataItem, this._values);\n\n                                removed.push({\n                                    position: position,\n                                    dataItem: dataItem\n                                });\n                                dataItems.splice(j, 1);\n                                selectedIndices.splice(j, 1);\n                                indices.splice(i, 1);\n                                values.splice(j, 1);\n\n                                removedIndices += 1;\n                                i -= 1;\n                                j -= 1;\n                                break;\n                            }\n                            j++;\n                        }\n                        i++;\n                    }\n                }\n\n                return {\n                    indices: indices,\n                    removed: removed\n                };\n            },\n\n            _deselectFiltered: function(indices) {\n                var children = this.element[0].children;\n                var dataItem, index, position;\n                var removed = [];\n                var idx = 0;\n\n                for (; idx < indices.length; idx++) {\n                    index = indices[idx];\n\n                    dataItem = this._view[index].item;\n                    position = this._dataItemPosition(dataItem, this._values);\n\n                    if (position > -1) {\n                        removed.push(this.removeAt(position));\n                        $(children[index]).removeClass(KSELECTED);\n                    }\n                }\n\n                if (removed.length) {\n                    this.trigger(CHANGE, {\n                        added: [],\n                        removed: removed\n                    });\n\n                    return true;\n                }\n\n                return false;\n            },\n\n            _select: function(indices) {\n                var that = this;\n                var children = that.element[0].children;\n                var data = that._view;\n                var dataItem, index;\n                var added = [];\n                var idx = 0;\n\n                if (last(indices) !== -1) {\n                    that.focus(indices);\n                }\n\n                for (; idx < indices.length; idx++) {\n\n                    index = indices[idx];\n                    dataItem = data[index];\n\n                    if (index === -1 || !dataItem) {\n                        continue;\n                    }\n\n                    dataItem = dataItem.item;\n\n                    that._selectedIndices.push(index);\n                    that._dataItems.push(dataItem);\n                    that._values.push(that._valueGetter(dataItem));\n\n                    $(children[index]).addClass(KSELECTED).attr(ARIA_SELECTED, true);\n\n                    added.push({\n                        dataItem: dataItem\n                    });\n                }\n                return added;\n            },\n\n            getElementIndex: function(element) {\n                return $(element).data(\"offset-index\");\n            },\n\n            _get: function(candidate) {\n                if (typeof candidate === \"number\") {\n                    candidate = [candidate];\n                } else if (!isArray(candidate)) {\n                    candidate = this.getElementIndex(candidate);\n                    candidate = [candidate !== undefined$1 ? candidate : -1];\n                }\n\n                return candidate;\n            },\n\n            _templates: function() {\n                var template;\n                var options = this.options;\n                var templates = {\n                    template: options.template,\n                    groupTemplate: options.groupTemplate,\n                    fixedGroupTemplate: options.fixedGroupTemplate\n                };\n\n                if (options.columns) {\n                    options.columns.forEach((column, i) => {\n                        var templateText = column.field ? column.field.toString() : TEXT;\n                        var templateFunc = data => htmlEncode(kendo.getter(templateText)(data));\n\n                        templates[\"column\" + i] = column.template || templateFunc;\n                    });\n                }\n\n                for (var key in templates) {\n                    template = templates[key];\n                    if (template && typeof template !== \"function\") {\n                        templates[key] = kendo.template(template);\n                    }\n                }\n\n                this.templates = templates;\n            },\n\n            _normalizeIndices: function(indices) {\n                var newIndices = [];\n                var idx = 0;\n\n                for (; idx < indices.length; idx++) {\n                    if (indices[idx] !== undefined$1) {\n                        newIndices.push(indices[idx]);\n                    }\n                }\n\n                return newIndices;\n            },\n\n            _valueIndices: function(values, indices) {\n                var data = this._view;\n                var idx = 0;\n                var index;\n\n                indices = indices ? indices.slice() : [];\n\n                if (!values.length) {\n                    return [];\n                }\n\n                for (; idx < data.length; idx++) {\n                    index = this._dataItemPosition(data[idx].item, values);\n\n                    if (index !== -1) {\n                        indices[index] = idx;\n                    }\n                }\n\n                return this._normalizeIndices(indices);\n            },\n\n            _firstVisibleItem: function() {\n                var element = this.element[0];\n                var content = this.content[0];\n                var scrollTop = content.scrollTop;\n                var itemHeight = $(element.children[0]).height();\n                var itemIndex = Math.floor(scrollTop / itemHeight) || 0;\n\n                if (element.childElementCount == 0) {\n                    return null;\n                }\n\n                var item = element.children[itemIndex] || element.lastChild;\n                var forward = item.offsetTop < scrollTop;\n\n                while (item) {\n                    if (forward) {\n                        if ((item.offsetTop + itemHeight) > scrollTop || !item.nextSibling) {\n                            break;\n                        }\n\n                        item = item.nextSibling;\n                    } else {\n                        if (item.offsetTop <= scrollTop || !item.previousSibling) {\n                            break;\n                        }\n\n                        item = item.previousSibling;\n                    }\n                }\n\n                return this._view[$(item).data(\"offset-index\")];\n            },\n\n            _fixedHeader: function() {\n                if (this.isGrouped() && this.templates.fixedGroupTemplate) {\n                    if (this.header.closest(GROUP_ROW_SEL).length) {\n                        this.header.closest(GROUP_ROW_SEL).show();\n                    } else {\n                        this.header.show();\n                    }\n\n                    this.content.scroll(this._onScroll);\n                } else {\n                    if (this.header.closest(GROUP_ROW_SEL).length) {\n                        this.header.closest(GROUP_ROW_SEL).hide();\n                    } else {\n                        this.header.hide();\n                    }\n\n                    this.content.off(\"scroll\", this._onScroll);\n                }\n            },\n\n            _renderHeader: function() {\n                var template = this.templates.fixedGroupTemplate;\n                if (!template) {\n                    return;\n                }\n\n                var visibleItem = this._firstVisibleItem();\n\n                if (visibleItem && visibleItem.group.toString().length) {\n                    this.header.html(template(visibleItem.group));\n                }\n            },\n\n            _renderItem: function(context) {\n                var item = `<li tabindex=\"-1\" role=\"${(this.options.aria && this.options.aria.itemRole) || 'option'}\" unselectable=\"on\" `;\n\n                var dataItem = context.item;\n                var notFirstItem = context.index !== 0;\n                var selected = context.selected;\n                var isGrouped = this.isGrouped();\n                var hasColumns = this.options.columns && this.options.columns.length;\n                var altRow = context.index % 2 === 1 ? \" k-table-alt-row\" : \"\";\n\n                if (hasColumns) {\n                    item += ('class=\"k-table-row' + altRow);\n                } else {\n                    item += 'class=\"k-list-item';\n                }\n\n                if (notFirstItem && context.newGroup) {\n                    item += ' k-first';\n                }\n\n                if (context.isLastGroupedItem && hasColumns) {\n                    item += ' k-last';\n                }\n\n                if (selected) {\n                    item += ' k-selected';\n                }\n\n                item += '\" aria-selected=\"' + (selected ? \"true\" : \"false\") + '\" data-offset-index=\"' + context.index + '\">';\n                if (hasColumns) {\n                    item += this._renderColumns(dataItem);\n                } else {\n                    item += '<span class=\"k-list-item-text\">';\n                    item += this.templates.template(dataItem);\n                    item += '</span>';\n                }\n\n                if (notFirstItem && context.newGroup) {\n                    if (hasColumns) {\n                        item += '<span class=\"k-table-td k-table-group-td\"><span>' + this.templates.groupTemplate(context.group) + '</span></span>';\n                    } else {\n                        item += '<div class=\"k-list-item-group-label\">' + this.templates.groupTemplate(context.group) + '</div>';\n                    }\n                } else if (isGrouped && hasColumns) {\n                    item += '<span class=\"k-table-td k-table-spacer-td\"></span>';\n                }\n\n                return item + \"</li>\";\n            },\n\n            _renderColumns: function(dataItem) {\n                var item = \"\";\n\n                for (var i = 0; i < this.options.columns.length; i++) {\n                    var currentWidth = this.options.columns[i].width;\n                    var currentWidthInt = parseInt(currentWidth, 10);\n                    var widthStyle = '';\n\n                    if (currentWidth && !isNaN(currentWidthInt)) {\n                        widthStyle += `${kendo.attr('style-width')}=\"${currentWidthInt}${percentageUnitsRegex.test(currentWidth) ? \"%\" : \"px\"}\"`;\n                    }\n\n                    item += \"<span class='k-table-td' \" + widthStyle + \">\";\n                    item += this.templates[\"column\" + i](dataItem);\n                    item += \"</span>\";\n                }\n\n                return item;\n            },\n\n            _render: function() {\n                var html = \"\";\n                var cspCompliantHtml;\n                var i = 0;\n                var idx = 0;\n                var context;\n                var dataContext = [];\n                var view = this.dataSource.view();\n                var values = this.value();\n\n                var group, newGroup, j;\n                var isGrouped = this.isGrouped();\n\n                if (isGrouped) {\n                    for (i = 0; i < view.length; i++) {\n                        group = view[i];\n                        newGroup = true;\n\n                        for (j = 0; j < group.items.length; j++) {\n                            context = {\n                                selected: this._selected(group.items[j], values),\n                                item: group.items[j],\n                                group: group.value,\n                                newGroup: newGroup,\n                                isLastGroupedItem: j === group.items.length - 1,\n                                index: idx };\n                            dataContext[idx] = context;\n                            idx += 1;\n\n                            html += this._renderItem(context);\n                            newGroup = false;\n                        }\n                    }\n                } else {\n                    for (i = 0; i < view.length; i++) {\n                        context = { selected: this._selected(view[i], values), item: view[i], index: i };\n\n                        dataContext[i] = context;\n\n                        html += this._renderItem(context);\n                    }\n                }\n\n                this._view = dataContext;\n\n                cspCompliantHtml = $(html);\n                kendo.applyStylesFromKendoAttributes(cspCompliantHtml, [\"width\", \"background-color\"]);\n\n                this.element.empty().append(cspCompliantHtml);\n\n                if (isGrouped && dataContext.length) {\n                    this._renderHeader();\n                }\n            },\n\n            _selected: function(dataItem, values) {\n                var select = !this.isFiltered() || this.options.selectable === \"multiple\";\n                return select && this._dataItemPosition(dataItem, values) !== -1;\n            },\n\n            setDSFilter: function(filter) {\n                this._lastDSFilter = extend({}, filter);\n            },\n\n            isFiltered: function() {\n                if (!this._lastDSFilter) {\n                    this.setDSFilter(this.dataSource.filter());\n                }\n\n                return !kendo.data.Query.compareFilters(this.dataSource.filter(), this._lastDSFilter);\n            },\n\n            refresh: function(e) {\n                var that = this;\n                var action = e && e.action;\n                var skipUpdateOnBind = that.options.skipUpdateOnBind;\n                var isItemChange = action === \"itemchange\";\n                var result;\n\n                that.trigger(DATA_BINDING);\n\n                that._fixedHeader();\n\n                that._render();\n\n                that.bound(true);\n\n                if (isItemChange || action === \"remove\") {\n                    result = mapChangedItems(that._dataItems, e.items);\n\n                    if (result.changed.length) {\n                        if (isItemChange) {\n                            that.trigger(SELECTED_ITEM_CHANGE, {\n                                items: result.changed\n                            });\n                        } else {\n                            that.value(that._getValues(result.unchanged));\n                        }\n                    }\n                } else if (that.isFiltered() || that._skipUpdate || that._emptySearch) {\n                    that.focus(0);\n                    if (that._skipUpdate || (that._emptySearch && that._selectedIndices.length)) {\n                        that._skipUpdate = false;\n                        that._selectedIndices = that._valueIndices(that._values, that._selectedIndices);\n                    }\n                } else if (!skipUpdateOnBind && (!action || action === \"add\")) {\n                    that.value(that._values);\n                }\n\n                if (that._valueDeferred) {\n                    that._valueDeferred.resolve();\n                }\n\n                that.trigger(DATA_BOUND);\n            },\n\n            bound: function(bound) {\n                if (bound === undefined$1) {\n                    return this._bound;\n                }\n\n                this._bound = bound;\n            },\n\n            isGrouped: function() {\n                return (this.dataSource.group() || []).length;\n            }\n        });\n\n        ui.plugin(StaticList);\n\n        function last(list) {\n            return list[list.length - 1];\n        }\n\n        function getSelectedOption(select) {\n            var index = select.selectedIndex;\n            return index > -1 ? select.options[index] : {};\n        }\n\n        function mapChangedItems(selected, itemsToMatch) {\n            var itemsLength = itemsToMatch.length;\n            var selectedLength = selected.length;\n            var dataItem;\n            var found;\n            var i, j;\n\n            var changed = [];\n            var unchanged = [];\n\n            if (selectedLength) {\n                for (i = 0; i < selectedLength; i++) {\n                    dataItem = selected[i];\n                    found = false;\n\n                    for (j = 0; j < itemsLength; j++) {\n                        if (dataItem === itemsToMatch[j]) {\n                            found = true;\n                            changed.push({ index: i, item: dataItem });\n                            break;\n                        }\n                    }\n\n                    if (!found) {\n                        unchanged.push(dataItem);\n                    }\n                }\n            }\n\n            return {\n                changed: changed,\n                unchanged: unchanged\n            };\n        }\n\n        function isValidFilterExpr(expression) {\n            if (!expression || $.isEmptyObject(expression)) {\n                return false;\n            }\n\n            if (expression.filters && !expression.filters.length) {\n                return false;\n            }\n\n            return true;\n        }\n\n        function removeFiltersForField(expression, field) {\n            var filters;\n            var found = false;\n\n            if (expression.filters) {\n                filters = $.grep(expression.filters, function(filter) {\n                    found = removeFiltersForField(filter, field);\n                    if (filter.filters) {\n                        return filter.filters.length;\n                    } else {\n                        return filter.field != field;\n                    }\n                });\n\n                if (!found && expression.filters.length !== filters.length) {\n                    found = true;\n                }\n\n                expression.filters = filters;\n            }\n\n            return found;\n        }\n\n        kendo.cssProperties.registerPrefix(\"List\", \"k-list-\");\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports[\"default\"] = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}