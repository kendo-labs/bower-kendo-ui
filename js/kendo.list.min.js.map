{"version":3,"sources":["raw-js/kendo.list.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendolist","js","this","$","kendo","jQuery","LOADING","SELECTOR","ARIA_BUSY","initLoader","that","loader","addClass","attr","_loading","_showBusy","showBusy","bind","_hideBusy","hideBusy","_toggleLoader","toggleLoader","_showBusyHandler","showBusyHandler","toggle","loaderIsShown","wrapper","hasClass","inputValuesWrapper","find","isMultiSelect","options","name","toLowerCase","_suffixContainer","separators","length","before","_arrow","insertAfter","element","removeClass","remove","_focused","_hideClear","e","isDefaultPrevented","_request","_busy","setTimeout","clearTimeout","_toggleCloseVisibility","_showClear","undefined$1","window","ui","outerHeight","_outerHeight","percentageUnitsRegex","Widget","keys","support","htmlEncode","activeElement","_activeElement","outerWidth","_outerWidth","ObservableArray","data","ID","CHANGE","FOCUSED","HOVER","KSELECTED","LIST_UL","FIXED_GROUP_HEADER","ITEMSELECTOR","OPEN","CLOSE","CASCADE","SELECT","CLICK","MOUSEENTER","ACTIVATE","DEACTIVATE","DATA_BINDING","DATA_BOUND","SELECTED_ITEM_CHANGE","SELECTED","REQUESTSTART","REQUESTEND","FOCUS","extend","isArray","Array","browser","HIDDENCLASS","WIDTH","TEXT","isIE","msie","quotRegExp","alternativeNames","ComboBox","DropDownList","MultiColumnComboBox","ARIA_LABELLEDBY","ARIA_LABEL","ARIA_ACTIVEDESCENDANT","ARIA_EXPANDED","ARIA_HIDDEN","ARIA_SELECTED","GROUP_ROW_SEL","List","DataBoundWidget","init","id","fn","call","_isSelect","is","dataSource","dataTextField","dataValueField","adaptiveMode","largeMQL","mediaQuery","mediumMQL","smallMQL","_bindLoader","_listSize","cssProperties","getValidClass","widget","propName","value","size","_filterHeader","ul","tabIndex","list","append","guid","columns","_columnsHeader","_header","_noData","_footer","_accessors","_initValue","valuePrimitive","footerTemplate","headerTemplate","noDataTemplate","messages","noData","clear","setOptions","enable","enabled","_renderFooter","_renderNoData","label","_inputLabel","_unwrapFloating","_label","_initLoader","focus","trigger","readonly","_editable","disable","floatingLabel","labelOptions","isPlainObject","content","Label","floatCheck","_floatCheck","_refreshFloatingLabel","listView","text","popup","visible","refresh","header","template","destroy","parent","filterTemplate","icon","iconClass","actionSheetFilterTemplate","_isFilterEnabled","filterInput","placeholder","title","filterTitle","role","$header","columnsHeader","colGroup","row","idx","currentColumn","field","columnsHeaderTemplate","currentWidth","width","currentWidthInt","parseInt","widthStyle","isNaN","test","applyStylesFromKendoAttributes","prepend","hide","appendTo","footer","footerEl","_listOptions","currentOptions","virtual","changeEventOption","change","_listChange","listBoundHandler","_listBound","focusedElm","inputId","labelElm","labelledBy","_generateLabelId","autoBind","selectable","click","_click","activate","_activateItem","deactivate","_deactivateItem","dataBinding","dataBound","height","groupTemplate","fixedGroupTemplate","ariaLabel","ariaLabelledBy","listSize","getter","_initList","opts","skipValueUpdate","listOptions","selectedItemChange","VirtualList","Object","assign","_hasActionSheet","StaticList","_setListValue","done","_updateSelectionState","noop","_listMousedown","target","preventDefault","filter","_clear","_clearValue","_clearText","_accessor","_customOption","enforceMinLength","_filter","word","open","highlightFirst","_change","_clearFilter","bound","_filterSource","force","isMultiColumnFiltering","filterFields","logic","filters","expression","resetPageSettings","removed","removeFiltersForField","_clearFilterExpressions","Deferred","reject","promise","newExpression","push","_pushFilterExpression","isValidFilterExpr","concat","_cascading","setDSFilter","dataSourceState","page","pageSize","sort","group","aggregate","_mergeState","filtersToRemove","i","splice","html","instance","_toggleNoData","show","_toggleHeader","prev","children","first","_allowOpening","flatView","val","_old","_ignoreCase","model","reader","fields","type","ignoreCase","_focus","candidate","widgetOptions","fromFilter","_buildExpression","_open","accentFoldingFiltering","toLocaleLowerCase","operator","_clearButton","clearTitle","clearButton","search","_inputValue","_typingTimeout","minLength","_state","_emptySearch","trim","_searchByWord","current","items","ns","_unbindDataSource","off","_form","_resetHandler","dataItem","index","selectedDataItems","getByUid","add","removeAttr","textField","valueField","_text","_value","_aria","autocomplete","suggest","_ariaLabel","_blur","close","_userTriggered","_isValueChanged","unifyType","selectedIndex","optionValue","_valueBeforeCascade","_oldIndex","isFiltered","_typing","typing","_data","view","_enable","disabled","_dataValue","_offsetHeight","offsetHeight","prevAll","each","_height","popups","isMccb","closest","scrollHeight","_openHandler","_adjustListWidth","computedStyle","computedWidth","style","getComputedStyle","parseFloat","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","css","fontFamily","autoWidth","minWidth","whiteSpace","_closeHandler","closeButton","_onCloseButtonPressed","_focusItem","noFocusedItem","last","select","scrollToIndex","_calculateGroupPadding","li","groupHeader","padding","direction","display","scrollbar","parents","_calculatePopupHeight","_calculateColumnsHeaderPadding","isRtl","_refreshScroll","enableYScroll","overflowX","overflowY","mediaQueryList","matches","_resizePopup","one","_popup","wrap","onEnter","_createPopup","_createActionSheet","fullscreen","_addFilterHeader","popupFilter","_cachedFilterValue","_removeFilterHeader","_removeStaticHeader","Popup","anchor","animation","autosize","autowidth","_postCreatePopup","_onActionSheetCreate","ActionSheet","renderButton","fillMode","focusOnActivate","adaptive","document","body","listViewValue","on","_clean","tagList","empty","_toggleHover","currentTarget","toggleClass","_toggle","preventFocus","touchEnabled","mobileOS","touch","MSPointers","pointers","_prevent","_triggerCascade","_cascadeTriggered","_cascadedValue","userTriggered","_triggerChange","unbind","_requestStartHandler","_requestEndHandler","_errorHandler","requireValueMapper","valueMapper","Error","toString","Boolean","Number","inArray","node","parentNode","siblings","Select","_initial","setDataSource","_dataSource","_initialIndex","_current","fetch","_parentWidget","_cascadeSelect","_select","_cascadeValue","_accessorInput","_accessorSelect","getSelectedOption","selected","_custom","_syncValueAndText","custom","DataSource","create","_firstItem","focusFirst","_lastItem","focusLast","_nextItem","focusNext","_prevItem","focusPrev","_getNormalizedDataItem","isIndex","hasOptionLabel","optionLabel","getElementIndex","dataItemByIndex","_getNormalizedSelectCandidate","normalizedCandidate","_move","pressed","moveIndex","selectCandidate","key","keyCode","down","DOWN","isVirtual","UP","altKey","firstChild","_fetch","total","_get","item","ENTER","TAB","selection","activeFilter","shouldTrigger","input","_focusElement","focusout","ESC","stopPropagation","PAGEDOWN","PAGEUP","scrollWith","screenHeight","_fetchData","hasItems","cascadeFrom","_options","option","dataText","dataValue","htmlElement","indexOf","replace","setAttribute","_reset","formId","form","_removeDataItems","_dataItems","_shouldRefresh","parentElement","_cascade","_cascadeHandlerProxy","_cascadeHandler","_cascadeFilterRequests","_selectedValue","_toggleCascadeOnFocus","valueBeforeCascade","_clearSelection","_cascadeChange","filterValue","cascadeFromParentField","cascadeFromField","cascadeOnCustomValue","handler","currentHandler","shift","STATIC_LIST_NS","aria","_touchHandlers","thead","_optionID","_selectedIndices","_view","_values","slice","_getter","_templates","_createOnScrollProxy","events","source","_refreshHandler","_fixedHeader","startY","endY","itemSelector","tapPosition","event","originalEvent","changedTouches","pageY","Math","abs","_touchTriggered","_triggerClick","get","skip","_render","_scrollId","clientHeight","scroll","scrollTop","itemOffsetTop","offsetTop","itemOffsetHeight","contentScrollTop","contentOffsetHeight","bottomDistance","dataItems","_getValues","_valueGetter","map","next","hasCandidate","focusIndex","skipUpdate","_skipUpdate","indices","result","singleSelection","selectedIndices","uiSelectedIndices","added","deferred","resolve","filtered","_deselectFiltered","_deselect","_valueComparer","removeAt","position","setValue","_valueDeferred","state","_valueIndices","_onScroll","_renderHeader","_valueExpr","values","comparer","normalized","_valueType","_dataItemPosition","valueExpr","j","templates","forEach","column","templateText","_normalizeIndices","newIndices","_firstVisibleItem","itemHeight","itemIndex","floor","childElementCount","lastChild","forward","nextSibling","previousSibling","isGrouped","visibleItem","_renderItem","context","itemRole","notFirstItem","hasColumns","altRow","newGroup","isLastGroupedItem","_renderColumns","cspCompliantHtml","dataContext","_selected","_lastDSFilter","Query","compareFilters","action","skipUpdateOnBind","isItemChange","itemsToMatch","found","itemsLength","selectedLength","changed","unchanged","mapChangedItems","_bound","isEmptyObject","grep","plugin","registerPrefix","kendo$1","__meta__","category","depends","hidden","defineProperty"],"mappings":"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","file":"kendo.list.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.data.js'), require('kendo.popup.js'), require('kendo.label.js'), require('kendo.icons.js'), require('kendo.actionsheet.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.data', 'kendo.popup', 'kendo.label', 'kendo.icons', 'kendo.actionsheet'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendolist = global.kendolist || {}, global.kendolist.js = {})));\n})(this, (function (exports) {\n    let $ = kendo.jQuery;\n\n    const LOADING = \"k-loading\",\n          LOADER = \"k-icon k-i-loading k-input-loading-icon\",\n          SELECTOR = \"k-input-inner\",\n          INPUT_VALUES = \"k-input-values\",\n          ARIA_BUSY = \"aria-busy\";\n\n    function initLoader() {\n        const that = this;\n        const loader = $(\"<span></span>\").addClass(LOADER).attr(\"role\", \"presentation\");\n        that._loading = loader;\n\n        that._showBusy = showBusy.bind(that);\n        that._hideBusy = hideBusy.bind(that);\n        that._toggleLoader = toggleLoader.bind(that);\n        that._showBusyHandler = showBusyHandler.bind(that);\n    }\n\n    function toggleLoader(toggle) {\n        const that = this;\n        const loaderIsShown = that.wrapper.hasClass(LOADING);\n        const inputValuesWrapper = that.wrapper.find(`.${INPUT_VALUES}`);\n        const isMultiSelect = that.options.name.toLowerCase() === \"multiselect\";\n        if (that._loading) {\n            if (toggle && !loaderIsShown) {\n                that.wrapper.addClass(LOADING);\n                if (that._suffixContainer) {\n                    const separators = that.wrapper.find('.k-input-separator');\n                    $(separators[separators.length - 1]).before(that._loading);\n                } else if (that._arrow) {\n                    that._arrow.before(that._loading);\n                } else if (inputValuesWrapper.length > 0 && isMultiSelect) {\n                    that._loading.insertAfter(inputValuesWrapper);\n                } else {\n                    const element = that.element.hasClass(SELECTOR) ? that.element : that.wrapper.find(`.${SELECTOR}`);\n                    that._loading.insertAfter(element);\n                }\n            } else if (loaderIsShown) {\n                that.wrapper.removeClass(LOADING);\n                that._loading.remove();\n            }\n        }\n    }\n\n    function showBusyHandler() {\n            const that = this;\n            if (that._focused) {\n                that._focused.attr(ARIA_BUSY, true);\n            } else {\n                const element = that.element.hasClass(SELECTOR) ? that.element : that.wrapper.find(`.${SELECTOR}`);\n                element.attr(ARIA_BUSY, true);\n            }\n\n            that._toggleLoader(true);\n            that._hideClear();\n    }\n\n    function showBusy(e) {\n        const that = this;\n\n        if (e && e.isDefaultPrevented()) {\n            return;\n        }\n\n        that._request = true;\n\n        if (that._busy) {\n            return;\n        }\n\n        that._busy = setTimeout(that._showBusyHandler, 100);\n    }\n\n\n    function hideBusy() {\n        const that = this;\n        clearTimeout(that._busy);\n        that._toggleLoader(false);\n        that._busy = null;\n\n        if (that._request) {\n            that._request = false;\n        }\n\n        if (that._focused) {\n            that._focused.attr(ARIA_BUSY, false);\n        } else {\n            const element = that.element.hasClass(SELECTOR) ? that.element : that.wrapper.find(`.${SELECTOR}`);\n            element.attr(ARIA_BUSY, true);\n        }\n\n        if (that._toggleCloseVisibility) {\n            that._toggleCloseVisibility();\n        } else {\n            that._showClear();\n        }\n    }\n\n    const __meta__ = {\n        id: \"list\",\n        name: \"List\",\n        category: \"framework\",\n        depends: [ \"data\", \"popup\", \"label\", \"icons\", \"actionsheet\" ],\n        hidden: true\n    };\n\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            outerHeight = kendo._outerHeight,\n            percentageUnitsRegex = /^\\d+(\\.\\d+)?%$/i,\n            Widget = ui.Widget,\n            keys = kendo.keys,\n            support = kendo.support,\n            htmlEncode = kendo.htmlEncode,\n            activeElement = kendo._activeElement,\n            outerWidth = kendo._outerWidth,\n            ObservableArray = kendo.data.ObservableArray,\n            ID = \"id\",\n            CHANGE = \"change\",\n            FOCUSED = \"k-focus\",\n            HOVER = \"k-hover\",\n            KSELECTED = \"k-selected\",\n            LIST = \"k-list\",\n            TABLE = \"k-table\",\n            DATA_TABLE = \"k-data-table\",\n            TABLE_MD = \"k-table-md\",\n            LIST_UL = \"k-list-ul\",\n            TABLE_LIST = \"k-table-list\",\n            FIXED_GROUP_HEADER = \".k-list-group-sticky-header\",\n            GROUP_LABEL = \".k-list-item-group-label\",\n            ITEMSELECTOR = \".k-list-item\",\n            ITEMSELECTORTABLE = \".k-table-row\",\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            CASCADE = \"cascade\",\n            SELECT = \"select\",\n            CLICK = \"click\",\n            MOUSELEAVE = \"mouseleave\",\n            MOUSEENTER = \"mouseenter\",\n            ACTIVATE = \"activate\",\n            DEACTIVATE = \"deactivate\",\n            DATA_BINDING = \"dataBinding\",\n            DATA_BOUND = \"dataBound\",\n            SELECTED_ITEM_CHANGE = \"selectedItemChange\",\n            SELECTED = \"selected\",\n            REQUESTSTART = \"requestStart\",\n            REQUESTEND = \"requestEnd\",\n            BLUR = \"blur\",\n            FOCUS = \"focus\",\n            FOCUSOUT = \"focusout\",\n            extend = $.extend,\n            isArray = Array.isArray,\n            browser = support.browser,\n            HIDDENCLASS = \"k-hidden\",\n            WIDTH = \"width\",\n            TEXT = \"text\",\n            VALUE = \"value\",\n            isIE = browser.msie,\n            quotRegExp = /\"/g,\n            alternativeNames = {\n                \"ComboBox\": [ \"DropDownList\", \"MultiColumnComboBox\" ],\n                \"DropDownList\": [ \"ComboBox\", \"MultiColumnComboBox\" ],\n                \"MultiColumnComboBox\": [ \"ComboBox\", \"DropDownList\" ]\n            },\n\n            UL_EL = '<ul unselectable=\"on\"/>',\n            LIST_EL = \"<div class='k-list'/>\",\n            NO_DATA_EL = '<div class=\"k-no-data\"></div>',\n            LIST_FOOTER_EL = '<div class=\"k-list-footer\"></div>',\n            TABLE_FOOTER_EL = '<div class=\"k-table-footer\">' +\n                    '<span class=\"k-table-td\"></span>' +\n                '</div>',\n            MOUSEDOWN = \"mousedown\",\n            LIST_SUFFIX = \"-list\",\n            LISTBOX_SUFFIX = \"_listbox\",\n            ARIA_LABELLEDBY = \"aria-labelledby\",\n            ARIA_LABEL = \"aria-label\",\n            ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n            ARIA_AUTOCOMPLETE = \"aria-autocomplete\",\n            ARIA_CONTROLS = \"aria-controls\",\n            ARIA_LIVE = \"aria-live\",\n            ARIA_EXPANDED = \"aria-expanded\",\n            ARIA_HIDDEN = \"aria-hidden\",\n            ARIA_MULTISELECTABLE = \"aria-multiselectable\",\n            ARIA_SELECTED = \"aria-selected\",\n            GROUP_ROW_SEL = \".k-table-group-row\",\n            ACTIONSHEET_TITLEBAR = \".k-actionsheet-titlebar\";\n\n        var List = kendo.ui.DataBoundWidget.extend({\n            init: function(element, options) {\n                var that = this,\n                    id;\n\n                Widget.fn.init.call(that, element, options);\n                element = that.element;\n                options = that.options;\n\n                that._isSelect = element.is(SELECT);\n\n                if (that._isSelect && that.element[0].length) {\n                    if (!options.dataSource) {\n                        options.dataTextField = options.dataTextField || TEXT;\n                        options.dataValueField = options.dataValueField || VALUE;\n                    }\n                }\n\n                if (options.adaptiveMode === \"auto\") {\n                    that.largeMQL = kendo.mediaQuery(\"large\");\n                    that.mediumMQL = kendo.mediaQuery(\"medium\");\n                    that.smallMQL = kendo.mediaQuery(\"small\");\n                }\n\n                that._bindLoader();\n\n                that._listSize = kendo.cssProperties.getValidClass({\n                    widget: \"List\",\n                    propName: \"size\",\n                    value: options.size\n                });\n\n                that._filterHeader();\n\n                that.ul = $(UL_EL).attr({\n                    tabIndex: -1,\n                    \"aria-hidden\": true\n                });\n\n                that.list = $(LIST_EL)\n                    .addClass(that._listSize)\n                    .append(that.ul);\n\n                id = element.attr(ID);\n\n                if (!id) {\n                    id = kendo.guid();\n                }\n\n                that.list.attr(ID, id + LIST_SUFFIX);\n                that.ul.attr(ID, id + LISTBOX_SUFFIX);\n\n                if (options.columns && options.columns.length) {\n                    that.list.removeClass(LIST).addClass(DATA_TABLE);\n                    that.list.removeClass(that._listSize).addClass(TABLE_MD);\n\n                    that.ul.removeClass(LIST_UL).addClass(TABLE);\n\n                    that._columnsHeader();\n                }\n\n                that._header();\n                that._noData();\n                that._footer();\n                that._accessors();\n                that._initValue();\n            },\n\n            options: {\n                valuePrimitive: false,\n                footerTemplate: \"\",\n                headerTemplate: \"\",\n                noDataTemplate: true,\n                size: \"medium\",\n                messages: {\n                    \"noData\": \"No data found.\",\n                    \"clear\": \"clear\"\n                },\n                adaptiveMode: \"none\"\n            },\n\n            setOptions: function(options) {\n                Widget.fn.setOptions.call(this, options);\n\n                if (options && options.enable !== undefined$1) {\n                    options.enabled = options.enable;\n                }\n\n                if (options.columns && options.columns.length) {\n                    this._columnsHeader();\n                }\n\n                this._header();\n                this._noData();\n                this._footer();\n\n                this._renderFooter();\n                this._renderNoData();\n\n                if (options.label && this._inputLabel) {\n                    this.label.setOptions(options.label);\n                } else if (options.label === false) {\n                    this.label._unwrapFloating();\n                    this._inputLabel.remove();\n                    delete this._inputLabel;\n                } else if (options.label) {\n                    this._label();\n                }\n            },\n\n            _bindLoader: function() {\n                const that = this;\n\n                that._initLoader = initLoader.bind(that);\n                that._initLoader();\n            },\n\n            focus: function() {\n                this._focused.trigger(FOCUS);\n            },\n\n            readonly: function(readonly) {\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            _label: function() {\n                var that = this;\n                var options = that.options;\n                var labelOptions = $.isPlainObject(options.label) ? options.label : {\n                    content: options.label\n                };\n\n                that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                    widget: that,\n                    floatCheck: that._floatCheck.bind(that)\n                }));\n\n                that._inputLabel = that.label.element;\n                that._refreshFloatingLabel();\n            },\n\n            _floatCheck: function() {\n                if (this.listView) {\n                    var hasValue = this.value() || (this.text ? this.text() : false);\n                    return !hasValue && !this.popup.visible();\n                }\n\n                return true;\n            },\n\n            _refreshFloatingLabel: function() {\n                var that = this;\n\n                if (that.label && that.label.floatingLabel) {\n                    that.label.floatingLabel.refresh();\n                }\n            },\n\n            _header: function() {\n                var list = this;\n                var header = $(list.header);\n                var template = list.options.headerTemplate;\n\n                kendo.destroy(header);\n                header.remove();\n\n                if (!template) {\n                    list.header = null;\n                    return;\n                }\n\n                var headerTemplate = typeof template !== \"function\" ? kendo.template(template) : template;\n                header = $(headerTemplate({}));\n\n                list.header = header[0] ? header : null;\n\n                if (list.list.parent.length > 0) {\n                    list.list.before(header);\n                }\n            },\n\n            _filterHeader: function() {\n                this.filterTemplate = '<div class=\"k-list-filter\">' +\n                    '<span class=\"k-searchbox k-input k-input-md k-rounded-md k-input-solid\" type=\"text\" autocomplete=\"off\">' +\n                        kendo.ui.icon({ icon: \"search\", iconClass: \"k-input-icon\" }) +\n                    '</span>' +\n                '</div>';\n\n                this.actionSheetFilterTemplate = `<div class=\"k-actionsheet-titlebar-group k-actionsheet-filter\">${this.filterTemplate}</div>`;\n\n                if (this._isFilterEnabled()) {\n                    this.filterInput = $('<input class=\"k-input-inner\" type=\"text\" />')\n                        .attr({\n                            placeholder: this.element.attr(\"placeholder\"),\n                            title: this.options.filterTitle || this.element.attr(\"title\"),\n                            role: \"searchbox\",\n                            \"aria-label\": this.options.filterTitle,\n                            \"aria-haspopup\": \"listbox\",\n                            \"aria-autocomplete\": \"list\"\n                        });\n                }\n            },\n\n            _columnsHeader: function() {\n                var list = this;\n                var $header;\n                var columnsHeader = $(list.columnsHeader);\n\n                kendo.destroy(columnsHeader);\n                columnsHeader.remove();\n\n                var header = \"<div class='k-table-header'><div class='k-table-header-wrap'><table class='k-table' role='presentation'>\";\n                var colGroup = \"<colgroup>\";\n                var row = \"<tr class='k-table-row'>\";\n\n                for (var idx = 0; idx < this.options.columns.length; idx++) {\n                    var currentColumn = this.options.columns[idx];\n                    var title = currentColumn.title || currentColumn.field || \"\";\n                    var titleFunc = () => title;\n                    var template = currentColumn.headerTemplate || titleFunc;\n                    var columnsHeaderTemplate = typeof template !== \"function\" ? kendo.template(template) : template;\n                    var currentWidth = currentColumn.width;\n                    var currentWidthInt = parseInt(currentWidth, 10);\n                    var widthStyle = '';\n\n                    if (currentWidth && !isNaN(currentWidthInt)) {\n                        widthStyle += `${kendo.attr('style-width')}=\"${currentWidthInt}${percentageUnitsRegex.test(currentWidth) ? \"%\" : \"px\"}\"`;\n                    }\n\n                    colGroup += \"<col \" + widthStyle + \"/>\";\n\n                    row += \"<th class='k-table-th'>\";\n                    row += columnsHeaderTemplate(currentColumn);\n                    row += \"</th>\";\n                }\n\n                colGroup += \"</colgroup>\";\n                row += \"</tr>\";\n                header += colGroup;\n                header += \"<thead class='k-table-thead'>\";\n                header += row;\n                header += \"</thead></table></div></div>\";\n\n                $header = $(header);\n                kendo.applyStylesFromKendoAttributes($header, [\"width\"]);\n\n                list.columnsHeader = columnsHeader = $header;\n                list.list.prepend(columnsHeader);\n            },\n\n            _noData: function() {\n                var list = this;\n                var noData = $(list.noData);\n                var template = list.options.noDataTemplate === true ? () => htmlEncode(list.options.messages.noData) : list.options.noDataTemplate;\n\n                kendo.destroy(noData);\n                noData.remove();\n\n                if (!template) {\n                    list.noData = null;\n                    return;\n                }\n\n                list.noData = $(NO_DATA_EL).hide().appendTo(list.list);\n                list.noDataTemplate = typeof template !== \"function\" ? kendo.template(template) : template;\n            },\n\n            _footer: function() {\n                var list = this;\n                var footer = $(list.footer);\n                var template = list.options.footerTemplate;\n                var footerEl = this.options.columns && this.options.columns.length ? TABLE_FOOTER_EL : LIST_FOOTER_EL;\n\n                kendo.destroy(footer);\n                footer.remove();\n\n                if (!template) {\n                    list.footer = null;\n                    return;\n                }\n\n                list.footer = $(footerEl).appendTo(list.list);\n                list.footerTemplate = typeof template !== \"function\" ? kendo.template(template) : template;\n            },\n\n            _listOptions: function(options) {\n                var that = this;\n                var currentOptions = that.options;\n                var virtual = currentOptions.virtual;\n                var changeEventOption = { change: that._listChange.bind(that) };\n                var listBoundHandler = that._listBound.bind(that);\n                var focusedElm = that._focused;\n                var inputId = that.element.attr(\"id\");\n                var labelElm = $(\"label[for=\\\"\" + that.element.attr(\"id\") + \"\\\"]\");\n                var labelledBy = focusedElm.attr(ARIA_LABELLEDBY);\n\n                if (!labelledBy && labelElm.length) {\n                    labelledBy = labelElm.attr(\"id\") || that._generateLabelId(labelElm, inputId || kendo.guid());\n                }\n\n                virtual = typeof virtual === \"object\" ? virtual : {};\n\n                options = $.extend({\n                    autoBind: false,\n                    selectable: true,\n                    dataSource: that.dataSource,\n                    click: that._click.bind(that),\n                    activate: that._activateItem.bind(that),\n                    columns: currentOptions.columns,\n                    deactivate: that._deactivateItem.bind(that),\n                    dataBinding: function() {\n                        that.trigger(DATA_BINDING);\n                    },\n                    dataBound: listBoundHandler,\n                    height: currentOptions.height,\n                    dataValueField: currentOptions.dataValueField,\n                    dataTextField: currentOptions.dataTextField,\n                    groupTemplate: currentOptions.groupTemplate,\n                    fixedGroupTemplate: currentOptions.fixedGroupTemplate,\n                    template: currentOptions.template,\n                    ariaLabel: focusedElm.attr(ARIA_LABEL),\n                    ariaLabelledBy: labelledBy,\n                    listSize: that._listSize\n                }, options, virtual, changeEventOption);\n\n                if (!options.template) {\n                    options.template = (data) => htmlEncode(kendo.getter(options.dataTextField)(data));\n                }\n\n                return options;\n            },\n\n            _initList: function(opts) {\n                var that = this;\n                var skipValueUpdate = opts && opts.skipValueUpdate;\n                var listOptions = that._listOptions({\n                    selectedItemChange: that._listChange.bind(that)\n                });\n\n                if (!that.options.virtual) {\n                    that.listView = new kendo.ui.StaticList(that.ul, listOptions);\n                } else {\n                    that.listView = new kendo.ui.VirtualList(that.ul, Object.assign(listOptions, {\n                        height: that._hasActionSheet() ? 362 : that.options.height, // Hardcoded virtual list height for action sheet untill better solution is found\n                    }));\n                    that.list.addClass(\"k-virtual-list\");\n                }\n\n                that.listView.bind(\"listBound\", that._listBound.bind(that));\n\n                if (!skipValueUpdate) {\n                    that._setListValue();\n                }\n            },\n\n            _setListValue: function(value) {\n                value = value || this.options.value;\n\n                if (value !== undefined$1) {\n                    this.listView.value(value)\n                        .done(this._updateSelectionState.bind(this));\n                }\n            },\n\n            _updateSelectionState: $.noop,\n\n            _listMousedown: function(e) {\n                if (!this.filterInput || this.filterInput[0] !== e.target) {\n                    e.preventDefault();\n                }\n            },\n\n            _isFilterEnabled: function() {\n                var filter = this.options.filter;\n                return filter && filter !== \"none\";\n            },\n\n            _hideClear: function() {\n                var list = this;\n\n                if (list._clear) {\n                    list._clear.addClass(HIDDENCLASS);\n                }\n            },\n\n            _showClear: function() {\n                if (this._clear) {\n                    this._clear.removeClass(HIDDENCLASS);\n                }\n            },\n\n            _clearValue: function() {\n                this._clearText();\n                this._accessor(\"\");\n                this.listView.value([]);\n\n                if (this._isSelect) {\n                    this._customOption = undefined$1;\n                }\n\n                if (this._isFilterEnabled() && !this.options.enforceMinLength) {\n                    this._filter({ word: \"\", open: false });\n\n                    if (this.options.highlightFirst) {\n                        this.listView.focus(0);\n                    }\n                }\n                this._change();\n            },\n\n            _clearText: function() {\n                this.text(\"\");\n            },\n\n            _clearFilter: function() {\n                if (!this.options.virtual) {\n                    this.listView.bound(false);\n                }\n\n                this._filterSource();\n            },\n\n            _filterSource: function(filter, force) {\n                var that = this;\n                var options = that.options;\n                var isMultiColumnFiltering = options.filterFields && filter && filter.logic && filter.filters && filter.filters.length;\n                var dataSource = that.dataSource;\n                var expression = extend({}, dataSource.filter() || {});\n                var resetPageSettings = filter || (expression.filters && expression.filters.length && !filter);\n\n                var removed = removeFiltersForField(expression, options.dataTextField);\n\n                this._clearFilterExpressions(expression);\n\n                if ((filter || removed) && that.trigger(\"filtering\", { filter: filter })) {\n                    return $.Deferred().reject().promise();\n                }\n\n                var newExpression = {\n                    filters: [],\n                    logic: \"and\"\n                };\n\n                if (isMultiColumnFiltering) {\n                    newExpression.filters.push(filter);\n                } else {\n                    this._pushFilterExpression(newExpression, filter);\n                }\n\n                if (isValidFilterExpr(expression)) {\n                    if (newExpression.logic === expression.logic) {\n                        newExpression.filters = newExpression.filters.concat(expression.filters);\n                    } else {\n                        newExpression.filters.push(expression);\n                    }\n                }\n\n                if (that._cascading) {\n                    this.listView.setDSFilter(newExpression);\n                }\n\n                var dataSourceState = extend({}, {\n                    page: resetPageSettings ? 1 : dataSource.page(),\n                    pageSize: resetPageSettings ? dataSource.options.pageSize : dataSource.pageSize(),\n                    sort: dataSource.sort(),\n                    filter: dataSource.filter(),\n                    group: dataSource.group(),\n                    aggregate: dataSource.aggregate()\n                }, { filter: newExpression });\n\n                return dataSource[force ? \"read\" : \"query\"](dataSource._mergeState(dataSourceState));\n            },\n\n            _pushFilterExpression: function(newExpression, filter) {\n                if (isValidFilterExpr(filter) && filter.value !== \"\") {\n                    newExpression.filters.push(filter);\n                }\n            },\n\n            _clearFilterExpressions: function(expression) {\n                if (!expression.filters) {\n                    return;\n                }\n\n                var filtersToRemove;\n\n                for (var i = 0; i < expression.filters.length; i++) {\n                    if (\"fromFilter\" in expression.filters[i]) {\n                        filtersToRemove = i;\n                    }\n                }\n\n                if (!isNaN(filtersToRemove)) {\n                    expression.filters.splice(filtersToRemove, 1);\n                }\n            },\n\n            _renderNoData: function() {\n                var list = this;\n                var noData = list.noData;\n\n                if (!noData) {\n                    return;\n                }\n\n                noData.html(list.noDataTemplate({ instance: list }));\n            },\n\n            _toggleNoData: function(show) {\n                $(this.noData).toggle(show);\n            },\n\n            _toggleHeader: function(show) {\n                var groupHeader = this.listView.content.prev(FIXED_GROUP_HEADER);\n                groupHeader.toggle(show);\n            },\n\n            _renderFooter: function() {\n                var list = this,\n                    footer = list.footer ? this.options.columns && this.options.columns.length ? list.footer.children().first() : list.footer : null;\n\n                if (!footer) {\n                    return;\n                }\n\n                footer.html(list.footerTemplate({ instance: list }));\n            },\n\n            _allowOpening: function() {\n                return this.options.noDataTemplate || this.dataSource.flatView().length;\n            },\n\n            _initValue: function() {\n                var that = this,\n                    value = that.options.value;\n\n                if (value !== null) {\n                    that.element.val(value);\n                } else {\n                    value = that._accessor();\n                    that.options.value = value;\n                }\n\n                that._old = value;\n            },\n\n            _ignoreCase: function() {\n                var that = this,\n                    model = that.dataSource.reader.model,\n                    field;\n\n                if (model && model.fields) {\n                    field = model.fields[that.options.dataTextField];\n\n                    if (field && field.type && field.type !== \"string\") {\n                        that.options.ignoreCase = false;\n                    }\n                }\n            },\n\n            _focus: function(candidate) {\n                return this.listView.focus(candidate);\n            },\n\n            _filter: function(options) {\n                var that = this;\n                var widgetOptions = that.options;\n                var word = options.word;\n                var filterFields = widgetOptions.filterFields;\n                var field = widgetOptions.dataTextField;\n                var expression;\n\n                if (filterFields && filterFields.length) {\n                    expression = {\n                        logic: \"or\",\n                        filters: [],\n                        fromFilter: true\n                    };\n                    for (var i = 0; i < filterFields.length; i++) {\n                        this._pushFilterExpression(expression, that._buildExpression(word, filterFields[i]));\n                    }\n                } else {\n                    expression = that._buildExpression(word, field);\n                }\n\n                that._open = options.open;\n                that._filterSource(expression);\n            },\n\n            _buildExpression: function(value, field) {\n                var that = this;\n                var widgetOptions = that.options;\n                var ignoreCase = widgetOptions.ignoreCase;\n                var accentFoldingFiltering = that.dataSource.options.accentFoldingFiltering;\n\n                return {\n                    value: ignoreCase ? (accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase()) : value,\n                    field: field,\n                    operator: widgetOptions.filter,\n                    ignoreCase: ignoreCase\n                };\n            },\n\n            _clearButton: function() {\n                var list = this;\n                var clearTitle = list.options.messages.clear;\n\n                if (!list._clear) {\n                    list._clear = $(`<span unselectable=\"on\" class=\"k-clear-value\" title=\"${clearTitle}\">${kendo.ui.icon(\"x\")}</span>`).attr({\n                        \"role\": \"button\",\n                        \"tabIndex\": -1\n                    });\n                }\n\n                if (!list.options.clearButton) {\n                    list._clear.remove();\n                }\n                this._hideClear();\n            },\n\n            search: function(word) {\n                var options = this.options;\n\n                word = typeof word === \"string\" ? word : this._inputValue();\n\n                clearTimeout(this._typingTimeout);\n\n                if ((!options.enforceMinLength && !word.length) || word.length >= options.minLength) {\n                    this._state = \"filter\";\n                    if (this.listView) {\n                        this.listView._emptySearch = !kendo.trim(word).length;\n                    }\n\n                    if (!this._isFilterEnabled()) {\n                        this._searchByWord(word);\n                    } else {\n                        this._filter({ word: word, open: true });\n                    }\n                }\n            },\n\n            current: function(candidate) {\n                return this._focus(candidate);\n            },\n\n            items: function() {\n                return this.ul[0].children;\n            },\n\n            destroy: function() {\n                var that = this;\n                var ns = that.ns;\n\n                Widget.fn.destroy.call(that);\n\n                that._unbindDataSource();\n\n                if (that.largeMQL || that.mediumMQL || that.smallMQL) {\n                    that.largeMQL.destroy();\n                    that.mediumMQL.destroy();\n                    that.smallMQL.destroy();\n                }\n\n                that.listView.destroy();\n                that.list.off(ns);\n\n                that.popup.destroy();\n\n                if (that._form) {\n                    that._form.off(\"reset\", that._resetHandler);\n                }\n\n                if (that.label) {\n                    that.label.destroy();\n                }\n            },\n\n            dataItem: function(index) {\n                var that = this;\n\n                if (index === undefined$1) {\n                    return that.listView.selectedDataItems()[0];\n                }\n\n                if (typeof index !== \"number\") {\n                    if (that.options.virtual) {\n                        return that.dataSource.getByUid($(index).data(\"uid\"));\n                    }\n\n                    index = $(that.items()).index(index);\n                }\n\n                return that.dataSource.flatView()[index];\n            },\n\n            _activateItem: function() {\n                var current = this.listView.focus();\n                if (current && this.popup.visible()) {\n                    this._focused.add(this.filterInput).attr(ARIA_ACTIVEDESCENDANT, current.attr(\"id\"));\n                }\n            },\n\n            _deactivateItem: function() {\n                this._focused.add(this.filterInput).removeAttr(ARIA_ACTIVEDESCENDANT);\n            },\n\n            _accessors: function() {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var getter = kendo.getter;\n                var textField = element.attr(kendo.attr(\"text-field\"));\n                var valueField = element.attr(kendo.attr(\"value-field\"));\n\n                if (!options.dataTextField && textField) {\n                    options.dataTextField = textField;\n                }\n\n                if (!options.dataValueField && valueField) {\n                    options.dataValueField = valueField;\n                }\n\n                that._text = getter(options.dataTextField);\n                that._value = getter(options.dataValueField);\n            },\n\n            _aria: function(id) {\n                var that = this,\n                    options = that.options,\n                    element = that._focused,\n                    autocomplete;\n\n                if (options.suggest !== undefined$1) {\n                    if (options.filter === \"none\") {\n                        if (options.suggest === true) {\n                            autocomplete = \"inline\";\n                        } else {\n                            autocomplete = \"none\";\n                        }\n                    } else {\n                        if (options.suggest === true) {\n                            autocomplete = \"both\";\n                        } else {\n                            autocomplete = \"list\";\n                        }\n                    }\n\n                    element.attr(ARIA_AUTOCOMPLETE, autocomplete);\n                }\n\n                id = id ? id + \" \" + that.ul[0].id : that.ul[0].id;\n\n                element.attr({\n                    \"aria-controls\": id\n                });\n\n                if (that.filterInput && that.filterInput.length > 0) {\n                    that.filterInput.attr(ARIA_CONTROLS, id);\n                }\n\n                that.ul.attr(ARIA_LIVE, !that._isFilterEnabled() ? \"off\" : \"polite\");\n\n                that._ariaLabel(that._focused);\n            },\n\n            _blur: function() {\n                var that = this;\n\n                that._change();\n                that.close();\n                that._userTriggered = false;\n            },\n\n            _isValueChanged: function(value) {\n                return value !== unifyType(this._old, typeof value);\n            },\n\n            _change: function() {\n                var that = this;\n                var index = that.selectedIndex;\n                var optionValue = that.options.value;\n                var value = that.value();\n                var trigger;\n\n                if (that._isSelect && !that.listView.bound() && optionValue) {\n                    value = optionValue;\n                }\n\n                if (that._isValueChanged(value)) {\n                    trigger = true;\n                } else if (that._valueBeforeCascade !== undefined$1 && that._isValueChanged(that._valueBeforeCascade) && that._userTriggered) {\n                    trigger = true;\n                } else if (index !== undefined$1 && index !== that._oldIndex && !that.listView.isFiltered() && !that.options.virtual) {\n                    trigger = true;\n                }\n\n                if (trigger) {\n\n                    if (that._old === null || that._old === \"\" || value === \"\") {\n                        that._valueBeforeCascade = that._old = value;\n                    } else {\n                        if (that.dataItem()) {\n                            that._valueBeforeCascade = that._old = that.options.dataValueField ? that.dataItem()[that.options.dataValueField] : that.dataItem();\n                        } else {\n                            that._valueBeforeCascade = that._old = null;\n                        }\n                    }\n                    that._oldIndex = index;\n\n                    if (!that._typing) {\n                        // trigger the DOM change event so any subscriber gets notified\n                        that.element.trigger(CHANGE);\n                    }\n\n                    that.trigger(CHANGE);\n                }\n\n                that.typing = false;\n            },\n\n            _data: function() {\n                return this.dataSource.view();\n            },\n\n            _enable: function() {\n                var that = this,\n                    options = that.options,\n                    disabled = that.element.is(\"[disabled]\");\n\n                if (options.enable !== undefined$1) {\n                    options.enabled = options.enable;\n                }\n\n                if (!options.enabled || disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(that.element.is(\"[readonly]\"));\n                }\n            },\n\n            _dataValue: function(dataItem) {\n                var value = this._value(dataItem);\n\n                if (value === undefined$1) {\n                    value = this._text(dataItem);\n                }\n\n                return value;\n            },\n\n            _offsetHeight: function() {\n                var offsetHeight = 0;\n                var siblings = this.listView.content.parent().prevAll(\":visible\");\n\n                siblings.each(function() {\n                    var element = $(this);\n\n                    offsetHeight += outerHeight(element, true);\n                });\n\n                return offsetHeight;\n            },\n\n            _height: function(length) {\n                var that = this;\n                var list = that.list;\n                var height = that.options.height;\n                var visible = that.popup.visible();\n                var isMccb = this.options.columns && this.options.columns.length;\n                var offsetTop, popups;\n\n                if (length || that.options.noDataTemplate) {\n                    // Check where animation container stays\n                    popups = list.parent().add(list.closest(\".k-animation-container\").add(list.closest(\".k-child-animation-container\"))).show();\n\n                    if (!list.parent().is(\":visible\")) {\n                        popups.hide();\n                        return;\n                    }\n\n                    height = that.listView.content[0].scrollHeight > height ? height : \"auto\";\n\n                    popups.height(height);\n\n                    if (height !== \"auto\") {\n                        offsetTop = that._offsetHeight();\n\n                        height = height - offsetTop;\n\n                        if (isMccb) {\n                            height = height - (outerHeight($(that.footer)) || 0) - (outerHeight($(that.columnsHeader)) || 0);\n                        }\n                    }\n\n                    if (isMccb) {\n                        that.listView.content.outerHeight(height);\n                    } else {\n                        that.listView.content.parent().outerHeight(height);\n                    }\n\n                    if (!visible) {\n                        list.parent().hide();\n                    }\n                }\n\n                return height;\n            },\n\n            _openHandler: function(e) {\n                var current;\n\n                this._adjustListWidth();\n\n                if (this.trigger(OPEN)) {\n                    e.preventDefault();\n                } else {\n                    this._focused.attr(ARIA_EXPANDED, true);\n                    this.ul.attr(ARIA_HIDDEN, false);\n\n                    current = this.listView.focus();\n                    if (current) {\n                        this._focused.add(this.filterInput).attr(ARIA_ACTIVEDESCENDANT, current.attr(\"id\"));\n                    }\n                }\n            },\n\n            _adjustListWidth: function() {\n                var that = this,\n                    list = that.list.parent(),\n                    width = list[0].style.width,\n                    wrapper = that.wrapper,\n                    computedStyle, computedWidth;\n\n                if ((!list.data(WIDTH) && width) || that._hasActionSheet()) {\n                    return;\n                }\n\n                computedStyle = window.getComputedStyle ? window.getComputedStyle(wrapper[0], null) : 0;\n                computedWidth = parseFloat(computedStyle && computedStyle.width) || outerWidth(wrapper);\n\n                if (computedStyle && browser.msie) { // getComputedStyle returns different box in IE.\n                    computedWidth += parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight) + parseFloat(computedStyle.borderLeftWidth) + parseFloat(computedStyle.borderRightWidth);\n                }\n\n                if (list.css(\"box-sizing\") !== \"border-box\") {\n                    width = computedWidth - (outerWidth(list) - list.width());\n                } else {\n                    width = computedWidth;\n                }\n\n                list.css({\n                    fontFamily: wrapper.css(\"font-family\"),\n                    width: that.options.autoWidth ? \"auto\" : width,\n                    minWidth: width,\n                    whiteSpace: that.options.autoWidth ? \"nowrap\" : \"normal\"\n                })\n                .data(WIDTH, width);\n\n                return true;\n            },\n\n            _closeHandler: function(e) {\n                if (e.closeButton) {\n                    this._onCloseButtonPressed();\n                }\n\n\n                if (this.trigger(CLOSE)) {\n                    e.preventDefault();\n                } else {\n                    this._focused.attr(ARIA_EXPANDED, false);\n                    this.ul.attr(ARIA_HIDDEN, true);\n                    this._focused.add(this.filterInput).removeAttr(ARIA_ACTIVEDESCENDANT);\n                }\n            },\n\n            _focusItem: function() {\n                var listView = this.listView;\n                var noFocusedItem = !listView.focus();\n                var index = last(listView.select());\n\n                if (index === undefined$1 && this.options.highlightFirst && noFocusedItem) {\n                    index = 0;\n                }\n\n                if (index !== undefined$1) {\n                    listView.focus(index);\n                } else if (noFocusedItem) {\n                    listView.scrollToIndex(0);\n                }\n            },\n\n            _calculateGroupPadding: function(height) {\n                var li = this.ul.children(\".k-first\").first();\n                var groupHeader = this.listView.content.prev(FIXED_GROUP_HEADER);\n                var padding = 0;\n                var direction = 'right';\n\n                if (groupHeader[0] && groupHeader[0].style.display !== \"none\") {\n                    if (height !== \"auto\") {\n                        padding = kendo.support.scrollbar();\n                    }\n\n                    if (this.element.parents('.k-rtl').length) {\n                        direction = 'left';\n                    }\n\n                    padding += parseFloat(li.css(\"border-\" + direction + \"-width\"), 10) + parseFloat(li.children(GROUP_LABEL).css(\"padding-\" + direction), 10);\n                    groupHeader.css(\"padding-\" + direction, padding);\n                }\n            },\n\n            _calculatePopupHeight: function(force) {\n                var height = this._height(this.dataSource.flatView().length || force);\n                this._calculateGroupPadding(height);\n                this._calculateColumnsHeaderPadding(height);\n            },\n\n            _calculateColumnsHeaderPadding: function(height) {\n                if (this.options.columns && this.options.columns.length) {\n                    var list = this;\n                    var isRtl = support.isRtl(list.wrapper);\n                    var scrollbar = kendo.support.scrollbar();\n\n                    list.columnsHeader.css((isRtl ? \"padding-left\" : \"padding-right\"), height !== \"auto\" ? scrollbar : 0);\n                }\n            },\n\n            _refreshScroll: function() {\n                var listView = this.listView;\n                var enableYScroll = listView.element.height() > listView.content.height();\n\n                if (this.options.autoWidth) {\n                    listView.content.css({\n                        overflowX: \"hidden\",\n                        overflowY: enableYScroll ? \"scroll\" : \"auto\"\n                    });\n                }\n            },\n\n            _hasActionSheet: function() {\n                return this.options.adaptiveMode === \"auto\" && (this.mediumMQL.mediaQueryList.matches\n                        || this.smallMQL.mediaQueryList.matches);\n            },\n\n            _resizePopup: function(force) {\n                if (this.options.virtual\n                        || this._hasActionSheet()) {\n                    return;\n                }\n\n                if (!this.popup.element.is(\":visible\")) {\n                    this.popup.one(\"open\", (function(force) {\n                        return (function(e) {\n                            if (!e.isDefaultPrevented()) {\n                                this._calculatePopupHeight(force);\n                            }\n                        }).bind(this);\n                    }).call(this, force));\n\n                    this.popup.one(ACTIVATE, this._refreshScroll.bind(this));\n                } else {\n                    this._calculatePopupHeight(force);\n                }\n            },\n\n            _popup: function() {\n                var list = this;\n\n                list.list.wrap(\"<div>\");\n\n                if (list.options.adaptiveMode === \"auto\") {\n                    list.largeMQL.onEnter(list._createPopup.bind(list));\n                    list.mediumMQL.onEnter(list._createActionSheet.bind(list));\n                    list.smallMQL\n                        .onEnter(() => {\n                            if (!list.popup || !list.popup.fullscreen) {\n                                list._createActionSheet();\n                            }\n\n                            list.popup.fullscreen(true);\n                        });\n                } else {\n                    list._createPopup();\n                }\n            },\n\n            _addFilterHeader: function() {\n                var list = this;\n\n                if (list._isFilterEnabled()) {\n                    list._filterHeader();\n\n                    if (list.options.adaptiveMode === \"auto\" && (list.mediumMQL.mediaQueryList.matches || list.smallMQL.mediaQueryList.matches)) {\n                        list.popup.element\n                            .find(ACTIONSHEET_TITLEBAR)\n                            .append($(list.actionSheetFilterTemplate))\n                            .find(\".k-searchbox\")\n                            .append(list.filterInput);\n                        list._enable();\n                    } else if (list.options.popupFilter) {\n                        list.list\n                            .parent()\n                            .prepend($(list.filterTemplate))\n                            .find(\".k-searchbox\")\n                            .append(list.filterInput);\n                    }\n\n                    list._enable();\n                }\n            },\n\n            _createPopup: function() {\n                var list = this;\n\n                if (list.popup) {\n                    list._cachedFilterValue = list.filterInput ? list.filterInput.val() : null;\n                    list.popup.destroy();\n                    list._removeFilterHeader();\n                    list._removeStaticHeader();\n                }\n\n                list.popup = new ui.Popup(list.list.parent().addClass(\"k-list-container\"), extend({}, list.options.popup, {\n                    anchor: list.wrapper,\n                    open: list._openHandler.bind(list),\n                    close: list._closeHandler.bind(list),\n                    animation: list.options.animation,\n                    isRtl: support.isRtl(list.wrapper),\n                    autosize: list.options.autoWidth,\n                    autowidth: list.options.autoWidth,\n                    activate: () => {\n                        this._refreshFloatingLabel();\n                    },\n                    deactivate: () => {\n                        this._refreshFloatingLabel();\n                    }\n                }));\n\n                list._postCreatePopup();\n            },\n\n            _onActionSheetCreate: $.noop,\n            _onCloseButtonPressed: $.noop,\n\n            _createActionSheet: function() {\n                var list = this;\n\n                if (list.popup) {\n                    list._cachedFilterValue = list.filterInput ? list.filterInput.val() : null;\n                    list.popup.destroy();\n                    list._removeFilterHeader();\n                    list._removeStaticHeader();\n                    list.list.parent().css({\n                        width: \"\",\n                        height: \"\",\n                        minWidth: \"\"\n                    });\n                }\n\n                list.popup = new ui.ActionSheet(list.list.parent(), {\n                    headerTemplate: (options) =>\n                    `<div class=\"k-text-center k-actionsheet-titlebar\" >` +\n                            '<div class=\"k-actionsheet-titlebar-group k-hbox\">' +\n                                `<div  class=\"k-actionsheet-title\">` +\n                                    (list.options.label ? `<div class=\"k-text-center\">${list.options.label}</div>` : '') +\n                                    (list.options.placeholder ? `<div class=\"k-actionsheet-subtitle k-text-center\">${list.options.placeholder || \"\"}</div>` : \"\") +\n                                '</div>' +\n                                (options.closeButton ?\n                                '<div class=\"k-actionsheet-actions\">' +\n                                    kendo.html.renderButton(`<button tabindex=\"-1\" ${kendo.attr(\"ref-actionsheet-close-button\")}></button>`, { icon: \"x\", fillMode: \"flat\", size: \"large\" }) +\n                                '</div>'\n                                : \"\") +\n                            '</div>' +\n                    '</div>',\n                    open: list._openHandler.bind(list),\n                    close: list._closeHandler.bind(list),\n                    focusOnActivate: false,\n                    adaptive: true,\n                    appendTo: (list.options.popup && list.options.popup.appendTo) || document.body,\n                    closeButton: true,\n                    fullscreen: list.smallMQL.mediaQueryList.matches,\n                    activate: () => {\n                        this._refreshFloatingLabel();\n                    },\n                    deactivate: () => {\n                        this._refreshFloatingLabel();\n                    },\n                    popup: extend({}, list.options.popup, {\n                        autosize: list.options.autoWidth\n                    })\n                });\n\n                list._postCreatePopup();\n                list._onActionSheetCreate();\n            },\n\n            _removeFilterHeader: function() {\n                if (this.filterInput) {\n                    this.filterInput\n                        .off(this.ns)\n                        .closest(\".k-list-filter\")\n                        .remove();\n\n                    this.filterInput = null;\n                }\n            },\n\n            _removeStaticHeader: function() {\n                this.listView.header.remove();\n            },\n\n            _postCreatePopup: function() {\n                var list = this;\n                var listViewValue;\n\n                list._addFilterHeader();\n\n                if (list.filterInput && list._cachedFilterValue) {\n                    list.filterInput.val(list._cachedFilterValue);\n                }\n\n                list.popup.element.prepend(list.header)\n                    .on(MOUSEDOWN + this.ns, this._listMousedown.bind(this));\n\n                if (list.listView) {\n                    listViewValue = list.listView.value();\n\n                    if (list.listView._clean) {\n                        list.listView._clean();\n                    }\n\n                    // Dirty hack to clean MultiSelect taglist\n                    if (list.tagList && list.options.virtual) {\n                        list.tagList.empty();\n                    }\n\n                    list.listView.destroy();\n                    list._initList({ skipValueUpdate: true });\n                    list.listView.value(listViewValue);\n                }\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === MOUSEENTER);\n            },\n\n            _toggle: function(open, preventFocus) {\n                var that = this;\n                var touchEnabled = support.mobileOS && (support.touch || support.MSPointers || support.pointers);\n\n                open = open !== undefined$1 ? open : !that.popup.visible();\n\n                if (!preventFocus && !touchEnabled && that._focused[0] !== activeElement()) {\n                    that._prevent = true;\n                    that._focused.trigger(FOCUS);\n                    that._prevent = false;\n                }\n\n                that[open ? OPEN : CLOSE]();\n            },\n\n            _triggerCascade: function() {\n                var that = this;\n\n                if (!that._cascadeTriggered || that.value() !== unifyType(that._cascadedValue, typeof that.value())) {\n                    that._cascadedValue = that.value();\n                    that._cascadeTriggered = true;\n                    that.trigger(CASCADE, { userTriggered: that._userTriggered });\n                }\n            },\n\n            _triggerChange: function() {\n                if (this._valueBeforeCascade !== this.value()) {\n                    this.trigger(CHANGE);\n                }\n            },\n\n            _unbindDataSource: function() {\n                var that = this;\n\n                that.dataSource.unbind(REQUESTSTART, that._requestStartHandler)\n                               .unbind(REQUESTEND, that._requestEndHandler)\n                               .unbind(\"error\", that._errorHandler);\n            },\n\n            requireValueMapper: function(options, value) {\n                var hasValue = (options.value instanceof Array ? options.value.length : options.value) || (value instanceof Array ? value.length : value);\n                if (hasValue && options.virtual && typeof options.virtual.valueMapper !== \"function\") {\n                    throw new Error(\"ValueMapper is not provided while the value is being set. See http://docs.telerik.com/kendo-ui/controls/editors/combobox/virtualization#the-valuemapper-function\");\n                }\n            }\n        });\n\n        function unifyType(value, type) {\n            if (value !== undefined$1 && value !== \"\" && value !== null) {\n                if (type === \"boolean\") {\n                    if (typeof value !== \"boolean\") {\n                        value = value.toString().toLowerCase() === \"true\";\n                    }\n                    value = Boolean(value);\n                } else if (type === \"number\") {\n                    value = Number(value);\n                } else if (type === \"string\") {\n                    value = value.toString();\n                }\n            }\n\n            return value;\n        }\n\n        extend(List, {\n            inArray: function(node, parentNode) {\n                var idx, length, siblings = parentNode.children;\n\n                if (!node || node.parentNode !== parentNode) {\n                    return -1;\n                }\n\n                for (idx = 0, length = siblings.length; idx < length; idx++) {\n                    if (node === siblings[idx]) {\n                        return idx;\n                    }\n                }\n\n                return -1;\n            },\n            unifyType: unifyType\n        });\n\n        kendo.ui.List = List;\n\n        ui.Select = List.extend({\n            init: function(element, options) {\n                List.fn.init.call(this, element, options);\n                this._initial = this.element.val();\n            },\n\n            setDataSource: function(dataSource) {\n                var that = this;\n                var parent;\n\n                that.options.dataSource = dataSource;\n\n                that._dataSource();\n\n                if (that.listView.bound()) {\n                    that._initialIndex = null;\n                    that.listView._current = null;\n                }\n\n                that.listView.setDataSource(that.dataSource);\n\n                if (that.options.autoBind) {\n                    that.dataSource.fetch();\n                }\n\n                parent = that._parentWidget();\n\n                if (parent) {\n                    that._cascadeSelect(parent);\n                }\n            },\n\n            close: function() {\n                this.popup.close();\n            },\n\n            select: function(candidate) {\n                var that = this;\n\n                if (candidate === undefined$1) {\n                    return that.selectedIndex;\n                } else {\n                    return that._select(candidate).done(function() {\n                        that._cascadeValue = that._old = that._accessor();\n                        that._oldIndex = that.selectedIndex;\n\n                        that._refreshFloatingLabel();\n                    });\n                }\n            },\n\n            _accessor: function(value, idx) {\n                return this[this._isSelect ? \"_accessorSelect\" : \"_accessorInput\"](value, idx);\n            },\n\n            _accessorInput: function(value) {\n                var element = this.element[0];\n\n                if (value === undefined$1) {\n                    return element.value;\n                } else {\n                    if (value === null) {\n                        value = \"\";\n                    }\n                    element.value = value;\n                }\n            },\n\n            _accessorSelect: function(value, idx) {\n                var element = this.element[0];\n                var hasValue;\n\n                if (value === undefined$1) {\n                    return getSelectedOption(element).value || \"\";\n                }\n\n                getSelectedOption(element).selected = false;\n\n                if (idx === undefined$1) {\n                    idx = -1;\n                }\n\n                hasValue = (value !== null && value !== \"\");\n\n                if (hasValue && idx == -1) {\n                    this._custom(value);\n                } else {\n                    if (value) {\n                        element.value = value;\n                    } else {\n                        element.selectedIndex = idx;\n                    }\n                }\n            },\n\n            _syncValueAndText: function() {\n                return true;\n            },\n\n            _custom: function(value) {\n                var that = this;\n                var element = that.element;\n                var custom = that._customOption;\n\n                if (!custom) {\n                    custom = $(\"<option/>\");\n                    that._customOption = custom;\n\n                    element.append(custom);\n                }\n\n                custom.text(value);\n                custom[0].selected = true;\n            },\n\n            _dataSource: function() {\n                var that = this,\n                    element = that.element,\n                    options = that.options,\n                    dataSource = options.dataSource || {},\n                    idx;\n\n                dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                if (that._isSelect) {\n                    idx = element[0].selectedIndex;\n                    if (idx > -1) {\n                        options.index = idx;\n                    }\n\n                    dataSource.select = element;\n                    dataSource.fields = [{ field: options.dataTextField },\n                                         { field: options.dataValueField }];\n                }\n\n                if (that.dataSource) {\n                    that._unbindDataSource();\n                } else {\n                    that._requestStartHandler = that._showBusy;\n                    that._requestEndHandler = that._hideBusy;\n                    that._errorHandler = function() {\n                        that._hideBusy();\n                    };\n                }\n\n                that.dataSource = kendo.data.DataSource.create(dataSource)\n                                       .bind(REQUESTSTART, that._requestStartHandler)\n                                       .bind(REQUESTEND, that._requestEndHandler)\n                                       .bind(\"error\", that._errorHandler);\n            },\n\n            _firstItem: function() {\n                this.listView.focusFirst();\n            },\n\n            _lastItem: function() {\n                this.listView.focusLast();\n            },\n\n            _nextItem: function() {\n                return this.listView.focusNext();\n            },\n\n            _prevItem: function() {\n                return this.listView.focusPrev();\n            },\n\n            _getNormalizedDataItem: function(candidate) {\n                var that = this,\n                    listView = that.listView,\n                    isIndex = typeof candidate === \"number\",\n                    hasOptionLabel = that.optionLabel && that.optionLabel.length,\n                    index;\n\n                if (isIndex) {\n                    index = hasOptionLabel ? --candidate : candidate;\n                } else {\n                    index = listView.getElementIndex(candidate);\n                }\n\n                return listView.dataItemByIndex(index);\n            },\n\n            _getNormalizedSelectCandidate: function(candidate) {\n                var that = this,\n                    hasOptionLabel = that.optionLabel && that.optionLabel.length,\n                    isIndex = typeof candidate === \"number\",\n                    normalizedCandidate = candidate;\n\n                if (hasOptionLabel && isIndex) {\n                    normalizedCandidate++;\n                }\n\n                return normalizedCandidate;\n            },\n\n            _move: function(e) {\n                var that = this;\n                var listView = that.listView;\n                var key = e.keyCode;\n                var down = key === keys.DOWN;\n                var isVirtual = that.options.virtual;\n                var dataItem;\n                var pressed;\n                var current;\n                var moveIndex;\n                var selectCandidate;\n\n                if (key === keys.UP || down) {\n                    if (e.altKey) {\n                        that.toggle(down);\n                    } else {\n                        if (!listView.bound() && !that.ul[0].firstChild) {\n                            if (!that._fetch) {\n                                that.dataSource.one(CHANGE, function() {\n                                    that._fetch = false;\n                                    that._move(e);\n                                });\n\n                                that._fetch = true;\n                                that._filterSource();\n                            }\n\n                            e.preventDefault();\n\n                            return true; //pressed\n                        }\n\n                        current = that._focus();\n\n                        if (!that._fetch && (!current || current.hasClass(KSELECTED))) {\n                            if (down) {\n                                moveIndex = that._nextItem();\n\n                                if ((isVirtual && moveIndex <= 0) || (!that._focus() && !moveIndex) ) {\n                                    that._lastItem();\n                                }\n                            } else {\n                                moveIndex = that._prevItem();\n\n                                if ((isVirtual && moveIndex >= listView.dataSource.total() - 1) || (!that._focus() && !moveIndex)) {\n                                    that._firstItem();\n                                }\n                            }\n                        }\n\n                        selectCandidate = that._getNormalizedSelectCandidate(that._get(that._focus()) || moveIndex || 0);\n\n                        that._select(selectCandidate, true).done(function() {\n                            var done = function() {\n                                if (!that.popup.visible()) {\n                                    that._blur();\n                                }\n\n                                if (that._cascadedValue === null) {\n                                    that._cascadedValue = that.value();\n                                } else {\n                                    that._cascadedValue = that.dataItem() ? that.dataItem()[that.options.dataValueField] || that.dataItem() : null;\n                                }\n                            };\n\n                            if (that.trigger(SELECT, { dataItem: that._getNormalizedDataItem(selectCandidate), item: that._focus() })) {\n                                that._select(current).done(done);\n                            } else {\n                                done();\n                            }\n                        });\n                    }\n\n                    e.preventDefault();\n                    pressed = true;\n                } else if (key === keys.ENTER || key === keys.TAB) {\n                    if (that.popup.visible()) {\n                        e.preventDefault();\n                    }\n\n                    current = that._focus();\n                    dataItem = that.dataItem();\n\n                    if (!that.popup.visible() && (!dataItem || that.text() !== that._text(dataItem))) {\n                        current = null;\n                    }\n\n                    var activeFilter = that.filterInput && that.filterInput[0] === activeElement();\n                    var selection;\n\n                    if (current) {\n                        dataItem = listView.dataItemByIndex(listView.getElementIndex(current));\n                        var shouldTrigger = true;\n\n                        if (dataItem) {\n                            shouldTrigger = that._value(dataItem) !== List.unifyType(that.value(), typeof that._value(dataItem));\n                        }\n\n                        if (shouldTrigger && that.trigger(SELECT, { dataItem: dataItem, item: current })) {\n                            return;\n                        }\n\n                        selection = that._select(current);\n                    } else if (that.input) {\n                        if (that._syncValueAndText() || that._isSelect) {\n                            that._accessor(that.input.val());\n                        }\n                        that.listView.value(that.input.val());\n                    }\n\n                    if (that._focusElement) {\n                        that._focusElement(that.wrapper);\n                    }\n\n                    if (activeFilter && key === keys.TAB) {\n                        that.wrapper.focusout();\n                    } else {\n                        if (selection && typeof selection.done === \"function\") {\n                            selection.done(function() {\n                                that._blur();\n                            });\n                        } else {\n                            that._blur();\n                        }\n                    }\n\n                    that.close();\n                    pressed = true;\n                } else if (key === keys.ESC) {\n                    if (that.popup.visible()) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n                    that.close();\n                    pressed = true;\n                } else if (that.popup.visible() && (key === keys.PAGEDOWN || key === keys.PAGEUP)) {\n                    e.preventDefault();\n\n                    var direction = key === keys.PAGEDOWN ? 1 : -1;\n                    listView.scrollWith(direction * listView.screenHeight());\n\n                    pressed = true;\n                }\n\n                return pressed;\n            },\n\n            _fetchData: function() {\n                var that = this;\n                var hasItems = !!that.dataSource.view().length;\n\n                if (that._request || that.options.cascadeFrom) {\n                    return;\n                }\n\n                if (!that.listView.bound() && !that._fetch && !hasItems) {\n                    that._fetch = true;\n                    that.dataSource.fetch().done(function() {\n                        that._fetch = false;\n                    });\n                }\n            },\n\n            _options: function(data, optionLabel, value) {\n                var that = this,\n                    element = that.element,\n                    htmlElement = element[0],\n                    length = data.length,\n                    options = \"\",\n                    option,\n                    dataItem,\n                    dataText,\n                    dataValue,\n                    idx = 0;\n\n                if (optionLabel) {\n                    options = optionLabel;\n                }\n\n                for (; idx < length; idx++) {\n                    option = \"<option\";\n                    dataItem = data[idx];\n                    dataText = that._text(dataItem);\n                    dataValue = that._value(dataItem);\n\n                    if (dataValue !== undefined$1) {\n                        dataValue += \"\";\n\n                        if (dataValue.indexOf('\"') !== -1) {\n                            dataValue = dataValue.replace(quotRegExp, \"&quot;\");\n                        }\n\n                        option += ' value=\"' + dataValue + '\"';\n                    }\n\n                    option += \">\";\n\n                    if (dataText !== undefined$1) {\n                        option += htmlEncode(dataText);\n                    }\n\n                    option += \"</option>\";\n                    options += option;\n                }\n\n                element.html(options);\n\n                if (value !== undefined$1) {\n                    htmlElement.value = value;\n                    if (htmlElement.value && !value) {\n                        htmlElement.selectedIndex = -1;\n                    }\n                }\n\n                if (htmlElement.selectedIndex !== -1) {\n                    option = getSelectedOption(htmlElement);\n\n                    if (option) {\n                        option.setAttribute(SELECTED, SELECTED);\n                    }\n                }\n            },\n\n            _reset: function() {\n                var that = this,\n                    element = that.element,\n                    formId = element.attr(\"form\"),\n                    form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        setTimeout(function() {\n                            if (that.options._removeDataItems) {\n                                that.listView._dataItems = [];\n                            }\n\n                            that.value(that._initial);\n\n                        if (that.options._shouldRefresh) {\n                            that.text(that._initial);\n                            that.refresh();\n                        }\n                        });\n                    };\n\n                    that._form = form.on(\"reset\", that._resetHandler);\n                }\n            },\n\n            _parentWidget: function() {\n                var name = this.options.name;\n\n                if (!this.options.cascadeFrom) {\n                    return;\n                }\n\n                var parentElement = $(\"#\" + this.options.cascadeFrom);\n                var parent = parentElement.data(\"kendo\" + name);\n\n                if (!parent) {\n                    for (var i = 0; i < alternativeNames[name].length; i += 1) {\n                        parent = parentElement.data(\"kendo\" + alternativeNames[name][i]);\n\n                        if (!!parent) {\n                            break;\n                        }\n                    }\n                }\n\n                return parent;\n            },\n\n            _cascade: function() {\n                var that = this;\n                var options = that.options;\n                var cascade = options.cascadeFrom;\n                var parent;\n\n                if (cascade) {\n                    parent = that._parentWidget();\n\n                    if (!parent) {\n                        return;\n                    }\n\n                    that._cascadeHandlerProxy = that._cascadeHandler.bind(that);\n                    that._cascadeFilterRequests = [];\n\n                    options.autoBind = false;\n\n                    parent.bind(\"set\", function() { //will cascade\n                        that.one(\"set\", function(e) { //get your value\n                            that._selectedValue = e.value || that._accessor();\n                        });\n                    });\n\n                    parent.first(CASCADE, that._cascadeHandlerProxy);\n\n                    //refresh was called\n                    if (parent.listView.bound()) {\n                        that._toggleCascadeOnFocus();\n                        that._cascadeSelect(parent);\n                    } else {\n                        parent.one(DATA_BOUND, function() {\n                            that._toggleCascadeOnFocus();\n                            if (parent.popup.visible()) {\n                                parent._focused.trigger(FOCUS);\n                            }\n                        });\n\n                        if (!parent.value()) {\n                            that.enable(false);\n                        }\n                    }\n                }\n            },\n\n            _toggleCascadeOnFocus: function() {\n                var that = this;\n                var parent = that._parentWidget();\n                var focusout = isIE && parent instanceof ui.DropDownList ? BLUR : FOCUSOUT;\n\n                parent._focused.add(parent.filterInput).on(FOCUS, function() {\n                    parent.unbind(CASCADE, that._cascadeHandlerProxy);\n                    parent.unbind(CHANGE, that._cascadeHandlerProxy);\n                    parent.first(CHANGE, that._cascadeHandlerProxy);\n                });\n\n                parent._focused.add(parent.filterInput).on(focusout, function() {\n                    parent.unbind(CHANGE, that._cascadeHandlerProxy);\n                    parent.unbind(CASCADE, that._cascadeHandlerProxy);\n                    parent.first(CASCADE, that._cascadeHandlerProxy);\n                });\n            },\n\n            _cascadeHandler: function(e) {\n                var parent = this._parentWidget();\n                var valueBeforeCascade = this.value();\n\n                this._userTriggered = e.userTriggered || parent._userTriggered;\n\n                if (this.listView.bound()) {\n                    this._clearSelection(parent, true);\n                }\n\n                this._cascadeSelect(parent, valueBeforeCascade);\n            },\n\n            _cascadeChange: function(parent) {\n                var that = this;\n                var value = that._accessor() || that._selectedValue;\n\n                if (!that._cascadeFilterRequests.length) {\n                    that._selectedValue = null;\n                }\n\n                if (that._userTriggered) {\n                    that._clearSelection(parent, true);\n                } else if (value) {\n                    if (value !== unifyType(that.listView.value()[0], typeof value)) {\n                        that.value(value);\n                    }\n\n                    if (!that.dataSource.view()[0] || that.selectedIndex === -1) {\n                        that._clearSelection(parent, true);\n                    }\n                } else if (that.dataSource.flatView().length) {\n                    that.select(that.options.index);\n                }\n\n                that.enable();\n                that._triggerCascade();\n                that._triggerChange();\n                that._userTriggered = false;\n            },\n\n            _cascadeSelect: function(parent, valueBeforeCascade) {\n                var that = this;\n                var dataItem = parent.dataItem();\n                var filterValue = dataItem ? dataItem[that.options.cascadeFromParentField] || parent._value(dataItem) : null;\n                var valueField = that.options.cascadeFromField || parent.options.dataValueField;\n                var expressions;\n\n                // Applicable only when parent is ComboBox or MultiColumnComboBox\n                if (parent.options.cascadeOnCustomValue &&\n                    filterValue === null &&\n                    (!that.options.cascadeFromParentField || that.options.cascadeFromParentField === parent.options.dataValueField)) {\n                        filterValue = parent.value();\n                }\n\n                that._valueBeforeCascade = valueBeforeCascade !== undefined$1 ? valueBeforeCascade : that.value();\n\n                if (filterValue || filterValue === 0) {\n                    expressions = that.dataSource.filter() || {};\n                    removeFiltersForField(expressions, valueField);\n\n                    var handler = function() {\n                        var currentHandler = that._cascadeFilterRequests.shift();\n                        if (currentHandler) {\n                            that.unbind('dataBound', currentHandler);\n                        }\n\n                        currentHandler = that._cascadeFilterRequests[0];\n                        if (currentHandler) {\n                            that.first('dataBound', currentHandler);\n                        }\n\n                        that._cascadeChange(parent);\n                    };\n\n                    that._cascadeFilterRequests.push(handler);\n\n                    if (that._cascadeFilterRequests.length === 1) {\n                        that.first('dataBound', handler);\n                    }\n\n                    that._cascading = true;\n                    that._filterSource({\n                        field: valueField,\n                        operator: \"eq\",\n                        value: filterValue\n                    });\n                    that._cascading = false;\n                } else {\n                    that.enable(false);\n                    that._clearSelection(parent);\n                    that._triggerCascade();\n                    that._triggerChange();\n                    that._userTriggered = false;\n                }\n\n                that._refreshFloatingLabel();\n            }\n        });\n\n        var STATIC_LIST_NS = \".StaticList\";\n\n        var StaticList = kendo.ui.DataBoundWidget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, options);\n\n                this.element.attr(\"role\", (options.aria && options.aria.role) || 'listbox')\n                            .on(CLICK + STATIC_LIST_NS, \"li\", this._click.bind(this))\n                            .on(MOUSEENTER + STATIC_LIST_NS, \"li\", function() { $(this).addClass(HOVER); })\n                            .on(MOUSELEAVE + STATIC_LIST_NS, \"li\", function() { $(this).removeClass(HOVER); });\n\n                if (options && options.ariaLabel) {\n                    this.element.attr(ARIA_LABEL, options.ariaLabel);\n                } else if (options && options.ariaLabelledBy) {\n                    this.element.attr(ARIA_LABELLEDBY, options.ariaLabelledBy);\n                }\n\n                if (support.touch) {\n                    this._touchHandlers();\n                }\n\n                if (this.options.selectable === \"multiple\") {\n                    this.element.attr(ARIA_MULTISELECTABLE, true);\n                }\n\n                if (this.options.columns && this.options.columns.length) {\n                    var thead = this.element.parent().find('.k-table-thead');\n                    var row = $('<tr class=\"k-table-group-row\">' +\n                        '<th class=\"k-table-th\" colspan=\"' + this.options.columns.length + '\"></th>' +\n                    '</tr>');\n\n                    thead.append(row);\n\n                    this.header = row.find(\".k-table-th\");\n\n                    this.content = this.element.wrap(\"<div class='k-table-body k-table-scroller' unselectable='on'></div>\").parent();\n\n                    this.element.addClass(TABLE_LIST);\n                } else {\n                    this.content = this.element.wrap(\"<div class='k-list-content k-list-scroller' unselectable='on'></div>\").parent();\n                    this.header = this.content.before($('<div class=\"k-list-group-sticky-header\"></div>').hide()).prev();\n                    this.element.addClass(LIST_UL);\n                }\n\n                this.bound(false);\n\n                this._optionID = kendo.guid();\n\n                this._selectedIndices = [];\n\n                this._view = [];\n                this._dataItems = [];\n                this._values = [];\n\n                var value = this.options.value;\n\n                if (value) {\n                    this._values = Array.isArray(value) ? value.slice(0) : [value];\n                }\n\n                this._getter();\n                this._templates();\n\n                this.setDataSource(this.options.dataSource);\n\n                this._createOnScrollProxy();\n            },\n\n            options: {\n                name: \"StaticList\",\n                dataValueField: null,\n                valuePrimitive: false,\n                selectable: true,\n                template: null,\n                groupTemplate: null,\n                fixedGroupTemplate: null,\n                ariaLabel: null,\n                ariaLabelledBy: null\n            },\n\n            events: [\n               CLICK,\n                CHANGE,\n               ACTIVATE,\n               DEACTIVATE,\n               DATA_BINDING,\n               DATA_BOUND,\n               SELECTED_ITEM_CHANGE\n            ],\n\n            setDataSource: function(source) {\n                var that = this;\n                var dataSource = source || {};\n                var value;\n\n                dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n                dataSource = kendo.data.DataSource.create(dataSource);\n\n                if (that.dataSource) {\n                    that.dataSource.unbind(CHANGE, that._refreshHandler);\n\n                    value = that.value();\n\n                    that.value([]);\n                    that.bound(false);\n\n                    that.value(value);\n                } else {\n                    that._refreshHandler = that.refresh.bind(that);\n                }\n\n                that.setDSFilter(dataSource.filter());\n\n                that.dataSource = dataSource.bind(CHANGE, that._refreshHandler);\n                that._fixedHeader();\n            },\n\n            _touchHandlers: function() {\n                var that = this,\n                    itemSelector = this.options.columns && this.options.columns.length ? ITEMSELECTORTABLE : ITEMSELECTOR,\n                    startY, endY,\n                    tapPosition = function(event) {\n                        return (event.originalEvent || event).changedTouches[0].pageY;\n                    };\n\n                that.element.on(\"touchstart\" + STATIC_LIST_NS, function(e) {\n                    startY = tapPosition(e);\n                });\n\n                that.element.on(\"touchend\" + STATIC_LIST_NS, function(e) {\n                    if (e.isDefaultPrevented()) {\n                        return;\n                    }\n\n                    endY = tapPosition(e);\n\n                    if (Math.abs(endY - startY) < 10) {\n                        that._touchTriggered = true;\n                        that._triggerClick($(e.target).closest(itemSelector).get(0));\n                    }\n                });\n            },\n\n            skip: function() {\n                return this.dataSource.skip();\n            },\n\n            setOptions: function(options) {\n                Widget.fn.setOptions.call(this, options);\n\n                this._getter();\n                this._templates();\n                this._render();\n\n                if (this.label && options.label) {\n                    this.label.setOptions(options.label);\n                } else if (this.label && options.label === false) {\n                    this.label._unwrapFloating();\n                    this._inputLabel.remove();\n                    delete this._inputLabel;\n                }\n            },\n\n            destroy: function() {\n                this.element.off(STATIC_LIST_NS);\n\n                if (this._refreshHandler) {\n                    this.dataSource.unbind(CHANGE, this._refreshHandler);\n                }\n\n                clearTimeout(this._scrollId);\n\n                Widget.fn.destroy.call(this);\n            },\n\n            dataItemByIndex: function(index) {\n                return this.dataSource.flatView()[index];\n            },\n\n            screenHeight: function() {\n                return this.content[0].clientHeight;\n            },\n\n            scrollToIndex: function(index) {\n                var item = this.element[0].children[index];\n\n                if (item) {\n                    this.scroll(item);\n                }\n            },\n\n            scrollWith: function(value) {\n                this.content.scrollTop(this.content.scrollTop() + value);\n            },\n\n            scroll: function(item) {\n                if (!item) {\n                    return;\n                }\n\n                if (item[0]) {\n                    item = item[0];\n                }\n\n                var content = this.content[0],\n                    itemOffsetTop = item.offsetTop,\n                    itemOffsetHeight = item.offsetHeight,\n                    contentScrollTop = content.scrollTop,\n                    contentOffsetHeight = content.clientHeight,\n                    bottomDistance = itemOffsetTop + itemOffsetHeight;\n\n                    if (contentScrollTop > itemOffsetTop) {\n                        contentScrollTop = itemOffsetTop;\n                    } else if (bottomDistance > (contentScrollTop + contentOffsetHeight)) {\n                        contentScrollTop = (bottomDistance - contentOffsetHeight);\n                    }\n\n                    content.scrollTop = contentScrollTop;\n            },\n\n            selectedDataItems: function(dataItems) {\n                if (dataItems === undefined$1) {\n                    return this._dataItems.slice();\n                }\n\n                this._dataItems = dataItems;\n                this._values = this._getValues(dataItems);\n            },\n\n            _getValues: function(dataItems) {\n                var getter = this._valueGetter;\n\n                return $.map(dataItems, function(dataItem) {\n                    return getter(dataItem);\n                });\n            },\n\n            focusNext: function() {\n                var current = this.focus();\n\n                if (!current) {\n                    current = 0;\n                } else {\n                    current = current.next();\n                }\n\n                this.focus(current);\n            },\n\n            focusPrev: function() {\n                var current = this.focus();\n\n                if (!current) {\n                    current = this.element[0].children.length - 1;\n                } else {\n                    current = current.prev();\n                }\n\n                this.focus(current);\n            },\n\n            focusFirst: function() {\n                this.focus(this.element[0].children[0]);\n            },\n\n            focusLast: function() {\n                this.focus(last(this.element[0].children));\n            },\n\n            focus: function(candidate) {\n                var that = this;\n                var id = that._optionID;\n                var hasCandidate;\n\n                if (candidate === undefined$1) {\n                    return that._current;\n                }\n\n                candidate = last(that._get(candidate));\n                candidate = $(this.element[0].children[candidate]);\n\n                if (that._current) {\n                    that._current\n                        .removeClass(FOCUSED)\n                        .removeAttr(ID);\n\n                    that.trigger(DEACTIVATE);\n                }\n\n                hasCandidate = !!candidate[0];\n\n                if (hasCandidate) {\n                    candidate.addClass(FOCUSED);\n                    that.scroll(candidate);\n\n                    candidate.attr(\"id\", id);\n                }\n\n                that._current = hasCandidate ? candidate : null;\n                that.trigger(ACTIVATE);\n            },\n\n            focusIndex: function() {\n                return this.focus() ? this.focus().index() : undefined$1;\n            },\n\n            skipUpdate: function(skipUpdate) {\n                this._skipUpdate = skipUpdate;\n            },\n\n            select: function(indices) {\n                var that = this;\n                var selectable = that.options.selectable;\n                var singleSelection = selectable !== \"multiple\" && selectable !== false;\n                var selectedIndices = that._selectedIndices;\n                var uiSelectedIndices = [this.element.find(\".k-selected\").index()];\n\n                var added = [];\n                var removed = [];\n                var result;\n\n                if (indices === undefined$1) {\n                    return selectedIndices.slice();\n                }\n\n                indices = that._get(indices);\n\n                if (indices.length === 1 && indices[0] === -1) {\n                    indices = [];\n                }\n\n                var deferred = $.Deferred().resolve();\n                var filtered = that.isFiltered();\n\n                if (filtered && !singleSelection && that._deselectFiltered(indices)) {\n                    return deferred;\n                }\n\n                if (singleSelection && !filtered &&\n                    $.inArray(last(indices), selectedIndices) !== -1 && $.inArray(last(indices), uiSelectedIndices) !== -1) {\n\n                    if (that._dataItems.length && that._view.length) {\n                        that._dataItems = [that._view[selectedIndices[0]].item];\n                    }\n\n                    return deferred;\n                }\n\n                result = that._deselect(indices);\n\n                removed = result.removed;\n                indices = result.indices;\n\n                if (indices.length) {\n                    if (singleSelection) {\n                        indices = [last(indices)];\n                    }\n\n                    added = that._select(indices);\n\n                }\n\n                if (added.length || removed.length) {\n                    that._valueComparer = null;\n                    that.trigger(CHANGE, {\n                        added: added,\n                        removed: removed\n                    });\n\n                }\n\n                return deferred;\n            },\n\n            removeAt: function(position) {\n                this._selectedIndices.splice(position, 1);\n                this._values.splice(position, 1);\n                this._valueComparer = null;\n\n                return {\n                    position: position,\n                    dataItem: this._dataItems.splice(position, 1)[0]\n                };\n            },\n\n            setValue: function(value) {\n                value = Array.isArray(value) || value instanceof ObservableArray ? value.slice(0) : [value];\n\n                this._values = value;\n\n                this._valueComparer = null;\n            },\n\n            value: function(value) {\n                var that = this;\n                var deferred = that._valueDeferred;\n                var indices;\n\n                if (value === undefined$1) {\n                    return that._values.slice();\n                }\n\n                that.setValue(value);\n\n                if (!deferred || deferred.state() === \"resolved\") {\n                    that._valueDeferred = deferred = $.Deferred();\n                }\n\n                if (that.bound()) {\n                    indices = that._valueIndices(that._values);\n\n                    if (that.options.selectable === \"multiple\") {\n                        that.select(-1);\n                    }\n\n                    that.select(indices);\n\n                    deferred.resolve();\n                }\n\n                that._skipUpdate = false;\n\n                return deferred;\n            },\n\n            items: function() {\n                return this.element.children(ITEMSELECTOR);\n            },\n\n            _click: function(e) {\n                if (this._touchTriggered)\n                {\n                    this._touchTriggered = false;\n                    return;\n                }\n\n                if (!e.isDefaultPrevented()) {\n                    this._triggerClick(e.currentTarget);\n                }\n            },\n\n            _createOnScrollProxy: function() {\n                var onScrollProxy = function() {\n                    var that = this;\n                    clearTimeout(that._scrollId);\n\n                    that._scrollId = setTimeout(function() {\n                        that._renderHeader();\n                    }, 50);\n                };\n\n                this._onScroll = onScrollProxy.bind(this);\n            },\n\n            _triggerClick: function(item) {\n                if (!this.trigger(CLICK, { item: $(item) })) {\n                    this.select(item);\n                }\n            },\n\n            _valueExpr: function(type, values) {\n                var that = this;\n                var idx = 0;\n                var comparer;\n                var normalized = [];\n\n                if (!that._valueComparer || that._valueType !== type) {\n                    that._valueType = type;\n\n                    for (; idx < values.length; idx++) {\n                        normalized.push(unifyType(values[idx], type));\n                    }\n\n                    comparer = (current, values) => {\n                        for (var idx = 0; idx < normalized.length; idx++) {\n                            if (current === values[idx]) {\n                                return idx;\n                            }\n                        }\n                        return -1;\n                    };\n\n                    that._valueComparer = function(current) {\n                        return comparer(current, normalized);\n                    };\n                }\n\n                return that._valueComparer;\n            },\n\n            _dataItemPosition: function(dataItem, values) {\n                var value = this._valueGetter(dataItem);\n\n                var valueExpr = this._valueExpr(typeof value, values);\n\n                return valueExpr(value);\n            },\n\n            _getter: function() {\n                this._valueGetter = kendo.getter(this.options.dataValueField);\n            },\n\n            _deselect: function(indices) {\n                var that = this;\n                var children = that.element[0].children;\n                var selectable = that.options.selectable;\n                var selectedIndices = that._selectedIndices;\n                var dataItems = that._dataItems;\n                var values = that._values;\n                var removed = [];\n                var i = 0;\n                var j = 0;\n\n                var index, selectedIndex;\n                var removedIndices = 0;\n\n                indices = indices.slice();\n\n                if (selectable === true || !indices.length) {\n                    for (; i < selectedIndices.length; i++) {\n                        $(children[selectedIndices[i]]).removeClass(KSELECTED).attr(ARIA_SELECTED, false);\n\n                        removed.push({\n                            position: i,\n                            dataItem: dataItems[i]\n                        });\n                    }\n\n                    that._values = [];\n                    that._dataItems = [];\n                    that._selectedIndices = [];\n                } else if (selectable === \"multiple\") {\n                    while (i < indices.length) {\n                        index = indices[i];\n                        if (!$(children[index]).hasClass(KSELECTED)) {\n                            i++;\n                            continue;\n                        }\n\n                        while (j < selectedIndices.length) {\n                            selectedIndex = selectedIndices[j];\n                            if (selectedIndex === index) {\n                                $(children[selectedIndex]).removeClass(KSELECTED).attr(ARIA_SELECTED, false);\n                                var dataItem = this._view[index].item;\n                                var position = this._dataItemPosition(dataItem, this._values);\n\n                                removed.push({\n                                    position: position,\n                                    dataItem: dataItem\n                                });\n                                dataItems.splice(j, 1);\n                                selectedIndices.splice(j, 1);\n                                indices.splice(i, 1);\n                                values.splice(j, 1);\n\n                                removedIndices += 1;\n                                i -= 1;\n                                j -= 1;\n                                break;\n                            }\n                            j++;\n                        }\n                        i++;\n                    }\n                }\n\n                return {\n                    indices: indices,\n                    removed: removed\n                };\n            },\n\n            _deselectFiltered: function(indices) {\n                var children = this.element[0].children;\n                var dataItem, index, position;\n                var removed = [];\n                var idx = 0;\n\n                for (; idx < indices.length; idx++) {\n                    index = indices[idx];\n\n                    dataItem = this._view[index].item;\n                    position = this._dataItemPosition(dataItem, this._values);\n\n                    if (position > -1) {\n                        removed.push(this.removeAt(position));\n                        $(children[index]).removeClass(KSELECTED);\n                    }\n                }\n\n                if (removed.length) {\n                    this.trigger(CHANGE, {\n                        added: [],\n                        removed: removed\n                    });\n\n                    return true;\n                }\n\n                return false;\n            },\n\n            _select: function(indices) {\n                var that = this;\n                var children = that.element[0].children;\n                var data = that._view;\n                var dataItem, index;\n                var added = [];\n                var idx = 0;\n\n                if (last(indices) !== -1) {\n                    that.focus(indices);\n                }\n\n                for (; idx < indices.length; idx++) {\n\n                    index = indices[idx];\n                    dataItem = data[index];\n\n                    if (index === -1 || !dataItem) {\n                        continue;\n                    }\n\n                    dataItem = dataItem.item;\n\n                    that._selectedIndices.push(index);\n                    that._dataItems.push(dataItem);\n                    that._values.push(that._valueGetter(dataItem));\n\n                    $(children[index]).addClass(KSELECTED).attr(ARIA_SELECTED, true);\n\n                    added.push({\n                        dataItem: dataItem\n                    });\n                }\n                return added;\n            },\n\n            getElementIndex: function(element) {\n                return $(element).data(\"offset-index\");\n            },\n\n            _get: function(candidate) {\n                if (typeof candidate === \"number\") {\n                    candidate = [candidate];\n                } else if (!isArray(candidate)) {\n                    candidate = this.getElementIndex(candidate);\n                    candidate = [candidate !== undefined$1 ? candidate : -1];\n                }\n\n                return candidate;\n            },\n\n            _templates: function() {\n                var template;\n                var options = this.options;\n                var templates = {\n                    template: options.template,\n                    groupTemplate: options.groupTemplate,\n                    fixedGroupTemplate: options.fixedGroupTemplate\n                };\n\n                if (options.columns) {\n                    options.columns.forEach((column, i) => {\n                        var templateText = column.field ? column.field.toString() : TEXT;\n                        var templateFunc = data => htmlEncode(kendo.getter(templateText)(data));\n\n                        templates[\"column\" + i] = column.template || templateFunc;\n                    });\n                }\n\n                for (var key in templates) {\n                    template = templates[key];\n                    if (template && typeof template !== \"function\") {\n                        templates[key] = kendo.template(template);\n                    }\n                }\n\n                this.templates = templates;\n            },\n\n            _normalizeIndices: function(indices) {\n                var newIndices = [];\n                var idx = 0;\n\n                for (; idx < indices.length; idx++) {\n                    if (indices[idx] !== undefined$1) {\n                        newIndices.push(indices[idx]);\n                    }\n                }\n\n                return newIndices;\n            },\n\n            _valueIndices: function(values, indices) {\n                var data = this._view;\n                var idx = 0;\n                var index;\n\n                indices = indices ? indices.slice() : [];\n\n                if (!values.length) {\n                    return [];\n                }\n\n                for (; idx < data.length; idx++) {\n                    index = this._dataItemPosition(data[idx].item, values);\n\n                    if (index !== -1) {\n                        indices[index] = idx;\n                    }\n                }\n\n                return this._normalizeIndices(indices);\n            },\n\n            _firstVisibleItem: function() {\n                var element = this.element[0];\n                var content = this.content[0];\n                var scrollTop = content.scrollTop;\n                var itemHeight = $(element.children[0]).height();\n                var itemIndex = Math.floor(scrollTop / itemHeight) || 0;\n\n                if (element.childElementCount == 0) {\n                    return null;\n                }\n\n                var item = element.children[itemIndex] || element.lastChild;\n                var forward = item.offsetTop < scrollTop;\n\n                while (item) {\n                    if (forward) {\n                        if ((item.offsetTop + itemHeight) > scrollTop || !item.nextSibling) {\n                            break;\n                        }\n\n                        item = item.nextSibling;\n                    } else {\n                        if (item.offsetTop <= scrollTop || !item.previousSibling) {\n                            break;\n                        }\n\n                        item = item.previousSibling;\n                    }\n                }\n\n                return this._view[$(item).data(\"offset-index\")];\n            },\n\n            _fixedHeader: function() {\n                if (this.isGrouped() && this.templates.fixedGroupTemplate) {\n                    if (this.header.closest(GROUP_ROW_SEL).length) {\n                        this.header.closest(GROUP_ROW_SEL).show();\n                    } else {\n                        this.header.show();\n                    }\n\n                    this.content.scroll(this._onScroll);\n                } else {\n                    if (this.header.closest(GROUP_ROW_SEL).length) {\n                        this.header.closest(GROUP_ROW_SEL).hide();\n                    } else {\n                        this.header.hide();\n                    }\n\n                    this.content.off(\"scroll\", this._onScroll);\n                }\n            },\n\n            _renderHeader: function() {\n                var template = this.templates.fixedGroupTemplate;\n                if (!template) {\n                    return;\n                }\n\n                var visibleItem = this._firstVisibleItem();\n\n                if (visibleItem && visibleItem.group.toString().length) {\n                    this.header.html(template(visibleItem.group));\n                }\n            },\n\n            _renderItem: function(context) {\n                var item = `<li tabindex=\"-1\" role=\"${(this.options.aria && this.options.aria.itemRole) || 'option'}\" unselectable=\"on\" `;\n\n                var dataItem = context.item;\n                var notFirstItem = context.index !== 0;\n                var selected = context.selected;\n                var isGrouped = this.isGrouped();\n                var hasColumns = this.options.columns && this.options.columns.length;\n                var altRow = context.index % 2 === 1 ? \" k-table-alt-row\" : \"\";\n\n                if (hasColumns) {\n                    item += ('class=\"k-table-row' + altRow);\n                } else {\n                    item += 'class=\"k-list-item';\n                }\n\n                if (notFirstItem && context.newGroup) {\n                    item += ' k-first';\n                }\n\n                if (context.isLastGroupedItem && hasColumns) {\n                    item += ' k-last';\n                }\n\n                if (selected) {\n                    item += ' k-selected';\n                }\n\n                item += '\" aria-selected=\"' + (selected ? \"true\" : \"false\") + '\" data-offset-index=\"' + context.index + '\">';\n                if (hasColumns) {\n                    item += this._renderColumns(dataItem);\n                } else {\n                    item += '<span class=\"k-list-item-text\">';\n                    item += this.templates.template(dataItem);\n                    item += '</span>';\n                }\n\n                if (notFirstItem && context.newGroup) {\n                    if (hasColumns) {\n                        item += '<span class=\"k-table-td k-table-group-td\"><span>' + this.templates.groupTemplate(context.group) + '</span></span>';\n                    } else {\n                        item += '<div class=\"k-list-item-group-label\">' + this.templates.groupTemplate(context.group) + '</div>';\n                    }\n                } else if (isGrouped && hasColumns) {\n                    item += '<span class=\"k-table-td k-table-spacer-td\"></span>';\n                }\n\n                return item + \"</li>\";\n            },\n\n            _renderColumns: function(dataItem) {\n                var item = \"\";\n\n                for (var i = 0; i < this.options.columns.length; i++) {\n                    var currentWidth = this.options.columns[i].width;\n                    var currentWidthInt = parseInt(currentWidth, 10);\n                    var widthStyle = '';\n\n                    if (currentWidth && !isNaN(currentWidthInt)) {\n                        widthStyle += `${kendo.attr('style-width')}=\"${currentWidthInt}${percentageUnitsRegex.test(currentWidth) ? \"%\" : \"px\"}\"`;\n                    }\n\n                    item += \"<span class='k-table-td' \" + widthStyle + \">\";\n                    item += this.templates[\"column\" + i](dataItem);\n                    item += \"</span>\";\n                }\n\n                return item;\n            },\n\n            _render: function() {\n                var html = \"\";\n                var cspCompliantHtml;\n                var i = 0;\n                var idx = 0;\n                var context;\n                var dataContext = [];\n                var view = this.dataSource.view();\n                var values = this.value();\n\n                var group, newGroup, j;\n                var isGrouped = this.isGrouped();\n\n                if (isGrouped) {\n                    for (i = 0; i < view.length; i++) {\n                        group = view[i];\n                        newGroup = true;\n\n                        for (j = 0; j < group.items.length; j++) {\n                            context = {\n                                selected: this._selected(group.items[j], values),\n                                item: group.items[j],\n                                group: group.value,\n                                newGroup: newGroup,\n                                isLastGroupedItem: j === group.items.length - 1,\n                                index: idx };\n                            dataContext[idx] = context;\n                            idx += 1;\n\n                            html += this._renderItem(context);\n                            newGroup = false;\n                        }\n                    }\n                } else {\n                    for (i = 0; i < view.length; i++) {\n                        context = { selected: this._selected(view[i], values), item: view[i], index: i };\n\n                        dataContext[i] = context;\n\n                        html += this._renderItem(context);\n                    }\n                }\n\n                this._view = dataContext;\n\n                cspCompliantHtml = $(html);\n                kendo.applyStylesFromKendoAttributes(cspCompliantHtml, [\"width\", \"background-color\"]);\n\n                this.element.empty().append(cspCompliantHtml);\n\n                if (isGrouped && dataContext.length) {\n                    this._renderHeader();\n                }\n            },\n\n            _selected: function(dataItem, values) {\n                var select = !this.isFiltered() || this.options.selectable === \"multiple\";\n                return select && this._dataItemPosition(dataItem, values) !== -1;\n            },\n\n            setDSFilter: function(filter) {\n                this._lastDSFilter = extend({}, filter);\n            },\n\n            isFiltered: function() {\n                if (!this._lastDSFilter) {\n                    this.setDSFilter(this.dataSource.filter());\n                }\n\n                return !kendo.data.Query.compareFilters(this.dataSource.filter(), this._lastDSFilter);\n            },\n\n            refresh: function(e) {\n                var that = this;\n                var action = e && e.action;\n                var skipUpdateOnBind = that.options.skipUpdateOnBind;\n                var isItemChange = action === \"itemchange\";\n                var result;\n\n                that.trigger(DATA_BINDING);\n\n                that._fixedHeader();\n\n                that._render();\n\n                that.bound(true);\n\n                if (isItemChange || action === \"remove\") {\n                    result = mapChangedItems(that._dataItems, e.items);\n\n                    if (result.changed.length) {\n                        if (isItemChange) {\n                            that.trigger(SELECTED_ITEM_CHANGE, {\n                                items: result.changed\n                            });\n                        } else {\n                            that.value(that._getValues(result.unchanged));\n                        }\n                    }\n                } else if (that.isFiltered() || that._skipUpdate || that._emptySearch) {\n                    that.focus(0);\n                    if (that._skipUpdate) {\n                        that._skipUpdate = false;\n                        that._selectedIndices = that._valueIndices(that._values, that._selectedIndices);\n                    }\n                } else if (!skipUpdateOnBind && (!action || action === \"add\")) {\n                    that.value(that._values);\n                }\n\n                if (that._valueDeferred) {\n                    that._valueDeferred.resolve();\n                }\n\n                that.trigger(DATA_BOUND);\n            },\n\n            bound: function(bound) {\n                if (bound === undefined$1) {\n                    return this._bound;\n                }\n\n                this._bound = bound;\n            },\n\n            isGrouped: function() {\n                return (this.dataSource.group() || []).length;\n            }\n        });\n\n        ui.plugin(StaticList);\n\n        function last(list) {\n            return list[list.length - 1];\n        }\n\n        function getSelectedOption(select) {\n            var index = select.selectedIndex;\n            return index > -1 ? select.options[index] : {};\n        }\n\n        function mapChangedItems(selected, itemsToMatch) {\n            var itemsLength = itemsToMatch.length;\n            var selectedLength = selected.length;\n            var dataItem;\n            var found;\n            var i, j;\n\n            var changed = [];\n            var unchanged = [];\n\n            if (selectedLength) {\n                for (i = 0; i < selectedLength; i++) {\n                    dataItem = selected[i];\n                    found = false;\n\n                    for (j = 0; j < itemsLength; j++) {\n                        if (dataItem === itemsToMatch[j]) {\n                            found = true;\n                            changed.push({ index: i, item: dataItem });\n                            break;\n                        }\n                    }\n\n                    if (!found) {\n                        unchanged.push(dataItem);\n                    }\n                }\n            }\n\n            return {\n                changed: changed,\n                unchanged: unchanged\n            };\n        }\n\n        function isValidFilterExpr(expression) {\n            if (!expression || $.isEmptyObject(expression)) {\n                return false;\n            }\n\n            if (expression.filters && !expression.filters.length) {\n                return false;\n            }\n\n            return true;\n        }\n\n        function removeFiltersForField(expression, field) {\n            var filters;\n            var found = false;\n\n            if (expression.filters) {\n                filters = $.grep(expression.filters, function(filter) {\n                    found = removeFiltersForField(filter, field);\n                    if (filter.filters) {\n                        return filter.filters.length;\n                    } else {\n                        return filter.field != field;\n                    }\n                });\n\n                if (!found && expression.filters.length !== filters.length) {\n                    found = true;\n                }\n\n                expression.filters = filters;\n            }\n\n            return found;\n        }\n\n        kendo.cssProperties.registerPrefix(\"List\", \"k-list-\");\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports[\"default\"] = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}