{"version":3,"sources":["raw-js/kendo.data.signalr.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendodata","signalr","js","this","$","kendo","window","isFunction","isJQueryPromise","promise","done","fail","isNativePromise","then","catch","transport","data","RemoteTransport","extend","init","options","Error","hub","on","invoke","fn","call","push","callbacks","client","create","pushCreate","update","pushUpdate","destroy","pushDestroy","_crud","type","server","format","args","parameterMap","isEmptyObject","apply","success","error","read","transports","jQuery"],"mappings":";;;;;;;;;;;;;;;CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,EAAAG,QAAA,kBACA,mBAAAC,QAAAA,OAAAC,IAAAD,OAAA,CAAA,kBAAAJ,KACAD,EAAA,oBAAAO,WAAAA,WAAAP,GAAAQ,MAAAC,UAAAT,EAAAS,WAAA,CAAA,EAAAT,EAAAS,UAAAC,QAAAV,EAAAS,UAAAC,SAAA,CAAA,EAAAV,EAAAS,UAAAC,QAAAC,GAAAV,IACA,CAJA,CAIAW,MAAA,WA8HA,OArHA,SAAAC,GACA,IAAAC,EAAAC,OAAAD,MACAE,EAAAF,EAAAE,WAEA,SAAAC,EAAAC,GACA,OAAAA,GAAAF,EAAAE,EAAAC,OAAAH,EAAAE,EAAAE,KACA,CAEA,SAAAC,EAAAH,GACA,OAAAA,GAAAF,EAAAE,EAAAI,OAAAN,EAAAE,EAAAK,MACA,CAEA,IAAAC,EAAAV,EAAAW,KAAAC,gBAAAC,OAAA,CACAC,KAAA,SAAAC,GACA,IAAAnB,EAAAmB,GAAAA,EAAAnB,QAAAmB,EAAAnB,QAAA,CAAA,EAEAQ,EAAAR,EAAAQ,QAEA,IAAAA,EACA,MAAA,IAAAY,MAAA,qCAGA,IAAAb,EAAAC,KAAAG,EAAAH,GACA,MAAA,IAAAY,MAAA,2CAGAlB,KAAAM,QAAAA,EAEA,IAAAa,EAAArB,EAAAqB,IAEA,IAAAA,EACA,MAAA,IAAAD,MAAA,iCAGA,GAAA,mBAAAC,EAAAC,IAAA,mBAAAD,EAAAE,OACA,MAAA,IAAAH,MAAA,sDAGAlB,KAAAmB,IAAAA,EAEAjB,EAAAW,KAAAC,gBAAAQ,GAAAN,KAAAO,KAAAvB,KAAAiB,EACA,EAEAO,KAAA,SAAAC,GACA,IAAAC,EAAA1B,KAAAiB,QAAAnB,QAAA4B,QAAA,CAAA,EAEAA,EAAAC,QACA3B,KAAAmB,IAAAC,GAAAM,EAAAC,OAAAF,EAAAG,YAGAF,EAAAG,QACA7B,KAAAmB,IAAAC,GAAAM,EAAAG,OAAAJ,EAAAK,YAGAJ,EAAAK,SACA/B,KAAAmB,IAAAC,GAAAM,EAAAK,QAAAN,EAAAO,YAEA,EAEAC,MAAA,SAAAhB,EAAAiB,GACA,IAAAf,EAAAnB,KAAAmB,IACAb,EAAAN,KAAAM,QACA6B,EAAAnC,KAAAiB,QAAAnB,QAAAqC,OAEA,IAAAA,IAAAA,EAAAD,GACA,MAAA,IAAAhB,MAAAhB,EAAAkC,OAAA,uCAAAF,IAGA,IAAAG,EAAA,CAAAF,EAAAD,IAEArB,EAAAb,KAAAsC,aAAArB,EAAAJ,KAAAqB,GAEAjC,EAAAsC,cAAA1B,IACAwB,EAAAb,KAAAX,GAGAR,EAAAC,GACAA,EAAAC,MAAA,WACAY,EAAAE,OAAAmB,MAAArB,EAAAkB,GACA9B,KAAAU,EAAAwB,SACAjC,KAAAS,EAAAyB,MACA,IACAjC,EAAAH,IACAA,EAAAI,MAAA,WACAS,EAAAE,OAAAmB,MAAArB,EAAAkB,GACA3B,KAAAO,EAAAwB,SACA9B,MAAAM,EAAAyB,MACA,GAEA,EAEAC,KAAA,SAAA1B,GACAjB,KAAAiC,MAAAhB,EAAA,OACA,EAEAU,OAAA,SAAAV,GACAjB,KAAAiC,MAAAhB,EAAA,SACA,EAEAY,OAAA,SAAAZ,GACAjB,KAAAiC,MAAAhB,EAAA,SACA,EAEAc,QAAA,SAAAd,GACAjB,KAAAiC,MAAAhB,EAAA,UACA,IAGAhB,EAAAc,QAAA,EAAAb,EAAAW,KAAA,CACA+B,WAAA,CACA9C,QAAAc,IAIA,CAlHA,CAkHAT,OAAAD,MAAA2C,QACA3C,KAIA","file":"kendo.data.signalr.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.data.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.data'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendodata = global.kendodata || {}, global.kendodata.signalr = global.kendodata.signalr || {}, global.kendodata.signalr.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"data.signalr\",\n        name: \"SignalR\",\n        category: \"framework\",\n        depends: [ \"data\" ],\n        hidden: true\n    };\n\n    (function($) {\n        var kendo = window.kendo;\n        var isFunction = kendo.isFunction;\n\n        function isJQueryPromise(promise) {\n            return promise && isFunction(promise.done) && isFunction(promise.fail);\n        }\n\n        function isNativePromise(promise) {\n            return promise && isFunction(promise.then) && isFunction(promise.catch);\n        }\n\n        var transport = kendo.data.RemoteTransport.extend({\n            init: function(options) {\n                var signalr = options && options.signalr ? options.signalr : {};\n\n                var promise = signalr.promise;\n\n                if (!promise) {\n                    throw new Error('The \"promise\" option must be set.');\n                }\n\n                if (!isJQueryPromise(promise) && !isNativePromise(promise)) {\n                    throw new Error('The \"promise\" option must be a Promise.');\n                }\n\n                this.promise = promise;\n\n                var hub = signalr.hub;\n\n                if (!hub) {\n                    throw new Error('The \"hub\" option must be set.');\n                }\n\n                if (typeof hub.on != \"function\" || typeof hub.invoke != \"function\") {\n                    throw new Error('The \"hub\" option is not a valid SignalR hub proxy.');\n                }\n\n                this.hub = hub;\n\n                kendo.data.RemoteTransport.fn.init.call(this, options);\n            },\n\n            push: function(callbacks) {\n                var client = this.options.signalr.client || {};\n\n                if (client.create) {\n                    this.hub.on(client.create, callbacks.pushCreate);\n                }\n\n                if (client.update) {\n                    this.hub.on(client.update, callbacks.pushUpdate);\n                }\n\n                if (client.destroy) {\n                    this.hub.on(client.destroy, callbacks.pushDestroy);\n                }\n            },\n\n            _crud: function(options, type) {\n                var hub = this.hub;\n                var promise = this.promise;\n                var server = this.options.signalr.server;\n\n                if (!server || !server[type]) {\n                    throw new Error(kendo.format('The \"server.{0}\" option must be set.', type));\n                }\n\n                var args = [server[type]];\n\n                var data = this.parameterMap(options.data, type);\n\n                if (!$.isEmptyObject(data)) {\n                    args.push(data);\n                }\n\n                if (isJQueryPromise(promise)) {\n                    promise.done(function() {\n                        hub.invoke.apply(hub, args)\n                                  .done(options.success)\n                                  .fail(options.error);\n                    });\n                } else if (isNativePromise(promise)) {\n                    promise.then(function() {\n                        hub.invoke.apply(hub, args)\n                                  .then(options.success)\n                                  .catch(options.error);\n                    });\n                }\n            },\n\n            read: function(options) {\n                this._crud(options, \"read\");\n            },\n\n            create: function(options) {\n                this._crud(options, \"create\");\n            },\n\n            update: function(options) {\n                this._crud(options, \"update\");\n            },\n\n            destroy: function(options) {\n                this._crud(options, \"destroy\");\n            }\n        });\n\n        $.extend(true, kendo.data, {\n            transports: {\n                signalr: transport\n            }\n        });\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}