{"version":3,"file":"kendo.data.min.js","names":["factory","define","amd","logic","or","concat","acc","fn","a","identity","and","operatorsMap","isnullorempty","kendo","isBlank","isnotnullorempty","isPresent","contains","b","indexOf","doesnotcontain","doesnotendwith","length","doesnotstartwith","lastIndexOf","endswith","eq","gt","gte","isempty","isnotempty","isnotnull","isnull","lt","lte","neq","startswith","dateRegExp","transformFilter","ref","field","ignoreCase","value","operator","accentFoldingFiltering","itemProp","prop","isString","date","exec","Date","x","toLocaleLowerCase","toLowerCase","isNumeric","isDate","getTime","typedGetter","isFunction","getter","convertValue","op","transformCompositeFilter","filter","combiner","filters","map","source","extendAccentFolding","reduce","Object","assign","$","undefined$1","extend","isPlainObject","isEmptyObject","isArray","Array","grep","ajax","each","noop","window","Observable","Class","STRING","FUNCTION","CREATE","READ","UPDATE","DESTROY","CHANGE","SYNC","GET","ERROR","REQUESTSTART","PROGRESS","REQUESTEND","ITEMSLOADED","ITEMLOAD","crud","o","stringify","math","Math","push","join","pop","splice","shift","slice","unshift","toString","stableSort","support","objectKeys","ObservableArray","init","array","type","that","this","ObservableObject","call","wrapAll","_loadPromises","_loadedNodes","at","index","toJSON","serializeFunctions","idx","json","parent","target","wrap","object","Model","bind","e","isGroup","hasOwnProperty","trigger","node","items","action","promise","_loading","done","collection","nodes","loading","result","arguments","apply","omitChangeEvent","sort","howMany","item","i","len","omitCache","children","unbind","forEach","callback","thisArg","context","reduceRight","find","every","some","remove","empty","Symbol","iterator","prototype","LazyObservableArray","data","events","_events","_parent","eventHandler","prefix","key","event","_notifyChange","ownKeys","ignoreObjectKeys","keys","filteredObjectKeys","props","protoKeys","getPrototypeOf","isPrimitiveType","getOwnPropertyNames","member","_handlers","charAt","uid","guid","shouldSerialize","f","get","_set","composite","paths","split","path","obj","set","setter","isSetPrevented","current","change","isObservableArray","isDataSource","DataSource","equal","y","xtype","parsers","number","parseFloat","parseDate","boolean","string","default","defaultValues","defaults","_initializers","name","dirty","dirtyFields","idField","id","_defaultId","_parse","parse","fieldName","fields","getFieldByName","editable","accept","isNew","base","options","model","originalName","proto","functionFields","nullable","defaultValue","Comparer","selector","compare","localeCompare","create","dir","combine","comparers","StableComparer","asc","valueA","valueB","__position","desc","operators","quote","str","replace","JSON","textOp","impl","ignore","getMatchRegexp","pattern","rx","esc","ch","matches","substring","doesnotmatch","Query","normalizeSort","descriptor","descriptors","d","sortFields","sorts","sortObject","filterExpr","expression","noEval","expr","filterExprNoEval","expressions","fieldFunctions","operatorFunctions","match","operatorMap","equals","isequalto","equalto","ne","notequals","isnotequalto","notequalto","notequal","islessthan","lessthan","less","le","islessthanorequalto","lessthanequal","isgreaterthan","greaterthan","greater","isgreaterthanorequalto","greaterthanequal","ge","notsubstringof","normalizeOperator","normalizeFilter","compareDescriptor","f1","f2","normalizeDescriptor","fieldComparer","normalizeGroup","skipItemSorting","aggregates","normalizeGroupWithoutCompare","groupValueComparer","calculateAggregate","accumulator","state","aggr","functionName","aggregate","functions","accessor","compareFilters","expr1","expr2","filters1","filters2","toArray","range","count","skip","take","select","order","inPlace","orderBy","orderByDescending","comparer","compiled","group","allData","groupPaging","groupAllData","hasSubgroups","itemCount","subgroupCount","groupBy","currentValue","sorted","_sortForGrouping","groupValue","_sortGroups","groups","sum","isNumber","average","max","min","val","isNaN","process","groupDescriptorsWithoutSort","total","customGroupSort","groupDescriptors","anyGroupDescriptorHasCompare","query","groupDescriptorsWithoutCompare","normalizedSort","filterCallback","flatGroups","groupDescriptor","virtual","LocalTransport","read","success","update","destroy","RemoteTransport","parameterMap","url","cache","Cache","add","submit","option","setup","error","parameters","operation","_store","clear","serializeRecords","getters","modelInstance","originalFieldNames","fieldNames","record","setters","convertRecords","convertGroup","wrapDataAccess","originalFunction","converter","wrapDataAccessBase","store","inmemory","DataReader","schema","modelBase","dataFunction","_dataAccessFunction","groupsFunction","serializeFunction","serialize","serializeGetters","fromName","from","_wrapDataAccessBase","errors","fillLastGroup","originalGroup","newGroup","currOriginal","currentNew","mergeGroups","dest","indexFunction","groupsLength","indexFn","groupIndex","itemIndex","flattenGroups","wrapGroupItems","eachGroupItems","func","replaceInRanges","ranges","observable","replaceInRange","replaceWithObservable","view","serverGrouping","viewIndex","indexOfPristineModel","indexOfModel","fieldNameFromModel","convertFilterDescriptorsField","convertDescriptorsField","_map","_prefetch","_data","_pristineData","_ranges","_view","_pristineTotal","_destroyed","_pageSize","pageSize","_page","page","_sort","_sortFields","_filter","_group","_aggregate","_total","_groupPaging","_groupsState","_shouldDetachObservableParents","transport","Transport","pushCreate","_pushCreate","pushUpdate","_pushUpdate","pushDestroy","_pushDestroy","offlineStorage","_storage","getItem","localStorage","setItem","reader","readers","_detachObservableParents","_observe","_online","serverSorting","serverPaging","serverFiltering","serverAggregates","batch","inPlaceSort","clone","online","sync","Deferred","resolve","offlineData","_isGrouped","_isServerGrouped","_isServerGroupPaged","_isGroupPaged","_push","_readData","_flatData","useRanges","getByUid","_getByUid","dataItems","_storeData","_addRange","_process","_observeView","flatView","insert","_createNewModel","_wrapInEmptyGroup","_insertModelInRange","pushInsert","rangeSpan","_getCurrentRangeSpan","pushed","autoSync","pristine","last","pristineData","_updatePristineForModel","_removeItems","itemsToRemove","removePristine","shouldRemovePristine","destroyed","found","_eachItem","_removePristineForModel","pushMove","_moveItems","moved","dataItem","hasGroups","_pushInDestroyed","removeModel","_removeModelFromRanges","created","notFetched","updated","promises","_sendSubmit","_send","when","then","arguments$1","_accept","_syncEnd","_change","cancelChanges","_cancelModel","_changesCanceled","_markOfflineUpdatesAsDirty","__state__","hasChanges","models","response","serverGroup","_handleCustomErrors","values","_executeOnPristineForModel","deepExtend","_eachPristineItem","_pristineForModel","_modelCanceled","_submit","status","reject","deferred","_promise","method","converted","params","_params","_queueRequest","isPrevented","_dequeueRequest","args","_readAggregates","replaceSubset","_serverGroupsTotal","_aggregateResult","itemIds","_skip","endless","j","_changeHandler","updatePristine","end","start","timestamp","_timeStamp","outerStart","outerEnd","_sortRanges","_groupsFlat","_appendToGroupsFlat","_updateOuterRangesLength","_getGroupByUid","xhr","errorThrown","_requestInProgress","_pending","_shouldWrap","_updateTotalForAction","parseInt","handler","first","_calculateAggregates","_take","currentRangeStart","_clearEmptyGroups","_queryProcess","resultData","dataToAggregate","_setView","_setFilterTotal","_mergeState","_currentRangeStart","moreItemsCount","_hasExpandedSubGroups","_findGroupedRange","parents","itemsLength","groupCount","itemsToSkip","taken","_fetchGroupItems","_fetchingGroupItems","skipped","includeParents","excludeHeader","currentItems","_expandedSubGroupItemsCount","includeCurrentItems","subGroup","temp","endSpecified","groupItemsSkip","firstItem","lastItem","expandedSubGroupItemsCount","groupItemCount","getGroupItems","floor","round","subgroups","_composeItemsFilter","findSubgroups","clearTimeout","_timeout","setTimeout","_groupItemsSuccessHandler","totalField","totalCount","_updateRangePristineData","countAdded","_currentRequestTimeStamp","_skipRequestsInProgress","indexOfCurrentGroup","g","currentGroup","dataLength","indexes","rangesLength","_containsSubGroup","_cloneGroup","subgroup","currentSubGroup","filterTotal","setDefaultValue","fetch","_query","next","totalPages","prev","_pageableQueryOptions","getGroupsFlat","groupsTotal","includeExpanded","_calculateGroupsTotal","itemsField","ignoreState","_groupsTotal","countGroupRange","_emptyAggregates","ceil","inRange","_findRange","lastRange","firstItemUid","enableRequestsInProgress","pageSkip","size","_processRangeData","_originalPageSkip","_originalSize","_adjustPageSkip","_groupRangeExists","_rangeExists","prefetch","skipIdx","takeIdx","startIndex","endIndex","rangeData","rangeEnd","processed","flatData","prevRangeEnd","remote","groupMapOptions","isGroupPaged","startField","endField","_mergeGroups","_getRangesMismatch","mismatch","prevGroup","eventData","_omitPrefetch","paging","sorting","filtering","_prefetchSuccessHandler","force","_multiplePrefetch","prevRange","_getPrevRange","_getNextRange","availableItemsCount","_removeModelFromRange","_updateRangesLength","mismatchFound","mismatchLength","lengthDifference","abs","rangeLength","dataSource","transportOptions","transports","schemas","logToConsole","table","fieldIndex","cells","cell","tbody","tBodies","rows","fieldCount","nodeName","innerHTML","inferTable","optgroup","firstField","secondField","parentNode","disabled","label","text","attributes","specified","inferSelect","Node","hasChildren","childrenField","childrenOptions","hasChildrenObject","_childrenOptions","_initChildren","_loaded","HierarchicalDataSource","_updateChildrenField","append","loaded","level","_childrenLoaded","load","one","_matchFilter","dataMethod","_attachBubbleHandlers","_hierarchicalFilter","_childrenLoading","isLoading","_markHierarchicalQuery","_updateHierarchicalFilter","_find","inferList","list","textChild","className","textField","urlField","spriteCssClassField","imageUrlField","elements","tagName","firstChild","attr","nodeType","nodeValue","trim","_dataSource","Buffer","viewSize","disablePrefetch","_prefetching","buffer","_reset","_syncWithDataSource","setViewSize","_recalculate","itemPresent","dataOffset","prefetchThreshold","midPageThreshold","nextMidRange","nextPageThreshold","nextFullRange","pullBackThreshold","offset","previousMidRange","previousFullRange","_goToRange","nextRange","syncDataSource","prefetchOffset","expanding","_expanding","_syncPending","_firstItemUid","BatchBuffer","batchSize","batchBuffer","endreached","prefetching","prefetched","reset","resize","jQuery"],"sources":["kendo.data.js"],"mappings":"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","sourcesContent":["(function (factory) {\n   typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.data.odata', 'kendo.data.xml'], factory) :\n   factory();\n})((function () {\n   /*\n   This code is copied/inspired by the internal @progress/kendo-data-query repo:\n   https://github.com/telerik/kendo-data-query/tree/develop/src/filtering\n\n   !!!\n   1. If updates are to be synced consider the accentFoldingFiltering,\n      which at the moment is not present as a feature in the data-query-package.\n\n   2. Double-check available operators as well.\n\n   3. Make sure objs are strings -> i.e., replace (a || \"\") to (a + '')\n   !!!\n\n   In future, if we consider reusing the code directly we should revise the above omissions.\n   */\n\n   var logic = {\n       \"or\": {\n           concat: function (acc, fn) { return function (a) { return acc(a) || fn(a); }; },\n           identity: function () { return false; }\n       },\n       \"and\": {\n           concat: function (acc, fn) { return function (a) { return acc(a) && fn(a); }; },\n           identity: function () { return true; }\n       }\n   };\n\n   var operatorsMap = {\n       isnullorempty: function (a) { return kendo.isBlank(a) || a === ''; },\n       isnotnullorempty: function (a) { return kendo.isPresent(a) && a !== ''; },\n       contains: function (a, b) { return (a + '').indexOf(b) >= 0; },\n       doesnotcontain: function (a, b) { return (a + '').indexOf(b) === -1; },\n       doesnotendwith: function (a, b) { return (a + '').indexOf(b, (a || \"\").length - (b || \"\").length) < 0; },\n       doesnotstartwith: function (a, b) { return (a + '').lastIndexOf(b, 0) === -1; },\n       endswith: function (a, b) { return (a + '').indexOf(b, (a || \"\").length - (b || \"\").length) >= 0; },\n       eq: function (a, b) { return a === b; },\n       gt: function (a, b) { return a > b; },\n       gte: function (a, b) { return a >= b; },\n       isempty: function (a) { return a === ''; },\n       isnotempty: function (a) { return a !== ''; },\n       isnotnull: function (a) { return kendo.isPresent(a); },\n       isnull: function (a) { return kendo.isBlank(a); },\n       lt: function (a, b) { return a < b; },\n       lte: function (a, b) { return a <= b; },\n       neq: function (a, b) { return a != b; },\n       startswith: function (a, b) { return (a + '').lastIndexOf(b, 0) === 0; }\n   };\n\n   var dateRegExp = /^\\/Date\\((.*?)\\)\\/$/;\n\n   var convertValue = function (value, ignoreCase, accentFoldingFiltering) {\n       if (value != null && kendo.isString(value)) {\n           var date = dateRegExp.exec(value);\n           if (date) {\n               return new Date(+date[1]).getTime();\n           } else if (ignoreCase) {\n               return accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase();\n           }\n       } else if (value != null && kendo.isDate(value)) {\n           return value.getTime();\n       }\n       return value;\n   };\n\n   var typedGetter = function (prop, value, ignoreCase, accentFoldingFiltering) {\n       if (!kendo.isPresent(value)) {\n           return prop;\n       }\n\n       var acc = prop;\n\n       if (kendo.isString(value)) {\n           var date = dateRegExp.exec(value);\n           if (date) {\n               value = new Date(+date[1]);\n           } else {\n               acc = function (a) {\n                   var x = prop(a);\n                   if (typeof x === 'string' && ignoreCase) {\n                       return accentFoldingFiltering ? x.toLocaleLowerCase(accentFoldingFiltering) : x.toLowerCase();\n                   } else {\n                       return kendo.isNumeric(x) ? x + \"\" : x;\n                   }\n               };\n           }\n       }\n\n       if (kendo.isDate(value)) {\n           return function (a) {\n               var x = acc(a);\n               return kendo.isDate(x) ? x.getTime() : x;\n           };\n       }\n       return acc;\n   };\n\n   var transformFilter = function (ref) {\n       var field = ref.field;\n       var ignoreCase = ref.ignoreCase;\n       var value = ref.value;\n       var operator = ref.operator; if ( operator === void 0 ) operator = 'eq';\n       var accentFoldingFiltering = ref.accentFoldingFiltering;\n\n       field = !kendo.isPresent(field) ? function (a) { return a; } : field;\n\n       ignoreCase = kendo.isPresent(ignoreCase) ? ignoreCase : true;\n\n       var itemProp = typedGetter(\n           kendo.isFunction(field) ? field : kendo.getter(field, true),\n           value,\n           ignoreCase,\n           accentFoldingFiltering\n       );\n\n       value = convertValue(value, ignoreCase, accentFoldingFiltering);\n\n       var op = kendo.isFunction(operator) ? operator : operatorsMap[operator];\n\n       return function (a) { return op(itemProp(a), value, ignoreCase); };\n   };\n\n   var isCompositeFilterDescriptor = function (source) { return kendo.isPresent(source.filters); };\n\n   var transformCompositeFilter = function (filter) {\n       var accentFoldingFiltering = filter.accentFoldingFiltering;\n       var combiner = logic[filter.logic || 'and'];\n       return filter.filters\n           .filter(kendo.isPresent)\n           .map(function (x) { return (isCompositeFilterDescriptor(x) ? transformCompositeFilter(extendAccentFolding(x, accentFoldingFiltering)) : transformFilter(extendAccentFolding(x, accentFoldingFiltering))); })\n           .reduce(combiner.concat, combiner.identity);\n   };\n\n   var extendAccentFolding = function (filter, accentFoldingFiltering) { return (kendo.isPresent(accentFoldingFiltering) ? Object.assign(filter, { accentFoldingFiltering: accentFoldingFiltering }) : filter); };\n\n   var filterExprNoEval = function(expr) {\n       return transformCompositeFilter(expr);\n   };\n\n   var __meta__ = {\n       id: \"data\",\n       name: \"Data source\",\n       category: \"framework\",\n       description: \"Powerful component for using local and remote data.Fully supports CRUD, Sorting, Paging, Filtering, Grouping, and Aggregates.\",\n       depends: [ \"core\" ],\n       features: [ {\n           id: \"data-odata\",\n           name: \"OData\",\n           description: \"Support for accessing Open Data Protocol (OData) services.\",\n           depends: [ \"data.odata\" ]\n       }, {\n           id: \"data-signalr\",\n           name: \"SignalR\",\n           description: \"Support for binding to SignalR hubs.\",\n           depends: [ \"data.signalr\" ]\n       }, {\n           id: \"data-XML\",\n           name: \"XML\",\n           description: \"Support for binding to XML.\",\n           depends: [ \"data.xml\" ]\n       }]\n   };\n\n\n   (function($, undefined$1) {\n       var extend = $.extend,\n           isPlainObject = $.isPlainObject,\n           isEmptyObject = $.isEmptyObject,\n           isArray = Array.isArray,\n           grep = $.grep,\n           ajax = $.ajax,\n           map,\n           each = $.each,\n           noop = $.noop,\n           kendo = window.kendo,\n           isFunction = kendo.isFunction,\n           Observable = kendo.Observable,\n           Class = kendo.Class,\n           STRING = \"string\",\n           FUNCTION = \"function\",\n           ASCENDING = \"asc\",\n           CREATE = \"create\",\n           READ = \"read\",\n           UPDATE = \"update\",\n           DESTROY = \"destroy\",\n           CHANGE = \"change\",\n           SYNC = \"sync\",\n           GET = \"get\",\n           ERROR = \"error\",\n           REQUESTSTART = \"requestStart\",\n           PROGRESS = \"progress\",\n           REQUESTEND = \"requestEnd\",\n           ITEMSLOADED = \"itemsLoaded\",\n           ITEMLOAD = \"itemLoad\",\n           crud = [CREATE, READ, UPDATE, DESTROY],\n           identity = function(o) { return o; },\n           getter = kendo.getter,\n           stringify = kendo.stringify,\n           math = Math,\n           push = [].push,\n           join = [].join,\n           pop = [].pop,\n           splice = [].splice,\n           shift = [].shift,\n           slice = [].slice,\n           unshift = [].unshift,\n           toString = {}.toString,\n           stableSort = kendo.support.stableSort,\n           dateRegExp = /^\\/Date\\((.*?)\\)\\/$/,\n           objectKeys = [];\n\n       var ObservableArray = Observable.extend({\n           init: function(array, type) {\n               var that = this;\n\n               that.type = type || ObservableObject;\n\n               Observable.fn.init.call(that);\n\n               that.length = array.length;\n\n               that.wrapAll(array, that);\n               that._loadPromises = [];\n               that._loadedNodes = [];\n           },\n\n           at: function(index) {\n               return this[index];\n           },\n\n           toJSON: function(serializeFunctions) {\n               var idx, length = this.length, value, json = new Array(length);\n\n               for (idx = 0; idx < length; idx++) {\n                   value = this[idx];\n\n                   if (value instanceof ObservableObject) {\n                       value = value.toJSON(serializeFunctions);\n                   }\n\n                   json[idx] = value;\n               }\n\n               return json;\n           },\n\n           parent: noop,\n\n           wrapAll: function(source, target) {\n               var that = this,\n                   idx,\n                   length,\n                   parent = function() {\n                       return that;\n                   };\n\n               target = target || [];\n\n               for (idx = 0, length = source.length; idx < length; idx++) {\n                   target[idx] = that.wrap(source[idx], parent);\n               }\n\n               return target;\n           },\n\n           wrap: function(object, parent) {\n               var that = this,\n                   observable;\n\n               if (object !== null && toString.call(object) === \"[object Object]\") {\n                   observable = object instanceof that.type || object instanceof Model;\n\n                   if (!observable) {\n                       object = object instanceof ObservableObject ? object.toJSON() : object;\n                       object = new that.type(object);\n                   }\n\n                   object.parent = parent;\n\n                   object.bind(CHANGE, function(e) {\n                       var isGroup = object.hasOwnProperty(\"hasSubgroups\");\n                       that.trigger(CHANGE, {\n                           field: e.field,\n                           node: e.node,\n                           index: e.index,\n                           items: e.items || [this],\n                           action: e.node || isGroup ? (e.action || \"itemloaded\") : \"itemchange\"\n                       });\n                   });\n\n                   object.bind(ITEMLOAD, function(e) {\n                       that._loadPromises.push(e.promise);\n                       that._loading = true;\n\n                       e.promise.done(function() {\n                           that._loadedNodes.push(e.node);\n                           var index = that._loadPromises.indexOf(e.promise);\n                           that._loadPromises.splice(index, 1);\n\n                           if (!that._loadPromises.length) {\n                               that._loading = false;\n                               that.trigger(ITEMSLOADED, { collection: that, nodes: that._loadedNodes });\n                               that._loadedNodes = [];\n                           }\n                       });\n                   });\n               }\n\n               return object;\n           },\n\n           loading: function() {\n               return this._loading;\n           },\n\n           push: function() {\n               var index = this.length,\n                   items = this.wrapAll(arguments),\n                   result;\n\n               result = push.apply(this, items);\n\n               if (!this.omitChangeEvent) {\n                   this.trigger(CHANGE, {\n                       action: \"add\",\n                       index: index,\n                       items: items\n                   });\n               }\n\n               return result;\n           },\n\n           slice: slice,\n\n           sort: [].sort,\n\n           join: join,\n\n           pop: function() {\n               var length = this.length, result = pop.apply(this);\n\n               if (length) {\n                   this.trigger(CHANGE, {\n                       action: \"remove\",\n                       index: length - 1,\n                       items: [result]\n                   });\n               }\n\n               return result;\n           },\n\n           splice: function(index, howMany, item) {\n               var items = this.wrapAll(slice.call(arguments, 2)),\n                   result, i, len;\n\n               result = splice.apply(this, [index, howMany].concat(items));\n\n               if (result.length) {\n                   if (!this.omitChangeEvent) {\n                       this.trigger(CHANGE, {\n                           action: \"remove\",\n                           index: index,\n                           items: this.omitCache && this.omitCache.length ? result.concat(this.omitCache) : result\n                       });\n                       this.omitCache = [];\n                   }\n\n                   for (i = 0, len = result.length; i < len; i++) {\n                       if (result[i] && result[i].children) {\n                           result[i].unbind(CHANGE);\n                       }\n                   }\n               }\n\n               if (item) {\n                   if (!this.omitChangeEvent) {\n                       this.trigger(CHANGE, {\n                           action: \"add\",\n                           index: index,\n                           items: items\n                       });\n                   }\n               }\n               return result;\n           },\n\n           shift: function() {\n               var length = this.length, result = shift.apply(this);\n\n               if (length) {\n                   this.trigger(CHANGE, {\n                       action: \"remove\",\n                       index: 0,\n                       items: [result]\n                   });\n               }\n\n               return result;\n           },\n\n           unshift: function() {\n               var items = this.wrapAll(arguments),\n                   result;\n\n               result = unshift.apply(this, items);\n\n               this.trigger(CHANGE, {\n                   action: \"add\",\n                   index: 0,\n                   items: items\n               });\n\n               return result;\n           },\n\n           indexOf: function(item) {\n               var that = this,\n                   idx,\n                   length;\n\n               for (idx = 0, length = that.length; idx < length; idx++) {\n                   if (that[idx] === item) {\n                       return idx;\n                   }\n               }\n               return -1;\n           },\n\n           forEach: function(callback, thisArg) {\n               var idx = 0;\n               var length = this.length;\n               var context = thisArg || window;\n\n               for (; idx < length; idx++) {\n                   callback.call(context, this[idx], idx, this);\n               }\n           },\n\n           map: function(callback, thisArg) {\n               var idx = 0;\n               var result = [];\n               var length = this.length;\n               var context = thisArg || window;\n\n               for (; idx < length; idx++) {\n                   result[idx] = callback.call(context, this[idx], idx, this);\n               }\n\n               return result;\n           },\n\n           reduce: function(callback) {\n               var idx = 0,\n                   result,\n                   length = this.length;\n\n               if (arguments.length == 2) {\n                   result = arguments[1];\n               } else if (idx < length) {\n                   result = this[idx++];\n               }\n\n               for (; idx < length; idx++) {\n                   result = callback(result, this[idx], idx, this);\n               }\n\n               return result;\n           },\n\n           reduceRight: function(callback) {\n               var idx = this.length - 1,\n                   result;\n\n               if (arguments.length == 2) {\n                   result = arguments[1];\n               } else if (idx > 0) {\n                   result = this[idx--];\n               }\n\n               for (; idx >= 0; idx--) {\n                   result = callback(result, this[idx], idx, this);\n               }\n\n               return result;\n           },\n\n           filter: function(callback, thisArg) {\n               var idx = 0;\n               var result = [];\n               var item;\n               var length = this.length;\n               var context = thisArg || window;\n\n               for (; idx < length; idx++) {\n                   item = this[idx];\n                   if (callback.call(context, item, idx, this)) {\n                       result[result.length] = item;\n                   }\n               }\n\n               return result;\n           },\n\n           find: function(callback, thisArg) {\n               var idx = 0;\n               var item;\n               var length = this.length;\n               var context = thisArg || window;\n\n               for (; idx < length; idx++) {\n                   item = this[idx];\n                   if (callback.call(context, item, idx, this)) {\n                       return item;\n                   }\n               }\n           },\n\n           every: function(callback, thisArg) {\n               var idx = 0;\n               var item;\n               var length = this.length;\n               var context = thisArg || window;\n\n               for (; idx < length; idx++) {\n                   item = this[idx];\n                   if (!callback.call(context, item, idx, this)) {\n                       return false;\n                   }\n               }\n\n               return true;\n           },\n\n           some: function(callback, thisArg) {\n               var idx = 0;\n               var item;\n               var length = this.length;\n               var context = thisArg || window;\n\n               for (; idx < length; idx++) {\n                   item = this[idx];\n                   if (callback.call(context, item, idx, this)) {\n                       return true;\n                   }\n               }\n\n               return false;\n           },\n\n           // non-standard collection methods\n           remove: function(item) {\n               var idx = this.indexOf(item);\n\n               if (idx !== -1) {\n                   this.splice(idx, 1);\n               }\n           },\n\n           empty: function() {\n               this.splice(0, this.length);\n           }\n       });\n\n       // Polyfill for Symbol.iterator\n       if (typeof Symbol !== \"undefined\" && Symbol.iterator && !ObservableArray.prototype[Symbol.iterator]) {\n           ObservableArray.prototype[Symbol.iterator] = [][Symbol.iterator];\n       }\n\n       var LazyObservableArray = ObservableArray.extend({\n           init: function(data, type, events) {\n               var parentFn = function() { return this; };\n\n               Observable.fn.init.call(this);\n\n               this.type = type || ObservableObject;\n\n               if (events) {\n                   this._events = events;\n               }\n\n               for (var idx = 0; idx < data.length; idx++) {\n                   this[idx] = data[idx];\n               }\n\n               this.length = idx;\n               this._parent = parentFn.bind(this);\n           },\n           at: function(index) {\n               var item = this[index];\n\n               if (!(item instanceof this.type)) {\n                   item = this[index] = this.wrap(item, this._parent);\n               } else {\n                   item.parent = this._parent;\n               }\n\n               return item;\n           }\n       });\n\n       function eventHandler(context, type, field, prefix) {\n           return function(e) {\n               var event = {}, key;\n\n               for (key in e) {\n                   event[key] = e[key];\n               }\n\n               if (prefix) {\n                   event.field = field + \".\" + e.field;\n               } else {\n                   event.field = field;\n               }\n\n               if (type == CHANGE && context._notifyChange) {\n                   context._notifyChange(event);\n               }\n\n               context.trigger(type, event);\n           };\n       }\n\n       function isPrimitiveType(value) {\n           return (typeof value === \"object\" && Object.getPrototypeOf(value) === Object.getPrototypeOf({}))\n                   || Object.getPrototypeOf(value) === Object.getPrototypeOf(new Date())\n                   || typeof value !== \"object\";\n         }\n\n       function ownKeys(value, ignoreObjectKeys) {\n           var props = [];\n           var protoKeys = [];\n           var keys, filteredObjectKeys;\n\n           value = value || {};\n\n           if (!isPrimitiveType(value)) {\n               protoKeys = Object.getOwnPropertyNames(Object.getPrototypeOf(value));\n           }\n\n           keys = Object.getOwnPropertyNames(value).concat(protoKeys);\n\n           filteredObjectKeys = objectKeys.filter(function(key) {\n               return keys.indexOf(key) < 0;\n           });\n\n           while (value) {\n               Object.getOwnPropertyNames(value).forEach(function(prop) {\n                   if (props.indexOf(prop) === -1 && (!ignoreObjectKeys || filteredObjectKeys.indexOf(prop) < 0)) {\n                       props.push(prop);\n                   }\n               });\n               value = Object.getPrototypeOf(value);\n           }\n\n           return props;\n       }\n\n       objectKeys = ownKeys({}, false);\n\n       var ObservableObject = Observable.extend({\n           init: function(value) {\n               var that = this,\n                   member,\n                   keys = ownKeys(value, true),\n                   parent = function() {\n                       return that;\n                   };\n\n               Observable.fn.init.call(this);\n\n               this._handlers = {};\n\n               keys.forEach(function(field) {\n                   member = value[field];\n\n                   if (typeof member === \"object\" && member && !member.getTime && field.charAt(0) != \"_\") {\n                       member = that.wrap(member, field, parent);\n                   }\n\n                   that[field] = member;\n               });\n\n               that.uid = kendo.guid();\n           },\n\n           shouldSerialize: function(field, serializeFunctions) {\n               return this.hasOwnProperty(field) && field !== \"_handlers\" && field !== \"_events\" && ((serializeFunctions && serializeFunctions[field]) || typeof this[field] !== FUNCTION) && field !== \"uid\";\n           },\n\n           forEach: function(f) {\n               for (var i in this) {\n                   if (this.shouldSerialize(i)) {\n                       f(this[i], i);\n                   }\n               }\n           },\n\n           toJSON: function(serializeFunctions) {\n               var result = {}, value, field;\n\n               for (field in this) {\n                   if (this.shouldSerialize(field, serializeFunctions)) {\n                       value = this[field];\n\n                       if (value instanceof ObservableObject || value instanceof ObservableArray) {\n                           value = value.toJSON(serializeFunctions);\n                       }\n\n                       result[field] = value;\n                   }\n               }\n\n               return result;\n           },\n\n           get: function(field) {\n               var that = this, result;\n\n               that.trigger(GET, { field: field });\n\n               if (field === \"this\") {\n                   result = that;\n               } else {\n                   result = kendo.getter(field, true)(that);\n               }\n\n               return result;\n           },\n\n           _set: function(field, value) {\n               var that = this;\n               var composite = field.indexOf(\".\") >= 0;\n\n               if (composite) {\n                   var paths = field.split(\".\"),\n                       path = \"\";\n\n                   while (paths.length > 1) {\n                       path += paths.shift();\n                       var obj = kendo.getter(path, true)(that);\n                       if (obj instanceof ObservableObject) {\n                           obj.set(paths.join(\".\"), value);\n                           return composite;\n                       }\n                       path += \".\";\n                   }\n               }\n\n               kendo.setter(field)(that, value);\n\n               return composite;\n           },\n\n           set: function(field, value) {\n               var that = this,\n                   isSetPrevented = false,\n                   composite = field.indexOf(\".\") >= 0,\n                   current = kendo.getter(field, true)(that);\n\n               if (current !== value) {\n                   if (current instanceof Observable && this._handlers[field]) {\n                       if (this._handlers[field].get) {\n                          current.unbind(GET, this._handlers[field].get);\n                       }\n                       current.unbind(CHANGE, this._handlers[field].change);\n                   }\n\n                   isSetPrevented = that.trigger(\"set\", { field: field, value: value });\n\n                   if (!isSetPrevented) {\n                       if (!composite) {\n                           value = that.wrap(value, field, function() { return that; });\n                       }\n                       if (!that._set(field, value) || field.indexOf(\"(\") >= 0 || field.indexOf(\"[\") >= 0) {\n                           that.trigger(CHANGE, { field: field });\n                       }\n                   }\n               }\n\n               return isSetPrevented;\n           },\n\n           parent: noop,\n\n           wrap: function(object, field, parent) {\n               var that = this;\n               var get;\n               var change;\n               var type = toString.call(object);\n\n               if (object != null && (type === \"[object Object]\" || type === \"[object Array]\")) {\n                   var isObservableArray = object instanceof ObservableArray;\n                   var isDataSource = object instanceof DataSource;\n\n                   if (type === \"[object Object]\" && !isDataSource && !isObservableArray) {\n                       if (!(object instanceof ObservableObject)) {\n                           object = new ObservableObject(object);\n                       }\n\n                       get = eventHandler(that, GET, field, true);\n                       object.bind(GET, get);\n                       change = eventHandler(that, CHANGE, field, true);\n                       object.bind(CHANGE, change);\n\n                       that._handlers[field] = { get: get, change: change };\n                   } else if (type === \"[object Array]\" || isObservableArray || isDataSource) {\n                       if (!isObservableArray && !isDataSource) {\n                           object = new ObservableArray(object);\n                       }\n\n                       change = eventHandler(that, CHANGE, field, false);\n\n                       object.bind(CHANGE, change);\n\n                       that._handlers[field] = { change: change };\n                   }\n\n                   object.parent = parent;\n               }\n\n               return object;\n           }\n       });\n\n       function equal(x, y) {\n           if (x === y) {\n               return true;\n           }\n\n           var xtype = kendo.type(x), ytype = kendo.type(y), field;\n\n           if (xtype !== ytype) {\n               return false;\n           }\n\n           if (xtype === \"date\") {\n               return x.getTime() === y.getTime();\n           }\n\n           if (xtype !== \"object\" && xtype !== \"array\") {\n               return false;\n           }\n\n           for (field in x) {\n               if (!equal(x[field], y[field])) {\n                   return false;\n               }\n           }\n\n           return true;\n       }\n\n       var parsers = {\n           \"number\": function(value) {\n               if (typeof value === STRING && value.toLowerCase() === \"null\") {\n                   return null;\n               }\n               return kendo.parseFloat(value);\n           },\n\n           \"date\": function(value) {\n               if (typeof value === STRING && value.toLowerCase() === \"null\") {\n                   return null;\n               }\n               return kendo.parseDate(value);\n           },\n\n           \"boolean\": function(value) {\n               if (typeof value === STRING) {\n                   if (value.toLowerCase() === \"null\") {\n                       return null;\n                   } else {\n                       return value.toLowerCase() === \"true\";\n                   }\n               }\n               return value != null ? !!value : value;\n           },\n\n           \"string\": function(value) {\n               if (typeof value === STRING && value.toLowerCase() === \"null\") {\n                   return null;\n               }\n               return value != null ? (value + \"\") : value;\n           },\n\n           \"default\": function(value) {\n               return value;\n           }\n       };\n\n       var defaultValues = {\n           \"string\": \"\",\n           \"number\": 0,\n           \"date\": new Date(),\n           \"boolean\": false,\n           \"default\": \"\"\n       };\n\n       function getFieldByName(obj, name) {\n           var field,\n               fieldName;\n\n           for (fieldName in obj) {\n               field = obj[fieldName];\n               if (isPlainObject(field) && field.field && field.field === name) {\n                   return field;\n               } else if (field === name) {\n                   return field;\n               }\n           }\n           return null;\n       }\n\n       var Model = ObservableObject.extend({\n           init: function(data) {\n               var that = this;\n\n               if (!data || $.isEmptyObject(data)) {\n                   data = $.extend({}, that.defaults, data);\n\n                   if (that._initializers) {\n                       for (var idx = 0; idx < that._initializers.length; idx++) {\n                            var name = that._initializers[idx];\n                            data[name] = that.defaults[name]();\n                       }\n                   }\n               }\n\n               ObservableObject.fn.init.call(that, data);\n\n               that.dirty = false;\n               that.dirtyFields = {};\n\n               if (that.idField) {\n                   that.id = that.get(that.idField);\n\n                   if (that.id === undefined$1) {\n                       that.id = that._defaultId;\n                   }\n               }\n           },\n\n           shouldSerialize: function(field) {\n               return ObservableObject.fn.shouldSerialize.call(this, field) &&\n                   field !== \"uid\" && !(this.idField !== \"id\" && field === \"id\") &&\n                   field !== \"dirty\" && field !== \"dirtyFields\" && field !== \"_accessors\";\n           },\n\n           _parse: function(field, value) {\n               var that = this,\n                   fieldName = field,\n                   fields = (that.fields || {}),\n                   parse;\n\n               field = fields[field];\n               if (!field) {\n                   field = getFieldByName(fields, fieldName);\n               }\n               if (field) {\n                   parse = field.parse;\n                   if (!parse && field.type) {\n                       parse = parsers[field.type.toLowerCase()];\n                   }\n               }\n\n               return parse ? parse(value) : value;\n           },\n\n           _notifyChange: function(e) {\n               var action = e.action;\n\n               if (action == \"add\" || action == \"remove\") {\n                   this.dirty = true;\n                   this.dirtyFields[e.field] = true;\n               }\n           },\n\n           editable: function(field) {\n               field = (this.fields || {})[field];\n               return field ? field.editable !== false : true;\n           },\n\n           set: function(field, value) {\n               var that = this;\n               var dirty = that.dirty;\n\n               if (that.editable(field)) {\n                   value = that._parse(field, value);\n\n                   if (!equal(value, that.get(field))) {\n                       that.dirty = true;\n                       that.dirtyFields[field] = true;\n\n                       if (ObservableObject.fn.set.call(that, field, value) && !dirty) {\n                           that.dirty = dirty;\n\n                           if (!that.dirty) {\n                               that.dirtyFields[field] = false;\n                           }\n                       }\n                   } else {\n                       that.trigger(\"equalSet\", { field: field, value: value });\n                   }\n               }\n           },\n\n           accept: function(data) {\n               var that = this,\n                   parent = function() { return that; },\n                   field;\n\n               for (field in data) {\n                   var value = data[field];\n\n                   if (field.charAt(0) != \"_\") {\n                       value = that.wrap(data[field], field, parent);\n                   }\n\n                   that._set(field, value);\n               }\n\n               if (that.idField) {\n                   that.id = that.get(that.idField);\n               }\n\n               that.dirty = false;\n               that.dirtyFields = {};\n           },\n\n           isNew: function() {\n               return this.id === this._defaultId;\n           }\n       });\n\n       Model.define = function(base, options) {\n           if (options === undefined$1) {\n               options = base;\n               base = Model;\n           }\n\n           var model,\n               proto = extend({ defaults: {} }, options),\n               name,\n               field,\n               type,\n               value,\n               idx,\n               length,\n               fields = {},\n               originalName,\n               id = proto.id,\n               functionFields = [];\n\n           if (id) {\n               proto.idField = id;\n           }\n\n           if (proto.id) {\n               delete proto.id;\n           }\n\n           if (id) {\n               proto.defaults[id] = proto._defaultId = \"\";\n           }\n\n           if (toString.call(proto.fields) === \"[object Array]\") {\n               for (idx = 0, length = proto.fields.length; idx < length; idx++) {\n                   field = proto.fields[idx];\n                   if (typeof field === STRING) {\n                       fields[field] = {};\n                   } else if (field.field) {\n                       fields[field.field] = field;\n                   }\n               }\n               proto.fields = fields;\n           }\n\n           for (name in proto.fields) {\n               field = proto.fields[name];\n               type = field.type || \"default\";\n               value = null;\n               originalName = name;\n\n               name = typeof (field.field) === STRING ? field.field : name;\n\n               if (!field.nullable) {\n                   value = proto.defaults[originalName !== name ? originalName : name] = field.defaultValue !== undefined$1 ? field.defaultValue : defaultValues[type.toLowerCase()];\n\n                   if (typeof value === \"function\") {\n                       functionFields.push(name);\n                   }\n               }\n\n               if (options.id === name) {\n                   proto._defaultId = value;\n               }\n\n               proto.defaults[originalName !== name ? originalName : name] = value;\n\n               if ($.isPlainObject(field)) {\n                   field.parse = field.parse || parsers[type];\n               } else {\n                   field = {\n                       parse: parsers[type]\n                   };\n               }\n           }\n\n           if (functionFields.length > 0) {\n               proto._initializers = functionFields;\n           }\n\n           model = base.extend(proto);\n           model.define = function(options) {\n               return Model.define(model, options);\n           };\n\n           if (proto.fields) {\n               model.fields = proto.fields;\n               model.idField = proto.idField;\n           }\n\n           return model;\n       };\n\n       var Comparer = {\n           selector: function(field) {\n               return isFunction(field) ? field : getter(field);\n           },\n\n           compare: function(field) {\n               var selector = this.selector(field);\n               return function(a, b) {\n                   a = selector(a);\n                   b = selector(b);\n\n                   if (a == null && b == null) {\n                       return 0;\n                   }\n\n                   if (a == null) {\n                       return -1;\n                   }\n\n                   if (b == null) {\n                       return 1;\n                   }\n\n                   if (a.localeCompare) {\n                       return a.localeCompare(b);\n                   }\n\n                   return a > b ? 1 : (a < b ? -1 : 0);\n               };\n           },\n\n           create: function(sort) {\n               var compare = sort.compare || this.compare(sort.field);\n\n               if (sort.dir == \"desc\") {\n                   return function(a, b) {\n                       return compare(b, a, true);\n                   };\n               }\n\n               return compare;\n           },\n\n           combine: function(comparers) {\n               return function(a, b) {\n                   var result = comparers[0](a, b),\n                       idx,\n                       length;\n\n                   for (idx = 1, length = comparers.length; idx < length; idx ++) {\n                       result = result || comparers[idx](a, b);\n                   }\n\n                   return result;\n               };\n           }\n       };\n\n       var StableComparer = extend({}, Comparer, {\n           asc: function(field) {\n               var selector = this.selector(field);\n               return function(a, b) {\n                   var valueA = selector(a);\n                   var valueB = selector(b);\n\n                   if (valueA && valueA.getTime && valueB && valueB.getTime) {\n                       valueA = valueA.getTime();\n                       valueB = valueB.getTime();\n                   }\n\n                   if (valueA === valueB) {\n                       return a.__position - b.__position;\n                   }\n\n                   if (valueA == null) {\n                       return -1;\n                   }\n\n                   if (valueB == null) {\n                       return 1;\n                   }\n\n                   if (valueA.localeCompare) {\n                       return valueA.localeCompare(valueB);\n                   }\n\n                   return valueA > valueB ? 1 : -1;\n               };\n           },\n\n           desc: function(field) {\n               var selector = this.selector(field);\n               return function(a, b) {\n                   var valueA = selector(a);\n                   var valueB = selector(b);\n\n                   if (valueA && valueA.getTime && valueB && valueB.getTime) {\n                       valueA = valueA.getTime();\n                       valueB = valueB.getTime();\n                   }\n\n                   if (valueA === valueB) {\n                       return a.__position - b.__position;\n                   }\n\n                   if (valueA == null) {\n                       return 1;\n                   }\n\n                   if (valueB == null) {\n                       return -1;\n                   }\n\n                   if (valueB.localeCompare) {\n                       return valueB.localeCompare(valueA);\n                   }\n\n                   return valueA < valueB ? 1 : -1;\n               };\n           },\n           create: function(sort) {\n              return this[sort.dir](sort.field);\n           }\n       });\n\n       map = function(array, callback) {\n           var idx, length = array.length, result = new Array(length);\n\n           for (idx = 0; idx < length; idx++) {\n               result[idx] = callback(array[idx], idx, array);\n           }\n\n           return result;\n       };\n\n       var operators = (function() {\n\n           function quote(str) {\n               if (typeof str == \"string\") {\n                   str = str.replace(/[\\r\\n]+/g, \"\");\n               }\n               return JSON.stringify(str);\n           }\n\n           function textOp(impl) {\n               return function(a, b, ignore, accentFoldingFiltering) {\n                   b += \"\";\n                   if (ignore) {\n                       a = \"(\" + a + \" + '').toString()\" + ((accentFoldingFiltering) ? \".toLocaleLowerCase('\" + accentFoldingFiltering + \"')\" : \".toLowerCase()\");\n                       b = ((accentFoldingFiltering) ? b.toLocaleLowerCase(accentFoldingFiltering) : b.toLowerCase());\n                   }\n                   return impl(a, quote(b), ignore);\n               };\n           }\n\n           function operator(op, a, b, ignore, accentFoldingFiltering) {\n               if (b != null) {\n                   if (typeof b === STRING) {\n                       var date = dateRegExp.exec(b);\n                       if (date) {\n                           b = new Date(+date[1]);\n                       } else if (ignore) {\n                           b = quote(((accentFoldingFiltering) ? b.toLocaleLowerCase(accentFoldingFiltering) : b.toLowerCase()));\n                           a = \"((\" + a + \" || '')+'')\" + ((accentFoldingFiltering) ? \".toLocaleLowerCase('\" + accentFoldingFiltering + \"')\" : \".toLowerCase()\");\n                       } else {\n                           b = quote(b);\n                       }\n                   }\n\n                   if (b.getTime) {\n                       //b looks like a Date\n                       a = \"(\" + a + \"&&\" + a + \".getTime?\" + a + \".getTime():\" + a + \")\";\n                       b = b.getTime();\n                   }\n               }\n\n               return a + \" \" + op + \" \" + b;\n           }\n\n           function getMatchRegexp(pattern) {\n               // take a pattern, as supported by Excel match filter, and\n               // convert it to the equivalent JS regular expression.\n               // Excel patterns support:\n               //\n               //   * - match any sequence of characters\n               //   ? - match a single character\n               //\n               // to match a literal * or ?, they must be prefixed by a tilde (~)\n               for (var rx = \"/^\", esc = false, i = 0; i < pattern.length; ++i) {\n                   var ch = pattern.charAt(i);\n                   if (esc) {\n                       rx += \"\\\\\" + ch;\n                   } else if (ch == \"~\") {\n                       esc = true;\n                       continue;\n                   } else if (ch == \"*\") {\n                       rx += \".*\";\n                   } else if (ch == \"?\") {\n                       rx += \".\";\n                   } else if (\".+^$()[]{}|\\\\/\\n\\r\\u2028\\u2029\\xA0\".indexOf(ch) >= 0) {\n                       rx += \"\\\\\" + ch;\n                   } else {\n                       rx += ch;\n                   }\n                   esc = false;\n               }\n               return rx + \"$/\";\n           }\n\n           return {\n               quote: function(value) {\n                   if (value && value.getTime) {\n                       return \"new Date(\" + value.getTime() + \")\";\n                   }\n                   return quote(value);\n               },\n               eq: function(a, b, ignore, accentFoldingFiltering) {\n                   return operator(\"==\", a, b, ignore, accentFoldingFiltering);\n               },\n               neq: function(a, b, ignore, accentFoldingFiltering) {\n                   return operator(\"!=\", a, b, ignore, accentFoldingFiltering);\n               },\n               gt: function(a, b, ignore) {\n                   return operator(\">\", a, b, ignore);\n               },\n               gte: function(a, b, ignore) {\n                   return operator(\">=\", a, b, ignore);\n               },\n               lt: function(a, b, ignore) {\n                   return operator(\"<\", a, b, ignore);\n               },\n               lte: function(a, b, ignore) {\n                   return operator(\"<=\", a, b, ignore);\n               },\n               startswith: textOp(function(a, b) {\n                   return a + \".lastIndexOf(\" + b + \", 0) == 0\";\n               }),\n               doesnotstartwith: textOp(function(a, b) {\n                   return a + \".lastIndexOf(\" + b + \", 0) == -1\";\n               }),\n               endswith: textOp(function(a, b) {\n                   var n = b ? b.length - 2 : 0;\n                   return a + \".indexOf(\" + b + \", \" + a + \".length - \" + n + \") >= 0\";\n               }),\n               doesnotendwith: textOp(function(a, b) {\n                   var n = b ? b.length - 2 : 0;\n                   return a + \".indexOf(\" + b + \", \" + a + \".length - \" + n + \") < 0\";\n               }),\n               contains: textOp(function(a, b) {\n                   return a + \".indexOf(\" + b + \") >= 0\";\n               }),\n               doesnotcontain: textOp(function(a, b) {\n                   return a + \".indexOf(\" + b + \") == -1\";\n               }),\n               matches: textOp(function(a, b) {\n                   b = b.substring(1, b.length - 1);\n                   return getMatchRegexp(b) + \".test(\" + a + \")\";\n               }),\n               doesnotmatch: textOp(function(a, b) {\n                   b = b.substring(1, b.length - 1);\n                   return \"!\" + getMatchRegexp(b) + \".test(\" + a + \")\";\n               }),\n               isempty: function(a) {\n                   return a + \" === ''\";\n               },\n               isnotempty: function(a) {\n                   return a + \" !== ''\";\n               },\n               isnull: function(a) {\n                   return \"(\" + a + \" == null)\";\n               },\n               isnotnull: function(a) {\n                   return \"(\" + a + \" != null)\";\n               },\n               isnullorempty: function(a) {\n                   return \"(\" + a + \" === null) || (\" + a + \" === '')\";\n               },\n               isnotnullorempty: function(a) {\n                   return \"(\" + a + \" !== null) && (\" + a + \" !== '')\";\n               }\n           };\n       })();\n\n       function Query(data) {\n           this.data = data || [];\n       }\n\n       // Continue to support legacy unsafe-eval for the spreadsheet\n       Query.filterExpr = function(expression, options) {\n           if ( options === void 0 ) options = { noEval: false };\n\n           if (options.noEval) {\n               // using no-eval for most cases\n               return filterExprNoEval(expression);\n           }\n\n           var expressions = [],\n               logic = { and: \" && \", or: \" || \" },\n               idx,\n               length,\n               filter,\n               expr,\n               fieldFunctions = [],\n               operatorFunctions = [],\n               field,\n               operator,\n               filters = expression.filters;\n\n           for (idx = 0, length = filters.length; idx < length; idx++) {\n               filter = filters[idx];\n               field = filter.field;\n               operator = filter.operator;\n\n               if (filter.filters) {\n                   expr = Query.filterExpr(filter);\n                   //Nested function fields or operators - update their index e.g. __o[0] -> __o[1]\n                   filter = expr.expression\n                   .replace(/__o\\[(\\d+)\\]/g, function(match, index) {\n                       index = +index;\n                       return \"__o[\" + (operatorFunctions.length + index) + \"]\";\n                   })\n                   .replace(/__f\\[(\\d+)\\]/g, function(match, index) {\n                       index = +index;\n                       return \"__f[\" + (fieldFunctions.length + index) + \"]\";\n                   });\n\n                   operatorFunctions.push.apply(operatorFunctions, expr.operators);\n                   fieldFunctions.push.apply(fieldFunctions, expr.fields);\n               } else {\n                   if (typeof field === FUNCTION) {\n                       expr = \"__f[\" + fieldFunctions.length + \"](d)\";\n                       fieldFunctions.push(field);\n                   } else {\n                       expr = kendo.expr(field);\n                   }\n\n                   if (typeof operator === FUNCTION) {\n                       filter = \"__o[\" + operatorFunctions.length + \"](\" + expr + \", \" + operators.quote(filter.value) + \")\";\n                       operatorFunctions.push(operator);\n                   } else {\n                       filter = operators[(operator || \"eq\").toLowerCase()](expr, filter.value, filter.ignoreCase !== undefined$1 ? filter.ignoreCase : true, expression.accentFoldingFiltering);\n                   }\n               }\n\n               expressions.push(filter);\n           }\n\n           return { expression: \"(\" + expressions.join(logic[expression.logic]) + \")\", fields: fieldFunctions, operators: operatorFunctions };\n       };\n\n       function normalizeSort(field, dir) {\n           if (field) {\n               var descriptor = typeof field === STRING ? { field: field, dir: dir } : field,\n               descriptors = isArray(descriptor) ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n               return grep(descriptors, function(d) { return !!d.dir; });\n           }\n       }\n\n       function sortFields(sorts, dir) {\n           var sortObject = {};\n\n           if (sorts) {\n               var descriptor = typeof sorts === STRING ? { field: sorts, dir: dir } : sorts,\n               descriptors = isArray(descriptor) ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n               for (var i = 0; i < descriptors.length; i++) {\n                   sortObject[descriptors[i].field] = { dir: descriptors[i].dir, index: i + 1 };\n               }\n           }\n\n           return sortObject;\n       }\n\n       var operatorMap = {\n           \"==\": \"eq\",\n           equals: \"eq\",\n           isequalto: \"eq\",\n           equalto: \"eq\",\n           equal: \"eq\",\n           \"!=\": \"neq\",\n           ne: \"neq\",\n           notequals: \"neq\",\n           isnotequalto: \"neq\",\n           notequalto: \"neq\",\n           notequal: \"neq\",\n           \"<\": \"lt\",\n           islessthan: \"lt\",\n           lessthan: \"lt\",\n           less: \"lt\",\n           \"<=\": \"lte\",\n           le: \"lte\",\n           islessthanorequalto: \"lte\",\n           lessthanequal: \"lte\",\n           \">\": \"gt\",\n           isgreaterthan: \"gt\",\n           greaterthan: \"gt\",\n           greater: \"gt\",\n           \">=\": \"gte\",\n           isgreaterthanorequalto: \"gte\",\n           greaterthanequal: \"gte\",\n           ge: \"gte\",\n           notsubstringof: \"doesnotcontain\",\n           isnull: \"isnull\",\n           isempty: \"isempty\",\n           isnotempty: \"isnotempty\"\n       };\n\n       function normalizeOperator(expression) {\n           var idx,\n           length,\n           filter,\n           operator,\n           filters = expression.filters;\n\n           if (filters) {\n               for (idx = 0, length = filters.length; idx < length; idx++) {\n                   filter = filters[idx];\n                   operator = filter.operator;\n\n                   if (operator && typeof operator === STRING) {\n                       filter.operator = operatorMap[operator.toLowerCase()] || operator;\n                   }\n\n                   normalizeOperator(filter);\n               }\n           }\n       }\n\n       function normalizeFilter(expression) {\n           if (expression && !isEmptyObject(expression)) {\n               if (isArray(expression) || !expression.filters) {\n                   expression = {\n                       logic: \"and\",\n                       filters: isArray(expression) ? expression : [expression]\n                   };\n               }\n\n               normalizeOperator(expression);\n\n               return expression;\n           }\n       }\n\n       Query.normalizeFilter = normalizeFilter;\n\n       function compareDescriptor(f1, f2) {\n           if (f1.logic || f2.logic) {\n               return false;\n           }\n\n           return f1.field === f2.field && f1.value === f2.value && f1.operator === f2.operator;\n       }\n\n       function normalizeDescriptor(filter) {\n           filter = filter || {};\n\n           if (isEmptyObject(filter)) {\n               return { logic: \"and\", filters: [] };\n           }\n\n           return normalizeFilter(filter);\n       }\n\n       function fieldComparer(a, b) {\n           if (b.logic || (a.field > b.field)) {\n               return 1;\n           } else if (a.field < b.field) {\n               return -1;\n           } else {\n               return 0;\n           }\n       }\n\n       function compareFilters(expr1, expr2) {\n           expr1 = normalizeDescriptor(expr1);\n           expr2 = normalizeDescriptor(expr2);\n\n           if (expr1.logic !== expr2.logic) {\n               return false;\n           }\n\n           var f1, f2;\n           var filters1 = (expr1.filters || []).slice();\n           var filters2 = (expr2.filters || []).slice();\n\n           if (filters1.length !== filters2.length) {\n               return false;\n           }\n\n           filters1 = filters1.sort(fieldComparer);\n           filters2 = filters2.sort(fieldComparer);\n\n           for (var idx = 0; idx < filters1.length; idx++) {\n               f1 = filters1[idx];\n               f2 = filters2[idx];\n\n               if (f1.logic && f2.logic) {\n                   if (!compareFilters(f1, f2)) {\n                       return false;\n                   }\n               } else if (!compareDescriptor(f1, f2)) {\n                   return false;\n               }\n           }\n\n           return true;\n       }\n\n       Query.compareFilters = compareFilters;\n\n       function normalizeAggregate(expressions) {\n           return isArray(expressions) ? expressions : [expressions];\n       }\n\n       function normalizeGroup(field, dir, compare, skipItemSorting) {\n           var descriptor = typeof field === STRING ? { field: field, dir: dir, compare: compare, skipItemSorting: skipItemSorting } : field,\n           descriptors = isArray(descriptor) ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n           return map(descriptors, function(d) {\n               return {\n                   field: d.field,\n                   dir: d.dir || \"asc\",\n                   aggregates: d.aggregates,\n                   compare: d.compare,\n                   skipItemSorting: d.skipItemSorting\n               };\n           });\n       }\n\n       function normalizeGroupWithoutCompare(field, dir, compare) {\n           var descriptors = normalizeGroup(field, dir, compare);\n\n           for (var i = 0; i < descriptors.length; i++) {\n               delete descriptors[i].compare;\n           }\n\n           return descriptors;\n       }\n\n       function anyGroupDescriptorHasCompare(groupDescriptors) {\n           var descriptors = isArray(groupDescriptors) ? groupDescriptors : [groupDescriptors];\n\n           for (var i = 0; i < descriptors.length; i++) {\n               if (descriptors[i] && isFunction(descriptors[i].compare)) {\n                   return true;\n               }\n           }\n\n           return false;\n       }\n\n       Query.prototype = {\n           toArray: function() {\n               return this.data;\n           },\n           range: function(index, count) {\n               return new Query(this.data.slice(index, index + count));\n           },\n           skip: function(count) {\n               return new Query(this.data.slice(count));\n           },\n           take: function(count) {\n               return new Query(this.data.slice(0, count));\n           },\n           select: function(selector) {\n               return new Query(map(this.data, selector));\n           },\n           order: function(selector, dir, inPlace) {\n               var sort = { dir: dir };\n\n               if (selector) {\n                   if (selector.compare) {\n                       sort.compare = selector.compare;\n                   } else {\n                       sort.field = selector;\n                   }\n               }\n\n               if (inPlace) {\n                   return new Query(this.data.sort(Comparer.create(sort)));\n               }\n\n               return new Query(this.data.slice(0).sort(Comparer.create(sort)));\n           },\n           orderBy: function(selector, inPlace) {\n               return this.order(selector, \"asc\", inPlace);\n           },\n           orderByDescending: function(selector, inPlace) {\n               return this.order(selector, \"desc\", inPlace);\n           },\n           sort: function(field, dir, comparer, inPlace) {\n               var idx,\n               length,\n               descriptors = normalizeSort(field, dir),\n               comparers = [];\n\n               comparer = comparer || Comparer;\n\n               if (descriptors.length) {\n                   for (idx = 0, length = descriptors.length; idx < length; idx++) {\n                       comparers.push(comparer.create(descriptors[idx]));\n                   }\n\n                   return this.orderBy({ compare: comparer.combine(comparers) }, inPlace);\n               }\n\n               return this;\n           },\n\n           filter: function(expressions) {\n               var compiled,\n               data = this.data,\n               result = [];\n\n               expressions = normalizeFilter(expressions);\n\n               if (!expressions || expressions.filters.length === 0) {\n                   return this;\n               }\n\n               compiled = Query.filterExpr(expressions, { noEval: true });\n\n               result = data.filter(compiled);\n               return new Query(result);\n           },\n\n           group: function(descriptors, allData, options) {\n               descriptors = normalizeGroup(descriptors || []);\n               allData = allData || this.data;\n\n               var that = this,\n               result = new Query(that.data),\n               descriptor;\n\n               if (descriptors.length > 0) {\n                   descriptor = descriptors[0];\n\n                   if (options && options.groupPaging) {\n                       result = new Query(allData).groupAllData(descriptor, allData).select(function(group) {\n                           var data = new Query(allData).filter([{\n                               field: group.field,\n                               operator: \"eq\",\n                               value: group.value,\n                               ignoreCase: false\n                           }]);\n                           var items = descriptors.length > 1 ? new Query(group.items).group(descriptors.slice(1), data.toArray(), options).toArray() : group.items;\n                           return {\n                               field: group.field,\n                               value: group.value,\n                               hasSubgroups: descriptors.length > 1,\n                               items: items,\n                               aggregates: data.aggregate(descriptor.aggregates),\n                               uid: kendo.guid(),\n                               itemCount: items.length,\n                               subgroupCount: items.length\n                           };\n                       });\n\n                   } else {\n                       result = result.groupBy(descriptor).select(function(group) {\n                           var data = new Query(allData).filter([ { field: group.field, operator: \"eq\", value: group.value, ignoreCase: false } ]);\n                           return {\n                               field: group.field,\n                               value: group.value,\n                               items: descriptors.length > 1 ? new Query(group.items).group(descriptors.slice(1), data.toArray()).toArray() : group.items,\n                               hasSubgroups: descriptors.length > 1,\n                               aggregates: data.aggregate(descriptor.aggregates)\n                           };\n                       });\n                   }\n               }\n               return result;\n           },\n\n           groupBy: function(descriptor) {\n               var that = this;\n\n               if (isEmptyObject(descriptor) || !this.data.length) {\n                   return new Query([]);\n               }\n\n               var field = descriptor.field,\n                   sorted = descriptor.skipItemSorting ? this.data : this._sortForGrouping(field, descriptor.dir || \"asc\"),\n                   accessor = kendo.accessor(field),\n                   item,\n                   groupValue = accessor.get(sorted[0], field),\n                   group = {\n                       field: field,\n                       value: groupValue,\n                       items: []\n                   },\n                   currentValue,\n                   idx,\n                   len,\n                   result = [group];\n\n               for (idx = 0, len = sorted.length; idx < len; idx++) {\n                   item = sorted[idx];\n                   currentValue = accessor.get(item, field);\n                   if (!groupValueComparer(groupValue, currentValue)) {\n                       groupValue = currentValue;\n                       group = {\n                           field: field,\n                           value: groupValue,\n                           items: []\n                       };\n                       result.push(group);\n                   }\n                   group.items.push(item);\n               }\n\n               result = that._sortGroups(result, descriptor);\n\n               return new Query(result);\n           },\n\n           groupAllData: function(descriptor, allData) {\n               if (isEmptyObject(descriptor) || this.data && !this.data.length) {\n                   return new Query([]);\n               }\n\n               var field = descriptor.field,\n                   sorted = descriptor.skipItemSorting ? allData : new Query(allData).sort(field, descriptor.dir || \"asc\", StableComparer).toArray(),\n                   accessor = kendo.accessor(field),\n                   item,\n                   groupValue = accessor.get(sorted[0], field),\n                   group = {\n                       field: field,\n                       value: groupValue,\n                       items: []\n                   },\n                   currentValue,\n                   idx,\n                   len,\n                   result = [group];\n\n               for (idx = 0, len = sorted.length; idx < len; idx++) {\n                   item = sorted[idx];\n                   currentValue = accessor.get(item, field);\n                   if (!groupValueComparer(groupValue, currentValue)) {\n                       groupValue = currentValue;\n                       group = {\n                           field: field,\n                           value: groupValue,\n                           items: []\n                       };\n                       result.push(group);\n                   }\n                   group.items.push(item);\n               }\n\n               result = this._sortGroups(result, descriptor);\n\n               return new Query(result);\n           },\n\n           _sortForGrouping: function(field, dir) {\n               var idx, length,\n                   data = this.data;\n\n               if (!stableSort) {\n                   for (idx = 0, length = data.length; idx < length; idx++) {\n                       data[idx].__position = idx;\n                   }\n\n                   data = new Query(data).sort(field, dir, StableComparer).toArray();\n\n                   for (idx = 0, length = data.length; idx < length; idx++) {\n                       delete data[idx].__position;\n                   }\n                   return data;\n               }\n\n               return this.sort(field, dir).toArray();\n           },\n\n           _sortGroups: function(groups, descriptor) {\n               var result = groups;\n\n               if (descriptor && isFunction(descriptor.compare)) {\n                   result = new Query(result).order({ compare: descriptor.compare }, descriptor.dir || ASCENDING).toArray();\n               }\n\n               return result;\n           },\n\n           aggregate: function(aggregates) {\n               var idx,\n                   len,\n                   result = {},\n                   state = {};\n\n               if (aggregates && aggregates.length) {\n                   for (idx = 0, len = this.data.length; idx < len; idx++) {\n                       calculateAggregate(result, aggregates, this.data[idx], idx, len, state);\n                   }\n               }\n               return result;\n           }\n       };\n\n       function groupValueComparer(a, b) {\n           if (a && a.getTime && b && b.getTime) {\n               return a.getTime() === b.getTime();\n           }\n           return a === b;\n       }\n\n       function calculateAggregate(accumulator, aggregates, item, index, length, state) {\n           aggregates = aggregates || [];\n           var idx,\n               aggr,\n               functionName,\n               len = aggregates.length;\n\n           for (idx = 0; idx < len; idx++) {\n               aggr = aggregates[idx];\n               functionName = aggr.aggregate;\n               var field = aggr.field;\n               accumulator[field] = accumulator[field] || {};\n               state[field] = state[field] || {};\n               state[field][functionName] = state[field][functionName] || {};\n               accumulator[field][functionName] = functions[functionName.toLowerCase()](accumulator[field][functionName], item, kendo.accessor(field), index, length, state[field][functionName]);\n           }\n       }\n\n       var functions = {\n           sum: function(accumulator, item, accessor) {\n               var value = accessor.get(item);\n\n               if (!isNumber(accumulator)) {\n                   accumulator = value;\n               } else if (isNumber(value)) {\n                   accumulator += value;\n               }\n\n               return accumulator;\n           },\n           count: function(accumulator) {\n               return (accumulator || 0) + 1;\n           },\n           average: function(accumulator, item, accessor, index, length, state) {\n               var value = accessor.get(item);\n\n               if (state.count === undefined$1) {\n                   state.count = 0;\n               }\n\n               if (!isNumber(accumulator)) {\n                   accumulator = value;\n               } else if (isNumber(value)) {\n                   accumulator += value;\n               }\n\n               if (isNumber(value)) {\n                   state.count++;\n               }\n\n               if (index == length - 1 && isNumber(accumulator)) {\n                   accumulator = accumulator / state.count;\n               }\n               return accumulator;\n           },\n           max: function(accumulator, item, accessor) {\n               var value = accessor.get(item);\n\n               if (!isNumber(accumulator) && !isDate(accumulator)) {\n                   accumulator = value;\n               }\n\n               if (accumulator < value && (isNumber(value) || isDate(value))) {\n                   accumulator = value;\n               }\n               return accumulator;\n           },\n           min: function(accumulator, item, accessor) {\n               var value = accessor.get(item);\n\n               if (!isNumber(accumulator) && !isDate(accumulator)) {\n                   accumulator = value;\n               }\n\n               if (accumulator > value && (isNumber(value) || isDate(value))) {\n                   accumulator = value;\n               }\n               return accumulator;\n           }\n       };\n\n       function isNumber(val) {\n           return typeof val === \"number\" && !isNaN(val);\n       }\n\n       function isDate(val) {\n           return val && val.getTime;\n       }\n\n       function toJSON(array) {\n           var idx, length = array.length, result = new Array(length);\n\n           for (idx = 0; idx < length; idx++) {\n               result[idx] = array[idx].toJSON();\n           }\n\n           return result;\n       }\n\n       Query.normalizeGroup = normalizeGroup;\n       Query.normalizeSort = normalizeSort;\n\n       Query.process = function(data, options, inPlace) {\n           options = options || {};\n\n           var group = options.group;\n           var customGroupSort = anyGroupDescriptorHasCompare(normalizeGroup(group || []));\n           var query = new Query(data),\n               groupDescriptorsWithoutCompare = normalizeGroupWithoutCompare(group || []),\n               normalizedSort = normalizeSort(options.sort || []),\n               sort = customGroupSort ? normalizedSort : groupDescriptorsWithoutCompare.concat(normalizedSort),\n               groupDescriptorsWithoutSort,\n               total,\n               filterCallback = options.filterCallback,\n               filter = options.filter,\n               skip = options.skip,\n               take = options.take;\n\n           if (sort && inPlace) {\n               query = query.sort(sort, undefined$1, undefined$1, inPlace);\n           }\n\n           if (filter) {\n               query = query.filter(filter);\n\n               if (filterCallback) {\n                   query = filterCallback(query);\n               }\n\n               total = query.toArray().length;\n           }\n\n           if (sort) {\n               if (!inPlace) {\n                   query = query.sort(sort);\n               }\n\n               if (group) {\n                   data = query.toArray();\n               }\n           }\n\n           if (customGroupSort) {\n               query = query.group(group, data, options);\n\n               if (skip !== undefined$1 && take !== undefined$1 && !options.groupPaging) {\n                   query = new Query(flatGroups(query.toArray())).range(skip, take);\n\n                   groupDescriptorsWithoutSort = map(groupDescriptorsWithoutCompare, function(groupDescriptor) {\n                       return extend({}, groupDescriptor, {\n                           skipItemSorting: true\n                       });\n                   });\n\n                   query = query.group(groupDescriptorsWithoutSort, data, options);\n               }\n           } else {\n               if (skip !== undefined$1 && take !== undefined$1) {\n                   total = query.data.length;\n\n                   if (skip + take > total && options.virtual) {\n                       skip -= skip + take - total;\n                       skip = skip < 0 ? 0 : skip;\n                   }\n                   query = query.range(skip, take);\n               }\n\n               if (group && (!isEmptyObject(group) || group.length !== 0)) {\n                   query = query.group(group, data, options);\n               }\n           }\n\n           return {\n               total: total,\n               data: query.toArray()\n           };\n       };\n\n       var LocalTransport = Class.extend({\n           init: function(options) {\n               this.data = options.data;\n           },\n\n           read: function(options) {\n               options.success(this.data);\n           },\n           update: function(options) {\n               options.success(options.data);\n           },\n           create: function(options) {\n               options.success(options.data);\n           },\n           destroy: function(options) {\n               options.success(options.data);\n           }\n       });\n\n       var RemoteTransport = Class.extend( {\n           init: function(options) {\n               var that = this, parameterMap;\n\n               options = that.options = extend({}, that.options, options);\n\n               each(crud, function(index, type) {\n                   if (typeof options[type] === STRING) {\n                       options[type] = {\n                           url: options[type]\n                       };\n                   }\n               });\n\n               that.cache = options.cache ? Cache.create(options.cache) : {\n                   find: noop,\n                   add: noop\n               };\n\n               parameterMap = options.parameterMap;\n\n               if (options.submit) {\n                   that.submit = options.submit;\n               }\n\n               if (isFunction(options.push)) {\n                   that.push = options.push;\n               }\n\n               if (!that.push) {\n                   that.push = identity;\n               }\n\n               that.parameterMap = isFunction(parameterMap) ? parameterMap : function(options) {\n                   var result = {};\n\n                   each(options, function(option, value) {\n                       if (option in parameterMap) {\n                           option = parameterMap[option];\n                           if (isPlainObject(option)) {\n                               value = option.value(value);\n                               option = option.key;\n                           }\n                       }\n\n                       result[option] = value;\n                   });\n\n                   return result;\n               };\n           },\n\n           options: {\n               parameterMap: identity\n           },\n\n           create: function(options) {\n               return ajax(this.setup(options, CREATE));\n           },\n\n           read: function(options) {\n               var that = this,\n                   success,\n                   error,\n                   result,\n                   cache = that.cache;\n\n               options = that.setup(options, READ);\n\n               success = options.success || noop;\n               error = options.error || noop;\n\n               result = cache.find(options.data);\n\n               if (result !== undefined$1) {\n                   success(result);\n               } else {\n                   options.success = function(result) {\n                       cache.add(options.data, result);\n\n                       success(result);\n                   };\n\n                   $.ajax(options);\n               }\n           },\n\n           update: function(options) {\n               return ajax(this.setup(options, UPDATE));\n           },\n\n           destroy: function(options) {\n               return ajax(this.setup(options, DESTROY));\n           },\n\n           setup: function(options, type) {\n               options = options || {};\n\n               var that = this,\n                   parameters,\n                   operation = that.options[type],\n                   data = isFunction(operation.data) ? operation.data(options.data) : operation.data;\n\n               options = extend(true, {}, operation, options);\n               parameters = extend(true, {}, data, options.data);\n\n               options.data = that.parameterMap(parameters, type);\n\n               if (isFunction(options.url)) {\n                   options.url = options.url(parameters);\n               }\n\n               return options;\n           }\n       });\n\n       var Cache = Class.extend({\n           init: function() {\n               this._store = {};\n           },\n           add: function(key, data) {\n               if (key !== undefined$1) {\n                   this._store[stringify(key)] = data;\n               }\n           },\n           find: function(key) {\n               return this._store[stringify(key)];\n           },\n           clear: function() {\n               this._store = {};\n           },\n           remove: function(key) {\n               delete this._store[stringify(key)];\n           }\n       });\n\n       Cache.create = function(options) {\n           var store = {\n               \"inmemory\": function() { return new Cache(); }\n           };\n\n           if (isPlainObject(options) && isFunction(options.find)) {\n               return options;\n           }\n\n           if (options === true) {\n               return new Cache();\n           }\n\n           return store[options]();\n       };\n\n       function serializeRecords(data, getters, modelInstance, originalFieldNames, fieldNames) {\n           var record,\n               getter,\n               originalName,\n               idx,\n               setters = {},\n               length;\n\n           for (idx = 0, length = data.length; idx < length; idx++) {\n               record = data[idx];\n               for (getter in getters) {\n                   originalName = fieldNames[getter];\n\n                   if (originalName && originalName !== getter) {\n                       if (!setters[originalName]) {\n                           setters[originalName] = kendo.setter(originalName);\n                       }\n                       setters[originalName](record, getters[getter](record));\n                       delete record[getter];\n                   }\n               }\n           }\n       }\n\n       function convertRecords(data, getters, modelInstance, originalFieldNames, fieldNames) {\n           var record,\n               getter,\n               originalName,\n               idx,\n               length;\n\n           for (idx = 0, length = data.length; idx < length; idx++) {\n               record = data[idx];\n               for (getter in getters) {\n                   record[getter] = modelInstance._parse(getter, getters[getter](record));\n\n                   originalName = fieldNames[getter];\n                   if (originalName && originalName !== getter) {\n                       delete record[originalName];\n                   }\n               }\n           }\n       }\n\n       function convertGroup(data, getters, modelInstance, originalFieldNames, fieldNames) {\n           var record,\n               idx,\n               fieldName,\n               length;\n\n           for (idx = 0, length = data.length; idx < length; idx++) {\n               record = data[idx];\n\n               fieldName = originalFieldNames[record.field];\n               if (fieldName && fieldName != record.field) {\n                   record.field = fieldName;\n               }\n\n               record.value = modelInstance._parse(record.field, record.value);\n\n               if (record.items) {\n                   if (record.hasSubgroups) {\n                       convertGroup(record.items, getters, modelInstance, originalFieldNames, fieldNames);\n                   } else {\n                       convertRecords(record.items, getters, modelInstance, originalFieldNames, fieldNames);\n                   }\n               }\n           }\n       }\n\n       function wrapDataAccess(originalFunction, model, converter, getters, originalFieldNames, fieldNames) {\n           return function(data) {\n               data = originalFunction(data);\n\n               return wrapDataAccessBase(model, converter, getters, originalFieldNames, fieldNames)(data);\n           };\n       }\n\n       function wrapDataAccessBase(model, converter, getters, originalFieldNames, fieldNames) {\n           return function(data) {\n\n               if (data && !isEmptyObject(getters)) {\n                   if (toString.call(data) !== \"[object Array]\" && !(data instanceof ObservableArray)) {\n                       data = [data];\n                   }\n\n                   converter(data, getters, new model(), originalFieldNames, fieldNames);\n               }\n\n               return data || [];\n           };\n       }\n\n       var DataReader = Class.extend({\n           init: function(schema) {\n               var that = this, member, get, model, base;\n\n               schema = schema || {};\n\n               for (member in schema) {\n                   get = schema[member];\n\n                   that[member] = typeof get === STRING ? getter(get) : get;\n               }\n\n               base = schema.modelBase || Model;\n\n               if (isPlainObject(that.model)) {\n                   that.model = model = base.define(that.model);\n               }\n\n               var dataFunction = that.data.bind(that);\n\n               that._dataAccessFunction = dataFunction;\n\n               if (that.model) {\n                   var groupsFunction = that.groups.bind(that),\n                       serializeFunction = that.serialize.bind(that),\n                       originalFieldNames = {},\n                       getters = {},\n                       serializeGetters = {},\n                       fieldNames = {},\n                       shouldSerialize = false,\n                       fieldName,\n                       name;\n\n                   model = that.model;\n\n                   if (model.fields) {\n                       each(model.fields, function(field, value) {\n                           var fromName;\n\n                           fieldName = field;\n\n                           if (isPlainObject(value) && value.field) {\n                               fieldName = value.field;\n                           } else if (typeof value === STRING) {\n                               fieldName = value;\n                           }\n\n                           if (isPlainObject(value) && value.from) {\n                               fromName = value.from;\n                           }\n\n                           shouldSerialize = shouldSerialize || (fromName && fromName !== field) || fieldName !== field;\n                           name = fromName || fieldName;\n                           getters[field] = name.indexOf(\".\") !== -1 ? getter(name, true) : getter(name);\n                           serializeGetters[field] = getter(field);\n                           originalFieldNames[fromName || fieldName] = field;\n                           fieldNames[field] = fromName || fieldName;\n                       });\n\n                       if (!schema.serialize && shouldSerialize) {\n                           that.serialize = wrapDataAccess(serializeFunction, model, serializeRecords, serializeGetters, originalFieldNames, fieldNames);\n                       }\n                   }\n\n                   that._dataAccessFunction = dataFunction;\n                   that._wrapDataAccessBase = wrapDataAccessBase(model, convertRecords, getters, originalFieldNames, fieldNames);\n                   that.data = wrapDataAccess(dataFunction, model, convertRecords, getters, originalFieldNames, fieldNames);\n                   that.groups = wrapDataAccess(groupsFunction, model, convertGroup, getters, originalFieldNames, fieldNames);\n               }\n           },\n           errors: function(data) {\n               return data ? data.errors : null;\n           },\n           parse: identity,\n           data: identity,\n           total: function(data) {\n               return data.length;\n           },\n           groups: identity,\n           aggregates: function() {\n               return {};\n           },\n           serialize: function(data) {\n               return data;\n           }\n       });\n\n       function fillLastGroup(originalGroup, newGroup) {\n           var currOriginal;\n           var currentNew;\n\n           if (newGroup.items && newGroup.items.length) {\n               for (var i = 0; i < newGroup.items.length; i++) {\n                   currOriginal = originalGroup.items[originalGroup.items.length - 1];\n                   currentNew = newGroup.items[i];\n                   if (currOriginal && currentNew) {\n                       if (currOriginal.hasSubgroups && currOriginal.value == currentNew.value) {\n                           fillLastGroup(currOriginal, currentNew);\n                       } else if (currOriginal.field && currOriginal.value == currentNew.value) {\n                           currOriginal.items.omitChangeEvent = true;\n                           currOriginal.items.push.apply(currOriginal.items, currentNew.items);\n                           currOriginal.items.omitChangeEvent = false;\n                       } else {\n                           originalGroup.items.omitChangeEvent = true;\n                           originalGroup.items.push.apply(originalGroup.items, [currentNew]);\n                           originalGroup.items.omitChangeEvent = false;\n                       }\n                   } else if (currentNew) {\n                       originalGroup.items.omitChangeEvent = true;\n                       originalGroup.items.push.apply(originalGroup.items, [currentNew]);\n                       originalGroup.items.omitChangeEvent = false;\n                   }\n               }\n           }\n       }\n       function mergeGroups(target, dest, skip, take) {\n           var group,\n               idx = 0,\n               items;\n\n           while (dest.length && take) {\n               group = dest[idx];\n               items = group.items;\n\n               var length = items.length;\n\n               if (target && target.field === group.field && target.value === group.value) {\n                   if (target.hasSubgroups && target.items.length) {\n                       mergeGroups(target.items[target.items.length - 1], group.items, skip, take);\n                   } else {\n                       items = items.slice(skip, skip + take);\n                       target.items = target.items.concat(items);\n                   }\n                   dest.splice(idx--, 1);\n               } else if (group.hasSubgroups && items.length) {\n                   mergeGroups(group, items, skip, take);\n                   if (!group.items.length) {\n                       dest.splice(idx--, 1);\n                   }\n               } else {\n                   items = items.slice(skip, skip + take);\n                   group.items = items;\n\n                   if (!group.items.length) {\n                       dest.splice(idx--, 1);\n                   }\n               }\n\n               if (items.length === 0) {\n                   skip -= length;\n               } else {\n                   skip = 0;\n                   take -= items.length;\n               }\n\n               if (++idx >= dest.length) {\n                   break;\n               }\n           }\n\n           if (idx < dest.length) {\n               dest.splice(idx, dest.length - idx);\n           }\n       }\n\n       function flatGroups(groups, indexFunction) {\n           var result = [];\n           var groupsLength = (groups || []).length;\n           var group;\n           var items;\n           var indexFn = isFunction(indexFunction) ? indexFunction : function(array, index) {\n               return array[index];\n           };\n\n           for (var groupIndex = 0; groupIndex < groupsLength; groupIndex++) {\n               group = indexFn(groups, groupIndex);\n\n               if (group.hasSubgroups) {\n                   result = result.concat(flatGroups(group.items));\n               } else {\n                   items = group.items;\n\n                   for (var itemIndex = 0; itemIndex < items.length; itemIndex++) {\n                       result.push(indexFn(items, itemIndex));\n                   }\n               }\n           }\n           return result;\n       }\n\n       function flattenGroups(data) {\n           var idx,\n               result = [],\n               length,\n               items,\n               itemIndex;\n\n           for (idx = 0, length = data.length; idx < length; idx++) {\n               var group = data.at(idx);\n               if (group.items) {\n                   if (group.hasSubgroups) {\n                       result = result.concat(flattenGroups(group.items));\n                   } else {\n                       items = group.items;\n                       for (itemIndex = 0; itemIndex < items.length; itemIndex++) {\n                           result.push(items.at(itemIndex));\n                       }\n                   }\n               }\n           }\n           return result;\n       }\n\n       function wrapGroupItems(data, model) {\n           var idx, length, group;\n           if (model) {\n               for (idx = 0, length = data.length; idx < length; idx++) {\n                   group = data.at(idx);\n                   if (group.items) {\n                       if (group.hasSubgroups) {\n                           wrapGroupItems(group.items, model);\n                       } else {\n                           group.items = new LazyObservableArray(group.items, model, group.items._events);\n                       }\n                   }\n               }\n           }\n       }\n\n       function eachGroupItems(data, func) {\n           for (var idx = 0; idx < data.length; idx++) {\n               if (data[idx].hasSubgroups) {\n                   if (eachGroupItems(data[idx].items, func)) {\n                       return true;\n                   }\n               } else if (func(data[idx].items, data[idx])) {\n                   return true;\n               }\n           }\n       }\n\n       function replaceInRanges(ranges, data, item, observable) {\n           for (var idx = 0; idx < ranges.length; idx++) {\n               if (ranges[idx].data === data) {\n                   break;\n               }\n               if (replaceInRange(ranges[idx].data, item, observable)) {\n                   break;\n               }\n           }\n       }\n\n       function replaceInRange(items, item, observable) {\n           for (var idx = 0, length = items.length; idx < length; idx++) {\n               if (items[idx] && items[idx].hasSubgroups) {\n                   return replaceInRange(items[idx].items, item, observable);\n               } else if (items[idx] === item || items[idx] === observable) {\n                  items[idx] = observable;\n                  return true;\n               }\n           }\n       }\n\n       function replaceWithObservable(view, data, ranges, type, serverGrouping) {\n           for (var viewIndex = 0, length = view.length; viewIndex < length; viewIndex++) {\n               var item = view[viewIndex];\n\n               if (!item || item instanceof type) {\n                   continue;\n               }\n\n               if (item.hasSubgroups !== undefined$1 && !serverGrouping) {\n                   replaceWithObservable(item.items, data, ranges, type, serverGrouping);\n               } else {\n                   for (var idx = 0; idx < data.length; idx++) {\n                       if (data[idx] === item) {\n                           view[viewIndex] = data.at(idx);\n                           replaceInRanges(ranges, data, item, view[viewIndex]);\n                           break;\n                       }\n                   }\n               }\n           }\n       }\n\n       function removeModel(data, model) {\n           if (!data) {\n               return;\n           }\n           var length = data.length;\n           var dataItem;\n           var idx;\n\n           for (idx = 0; idx < length; idx++) {\n               dataItem = data[idx];\n\n               if (dataItem.uid && dataItem.uid == model.uid) {\n                   data.splice(idx, 1);\n                   return dataItem;\n               }\n           }\n       }\n\n       function indexOfPristineModel(data, model) {\n           if (model) {\n               return indexOf(data, function(item) {\n                   return (item.uid && item.uid == model.uid) || (item[model.idField] === model.id && model.id !== model._defaultId);\n               });\n           }\n           return -1;\n       }\n\n       function indexOfModel(data, model) {\n           if (model) {\n               return indexOf(data, function(item) {\n                   return item.uid == model.uid;\n               });\n           }\n           return -1;\n       }\n\n       function indexOf(data, comparer) {\n           var idx, length;\n           if (!data) {\n               return;\n           }\n\n           for (idx = 0, length = data.length; idx < length; idx++) {\n               if (comparer(data[idx])) {\n                   return idx;\n               }\n           }\n\n           return -1;\n       }\n\n       function fieldNameFromModel(fields, name) {\n           if (fields && !isEmptyObject(fields)) {\n               var descriptor = fields[name];\n               var fieldName;\n               if (isPlainObject(descriptor)) {\n                   fieldName = descriptor.from || descriptor.field || name;\n               } else {\n                   fieldName = fields[name] || name;\n               }\n\n               if (isFunction(fieldName)) {\n                   return name;\n               }\n\n               return fieldName;\n           }\n           return name;\n       }\n\n       function convertFilterDescriptorsField(descriptor, model) {\n           var idx,\n               length,\n               target = {};\n\n           for (var field in descriptor) {\n               if (field !== \"filters\") {\n                   target[field] = descriptor[field];\n               }\n           }\n\n           if (descriptor.filters) {\n               target.filters = [];\n               for (idx = 0, length = descriptor.filters.length; idx < length; idx++) {\n                   target.filters[idx] = convertFilterDescriptorsField(descriptor.filters[idx], model);\n               }\n           } else {\n               target.field = fieldNameFromModel(model.fields, target.field);\n           }\n           return target;\n       }\n\n       function convertDescriptorsField(descriptors, model) {\n           var idx,\n               length,\n               result = [],\n               target,\n               descriptor;\n\n           for (idx = 0, length = descriptors.length; idx < length; idx ++) {\n               target = {};\n\n               descriptor = descriptors[idx];\n\n               for (var field in descriptor) {\n                   target[field] = descriptor[field];\n               }\n\n               target.field = fieldNameFromModel(model.fields, target.field);\n\n               if (target.aggregates && isArray(target.aggregates)) {\n                   target.aggregates = convertDescriptorsField(target.aggregates, model);\n               }\n               result.push(target);\n           }\n           return result;\n       }\n\n       var DataSource = Observable.extend({\n           init: function(options) {\n               var that = this, model, data;\n\n               if (options) {\n                   data = options.data;\n               }\n\n               options = that.options = extend({}, that.options, options);\n\n               that._map = {};\n               that._prefetch = {};\n               that._data = [];\n               that._pristineData = [];\n               that._ranges = [];\n               that._view = [];\n               that._pristineTotal = 0;\n               that._destroyed = [];\n               that._pageSize = options.pageSize;\n               that._page = options.page || (options.pageSize ? 1 : undefined$1);\n               that._sort = normalizeSort(options.sort);\n               that._sortFields = sortFields(options.sort);\n               that._filter = normalizeFilter(options.filter);\n               that._group = normalizeGroup(options.group);\n               that._aggregate = options.aggregate;\n               that._total = options.total;\n               that._groupPaging = options.groupPaging;\n\n               if (that._groupPaging) {\n                   that._groupsState = {};\n               }\n               that._shouldDetachObservableParents = true;\n\n               Observable.fn.init.call(that);\n\n               that.transport = Transport.create(options, data, that);\n\n               if (isFunction(that.transport.push)) {\n                   that.transport.push({\n                       pushCreate: that._pushCreate.bind(that),\n                       pushUpdate: that._pushUpdate.bind(that),\n                       pushDestroy: that._pushDestroy.bind(that)\n                   });\n               }\n\n               if (options.offlineStorage != null) {\n                   if (typeof options.offlineStorage == \"string\") {\n                       var key = options.offlineStorage;\n\n                       that._storage = {\n                           getItem: function() {\n                               return JSON.parse(localStorage.getItem(key));\n                           },\n                           setItem: function(item) {\n                               localStorage.setItem(key, stringify(that.reader.serialize(item)));\n                           }\n                       };\n                   } else {\n                       that._storage = options.offlineStorage;\n                   }\n               }\n\n               that.reader = new kendo.data.readers[options.schema.type || \"json\" ](options.schema);\n\n               model = that.reader.model || {};\n\n               that._detachObservableParents();\n\n               that._data = that._observe(that._data);\n               that._online = true;\n\n               that.bind([\"push\", ERROR, CHANGE, REQUESTSTART, SYNC, REQUESTEND, PROGRESS], options);\n           },\n\n           options: {\n               data: null,\n               schema: {\n                  modelBase: Model\n               },\n               offlineStorage: null,\n               serverSorting: false,\n               serverPaging: false,\n               serverFiltering: false,\n               serverGrouping: false,\n               serverAggregates: false,\n               batch: false,\n               inPlaceSort: false\n           },\n\n           clone: function() {\n               return this;\n           },\n\n           online: function(value) {\n               if (value !== undefined$1) {\n                   if (this._online != value) {\n                       this._online = value;\n\n                       if (value) {\n                           return this.sync();\n                       }\n                   }\n\n                   return $.Deferred().resolve().promise();\n               } else {\n                   return this._online;\n               }\n           },\n\n           offlineData: function(state) {\n               if (this.options.offlineStorage == null) {\n                   return null;\n               }\n\n               if (state !== undefined$1) {\n                   return this._storage.setItem(state);\n               }\n\n               return this._storage.getItem() || [];\n           },\n\n           _isGrouped: function() {\n               var group = this.group() || [];\n\n               return group.length;\n           },\n\n           _isServerGrouped: function() {\n               var group = this.group() || [];\n\n               return this.options.serverGrouping && group.length;\n           },\n\n           _isServerGroupPaged: function() {\n               return this._isServerGrouped() && this._groupPaging;\n           },\n\n           _isGroupPaged: function() {\n               var group = this._group || [];\n\n               return this._groupPaging && group.length;\n           },\n\n           _pushCreate: function(result) {\n               this._push(result, \"pushCreate\");\n           },\n\n           _pushUpdate: function(result) {\n               this._push(result, \"pushUpdate\");\n           },\n\n           _pushDestroy: function(result) {\n               this._push(result, \"pushDestroy\");\n           },\n\n           _push: function(result, operation) {\n               var data = this._readData(result);\n\n               if (!data) {\n                   data = result;\n               }\n\n               this[operation](data);\n           },\n\n           _flatData: function(data, skip) {\n               if (data) {\n                   if (this._isServerGrouped()) {\n                       return flattenGroups(data);\n                   }\n\n                   if (!skip) {\n                       for (var idx = 0; idx < data.length; idx++) {\n                           data.at(idx);\n                       }\n                   }\n               }\n\n               return data;\n           },\n\n           parent: noop,\n\n           get: function(id) {\n               var idx, length, data = this._flatData(this._data, this.options.useRanges);\n\n               for (idx = 0, length = data.length; idx < length; idx++) {\n                   if (data[idx].id == id) {\n                       return data[idx];\n                   }\n               }\n           },\n\n           getByUid: function(id) {\n               return this._getByUid(id, this._data);\n           },\n\n           _getByUid: function(id, dataItems) {\n               var idx, length, data = this._flatData(dataItems, this.options.useRanges);\n\n               if (!data) {\n                   return;\n               }\n\n               for (idx = 0, length = data.length; idx < length; idx++) {\n                   if (data[idx].uid == id) {\n                       return data[idx];\n                   }\n               }\n           },\n\n           indexOf: function(model) {\n               return indexOfModel(this._data, model);\n           },\n\n           at: function(index) {\n               return this._data.at(index);\n           },\n\n           data: function(value) {\n               var that = this;\n               if (value !== undefined$1) {\n                   that._detachObservableParents();\n                   that._data = this._observe(value);\n\n                   that._pristineData = value.slice(0);\n\n                   that._storeData();\n\n                   that._ranges = [];\n                   that.trigger(\"reset\");\n                   that._addRange(that._data);\n\n                   that._total = that._data.length;\n                   that._pristineTotal = that._total;\n\n                   that._process(that._data);\n               } else {\n                   if (that._data) {\n                       for (var idx = 0; idx < that._data.length; idx++) {\n                           that._data.at(idx);\n                       }\n                   }\n\n                   return that._data;\n               }\n           },\n\n           view: function(value) {\n               if (value === undefined$1) {\n                   return this._view;\n               } else {\n                   this._view = this._observeView(value);\n               }\n           },\n\n           _observeView: function(data) {\n               var that = this;\n               replaceWithObservable(data, that._data, that._ranges, that.reader.model || ObservableObject, that._isServerGrouped());\n\n               var view = new LazyObservableArray(data, that.reader.model);\n               view.parent = function() { return that.parent(); };\n               return view;\n           },\n\n           flatView: function() {\n               var groups = this.group() || [];\n\n               if (groups.length) {\n                   return flattenGroups(this._view);\n               } else {\n                   return this._view;\n               }\n           },\n\n           add: function(model) {\n               return this.insert(this._data.length, model);\n           },\n\n           _createNewModel: function(model) {\n               if (this.reader.model) {\n                   return new this.reader.model(model);\n               }\n\n               if (model instanceof ObservableObject) {\n                   return model;\n               }\n\n               return new ObservableObject(model);\n           },\n\n           insert: function(index, model) {\n               if (!model) {\n                   model = index;\n                   index = 0;\n               }\n\n               if (!(model instanceof Model)) {\n                   model = this._createNewModel(model);\n               }\n\n               if (this._isServerGrouped()) {\n                   this._data.splice(index, 0, this._wrapInEmptyGroup(model));\n               } else {\n                   this._data.splice(index, 0, model);\n               }\n\n               this._insertModelInRange(index, model);\n\n               return model;\n           },\n\n           pushInsert: function(index, items) {\n               var that = this;\n               var rangeSpan = that._getCurrentRangeSpan();\n\n               if (!items) {\n                   items = index;\n                   index = 0;\n               }\n\n               if (!isArray(items)) {\n                   items = [items];\n               }\n\n               var pushed = [];\n               var autoSync = this.options.autoSync;\n               this.options.autoSync = false;\n\n               try {\n                   for (var idx = 0; idx < items.length; idx ++) {\n                       var item = items[idx];\n\n                       var result = this.insert(index, item);\n\n                       pushed.push(result);\n\n                       var pristine = result.toJSON();\n\n                       if (this._isServerGrouped()) {\n                           pristine = this._wrapInEmptyGroup(pristine);\n                       }\n\n                       this._pristineData.push(pristine);\n\n                       if (rangeSpan && rangeSpan.length) {\n                           $(rangeSpan).last()[0].pristineData.push(pristine);\n                       }\n\n                       index++;\n                   }\n               } finally {\n                   this.options.autoSync = autoSync;\n               }\n\n               if (pushed.length) {\n                   this.trigger(\"push\", {\n                       type: \"create\",\n                       items: pushed\n                   });\n               }\n           },\n\n           pushCreate: function(items) {\n               this.pushInsert(this._data.length, items);\n           },\n\n           pushUpdate: function(items) {\n               if (!isArray(items)) {\n                   items = [items];\n               }\n\n               var pushed = [];\n\n               for (var idx = 0; idx < items.length; idx ++) {\n                   var item = items[idx];\n                   var model = this._createNewModel(item);\n\n                   var target = this.get(model.id);\n\n                   if (target) {\n                       pushed.push(target);\n\n                       target.accept(item);\n\n                       target.trigger(CHANGE);\n\n                       this._updatePristineForModel(target, item);\n                   } else {\n                       this.pushCreate(item);\n                   }\n               }\n\n               if (pushed.length) {\n                   this.trigger(\"push\", {\n                       type: \"update\",\n                       items: pushed\n                   });\n               }\n           },\n\n           pushDestroy: function(items) {\n               var pushed = this._removeItems(items);\n\n               if (pushed.length) {\n                   this.trigger(\"push\", {\n                       type: \"destroy\",\n                       items: pushed\n                   });\n               }\n           },\n\n           _removeItems: function(itemsToRemove, removePristine) {\n               if (!isArray(itemsToRemove)) {\n                   itemsToRemove = [itemsToRemove];\n               }\n\n               var shouldRemovePristine = typeof removePristine !== \"undefined\" ? removePristine : true;\n\n               var destroyed = [];\n               var autoSync = this.options.autoSync;\n               this.options.autoSync = false;\n               try {\n                   for (var idx = 0; idx < itemsToRemove.length; idx ++) {\n                       var item = itemsToRemove[idx];\n                       var model = this._createNewModel(item);\n                       var found = false;\n                       var index = idx;\n\n                       this._eachItem(this._data, function(items) {\n                           // Ensure all children of a parent are removed before the change event is triggered.\n                           if (index !== itemsToRemove.length - 1) {\n                               items.omitChangeEvent = true;\n                               items.omitCache = [];\n                           } else {\n                               items.omitChangeEvent = false;\n                           }\n\n                           for (var idx = 0; idx < items.length; idx++) {\n                               var item = items.at(idx);\n                               if (item.id === model.id) {\n                                   /* When the change event is omitted, certain calculations such as 'total' are broken because only the last item reaches the change handler.\n                                      Keep track of all child items that had their change event omitted and when the change is finally triggered, concat them to the result.*/\n                                   if (items.omitChangeEvent) {\n                                       items.omitCache.push(item);\n                                   }\n                                   destroyed.push(item);\n                                   items.splice(idx, 1);\n                                   found = true;\n                                   break;\n                               }\n                           }\n                       });\n\n                       if (found && shouldRemovePristine) {\n                           this._removePristineForModel(model);\n                           this._destroyed.pop();\n                       }\n                   }\n               } finally {\n                   this.options.autoSync = autoSync;\n               }\n\n               return destroyed;\n           },\n\n           pushMove: function(index, items) {\n               var pushed = this._moveItems(index, items);\n\n               if (pushed.length) {\n                   this.trigger(\"push\", {\n                       type: \"update\",\n                       items: pushed\n                   });\n               }\n           },\n\n           _moveItems: function(index, items) {\n               if (!isArray(items)) {\n                   items = [items];\n               }\n\n               var moved = [];\n               var autoSync = this.options.autoSync;\n               this.options.autoSync = false;\n\n               try {\n                   for (var i = 0; i < items.length; i ++) {\n                       var item = items[i];\n                       var model = this._createNewModel(item);\n\n                       this._eachItem(this._data, function(dataItems) {\n                           for (var idx = 0; idx < dataItems.length; idx++) {\n                               var dataItem = dataItems.at(idx);\n                               if (dataItem.id === model.id) {\n                                   moved.push(dataItem);\n                                   dataItems.splice(index >= idx ? --index : index, 0, dataItems.splice(idx, 1)[0]);\n                                   index++;\n                                   break;\n                               }\n                           }\n                       });\n                   }\n               } finally {\n                   this.options.autoSync = autoSync;\n               }\n\n               return moved;\n           },\n\n           remove: function(model) {\n               var result,\n                   that = this,\n                   hasGroups = that._isServerGrouped();\n\n               if (hasGroups && model.uid && (!model.isNew || !model.isNew())) {\n                   that._pushInDestroyed(model);\n               }\n\n               this._eachItem(that._data, function(items) {\n                   result = removeModel(items, model);\n\n                   if (result && hasGroups) {\n                       return true;\n                   }\n               });\n\n               this._removeModelFromRanges(model);\n\n               return model;\n           },\n\n           destroyed: function() {\n               return this._destroyed;\n           },\n\n           created: function() {\n               var idx,\n                   length,\n                   result = [],\n                   data = this._flatData(this._data, this.options.useRanges);\n\n               for (idx = 0, length = data.length; idx < length; idx++) {\n                   if (data[idx].isNew && data[idx].isNew() && !data[idx].notFetched) {\n                       result.push(data[idx]);\n                   }\n               }\n               return result;\n           },\n\n           updated: function() {\n               var idx,\n                   length,\n                   result = [],\n                   data = this._flatData(this._data, this.options.useRanges);\n\n               for (idx = 0, length = data.length; idx < length; idx++) {\n                   if ((data[idx].isNew && !data[idx].isNew()) && data[idx].dirty) {\n                       result.push(data[idx]);\n                   }\n               }\n               return result;\n           },\n\n           sync: function() {\n               var that = this,\n                   created = [],\n                   updated = [],\n                   destroyed = that._destroyed;\n\n               var promise = $.Deferred().resolve().promise();\n\n               if (that.online()) {\n\n                   if (!that.reader.model) {\n                       return promise;\n                   }\n\n                   created = that.created();\n                   updated = that.updated();\n\n                   var promises = [];\n\n                   if (that.options.batch && that.transport.submit) {\n                       promises = that._sendSubmit(created, updated, destroyed);\n                   } else {\n                       promises.push.apply(promises, that._send(\"create\", created));\n                       promises.push.apply(promises, that._send(\"update\", updated));\n                       promises.push.apply(promises, that._send(\"destroy\", destroyed));\n                   }\n\n                   promise = $.when\n                    .apply(null, promises)\n                    .then(function() {\n                       var arguments$1 = arguments;\n\n                       var idx, length;\n\n                       for (idx = 0, length = arguments.length; idx < length; idx++) {\n                           if (arguments$1[idx]) {\n                               that._accept(arguments$1[idx]);\n                           }\n                       }\n\n                       that._storeData(true);\n\n                       that._syncEnd();\n\n                       that._change({ action: \"sync\" });\n\n                       that.trigger(SYNC);\n\n                       if (that._isServerGroupPaged()) {\n                           that.read();\n                       }\n                   });\n               } else {\n                   that._storeData(true);\n\n                   that._syncEnd();\n\n                   that._change({ action: \"sync\" });\n               }\n\n               return promise;\n           },\n\n           _syncEnd: noop,\n\n           cancelChanges: function(model) {\n               var that = this;\n\n               if (model instanceof kendo.data.Model) {\n                   that._cancelModel(model);\n               } else {\n                   that._destroyed = [];\n                   that._detachObservableParents();\n                   that._data = that._observe(that._pristineData);\n                   if (that.options.serverPaging) {\n                       that._total = that._pristineTotal;\n                   }\n\n                   that._ranges = [];\n                   that._addRange(that._data, 0);\n\n                   that._changesCanceled();\n\n                   that._change();\n\n                   that._markOfflineUpdatesAsDirty();\n\n                   if (that._isServerGrouped()) {\n                       that.read();\n                   }\n               }\n           },\n\n           _changesCanceled: noop,\n\n           _markOfflineUpdatesAsDirty: function() {\n               var that = this;\n\n               if (that.options.offlineStorage != null) {\n                   that._eachItem(that._data, function(items) {\n                       for (var idx = 0; idx < items.length; idx++) {\n                           var item = items.at(idx);\n                           if (item.__state__ == \"update\" || item.__state__ == \"create\") {\n                               item.dirty = true;\n                           }\n                       }\n                   });\n               }\n           },\n\n           hasChanges: function() {\n               var idx,\n                   length,\n                   data = this._flatData(this._data, this.options.useRanges);\n\n               if (this._destroyed.length) {\n                   return true;\n               }\n\n               for (idx = 0, length = data.length; idx < length; idx++) {\n                   if ((data[idx].isNew && data[idx].isNew()) || data[idx].dirty) {\n                       return true;\n                   }\n               }\n\n               return false;\n           },\n\n           _accept: function(result) {\n               var that = this,\n                   models = result.models,\n                   response = result.response,\n                   idx = 0,\n                   serverGroup = that._isServerGrouped(),\n                   pristine = that._pristineData,\n                   type = result.type,\n                   length;\n\n               that.trigger(REQUESTEND, { response: response, type: type });\n\n               if (response && !isEmptyObject(response)) {\n                   response = that.reader.parse(response);\n\n                   if (that._handleCustomErrors(response)) {\n                       return;\n                   }\n\n                   response = that.reader.data(response);\n\n                   if (!isArray(response)) {\n                       response = [response];\n                   }\n               } else {\n                   response = $.map(models, function(model) { return model.toJSON(); } );\n               }\n\n               if (type === \"destroy\") {\n                   that._destroyed = [];\n               }\n\n               for (idx = 0, length = models.length; idx < length; idx++) {\n                   if (type !== \"destroy\") {\n                       models[idx].accept(response[idx]);\n\n                       if (type === \"create\") {\n                           pristine.push(serverGroup ? that._wrapInEmptyGroup(models[idx].toJSON()) : response[idx]);\n                       } else if (type === \"update\") {\n                           that._updatePristineForModel(models[idx], response[idx]);\n                       }\n                   } else {\n                       that._removePristineForModel(models[idx]);\n                   }\n               }\n           },\n\n           _updatePristineForModel: function(model, values) {\n               this._executeOnPristineForModel(model, function(index, items) {\n                   kendo.deepExtend(items[index], values);\n               });\n           },\n\n           _executeOnPristineForModel: function(model, callback) {\n               this._eachPristineItem(\n                   function(items) {\n                       var index = indexOfPristineModel(items, model);\n                       if (index > -1) {\n                           callback(index, items);\n                           return true;\n                       }\n                   });\n           },\n\n           _removePristineForModel: function(model) {\n               this._executeOnPristineForModel(model, function(index, items) {\n                   items.splice(index, 1);\n               });\n           },\n\n           _readData: function(data) {\n               var read = !this._isServerGrouped() ? this.reader.data : this.reader.groups;\n               return read.call(this.reader, data);\n           },\n\n           _eachPristineItem: function(callback) {\n               var that = this;\n               var options = that.options;\n               var rangeSpan = that._getCurrentRangeSpan();\n\n               that._eachItem(that._pristineData, callback);\n\n               if (options.serverPaging && options.useRanges) {\n                   each(rangeSpan, function(i, range) {\n                       that._eachItem(range.pristineData, callback);\n                   });\n               }\n           },\n\n          _eachItem: function(data, callback) {\n               if (data && data.length) {\n                   if (this._isServerGrouped()) {\n                       eachGroupItems(data, callback);\n                   } else {\n                       callback(data);\n                   }\n               }\n           },\n\n           _pristineForModel: function(model) {\n               var pristine,\n                   idx,\n                   callback = function(items) {\n                       idx = indexOfPristineModel(items, model);\n                       if (idx > -1) {\n                           pristine = items[idx];\n                           return true;\n                       }\n                   };\n\n               this._eachPristineItem(callback);\n\n               return pristine;\n           },\n\n           _cancelModel: function(model) {\n               var that = this;\n               var pristine = this._pristineForModel(model);\n\n               this._eachItem(this._data, function(items) {\n                   var idx = indexOfModel(items, model);\n                   if (idx >= 0) {\n                       if (pristine && (!model.isNew() || pristine.__state__)) {\n                           items[idx].accept(pristine);\n\n                           if (pristine.__state__ == \"update\") {\n                               items[idx].dirty = true;\n                           }\n\n                       } else {\n                           that._modelCanceled(model);\n\n                           items.splice(idx, 1);\n\n                           that._removeModelFromRanges(model);\n                       }\n                   }\n               });\n           },\n\n           _modelCanceled: noop,\n\n           _submit: function(promises, data) {\n               var that = this;\n\n               that.trigger(REQUESTSTART, { type: \"submit\" });\n\n               that.trigger(PROGRESS);\n\n               that.transport.submit(extend({\n                   success: function(response, type) {\n                       var promise = $.grep(promises, function(x) {\n                           return x.type == type;\n                       })[0];\n\n                       if (promise) {\n                           promise.resolve({\n                               response: response,\n                               models: promise.models,\n                               type: type\n                           });\n                       }\n                   },\n                   error: function(response, status, error) {\n                       for (var idx = 0; idx < promises.length; idx++) {\n                           promises[idx].reject(response);\n                       }\n\n                       that.error(response, status, error);\n                   }\n               }, data));\n           },\n\n           _sendSubmit: function(created, updated, destroyed) {\n               var that = this,\n                   promises = [];\n\n               if (that.options.batch) {\n                   if (created.length) {\n                       promises.push($.Deferred(function(deferred) {\n                           deferred.type = \"create\";\n                           deferred.models = created;\n                       }));\n                   }\n\n                   if (updated.length) {\n                       promises.push($.Deferred(function(deferred) {\n                           deferred.type = \"update\";\n                           deferred.models = updated;\n                       }));\n                   }\n\n                   if (destroyed.length) {\n                       promises.push($.Deferred(function(deferred) {\n                           deferred.type = \"destroy\";\n                           deferred.models = destroyed;\n                       }));\n                   }\n\n                   that._submit(promises, {\n                       data: {\n                           created: that.reader.serialize(toJSON(created)),\n                           updated: that.reader.serialize(toJSON(updated)),\n                           destroyed: that.reader.serialize(toJSON(destroyed))\n                       }\n                   });\n               }\n\n               return promises;\n           },\n\n           _promise: function(data, models, type) {\n               var that = this;\n\n               return $.Deferred(function(deferred) {\n                   that.trigger(REQUESTSTART, { type: type });\n\n                   that.trigger(PROGRESS);\n\n                   that.transport[type].call(that.transport, extend({\n                       success: function(response) {\n                           deferred.resolve({\n                               response: response,\n                               models: models,\n                               type: type\n                           });\n                       },\n                       error: function(response, status, error) {\n                           deferred.reject(response);\n                           that.error(response, status, error);\n                       }\n                   }, data));\n               }).promise();\n           },\n\n           _send: function(method, data) {\n               var that = this,\n                   idx,\n                   length,\n                   promises = [],\n                   converted = that.reader.serialize(toJSON(data));\n\n               if (that.options.batch) {\n                   if (data.length) {\n                       promises.push(that._promise( { data: { models: converted } }, data , method));\n                   }\n               } else {\n                   for (idx = 0, length = data.length; idx < length; idx++) {\n                       promises.push(that._promise( { data: converted[idx] }, [ data[idx] ], method));\n                   }\n               }\n\n               return promises;\n           },\n\n           read: function(data) {\n               var that = this, params = that._params(data);\n               var deferred = $.Deferred();\n\n               that._queueRequest(params, function() {\n                   var isPrevented = that.trigger(REQUESTSTART, { type: \"read\" });\n                   if (!isPrevented) {\n                       that.trigger(PROGRESS);\n\n                       that._ranges = [];\n                       that.trigger(\"reset\");\n                       if (that.online()) {\n                           that.transport.read({\n                               data: params,\n                               success: function(data) {\n                                   that._ranges = [];\n                                   that.success(data, params);\n\n                                   deferred.resolve();\n                               },\n                               error: function() {\n                                   var args = slice.call(arguments);\n\n                                   that.error.apply(that, args);\n\n                                   deferred.reject.apply(deferred, args);\n                               }\n                           });\n                       } else if (that.options.offlineStorage != null) {\n                           that.success(that.offlineData(), params);\n\n                           deferred.resolve();\n                       }\n                   } else {\n                       that._dequeueRequest();\n\n                       deferred.resolve(isPrevented);\n                   }\n               });\n\n               return deferred.promise();\n           },\n\n           _readAggregates: function(data) {\n               return this.reader.aggregates(data);\n           },\n\n           success: function(data) {\n               var that = this,\n                   options = that.options,\n                   items,\n                   replaceSubset;\n\n               that.trigger(REQUESTEND, { response: data, type: \"read\" });\n\n               if (that.online()) {\n                   data = that.reader.parse(data);\n\n                   if (that._handleCustomErrors(data)) {\n                       that._dequeueRequest();\n                       return;\n                   }\n\n                   that._total = that.reader.total(data);\n\n                   if (that._isServerGroupPaged()) {\n                       that._serverGroupsTotal = that._total;\n                   }\n\n                   if (that._pageSize > that._total) {\n                       that._pageSize = that._total;\n                       if (that.options.pageSize && that.options.pageSize > that._pageSize) {\n                           that._pageSize = that.options.pageSize;\n                       }\n                   }\n\n                   if (that._aggregate && options.serverAggregates) {\n                       that._aggregateResult = that._readAggregates(data);\n                   }\n\n                   data = that._readData(data);\n\n                   that._destroyed = [];\n               } else {\n                   data = that._readData(data);\n\n                   items = [];\n                   var itemIds = {};\n                   var model = that.reader.model;\n                   var idField = model ? model.idField : \"id\";\n                   var idx;\n\n                   for (idx = 0; idx < this._destroyed.length; idx++) {\n                       var id = this._destroyed[idx][idField];\n                       itemIds[id] = id;\n                   }\n\n                   for (idx = 0; idx < data.length; idx++) {\n                       var item = data[idx];\n                       var state = item.__state__;\n                       if (state == \"destroy\") {\n                           if (!itemIds[item[idField]]) {\n                               this._pushInDestroyed(this._createNewModel(item));\n                           }\n                       } else {\n                           items.push(item);\n                       }\n                   }\n\n                   data = items;\n\n                   that._total = data.length;\n               }\n\n               that._pristineTotal = that._total;\n               replaceSubset = that._skip && that._data.length && that._skip < that._data.length;\n\n               if (that.options.endless) {\n                   if (replaceSubset) {\n                       that._pristineData.splice(that._skip, that._pristineData.length);\n                   }\n                   items = data.slice(0);\n                   for (var j = 0; j < items.length; j++) {\n                       that._pristineData.push(items[j]);\n                   }\n               } else {\n                   that._pristineData = data.slice(0);\n               }\n\n               that._detachObservableParents();\n\n               if (that.options.endless) {\n                   that._data.unbind(CHANGE, that._changeHandler);\n\n                   if (that._isServerGrouped() && that._data[that._data.length - 1].value === data[0].value) {\n                       fillLastGroup(that._data[that._data.length - 1], data[0]);\n                       data.shift();\n                   }\n\n                   data = that._observe(data);\n                   if (replaceSubset) {\n                       that._data.splice(that._skip, that._data.length);\n                   }\n                   for (var i = 0; i < data.length; i++) {\n                       that._data.push(data[i]);\n                   }\n                   that._data.bind(CHANGE, that._changeHandler);\n               } else {\n                   that._data = that._observe(data);\n               }\n\n               that._markOfflineUpdatesAsDirty();\n\n               that._storeData();\n\n               that._addRange(that._data);\n\n               that._process(that._data);\n\n               that._dequeueRequest();\n           },\n\n           _detachObservableParents: function() {\n               if (this._data && this._shouldDetachObservableParents) {\n                   for (var idx = 0; idx < this._data.length; idx++) {\n                       if (this._data[idx].parent) {\n                           this._data[idx].parent = noop;\n                       }\n                   }\n               }\n           },\n\n           _storeData: function(updatePristine) {\n               var serverGrouping = this._isServerGrouped();\n               var model = this.reader.model;\n\n               function items(data) {\n                   var state = [];\n\n                   for (var idx = 0; idx < data.length; idx++) {\n                       var dataItem = data.at(idx);\n                       var item = dataItem.toJSON();\n\n                       if (serverGrouping && dataItem.items) {\n                           item.items = items(dataItem.items);\n                       } else {\n                           item.uid = dataItem.uid;\n\n                           if (model) {\n                               if (dataItem.isNew()) {\n                                   item.__state__ = \"create\";\n                               } else if (dataItem.dirty) {\n                                   item.__state__ = \"update\";\n                               }\n                           }\n                       }\n                       state.push(item);\n                   }\n\n                   return state;\n               }\n\n               if (this.options.offlineStorage != null) {\n                   var state = items(this._data);\n\n                   var destroyed = [];\n\n                   for (var idx = 0; idx < this._destroyed.length; idx++) {\n                       var item = this._destroyed[idx].toJSON();\n                       item.__state__ = \"destroy\";\n                       destroyed.push(item);\n                   }\n\n                   this.offlineData(state.concat(destroyed));\n\n                   if (updatePristine) {\n                       this._pristineData = this.reader.reader ? this.reader.reader._wrapDataAccessBase(state) : this.reader._wrapDataAccessBase(state);\n                   }\n               }\n           },\n\n           _addRange: function(data, skip) {\n               var that = this,\n                   start = typeof (skip) !== \"undefined\" ? skip : (that._skip || 0),\n                   end,\n                   range = {\n                       data: data,\n                       pristineData: data.toJSON(),\n                       timestamp: that._timeStamp()\n                   };\n\n               if (this._isGroupPaged()) {\n                   end = start + data.length;\n                   range.outerStart = start;\n                   range.outerEnd = end;\n               } else {\n                   end = start + that._flatData(data, true).length;\n               }\n\n               range.start = start;\n               range.end = end;\n               that._ranges.push(range);\n               that._sortRanges();\n\n               if (that._isGroupPaged()) {\n                   if (!that._groupsFlat) {\n                       that._groupsFlat = [];\n                   }\n                   that._appendToGroupsFlat(range.data);\n                   that._updateOuterRangesLength();\n               }\n           },\n\n           _appendToGroupsFlat: function(data) {\n               var length = data.length;\n\n               for (var i = 0; i < length; i++) {\n                   this._groupsFlat.push(data[i]);\n               }\n           },\n\n           _getGroupByUid: function(uid) {\n               var length = this._groupsFlat.length;\n               var group;\n\n               for (var i = 0; i < length; i++) {\n                   group = this._groupsFlat[i];\n                   if (group.uid === uid) {\n                       return group;\n                   }\n               }\n           },\n\n           _sortRanges: function() {\n               this._ranges.sort(function(x, y) {\n                   return x.start - y.start;\n               });\n           },\n\n           error: function(xhr, status, errorThrown) {\n               this._dequeueRequest();\n               this.trigger(REQUESTEND, { });\n               this.trigger(ERROR, { xhr: xhr, status: status, errorThrown: errorThrown });\n           },\n\n           _params: function(data) {\n               var that = this,\n                   options = extend({\n                       take: that.take(),\n                       skip: that.skip(),\n                       page: that.page(),\n                       pageSize: that.pageSize(),\n                       sort: that._sort,\n                       filter: that._filter,\n                       group: that._group,\n                       aggregate: that._aggregate,\n                       groupPaging: !!that._groupPaging\n                   }, data);\n\n               if (!that.options.serverPaging) {\n                   delete options.take;\n                   delete options.skip;\n                   delete options.page;\n                   delete options.pageSize;\n               }\n\n               if (!that.options.serverGrouping) {\n                   delete options.group;\n               } else if (that.reader.model && options.group) {\n                   options.group = convertDescriptorsField(options.group, that.reader.model);\n               }\n\n               if (!that.options.serverFiltering) {\n                   delete options.filter;\n               } else if (that.reader.model && options.filter) {\n                  options.filter = convertFilterDescriptorsField(options.filter, that.reader.model);\n               }\n\n               if (!that.options.serverSorting) {\n                   delete options.sort;\n               } else if (that.reader.model && options.sort) {\n                   options.sort = convertDescriptorsField(options.sort, that.reader.model);\n               }\n\n               if (!that.options.serverAggregates) {\n                   delete options.aggregate;\n               } else if (that.reader.model && options.aggregate) {\n                   options.aggregate = convertDescriptorsField(options.aggregate, that.reader.model);\n               }\n\n               if (!that.options.groupPaging) {\n                   delete options.groupPaging;\n               }\n\n               return options;\n           },\n\n           _queueRequest: function(options, callback) {\n               var that = this;\n               if (!that._requestInProgress) {\n                   that._requestInProgress = true;\n                   that._pending = undefined$1;\n                   callback();\n               } else {\n                   that._pending = { callback: callback.bind(that), options: options };\n               }\n           },\n\n           _dequeueRequest: function() {\n               var that = this;\n               that._requestInProgress = false;\n               if (that._pending) {\n                   that._queueRequest(that._pending.options, that._pending.callback);\n               }\n           },\n\n           _handleCustomErrors: function(response) {\n               if (this.reader.errors) {\n                   var errors = this.reader.errors(response);\n                   if (errors) {\n                       this.trigger(ERROR, { xhr: null, status: \"customerror\", errorThrown: \"custom error\", errors: errors });\n                       return true;\n                   }\n               }\n               return false;\n           },\n\n           _shouldWrap: function(data) {\n               var model = this.reader.model;\n\n               if (model && data.length) {\n                   return !(data[0] instanceof model);\n               }\n\n               return false;\n           },\n\n           _observe: function(data) {\n               var that = this,\n                   model = that.reader.model;\n\n               that._shouldDetachObservableParents = true;\n\n               if (data instanceof ObservableArray) {\n                   that._shouldDetachObservableParents = false;\n                   if (that._shouldWrap(data)) {\n                       data.type = that.reader.model;\n                       data.wrapAll(data, data);\n                   }\n               } else {\n                   var arrayType = that.pageSize() && !that.options.serverPaging ? LazyObservableArray : ObservableArray;\n                   data = new arrayType(data, that.reader.model);\n                   data.parent = function() { return that.parent(); };\n               }\n\n               if (that._isServerGrouped()) {\n                   wrapGroupItems(data, model);\n               }\n\n               if (that._changeHandler && that._data && that._data instanceof ObservableArray &&\n                   !(that.options.useRanges && that.options.serverPaging)) {\n                   that._data.unbind(CHANGE, that._changeHandler);\n               } else {\n                   that._changeHandler = that._change.bind(that);\n               }\n\n               return data.bind(CHANGE, that._changeHandler);\n           },\n\n           _updateTotalForAction: function(action, items) {\n               var that = this;\n\n               var total = parseInt(that._total, 10);\n\n               if (!isNumber(that._total)) {\n                   total = parseInt(that._pristineTotal, 10);\n               }\n               if (action === \"add\") {\n                   total += items.length;\n               } else if (action === \"remove\") {\n                   total -= items.length;\n               } else if (action !== \"itemchange\" && action !== \"sync\" && !that.options.serverPaging) {\n                   total = that._pristineTotal;\n               } else if (action === \"sync\") {\n                   total = that._pristineTotal = parseInt(that._total, 10);\n               }\n\n               that._total = total;\n           },\n\n           _pushInDestroyed: function(model) {\n               var isPushed = this._destroyed.find(function(item) {\n                   return item.uid === model.uid;\n               });\n               if (!isPushed) {\n                   this._destroyed.push(model);\n               }\n           },\n\n           _change: function(e) {\n               var that = this, idx, length, action = e ? e.action : \"\";\n\n               if (action === \"remove\") {\n                   for (idx = 0, length = e.items.length; idx < length; idx++) {\n                       if (!e.items[idx].isNew || !e.items[idx].isNew()) {\n                           that._pushInDestroyed(e.items[idx]);\n                       }\n                   }\n               }\n\n               if (that.options.autoSync && (action === \"add\" || action === \"remove\" || action === \"itemchange\")) {\n\n                   var handler = function(args) {\n                       if (args.action === \"sync\") {\n                           that.unbind(\"change\", handler);\n                           that._updateTotalForAction(action, e.items);\n                       }\n                   };\n\n                   that.first(\"change\", handler);\n\n                   that.sync();\n\n               } else {\n                   that._updateTotalForAction(action, e ? e.items : []);\n\n                   that._process(that._data, e);\n               }\n           },\n\n           _calculateAggregates: function(data, options) {\n               options = options || {};\n\n               var query = new Query(data),\n                   aggregates = options.aggregate,\n                   filter = options.filter;\n\n               if (filter) {\n                   query = query.filter(filter);\n               }\n\n               return query.aggregate(aggregates);\n           },\n\n           _process: function(data, e) {\n               var that = this,\n                   options = {},\n                   result;\n\n               if (that.options.serverPaging !== true) {\n                   options.skip = that._skip;\n                   options.take = that._take || that._pageSize;\n\n                   if (options.skip === undefined$1 && that._page !== undefined$1 && that._pageSize !== undefined$1) {\n                       options.skip = (that._page - 1) * that._pageSize;\n                   }\n\n                   if (that.options.useRanges) {\n                       options.skip = that.currentRangeStart();\n                   }\n               }\n\n               if (that.options.serverSorting !== true) {\n                   options.sort = that._sort;\n               }\n\n               if (that.options.serverFiltering !== true) {\n                   options.filter = that._filter;\n               }\n\n               if (that.options.serverGrouping !== true) {\n                   options.group = that._group;\n               }\n\n               if (that.options.serverAggregates !== true) {\n                   options.aggregate = that._aggregate;\n               }\n\n               if (that.options.serverGrouping) {\n                   that._clearEmptyGroups(data);\n               }\n\n               options.groupPaging = that._groupPaging;\n\n               if (that._isGroupPaged() && e && (e.action === \"page\" || e.action === \"expandGroup\" || e.action === \"collapseGroup\")) {\n                   result = that._queryProcess(data, {\n                       aggregate: that._aggregate\n                   });\n               } else {\n                   result = that._queryProcess(data, options);\n               }\n\n               if (that._filter && e && e.action === \"add\") {\n                   var model = e.items[0],\n                       resultData = result.data;\n\n                   if (that._isGrouped() && !this._isServerGrouped()) {\n                       resultData = flattenGroups(resultData);\n                   }\n\n                   var modelIsInView = resultData.find(function(item) {\n                       return item.uid === model.uid;\n                   });\n\n                   if (!modelIsInView) {\n                       result.data.splice(model.index, 0, that._isGrouped() ? that._wrapInEmptyGroup(model) : model);\n                       result.total++;\n                   }\n               }\n\n               if (that.options.serverAggregates !== true) {\n                   // for performance reasons, calculate aggregates for part of the data only after query process\n                   // this is necessary in the TreeList when paging\n                   that._aggregateResult = that._calculateAggregates(result.dataToAggregate || data, options);\n               }\n\n               that._setView(result, options, e);\n\n               that._setFilterTotal(result.total, false);\n\n               e = e || {};\n\n               e.items = e.items || that._view;\n\n               that.trigger(CHANGE, e);\n           },\n\n           _setView: function(result, options, e) {\n               var that = this;\n\n               if (that._isGroupPaged() && !that._isServerGrouped()) {\n                   if (e && (e.action === \"page\" || e.action === \"expandGroup\" || e.action === \"collapseGroup\")) {\n                       that.view(result.data);\n                       that._updateOuterRangesLength();\n                   } else {\n                       that._ranges = [];\n                       var query = new Query(result.data);\n                       that._addRange(that._observe(result.data));\n\n                       if (options.skip + options.take > result.data.length) {\n                           options.skip = result.data.length - options.take;\n                       }\n\n                       that.view(query.range(options.skip, options.take).toArray());\n                   }\n\n               } else {\n                   that.view(result.data);\n               }\n           },\n\n           _clearEmptyGroups: function(data) {\n               for (var idx = data.length - 1; idx >= 0; idx--) {\n                   var group = data[idx];\n                   if (group.hasSubgroups) {\n                       this._clearEmptyGroups(group.items);\n                   }\n\n                   if (group.items && !group.items.length && !group.itemCount) {\n                       splice.apply(group.parent(), [idx, 1]);\n                   }\n               }\n           },\n\n           _queryProcess: function(data, options) {\n               if (this.options.inPlaceSort) {\n                   return Query.process(data, options, this.options.inPlaceSort);\n               }\n               else {\n                   return Query.process(data, options);\n               }\n           },\n\n           _mergeState: function(options) {\n               var that = this;\n\n               if (options !== undefined$1) {\n                   that._pageSize = options.pageSize;\n                   that._page = options.page;\n                   that._sort = options.sort;\n                   that._filter = options.filter;\n                   that._group = options.group;\n                   that._aggregate = options.aggregate;\n                   that._skip = that._currentRangeStart = options.skip;\n                   that._take = options.take;\n\n                   if (that._skip === undefined$1) {\n                       that._skip = that._currentRangeStart = that.skip();\n                       options.skip = that.skip();\n                   }\n\n                   if (that._take === undefined$1 && that._pageSize !== undefined$1) {\n                       that._take = that._pageSize;\n                       options.take = that._take;\n                   }\n\n                   if (that.options.virtual) {\n                       options.virtual = that.options.virtual;\n                   }\n\n                   if (options.sort) {\n                       that._sort = options.sort = normalizeSort(options.sort);\n                       that._sortFields = sortFields(options.sort);\n                   }\n\n                   if (options.filter) {\n                       that._filter = options.filter = (that.options.accentFoldingFiltering && !$.isEmptyObject(options.filter)) ? $.extend({}, normalizeFilter(options.filter), { accentFoldingFiltering: that.options.accentFoldingFiltering }) : normalizeFilter(options.filter);\n                   }\n\n                   if (options.group) {\n                       that._group = options.group = normalizeGroup(options.group);\n                   }\n                   if (options.aggregate) {\n                       that._aggregate = options.aggregate = normalizeAggregate(options.aggregate);\n                   }\n               }\n               return options;\n           },\n\n           query: function(options) {\n               var result;\n               var remote = this.options.serverSorting || this.options.serverPaging || this.options.serverFiltering || this.options.serverGrouping || this.options.serverAggregates;\n\n               if (remote || ((this._data === undefined$1 || this._data.length === 0) && !this._destroyed.length)) {\n                   if (this.options.endless) {\n                       var moreItemsCount = options.pageSize - this.pageSize();\n                       if (moreItemsCount > 0) {\n                           moreItemsCount = this.pageSize();\n                           options.page = options.pageSize / moreItemsCount;\n                           options.pageSize = moreItemsCount;\n                       } else {\n                           options.page = 1;\n                           this.options.endless = false;\n                       }\n                   }\n                   return this.read(this._mergeState(options));\n               }\n\n               var isPrevented = this.trigger(REQUESTSTART, { type: \"read\" });\n               if (!isPrevented) {\n                   this.trigger(PROGRESS);\n                   if (options) {\n                       options.groupPaging = this._groupPaging;\n                   }\n                   result = this._queryProcess(this._data, this._mergeState(options));\n\n                   this._setFilterTotal(result.total, true);\n\n                   this._aggregateResult = this._calculateAggregates(result.dataToAggregate || this._data, options);\n                   this._setView(result, options);\n                   this.trigger(REQUESTEND, { type: \"read\" });\n                   this.trigger(CHANGE, { items: result.data, action: options ? options.action : \"\" });\n               }\n\n               return $.Deferred().resolve(isPrevented).promise();\n           },\n\n           _hasExpandedSubGroups: function(group) {\n               var result = false;\n               var length = group.items ? group.items.length : 0;\n\n               if (!group.hasSubgroups) {\n                   return false;\n               }\n\n               for (var i = 0; i < length; i++) {\n                   if (this._groupsState[group.items[i].uid]) {\n                       result = true;\n                       break;\n                   }\n               }\n               return result;\n           },\n\n           _findGroupedRange: function(data, result, options, parents, callback) {\n               var that = this;\n               var length = data.length;\n               var group;\n               var current;\n               var itemsLength;\n               var groupCount;\n               var itemsToSkip;\n\n               for (var i = 0; i < length; i++) {\n                   group = data[i];\n\n                   if (options.taken >= options.take) {\n                       break;\n                   }\n\n                   if (!that._getGroupByUid(group.uid)) {\n                       that._groupsFlat.push(group);\n                   }\n\n                   if (that._groupsState[group.uid]) {\n                       if (that._isServerGroupPaged()) {\n                          if (that._fetchGroupItems(group, options, parents, callback)) {\n                               that._fetchingGroupItems = true;\n                               return;\n                          }\n                          groupCount = (group.subgroupCount || group.itemCount) + 1;\n                          itemsToSkip = options.skip - options.skipped;\n                          if (!that._hasExpandedSubGroups(group) && itemsToSkip > groupCount) {\n                              options.skipped += groupCount;\n                              continue;\n                          }\n                       }\n\n                       if (options.includeParents && options.skipped < options.skip) {\n                           options.skipped++;\n                           group.excludeHeader = true;\n                       } else if (options.includeParents) {\n                           options.taken++;\n                           group.excludeHeader = false;\n                       }\n\n                       if (group.hasSubgroups && group.items && group.items.length) {\n                           group.currentItems = [];\n\n                           if (!parents) {\n                               parents = [];\n                           }\n                           parents.push(group);\n\n                           that._findGroupedRange(group.items, group.currentItems, options, parents, callback);\n                           parents.pop();\n\n                           if (group.currentItems.length || options.taken > 0) {\n                               result.push(group);\n                           } else {\n                               group.excludeHeader = false;\n                           }\n                       } else {\n                           current = [];\n                           itemsLength = group.items.length;\n\n                           for (var j = 0; j < itemsLength; j++) {\n                               if (options.skipped < options.skip) {\n                                   options.skipped++;\n                                   continue;\n                               }\n\n                               if (options.taken >= options.take) {\n                                   break;\n                               }\n                               current.push(group.items[j]);\n                               options.taken++;\n                           }\n\n                           if (current.length || options.taken > 0) {\n                               group.currentItems = current;\n                               result.push(group);\n                           } else {\n                               group.excludeHeader = false;\n                           }\n                       }\n                   } else {\n                       if (options.skipped < options.skip) {\n                           options.skipped++;\n                           continue;\n                       }\n                       result.push(group);\n                       options.taken++;\n                   }\n               }\n           },\n\n           _expandedSubGroupItemsCount: function(group, end, includeCurrentItems) {\n               var that = this;\n               var result = 0;\n               var subGroup;\n               var endSpecified = typeof end === \"number\";\n               var length = endSpecified ? end : group.subgroupCount;\n               var temp;\n\n               if (!group.hasSubgroups) {\n                   return result;\n               }\n\n               for (var i = 0; i < length; i++) {\n                   subGroup = group.items[i];\n\n                   if (!subGroup) {\n                       break;\n                   }\n\n                   if (subGroup.hasSubgroups && that._groupsState[group.uid]) {\n                       temp = that._expandedSubGroupItemsCount(subGroup, length, true);\n                       result += temp;\n\n                       if (endSpecified) {\n                           length -= temp;\n                       }\n                   } else if (!subGroup.hasSubgroups && that._groupsState[subGroup.uid]) {\n                       temp = subGroup.items ? subGroup.items.length : 0;\n                       result += temp;\n                       if (endSpecified) {\n                           length -= temp;\n                       }\n                   }\n\n                   if (includeCurrentItems) {\n                       result += 1;\n                       if (endSpecified) {\n                           length -= 1;\n                       }\n                   }\n\n                   if (endSpecified && result > length) {\n                       return result;\n                   }\n               }\n\n               return result;\n           },\n\n           _fetchGroupItems: function(group, options, parents, callback) {\n               var that = this;\n               var groupItemsSkip;\n               var firstItem;\n               var lastItem;\n               var groupItemCount = group.hasSubgroups ? group.subgroupCount : group.itemCount;\n               var take = options.take;\n               var skipped = options.skipped;\n               var pageSize = that.take();\n               var expandedSubGroupItemsCount;\n\n               if (options.includeParents) {\n                   if (skipped < options.skip) {\n                       skipped += 1;\n                   } else {\n                       take -= 1;\n                   }\n               }\n\n               if (!group.items || (group.items && !group.items.length)) {\n                   that.getGroupItems(group, options, parents, callback, 0);\n                   return true;\n               } else {\n                   expandedSubGroupItemsCount = this._expandedSubGroupItemsCount(group, options.skip - skipped);\n                   groupItemsSkip = Math.max(options.skip - (skipped + expandedSubGroupItemsCount), 0);\n\n                   if (groupItemsSkip >= groupItemCount) {\n                       return false;\n                   }\n\n                   firstItem = group.items[groupItemsSkip];\n                   lastItem = group.items[Math.min(groupItemsSkip + take, groupItemCount - 1)];\n\n                   if (firstItem.notFetched) {\n                       that.getGroupItems(group, options, parents, callback, math.max(math.floor(groupItemsSkip / pageSize), 0) * pageSize, math.round((groupItemsSkip + pageSize) / pageSize));\n                       return true;\n                   }\n\n                   if (lastItem.notFetched) {\n                       that.getGroupItems(group, options, parents, callback, math.max(math.floor((groupItemsSkip + pageSize) / pageSize), 0) * pageSize, math.round((groupItemsSkip + pageSize) / pageSize));\n                       return true;\n                   }\n               }\n           },\n\n           getGroupItems: function(group, options, parents, callback, groupItemsSkip, page) {\n               var that = this;\n               var take;\n               var filter;\n               var data;\n               var subgroups;\n\n               if (!group.items) {\n                   group.items = [];\n               }\n\n               take = that.take();\n               filter = this._composeItemsFilter(group, parents);\n               data = {\n                   page: page || 1,\n                   pageSize: take,\n                   skip: groupItemsSkip,\n                   take: take,\n                   filter: filter,\n                   aggregate: that._aggregate,\n                   sort: that._sort\n               };\n               subgroups = that.findSubgroups(group);\n\n               if (subgroups && subgroups.length) {\n                   data.group = subgroups;\n                   data.groupPaging = true;\n               }\n\n               clearTimeout(that._timeout);\n               that._timeout = setTimeout(function() {\n                   that._queueRequest(data, function() {\n                       if (!that.trigger(REQUESTSTART, {\n                               type: \"read\"\n                           })) {\n                           that.transport.read({\n                               data: data,\n                               success: that._groupItemsSuccessHandler(group, options.skip, that.take(), callback, groupItemsSkip),\n                               error: function() {\n                                   var args = slice.call(arguments);\n                                   that.error.apply(that, args);\n                               }\n                           });\n                       } else {\n                           that._dequeueRequest();\n                       }\n                   });\n               }, 100);\n           },\n\n           _groupItemsSuccessHandler: function(group, skip, take, callback, groupItemsSkip) {\n               var that = this;\n               var timestamp = that._timeStamp();\n               callback = isFunction(callback) ? callback : noop;\n               var totalField = that.options.schema && that.options.schema.total ? that.options.schema.total : \"Total\";\n\n               return function(data) {\n                   var temp;\n                   var model = Model.define(that.options.schema.model);\n                   var totalCount;\n\n                   that._dequeueRequest();\n\n                   that.trigger(REQUESTEND, {\n                       response: data,\n                       type: \"read\"\n                   });\n\n                   if (isFunction(totalField)) {\n                       totalCount = totalField(data);\n                   } else {\n                       totalCount = data[totalField];\n                   }\n\n                   data = that.reader.parse(data);\n\n                   if (group.hasSubgroups) {\n                       temp = that.reader.groups(data);\n                       group.subgroupCount = totalCount;\n                   } else {\n                       temp = that.reader.data(data);\n                       temp = temp.map(function(item) {\n                           return new model(item);\n                       });\n                   }\n\n                   group.items.omitChangeEvent = true;\n                   for (var i = 0; i < totalCount; i++) {\n                       if (i >= groupItemsSkip && i < (groupItemsSkip + take) ) {\n                           group.items.splice(i, 1, temp[i - groupItemsSkip]);\n                       } else {\n                           if (!group.items[i]) {\n                               group.items.splice(i, 0, { notFetched: true });\n                           }\n                       }\n                   }\n                   group.items.omitChangeEvent = false;\n\n                   that._updateRangePristineData(group);\n                   that._fetchingGroupItems = false;\n\n                   if (!group.countAdded) {\n                       that._serverGroupsTotal += totalCount;\n                       group.countAdded = true;\n                   }\n\n                   that.range(skip, take, callback, \"expandGroup\");\n\n                   if (timestamp >= that._currentRequestTimeStamp || !that._skipRequestsInProgress) {\n                       that.trigger(CHANGE, {});\n                   }\n               };\n           },\n\n           findSubgroups: function(group) {\n               var indexOfCurrentGroup = this._group.map(function(g) {\n                   return g.field;\n               }).indexOf(group.field);\n\n               return this._group.slice(indexOfCurrentGroup + 1, this._group.length);\n           },\n\n           _composeItemsFilter: function(group, parents) {\n               var filter = this.filter() || {\n                   logic: \"and\",\n                   filters: []\n               };\n\n               filter.logic = 'and';\n               filter = extend(true, {}, filter);\n               filter.filters.push({\n                   field: group.field,\n                   operator: \"eq\",\n                   value: group.value\n               });\n\n               if (parents) {\n                   for (var i = 0; i < parents.length; i++) {\n                       filter.filters.push({\n                           field: parents[i].field,\n                           operator: \"eq\",\n                           value: parents[i].value\n                       });\n                   }\n               }\n\n               return filter;\n           },\n\n           _updateRangePristineData: function(group) {\n               var that = this;\n               var ranges = that._ranges;\n               var rangesLength = ranges.length;\n               var temp;\n               var currentGroup;\n               var range;\n               var dataLength;\n               var indexes;\n               var currIdx;\n\n               for (var i = 0; i < rangesLength; i++) {\n                   range = ranges[i];\n                   dataLength = range.data.length;\n                   indexes = [];\n                   temp = null;\n\n                   for (var j = 0; j < dataLength; j++) {\n                       currentGroup = range.data[j];\n                       indexes.push(j);\n\n                       if ((currentGroup.uid === group.uid) || (currentGroup.hasSubgroups && currentGroup.items.length && that._containsSubGroup(currentGroup, group, indexes))) {\n                           break;\n                       }\n                       indexes.pop();\n                   }\n\n                   if (indexes.length) {\n                       temp = ranges[i].pristineData;\n\n                       while (indexes.length > 1) {\n                           currIdx = indexes.splice(0, 1)[0];\n                           temp = temp[currIdx].items;\n                       }\n                       temp[indexes[0]] = that._cloneGroup(group);\n                       break;\n                   }\n               }\n           },\n\n           _containsSubGroup: function(group, subgroup, indexes) {\n               var that = this;\n               var length = group.items.length;\n               var currentSubGroup;\n\n               if (group.hasSubgroups && length) {\n                   for (var i = 0; i < length; i++) {\n                       currentSubGroup = group.items[i];\n                       indexes.push(i);\n                       if (currentSubGroup.uid === subgroup.uid ||\n                               (currentSubGroup.hasSubgroups &&\n                               currentSubGroup.items.length &&\n                               that._containsSubGroup(currentSubGroup, subgroup, indexes))) {\n                           return true;\n                       }\n                       indexes.pop();\n                   }\n               }\n\n           },\n\n           _cloneGroup: function(group) {\n               var that = this;\n               group = typeof group.toJSON == \"function\" ? group.toJSON() : group;\n\n               if (group.items && group.items.length) {\n                   group.items = group.items.map(function(item) {\n                       return that._cloneGroup(item);\n                   });\n               }\n\n               return group;\n           },\n\n           _setFilterTotal: function(filterTotal, setDefaultValue) {\n               var that = this;\n\n               if (!that.options.serverFiltering) {\n                   if (filterTotal !== undefined$1) {\n                       that._total = filterTotal;\n                   } else if (setDefaultValue) {\n                       that._total = that._data.length;\n                   }\n               }\n           },\n\n           fetch: function(callback) {\n               var that = this;\n               var fn = function(isPrevented) {\n                   if (isPrevented !== true && isFunction(callback)) {\n                       callback.call(that);\n                   }\n               };\n\n               return this._query().done(fn);\n           },\n\n           _query: function(options) {\n               var that = this;\n\n               return that.query(extend({}, {\n                   page: that.page(),\n                   pageSize: that.pageSize(),\n                   sort: that.sort(),\n                   filter: that.filter(),\n                   group: that.group(),\n                   aggregate: that.aggregate()\n               }, options));\n           },\n\n           next: function(options) {\n               var that = this,\n                   page = that.page(),\n                   total = that.total();\n\n               options = options || {};\n\n               if (!page || (total && page + 1 > that.totalPages())) {\n                   return;\n               }\n\n               that._skip = that._currentRangeStart = page * that.take();\n\n               page += 1;\n               options.page = page;\n\n               that._query(options);\n\n               return page;\n           },\n\n           prev: function(options) {\n               var that = this,\n                   page = that.page();\n\n               options = options || {};\n\n               if (!page || page === 1) {\n                   return;\n               }\n\n               that._skip = that._currentRangeStart = that._skip - that.take();\n\n               page -= 1;\n               options.page = page;\n\n               that._query(options);\n\n               return page;\n           },\n\n           page: function(val) {\n               var that = this,\n               skip;\n\n               if (val !== undefined$1) {\n                   val = math.max(math.min(math.max(val, 1), that.totalPages()), 1);\n                   var take = that.take();\n\n                   if (that._isGroupPaged()) {\n                       val -= 1;\n                       that.range(val * take, take, null, \"page\");\n                       return;\n                   }\n                   that._query(that._pageableQueryOptions({ page: val }));\n                   return;\n               }\n               skip = that.skip();\n\n               return skip !== undefined$1 ? math.round((skip || 0) / (that.take() || 1)) + 1 : undefined$1;\n           },\n\n           pageSize: function(val) {\n               var that = this;\n\n               if (val !== undefined$1) {\n                   that._query(that._pageableQueryOptions({ pageSize: val, page: 1 }));\n                   return;\n               }\n\n               return that.take();\n           },\n\n           sort: function(val) {\n               var that = this;\n\n               if (val !== undefined$1) {\n                   that.trigger(\"sort\");\n                   that._query({ sort: val });\n                   return;\n               }\n\n               return that._sort;\n           },\n\n           filter: function(val) {\n               var that = this;\n\n               if (val === undefined$1) {\n                   return that._filter;\n               }\n\n               that.trigger(\"reset\");\n               that._query({ filter: val, page: 1 });\n           },\n\n           group: function(val) {\n               var that = this;\n               var options = { group: val };\n\n               if (that._groupPaging) {\n                   // clear ranges if ungrouping is performed\n                   if (val !== undefined$1 && (!val || !val.length) ) {\n                       that._ranges = [];\n                   }\n                   options.page = 1;\n               }\n\n               if (val !== undefined$1) {\n                   that._query(options);\n                   return;\n               }\n\n               return that._group;\n           },\n\n           getGroupsFlat: function(data) {\n               var idx,\n                   result = [],\n                   length;\n\n               for (idx = 0, length = data.length; idx < length; idx++) {\n                   var group = data[idx];\n                   if (group.hasSubgroups) {\n                       result = result.concat(this.getGroupsFlat(group.items));\n                   }\n\n                   result.push(group);\n               }\n\n               return result;\n           },\n\n           total: function() {\n               return parseInt(this._total || 0, 10);\n           },\n\n           groupsTotal: function(includeExpanded) {\n               var that = this;\n\n               if (!that._group.length) {\n                   return that.total();\n               }\n\n               if (that._isServerGrouped()) {\n                   if (that._serverGroupsTotal) {\n                       return that._serverGroupsTotal;\n                   }\n                   that._serverGroupsTotal = that.total();\n\n                   return that._serverGroupsTotal;\n               }\n\n               return that._calculateGroupsTotal(that._ranges.length ? that._ranges[0].data : [], includeExpanded);\n           },\n\n           _calculateGroupsTotal: function(groups, includeExpanded, itemsField, ignoreState) {\n               var that = this;\n               itemsField = itemsField || \"items\";\n               var total;\n               var length;\n\n               if (that._group.length && groups) {\n                   total = 0;\n                   length = groups.length;\n\n                   for (var i = 0; i < length; i++) {\n                       total += that.groupCount(groups[i], includeExpanded, itemsField, ignoreState);\n                   }\n                   that._groupsTotal = total;\n                   return total;\n               }\n\n               that._groupsTotal = that._data.length;\n               return that._groupsTotal;\n           },\n\n           groupCount: function(group, includeExpanded, itemsField, ignoreState) {\n               var that = this;\n               var total = 0;\n\n               if (group.hasSubgroups && that._groupsState[group.uid]) {\n                   if (includeExpanded && !group.excludeHeader || ignoreState) {\n                       total += 1;\n                   }\n\n                   group[itemsField].forEach(function(subgroup) {\n                       total += that.groupCount(subgroup, includeExpanded, itemsField, ignoreState);\n                   });\n               } else {\n                   if (that._groupsState[group.uid]) {\n                       if (includeExpanded && !group.excludeHeader || ignoreState) {\n                           total++;\n                       }\n                       total += group[itemsField] ? group[itemsField].length : 0;\n                   } else {\n                       total++;\n                   }\n               }\n               return total;\n           },\n\n           countGroupRange: function(range) {\n               var total = 0;\n               var length = range.length;\n\n               for (var i = 0; i < length; i++) {\n                   total += this.groupCount(range[i], true);\n               }\n\n               return total;\n           },\n\n           aggregate: function(val) {\n               var that = this;\n\n               if (val !== undefined$1) {\n                   that._query({ aggregate: val });\n                   return;\n               }\n\n               return that._aggregate;\n           },\n\n           aggregates: function() {\n               var result = this._aggregateResult;\n\n               if (isEmptyObject(result)) {\n                   result = this._emptyAggregates(this.aggregate());\n               }\n\n               return result;\n           },\n\n           _emptyAggregates: function(aggregates) {\n               var result = {};\n\n               if (!isEmptyObject(aggregates)) {\n                   var aggregate = {};\n\n                   if (!isArray(aggregates)) {\n                       aggregates = [aggregates];\n                   }\n\n                   for (var idx = 0; idx < aggregates.length; idx++) {\n                       aggregate[aggregates[idx].aggregate] = 0;\n                       result[aggregates[idx].field] = aggregate;\n                   }\n               }\n\n               return result;\n           },\n\n           _pageableQueryOptions: function(options) {\n               return options;\n           },\n\n           _wrapInEmptyGroup: function(model) {\n               var groups = this.group(),\n                   parent,\n                   group,\n                   idx,\n                   length;\n\n               for (idx = groups.length - 1, length = 0; idx >= length; idx--) {\n                   group = groups[idx];\n                   parent = {\n                       value: model.get ? model.get(group.field) : model[group.field],\n                       field: group.field,\n                       items: parent ? [parent] : [model],\n                       hasSubgroups: !!parent,\n                       aggregates: this._emptyAggregates(group.aggregates)\n                   };\n               }\n\n               return parent;\n           },\n\n           totalPages: function() {\n               var that = this,\n                   pageSize = that.pageSize() || that.total(),\n                   total = that._isGroupPaged() ? that.groupsTotal(true) : that.total();\n\n               return math.ceil((total || 0) / pageSize);\n           },\n\n           inRange: function(skip, take) {\n               var that = this,\n                   end = math.min(skip + take, that.total());\n\n               if (!that.options.serverPaging && that._data.length > 0) {\n                   return true;\n               }\n\n               return that._findRange(skip, end).length > 0;\n           },\n\n           lastRange: function() {\n               var ranges = this._ranges;\n               return ranges[ranges.length - 1] || { start: 0, end: 0, data: [] };\n           },\n\n           firstItemUid: function() {\n               var ranges = this._ranges;\n               return ranges.length && ranges[0].data.length && ranges[0].data[0].uid;\n           },\n\n           enableRequestsInProgress: function() {\n               this._skipRequestsInProgress = false;\n           },\n\n           _timeStamp: function() {\n               return new Date().getTime();\n           },\n\n           range: function(skip, take, callback, action) {\n               this._currentRequestTimeStamp = this._timeStamp();\n               this._skipRequestsInProgress = true;\n               var total = this._isGroupPaged() ? this.groupsTotal(true) : this.total();\n\n               if (action === \"expandGroup\" || action === \"collapseGroup\") {\n                   this._updateOuterRangesLength();\n               }\n\n               skip = math.min(skip || 0, total);\n               callback = isFunction(callback) ? callback : noop;\n\n               var that = this,\n                   pageSkip = math.max(math.floor(skip / take), 0) * take,\n                   size = math.min(pageSkip + take, total),\n                   data;\n\n               data = that._findRange(skip, math.min(skip + take, total), callback);\n\n               if ((data.length || total === 0) && !that._fetchingGroupItems) {\n                   that._processRangeData(data, skip, take, that._originalPageSkip || pageSkip, that._originalSize || size, {\n                       action: action\n                   });\n                   that._originalPageSkip = null;\n                   that._originalSize = null;\n                   callback();\n                   return;\n               }\n\n               if (that._isGroupPaged()) {\n                   that._originalPageSkip = pageSkip;\n                   that._originalSize = size;\n\n                   pageSkip = math.max(math.floor(that._adjustPageSkip(skip, take) / take), 0) * take;\n                   size = math.min(pageSkip + take, total);\n               }\n\n               if (take !== undefined$1 && !that._fetchingGroupItems) {\n                   if ((that._isGroupPaged() && !that._groupRangeExists(pageSkip, take)) || !that._rangeExists(pageSkip, size)) {\n                       that.prefetch(pageSkip, take, function() {\n                           if (skip > pageSkip && size < that.total() && !that._rangeExists(size, math.min(size + take, that.total()))) {\n                               that.prefetch(size, take, function() {\n                                   that.range(skip, take, callback );\n                               });\n                           } else {\n                               that.range(skip, take, callback);\n                           }\n                       });\n                   } else if (pageSkip < skip) {\n                       that.prefetch(size, take, function() {\n                           that.range(skip, take, callback );\n                       });\n                   }\n               }\n           },\n\n           _findRange: function(start, end, callback) {\n               var that = this,\n                   ranges = that._ranges,\n                   range,\n                   data = [],\n                   skipIdx,\n                   takeIdx,\n                   startIndex,\n                   endIndex,\n                   rangeData,\n                   rangeEnd,\n                   processed,\n                   options = that.options,\n                   remote = options.serverSorting || options.serverPaging || options.serverFiltering || options.serverGrouping || options.serverAggregates,\n                   flatData,\n                   count,\n                   length,\n                   groupMapOptions = {\n                           take: end - start,\n                           skip: start,\n                           skipped: 0,\n                           taken: 0,\n                           includeParents: true\n                       },\n                   prevRangeEnd,\n                   isGroupPaged = that._isGroupPaged(),\n                   startField = isGroupPaged ? \"outerStart\" : \"start\",\n                   endField = isGroupPaged ? \"outerEnd\" : \"end\",\n                   currentDataLength;\n\n               for (skipIdx = 0, length = ranges.length; skipIdx < length; skipIdx++) {\n                   range = ranges[skipIdx];\n\n                   if (isGroupPaged) {\n                       if (range.outerStart >= end) {\n                           return [];\n                       }\n\n                       if (start > range.outerEnd) {\n                           groupMapOptions.skipped += range.outerEnd - (prevRangeEnd || 0);\n                           prevRangeEnd = range.outerEnd;\n                           continue;\n                       }\n\n                       if (typeof prevRangeEnd !== \"undefined\" && prevRangeEnd != range.outerStart) {\n                           groupMapOptions.skipped += range.outerStart - prevRangeEnd;\n                       }\n\n                       if (groupMapOptions.skipped > groupMapOptions.skip) {\n                           return [];\n                       }\n\n                       if (typeof prevRangeEnd === \"undefined\" && start > 0 && range.start > 0) {\n                           groupMapOptions.skipped = range.outerStart;\n                       }\n\n                       takeIdx = skipIdx;\n                       while (true) {\n                           this._findGroupedRange(range.data, data, groupMapOptions, null, callback);\n                           currentDataLength = that._calculateGroupsTotal(data, true, \"currentItems\");\n\n                           if (currentDataLength >= groupMapOptions.take) {\n                               return data;\n                           }\n\n                           if (that._fetchingGroupItems) {\n                               return [];\n                           }\n                           takeIdx++;\n\n                           if (ranges[takeIdx] && ranges[takeIdx].outerStart === range.outerEnd) {\n                               range = ranges[takeIdx];\n                           } else {\n                               break;\n                           }\n                       }\n                   } else if (start >= range[startField] && start <= range[endField]) {\n                       count = 0;\n\n                       for (takeIdx = skipIdx; takeIdx < length; takeIdx++) {\n                           range = ranges[takeIdx];\n                           flatData = that._flatData(range.data, true);\n\n                           if (flatData.length && start + count >= range.start) {\n                               rangeData = range.data;\n                               rangeEnd = range.end;\n\n                               if (!remote) {\n                                   if (options.inPlaceSort) {\n                                       processed = that._queryProcess(range.data, { filter: that.filter() });\n                                   } else {\n                                       var sort = normalizeGroupWithoutCompare(that.group() || []).concat(normalizeSort(that.sort() || []));\n                                       processed = that._queryProcess(range.data, { sort: sort, filter: that.filter() });\n                                   }\n                                   flatData = rangeData = processed.data;\n\n                                   if (processed.total !== undefined$1) {\n                                       rangeEnd = processed.total;\n                                   }\n                               }\n\n                               startIndex = 0;\n                               if (start + count > range.start) {\n                                   startIndex = (start + count) - range.start;\n                               }\n                               endIndex = flatData.length;\n                               if (rangeEnd > end) {\n                                   endIndex = endIndex - (rangeEnd - end);\n                               }\n                               count += endIndex - startIndex;\n                               data = that._mergeGroups(data, rangeData, startIndex, endIndex);\n\n                               if (end <= range.end && count == end - start) {\n                                   return data;\n                               }\n                           }\n                       }\n                       break;\n                   }\n                   prevRangeEnd = range.outerEnd;\n               }\n               return [];\n           },\n\n           _getRangesMismatch: function(pageSkip) {\n               var that = this;\n               var ranges = that._ranges;\n               var mismatch = 0;\n               var i = 0;\n\n               while (true) {\n                   var range = ranges[i];\n                   if (!range || range.outerStart > pageSkip) {\n                       break;\n                   }\n\n                   if (range.outerEnd != range.end) {\n                       mismatch = range.outerEnd - range.end;\n                   }\n                   i++;\n               }\n\n               return mismatch;\n           },\n\n           _mergeGroups: function(data, range, skip, take) {\n               if (this._isServerGrouped()) {\n                   var temp = range.toJSON(),\n                       prevGroup;\n\n                   if (data.length) {\n                       prevGroup = data[data.length - 1];\n                   }\n\n                   mergeGroups(prevGroup, temp, skip, take);\n\n                   return data.concat(temp);\n               }\n               return data.concat(range.slice(skip, take));\n           },\n\n           _processRangeData: function(data, skip, take, pageSkip, size, eventData) {\n               var that = this;\n\n               that._pending = undefined$1;\n\n               that._skip = skip > that.skip() && !that._omitPrefetch ? math.min(size, (that.totalPages() - 1) * that.take()) : pageSkip;\n\n               that._currentRangeStart = skip;\n\n               that._take = take;\n\n               var paging = that.options.serverPaging;\n               var sorting = that.options.serverSorting;\n               var filtering = that.options.serverFiltering;\n               var aggregates = that.options.serverAggregates;\n               try {\n                   that.options.serverPaging = true;\n                   if (!that._isServerGrouped() && !(that.group() && that.group().length)) {\n                       that.options.serverSorting = true;\n                   }\n                   that.options.serverFiltering = true;\n                   that.options.serverPaging = true;\n                   that.options.serverAggregates = true;\n\n                   if (paging) {\n                       that._detachObservableParents();\n                       that._data = data = that._observe(data);\n                   }\n                   that._process(data, eventData);\n               } finally {\n                   that.options.serverPaging = paging;\n                   that.options.serverSorting = sorting;\n                   that.options.serverFiltering = filtering;\n                   that.options.serverAggregates = aggregates;\n               }\n           },\n\n           skip: function() {\n               var that = this;\n\n               if (that._skip === undefined$1) {\n                   return (that._page !== undefined$1 ? (that._page - 1) * (that.take() || 1) : undefined$1);\n               }\n               return that._skip;\n           },\n\n           currentRangeStart: function() {\n               return this._currentRangeStart || 0;\n           },\n\n           take: function() {\n               return this._take || this._pageSize;\n           },\n\n           _prefetchSuccessHandler: function(skip, size, callback, force) {\n               var that = this;\n               var timestamp = that._timeStamp();\n\n               return function(data) {\n                   var found = false,\n                       range = { start: skip, end: size, data: [], timestamp: that._timeStamp() },\n                       idx,\n                       length,\n                       temp;\n\n                   that._dequeueRequest();\n\n                   that.trigger(REQUESTEND, { response: data, type: \"read\" });\n\n                   data = that.reader.parse(data);\n\n                   temp = that._readData(data);\n\n                   if (temp.length) {\n                       for (idx = 0, length = that._ranges.length; idx < length; idx++) {\n                           if (that._ranges[idx].start === skip) {\n                               found = true;\n                               range = that._ranges[idx];\n\n                               if (!that._isGroupPaged()) {\n                                   range.pristineData = temp;\n                                   range.data = that._observe(temp);\n                                   range.end = range.start + that._flatData(range.data, true).length;\n                                   that._sortRanges();\n                               }\n\n                               break;\n                           }\n                       }\n\n                       if (!found) {\n                           that._addRange(that._observe(temp), skip);\n                       }\n                   }\n\n                   that._total = that.reader.total(data);\n\n                   if (force || (timestamp >= that._currentRequestTimeStamp || !that._skipRequestsInProgress)) {\n                       if (callback && temp.length) {\n                           callback();\n                       } else {\n                           that.trigger(CHANGE, {});\n                       }\n                   }\n               };\n           },\n\n           prefetch: function(skip, take, callback) {\n               var that = this,\n                   size = math.min(skip + take, that.total()),\n                   options = {\n                       take: take,\n                       skip: skip,\n                       page: skip / take + 1,\n                       pageSize: take,\n                       sort: that._sort,\n                       filter: that._filter,\n                       group: that._group,\n                       aggregate: that._aggregate\n                   };\n\n\n               if ((that._isGroupPaged() && !that._isServerGrouped() && that._groupRangeExists(skip, size))) {\n                   if (callback) {\n                       callback();\n                   }\n                   return;\n               }\n\n               if ((that._isServerGroupPaged() && !that._groupRangeExists(skip, size)) || !that._rangeExists(skip, size)) {\n                   clearTimeout(that._timeout);\n\n                   that._timeout = setTimeout(function() {\n                       that._queueRequest(options, function() {\n                           if (!that.trigger(REQUESTSTART, { type: \"read\" })) {\n                               if (that._omitPrefetch) {\n                                   that.trigger(PROGRESS);\n                               }\n                               that.transport.read({\n                                   data: that._params(options),\n                                   success: that._prefetchSuccessHandler(skip, size, callback),\n                                   error: function() {\n                                       var args = slice.call(arguments);\n                                       that.error.apply(that, args);\n                                   }\n                               });\n                           } else {\n                               that._dequeueRequest();\n                           }\n                       });\n                   }, 100);\n               } else if (callback) {\n                   callback();\n               }\n           },\n\n           _multiplePrefetch: function(skip, take, callback) {\n               var that = this,\n                   size = math.min(skip + take, that.total()),\n                   options = {\n                       take: take,\n                       skip: skip,\n                       page: skip / take + 1,\n                       pageSize: take,\n                       sort: that._sort,\n                       filter: that._filter,\n                       group: that._group,\n                       aggregate: that._aggregate\n                   };\n\n               if (!that._rangeExists(skip, size)) {\n                   if (!that.trigger(REQUESTSTART, { type: \"read\" })) {\n                       that.transport.read({\n                           data: that._params(options),\n                           success: that._prefetchSuccessHandler(skip, size, callback, true)\n                       });\n                   }\n               } else if (callback) {\n                   callback();\n               }\n           },\n\n           _adjustPageSkip: function(start, take) {\n               var that = this;\n               var prevRange = that._getPrevRange(start);\n               var result;\n               var total = that.total();\n               var mismatch;\n\n               if (prevRange) {\n                   mismatch = that._getRangesMismatch(start);\n\n                   if (!mismatch) {\n                       return start;\n                   }\n                   start -= mismatch;\n               }\n               result = math.max(math.floor(start / take), 0) * take;\n\n               if (result > total) {\n                   while (true) {\n                       result -= take;\n                       if (result < total) {\n                           break;\n                       }\n                   }\n               }\n               return result;\n           },\n\n           _getNextRange: function(end) {\n               var that = this,\n                   ranges = that._ranges,\n                   idx,\n                   length;\n\n               for (idx = 0, length = ranges.length; idx < length; idx++) {\n                   if (ranges[idx].start <= end && ranges[idx].end >= end) {\n                       return ranges[idx];\n                   }\n               }\n           },\n\n           _getPrevRange: function(start) {\n               var that = this,\n                   ranges = that._ranges,\n                   idx,\n                   range,\n                   length = ranges.length;\n\n               for (idx = length - 1; idx >= 0; idx--) {\n                   if (ranges[idx].outerStart <= start) {\n                       range = ranges[idx];\n                       break;\n                   }\n\n               }\n\n               return range;\n           },\n\n           _rangeExists: function(start, end) {\n               var that = this,\n                   ranges = that._ranges,\n                   idx,\n                   length;\n\n               for (idx = 0, length = ranges.length; idx < length; idx++) {\n                   if (ranges[idx].start <= start && ranges[idx].end >= end) {\n                       return true;\n                   }\n               }\n\n               return false;\n           },\n\n           _groupRangeExists: function(start, end) {\n               var that = this,\n                   ranges = that._ranges,\n                   idx,\n                   length,\n                   availableItemsCount = 0,\n                   total = that.groupsTotal(true);\n\n               if (end > total && !that._isServerGrouped()) {\n                   end = total;\n               }\n\n               for (idx = 0, length = ranges.length; idx < length; idx++) {\n                   var range = ranges[idx];\n                   if (range.outerStart <= start && range.outerEnd >= start) {\n                       availableItemsCount += range.outerEnd - start;\n                   } else if (range.outerStart <= end && range.outerEnd >= end) {\n                       availableItemsCount += end - range.outerStart;\n                   }\n               }\n\n               return availableItemsCount >= end - start;\n           },\n\n           _getCurrentRangeSpan: function() {\n               var that = this;\n               var ranges = that._ranges;\n               var start = that.currentRangeStart();\n               var end = start + (that.take() || 0);\n               var rangeSpan = [];\n               var range;\n               var idx;\n               var length = ranges.length;\n\n               for (idx = 0; idx < length; idx++) {\n                   range = ranges[idx];\n\n                   if ((range.start <= start && range.end >= start) || (range.start >= start && range.start <= end)) {\n                       rangeSpan.push(range);\n                   }\n               }\n\n               return rangeSpan;\n           },\n\n           _removeModelFromRanges: function(model) {\n               var that = this;\n               var range;\n\n               for (var idx = 0, length = this._ranges.length; idx < length; idx++) {\n                   range = this._ranges[idx];\n\n                   that._removeModelFromRange(range, model);\n               }\n\n               that._updateRangesLength();\n           },\n\n           _removeModelFromRange: function(range, model) {\n               this._eachItem(range.data, function(data) {\n                   if (!data) {\n                       return;\n                   }\n                   for (var idx = 0; idx < data.length; idx++) {\n                       var dataItem = data[idx];\n\n                       if (dataItem.uid && dataItem.uid == model.uid) {\n                           [].splice.call(data, idx, 1);\n                           break;\n                       }\n                   }\n               });\n           },\n\n           _insertModelInRange: function(index, model) {\n               var that = this;\n               var ranges = that._ranges || [];\n               var rangesLength = ranges.length;\n               var range;\n               var i;\n\n               for (i = 0; i < rangesLength; i++) {\n                   range = ranges[i];\n\n                   if (range.start <= index && range.end >= index) {\n                       if (!that._getByUid(model.uid, range.data)) {\n                           if (that._isServerGrouped()) {\n                               range.data.splice(index, 0, that._wrapInEmptyGroup(model));\n                           } else {\n                               range.data.splice(index, 0, model);\n                           }\n                       }\n\n                       break;\n                   }\n               }\n\n               that._updateRangesLength();\n           },\n\n           _updateRangesLength: function() {\n               var that = this;\n               var ranges = that._ranges || [];\n               var rangesLength = ranges.length;\n               var mismatchFound = false;\n               var mismatchLength = 0;\n               var lengthDifference = 0;\n               var rangeLength;\n               var range;\n               var i;\n\n               for (i = 0; i < rangesLength; i++) {\n                   range = ranges[i];\n                   rangeLength = that._isGroupPaged() ? range.data.length : that._flatData(range.data, true).length;\n                   lengthDifference = rangeLength - math.abs(range.end - range.start);\n\n                   if (!mismatchFound && lengthDifference !== 0) {\n                       mismatchFound = true;\n                       mismatchLength = lengthDifference;\n                       range.end += mismatchLength;\n                       continue;\n                   }\n\n                   if (mismatchFound) {\n                       range.start += mismatchLength;\n                       range.end += mismatchLength;\n                   }\n               }\n           },\n\n           _updateOuterRangesLength: function() {\n               var that = this;\n               var ranges = that._ranges || [];\n               var rangesLength = ranges.length;\n               var mismatchLength = 0;\n               var range;\n               var i;\n               var prevRange;\n               var rangeLength;\n\n               for (i = 0; i < rangesLength; i++) {\n                   range = ranges[i];\n                   rangeLength = that._isGroupPaged() ? that._calculateGroupsTotal(range.data, true, \"items\", true) : that._flatData(range.data, true).length;\n\n                   if (prevRange) {\n                       if (prevRange.end != range.start) {\n                           mismatchLength = range.start - prevRange.end;\n                       }\n                       range.outerStart = prevRange.outerEnd + mismatchLength;\n                       mismatchLength = 0;\n                   } else {\n                       range.outerStart = range.start;\n                   }\n\n                   range.outerEnd = range.outerStart + rangeLength;\n                   prevRange = range;\n               }\n           }\n       });\n\n       var Transport = {};\n\n       Transport.create = function(options, data, dataSource) {\n           var transport,\n               transportOptions = options.transport ? $.extend({}, options.transport) : null;\n\n           if (transportOptions) {\n               transportOptions.read = typeof transportOptions.read === STRING ? { url: transportOptions.read } : transportOptions.read;\n\n               if (options.type === \"jsdo\") {\n                   transportOptions.dataSource = dataSource;\n               }\n\n               if (options.type) {\n                   kendo.data.transports = kendo.data.transports || {};\n                   kendo.data.schemas = kendo.data.schemas || {};\n\n                   if (!kendo.data.transports[options.type]) {\n                       kendo.logToConsole(\"Unknown DataSource transport type '\" + options.type + \"'.\\nVerify that registration scripts for this type are included after Kendo UI on the page.\", \"warn\");\n                   } else if (!isPlainObject(kendo.data.transports[options.type])) {\n                       transport = new kendo.data.transports[options.type](extend(transportOptions, { data: data }));\n                   } else {\n                       transportOptions = extend(true, {}, kendo.data.transports[options.type], transportOptions);\n                   }\n\n                   options.schema = extend(true, {}, kendo.data.schemas[options.type], options.schema);\n               }\n\n               if (!transport) {\n                   transport = isFunction(transportOptions.read) ? transportOptions : new RemoteTransport(transportOptions);\n               }\n           } else {\n               transport = new LocalTransport({ data: options.data || [] });\n           }\n           return transport;\n       };\n\n       DataSource.create = function(options) {\n           if (isArray(options) || options instanceof ObservableArray) {\n              options = { data: options };\n           }\n\n           var dataSource = options || {},\n               data = dataSource.data,\n               fields = dataSource.fields,\n               table = dataSource.table,\n               select = dataSource.select,\n               idx,\n               length,\n               model = {},\n               field;\n\n           if (!data && fields && !dataSource.transport) {\n               if (table) {\n                   data = inferTable(table, fields);\n               } else if (select) {\n                   data = inferSelect(select, fields);\n\n                   if (dataSource.group === undefined$1 && data[0] && data[0].optgroup !== undefined$1) {\n                       dataSource.group = \"optgroup\";\n                   }\n               }\n           }\n\n           if (kendo.data.Model && fields && (!dataSource.schema || !dataSource.schema.model)) {\n               for (idx = 0, length = fields.length; idx < length; idx++) {\n                   field = fields[idx];\n                   if (field.type) {\n                       model[field.field] = field;\n                   }\n               }\n\n               if (!isEmptyObject(model)) {\n                   dataSource.schema = extend(true, dataSource.schema, { model: { fields: model } });\n               }\n           }\n\n           dataSource.data = data;\n\n           select = null;\n           dataSource.select = null;\n           table = null;\n           dataSource.table = null;\n\n           return dataSource instanceof DataSource ? dataSource : new DataSource(dataSource);\n       };\n\n       function inferSelect(select, fields) {\n           select = $(select)[0];\n           var options = select.options;\n           var firstField = fields[0];\n           var secondField = fields[1];\n\n           var data = [];\n           var idx, length;\n           var optgroup;\n           var option;\n           var record;\n           var value;\n\n           for (idx = 0, length = options.length; idx < length; idx++) {\n               record = {};\n               option = options[idx];\n               optgroup = option.parentNode;\n\n               if (optgroup === select) {\n                   optgroup = null;\n               }\n\n               if (option.disabled || (optgroup && optgroup.disabled)) {\n                   continue;\n               }\n\n               if (optgroup) {\n                   record.optgroup = optgroup.label;\n               }\n\n               record[firstField.field] = option.text;\n\n               value = option.attributes.value;\n\n               if (value && value.specified) {\n                   value = option.value;\n               } else {\n                   value = option.text;\n               }\n\n               record[secondField.field] = value;\n\n               data.push(record);\n           }\n\n           return data;\n       }\n\n       function inferTable(table, fields) {\n           var tbody = $(table)[0].tBodies[0],\n           rows = tbody ? tbody.rows : [],\n           idx,\n           length,\n           fieldIndex,\n           fieldCount = fields.length,\n           data = [],\n           cells,\n           record,\n           cell,\n           empty;\n\n           for (idx = 0, length = rows.length; idx < length; idx++) {\n               record = {};\n               empty = true;\n               cells = rows[idx].cells;\n\n               for (fieldIndex = 0; fieldIndex < fieldCount; fieldIndex++) {\n                   cell = cells[fieldIndex];\n                   if (cell.nodeName.toLowerCase() !== \"th\") {\n                       empty = false;\n                       record[fields[fieldIndex].field] = cell.innerHTML;\n                   }\n               }\n               if (!empty) {\n                   data.push(record);\n               }\n           }\n\n           return data;\n       }\n\n       var Node = Model.define({\n           idField: \"id\",\n\n           init: function(value) {\n               var that = this,\n                   hasChildren = that.hasChildren || value && value.hasChildren,\n                   childrenField = \"items\",\n                   childrenOptions = {};\n\n               kendo.data.Model.fn.init.call(that, value);\n\n               if (typeof that.children === STRING) {\n                   childrenField = that.children;\n               }\n\n               childrenOptions = {\n                   schema: {\n                       data: childrenField,\n                       model: {\n                           hasChildren: hasChildren,\n                           id: that.idField,\n                           fields: that.fields\n                       }\n                   }\n               };\n\n               if (typeof that.children !== STRING) {\n                   extend(childrenOptions, that.children);\n               }\n\n               childrenOptions.data = value;\n\n               if (!hasChildren) {\n                   hasChildren = childrenOptions.schema.data;\n               }\n\n               if (typeof hasChildren === STRING) {\n                   hasChildren = kendo.getter(hasChildren);\n               }\n\n               if (isFunction(hasChildren)) {\n                   var hasChildrenObject = hasChildren.call(that, that);\n\n                   if (hasChildrenObject && hasChildrenObject.length === 0) {\n                       that.hasChildren = false;\n                   } else {\n                       that.hasChildren = !!hasChildrenObject;\n                   }\n               }\n\n               that._childrenOptions = childrenOptions;\n\n               if (that.hasChildren) {\n                   that._initChildren();\n               }\n\n               that._loaded = !!(value && value._loaded);\n           },\n\n           _initChildren: function() {\n               var that = this;\n               var children, transport, parameterMap;\n\n               if (!(that.children instanceof HierarchicalDataSource)) {\n                   children = that.children = new HierarchicalDataSource(that._childrenOptions);\n\n                   transport = children.transport;\n                   parameterMap = transport.parameterMap;\n\n                   transport.parameterMap = function(data, type) {\n                       data[that.idField || \"id\"] = that.id;\n\n                       if (parameterMap) {\n                           data = parameterMap.call(that, data, type);\n                       }\n\n                       return data;\n                   };\n\n                   children.parent = function() {\n                       return that;\n                   };\n\n                   children.bind(CHANGE, function(e) {\n                       e.node = e.node || that;\n                       that.trigger(CHANGE, e);\n                   });\n\n                   children.bind(ERROR, function(e) {\n                       var collection = that.parent();\n\n                       if (collection) {\n                           e.node = e.node || that;\n                           collection.trigger(ERROR, e);\n                       }\n                   });\n\n                   children.bind(ITEMSLOADED, function(e) {\n                       var collection = that.parent();\n\n                       if (collection) {\n                           collection.trigger(ITEMSLOADED, e);\n                       }\n                   });\n\n                   that._updateChildrenField();\n               }\n           },\n\n           append: function(model) {\n               this._initChildren();\n               this.loaded(true);\n               this.children.add(model);\n           },\n\n           hasChildren: false,\n\n           level: function() {\n               var parentNode = this.parentNode(),\n                   level = 0;\n\n               while (parentNode && parentNode.parentNode) {\n                   level++;\n                   parentNode = parentNode.parentNode ? parentNode.parentNode() : null;\n               }\n\n               return level;\n           },\n\n           _updateChildrenField: function() {\n               var fieldName = this._childrenOptions.schema.data;\n\n               this[fieldName || \"items\"] = this.children.data();\n           },\n\n           _childrenLoaded: function() {\n               this._loaded = true;\n\n               this._updateChildrenField();\n           },\n\n           load: function() {\n               var options = {};\n               var method = \"_query\";\n               var children, promise;\n\n               if (this.hasChildren) {\n                   this._initChildren();\n\n                   children = this.children;\n\n                   options[this.idField || \"id\"] = this.id;\n\n                   if (!this._loaded) {\n                       children._data = undefined$1;\n                       method = \"read\";\n                   }\n\n                   children.one(CHANGE, this._childrenLoaded.bind(this));\n\n                   if (this._matchFilter) {\n                       options.filter = { field: '_matchFilter', operator: 'eq', value: true };\n                   }\n\n                   promise = children[method](options);\n                   if (!this._loaded) {\n                       this.trigger(ITEMLOAD, { promise: promise, node: this });\n                   }\n               } else {\n                   this.loaded(true);\n               }\n\n               return promise || $.Deferred().resolve().promise();\n           },\n\n           parentNode: function() {\n               var array = this.parent();\n\n               return array.parent();\n           },\n\n           loaded: function(value) {\n               if (value !== undefined$1) {\n                   this._loaded = value;\n               } else {\n                   return this._loaded;\n               }\n           },\n\n           shouldSerialize: function(field) {\n               return Model.fn.shouldSerialize.call(this, field) &&\n                       field !== \"children\" &&\n                       field !== \"_loaded\" &&\n                       field !== \"hasChildren\" &&\n                       field !== \"_childrenOptions\";\n           }\n       });\n\n       function dataMethod(name) {\n           return function() {\n               var data = this._data,\n                   result = DataSource.fn[name].apply(this, slice.call(arguments));\n\n               if (this._data != data) {\n                   this._attachBubbleHandlers();\n               }\n\n               return result;\n           };\n       }\n\n       var HierarchicalDataSource = DataSource.extend({\n           init: function(options) {\n               var node = Node.define({\n                   children: options\n               });\n\n               if (options.filter && !options.serverFiltering) {\n                   this._hierarchicalFilter = options.filter;\n                   options.filter = null;\n               }\n\n               DataSource.fn.init.call(this, extend(true, {}, { schema: { modelBase: node, model: node } }, options));\n\n               this._attachBubbleHandlers();\n           },\n\n           _attachBubbleHandlers: function() {\n               var that = this;\n\n               that._data.bind(ERROR, function(e) {\n                   that.trigger(ERROR, e);\n               });\n\n               that._data.bind(ITEMSLOADED, function(e) {\n                   that.trigger(ITEMSLOADED, e);\n               });\n           },\n\n           loading: function() {\n               if (this._data) {\n                   return this._data.loading() || this._childrenLoading();\n               }\n               return false;\n           },\n\n           _childrenLoading: function() {\n               var isLoading = false;\n               this._data.forEach(function(node) {\n                   if (node.hasChildren && node.children.loading()) {\n                       isLoading = true;\n                   }\n               });\n               return isLoading;\n           },\n\n           read: function(data) {\n               var result = DataSource.fn.read.call(this, data);\n\n               if (this._hierarchicalFilter) {\n                   if (this._data && this._data.length > 0) {\n                       this.filter(this._hierarchicalFilter);\n                   } else {\n                       this.options.filter = this._hierarchicalFilter;\n                       this._filter = normalizeFilter(this.options.filter);\n                       this._hierarchicalFilter = null;\n                   }\n               }\n\n               return result;\n           },\n\n           remove: function(node) {\n               var parentNode = node.parentNode(),\n                   dataSource = this,\n                   result;\n\n               if (parentNode && parentNode._initChildren) {\n                   dataSource = parentNode.children;\n               }\n\n               result = DataSource.fn.remove.call(dataSource, node);\n\n               if (parentNode && !dataSource.data().length) {\n                   parentNode.hasChildren = false;\n               }\n\n               return result;\n           },\n\n           success: dataMethod(\"success\"),\n\n           data: dataMethod(\"data\"),\n\n           insert: function(index, model) {\n               var parentNode = this.parent();\n\n               if (parentNode && parentNode._initChildren) {\n                   parentNode.hasChildren = true;\n                   parentNode._initChildren();\n               }\n\n               return DataSource.fn.insert.call(this, index, model);\n           },\n\n           filter: function(val) {\n               if (val === undefined$1) {\n                    return this._filter;\n               }\n\n               if (!this.options.serverFiltering && this._markHierarchicalQuery(val)) {\n                   val = { logic: \"or\", filters: [val, { field: '_matchFilter', operator: 'equals', value: true }] };\n               }\n\n               this.trigger(\"reset\");\n               this._query({ filter: val, page: 1 });\n           },\n\n           _markHierarchicalQuery: function(expressions) {\n               var compiled;\n               var accentFoldingFiltering = this.options.accentFoldingFiltering;\n\n               expressions = accentFoldingFiltering ? $.extend({}, normalizeFilter(expressions), { accentFoldingFiltering: accentFoldingFiltering }) : normalizeFilter(expressions);\n\n               if (!expressions || expressions.filters.length === 0) {\n                   this._updateHierarchicalFilter(function() {return true;});\n                   return false;\n               }\n\n               compiled = Query.filterExpr(expressions, { noEval: true });\n\n               this._updateHierarchicalFilter(compiled);\n               return true;\n           },\n\n            _updateHierarchicalFilter: function(filter) {\n               var current;\n               var data = this._data;\n               var result = false;\n\n               for (var idx = 0; idx < data.length; idx++) {\n                    current = data[idx];\n\n                    if (current.hasChildren) {\n                        current._matchFilter = current.children._updateHierarchicalFilter(filter);\n                       if (!current._matchFilter) {\n                           current._matchFilter = filter(current);\n                       }\n                   } else {\n                       current._matchFilter = filter(current);\n                   }\n\n                   if (current._matchFilter) {\n                       result = true;\n                   }\n               }\n               return result;\n           },\n\n           _find: function(method, value) {\n               var idx, length, node, children;\n               var data = this._data;\n\n               if (!data) {\n                   return;\n               }\n\n               node = DataSource.fn[method].call(this, value);\n\n               if (node) {\n                   return node;\n               }\n\n               data = this._flatData(this._data);\n\n               for (idx = 0, length = data.length; idx < length; idx++) {\n                   children = data[idx].children;\n\n                   if (!(children instanceof HierarchicalDataSource)) {\n                       continue;\n                   }\n\n                   node = children[method](value);\n\n                   if (node) {\n                       return node;\n                   }\n               }\n           },\n\n           get: function(id) {\n               return this._find(\"get\", id);\n           },\n\n           getByUid: function(uid) {\n               return this._find(\"getByUid\", uid);\n           }\n       });\n\n       function inferList(list, fields) {\n           var items = $(list).children(),\n               idx,\n               length,\n               data = [],\n               record,\n               textField = fields[0].field,\n               urlField = fields[1] && fields[1].field,\n               spriteCssClassField = fields[2] && fields[2].field,\n               imageUrlField = fields[3] && fields[3].field,\n               item,\n               id,\n               textChild,\n               className,\n               children;\n\n           function elements(collection, tagName) {\n               return collection.filter(tagName).add(collection.find(tagName));\n           }\n\n           for (idx = 0, length = items.length; idx < length; idx++) {\n               record = { _loaded: true };\n               item = items.eq(idx);\n\n               textChild = item[0].firstChild;\n               children = item.children();\n               list = children.filter(\"ul\");\n               children = children.filter(\":not(ul)\");\n\n               id = item.attr(\"data-id\");\n\n               if (id) {\n                   record.id = id;\n               }\n\n               if (textChild) {\n                   record[textField] = textChild.nodeType == 3 ? textChild.nodeValue : children.text();\n               }\n\n               if (urlField) {\n                   record[urlField] = elements(children, \"a\").attr(\"href\");\n               }\n\n               if (imageUrlField) {\n                   record[imageUrlField] = elements(children, \"img\").attr(\"src\");\n               }\n\n               if (spriteCssClassField) {\n                   className = elements(children, \".k-sprite\").prop(\"className\");\n                   record[spriteCssClassField] = className && kendo.trim(className.replace(\"k-sprite\", \"\"));\n               }\n\n               if (list.length) {\n                   record.items = inferList(list.eq(0), fields);\n               }\n\n               if (item.attr(\"data-hasChildren\") == \"true\") {\n                   record.hasChildren = true;\n               }\n\n               data.push(record);\n           }\n\n           return data;\n       }\n\n       HierarchicalDataSource.create = function(options) {\n           options = options && options.push ? { data: options } : options;\n\n           var dataSource = options || {},\n               data = dataSource.data,\n               fields = dataSource.fields,\n               list = dataSource.list;\n\n           if (data && data._dataSource) {\n               return data._dataSource;\n           }\n\n           if (!data && fields && !dataSource.transport) {\n               if (list) {\n                   data = inferList(list, fields);\n               }\n           }\n\n           dataSource.data = data;\n\n           return dataSource instanceof HierarchicalDataSource ? dataSource : new HierarchicalDataSource(dataSource);\n       };\n\n       var Buffer = kendo.Observable.extend({\n           init: function(dataSource, viewSize, disablePrefetch) {\n               kendo.Observable.fn.init.call(this);\n\n               this._prefetching = false;\n               this.dataSource = dataSource;\n               this.prefetch = !disablePrefetch;\n\n               var buffer = this;\n\n               dataSource.bind(\"change\", function() {\n                   buffer._change();\n               });\n\n               dataSource.bind(\"reset\", function() {\n                   buffer._reset();\n               });\n\n               this._syncWithDataSource();\n\n               this.setViewSize(viewSize);\n           },\n\n           setViewSize: function(viewSize) {\n               this.viewSize = viewSize;\n               this._recalculate();\n           },\n\n           at: function(index) {\n               var pageSize = this.pageSize,\n                   itemPresent = true;\n\n               if (index >= this.total()) {\n                   this.trigger(\"endreached\", { index: index });\n                   return null;\n               }\n\n               if (!this.useRanges) {\n                  return this.dataSource.view()[index];\n               }\n               if (this.useRanges) {\n                   // out of range request\n                   if (index < this.dataOffset || index >= this.skip + pageSize) {\n                       itemPresent = this.range(Math.floor(index / pageSize) * pageSize);\n                   }\n\n                   // prefetch\n                   if (index === this.prefetchThreshold) {\n                       this._prefetch();\n                   }\n\n                   // mid-range jump - prefetchThreshold and nextPageThreshold may be equal, do not change to else if\n                   if (index === this.midPageThreshold) {\n                       this.range(this.nextMidRange, true);\n                   }\n                   // next range jump\n                   else if (index === this.nextPageThreshold) {\n                       this.range(this.nextFullRange);\n                   }\n                   // pull-back\n                   else if (index === this.pullBackThreshold) {\n                       if (this.offset === this.skip) { // from full range to mid range\n                           this.range(this.previousMidRange);\n                       } else { // from mid range to full range\n                           this.range(this.previousFullRange);\n                       }\n                   }\n\n                   if (itemPresent) {\n                       return this.dataSource.at(index - this.dataOffset);\n                   } else {\n                       this.trigger(\"endreached\", { index: index });\n                       return null;\n                   }\n               }\n           },\n\n           indexOf: function(item) {\n               return this.dataSource.data().indexOf(item) + this.dataOffset;\n           },\n\n           total: function() {\n               return parseInt(this.dataSource.total(), 10);\n           },\n\n           next: function() {\n               var buffer = this,\n                   pageSize = buffer.pageSize,\n                   offset = buffer.skip - buffer.viewSize + pageSize,\n                   pageSkip = math.max(math.floor(offset / pageSize), 0) * pageSize;\n\n               this.offset = offset;\n               this.dataSource.prefetch(pageSkip, pageSize, function() {\n                   buffer._goToRange(offset, true);\n               });\n           },\n\n           range: function(offset, nextRange) {\n               if (this.offset === offset) {\n                   return true;\n               }\n\n               var buffer = this,\n                   pageSize = this.pageSize,\n                   pageSkip = math.max(math.floor(offset / pageSize), 0) * pageSize,\n                   dataSource = this.dataSource;\n\n               if (nextRange) {\n                   pageSkip += pageSize;\n               }\n\n               if (dataSource.inRange(offset, pageSize)) {\n                   this.offset = offset;\n                   this._recalculate();\n                   this._goToRange(offset);\n                   return true;\n               } else if (this.prefetch) {\n                   dataSource.prefetch(pageSkip, pageSize, function() {\n                       buffer.offset = offset;\n                       buffer._recalculate();\n                       buffer._goToRange(offset, true);\n                   });\n                   return false;\n               }\n\n               return true;\n           },\n\n           syncDataSource: function() {\n               var offset = this.offset;\n               this.offset = null;\n               this.range(offset);\n           },\n\n           destroy: function() {\n               this.unbind();\n           },\n\n           _prefetch: function() {\n               var buffer = this,\n                   pageSize = this.pageSize,\n                   prefetchOffset = this.skip + pageSize,\n                   dataSource = this.dataSource;\n\n               if (!dataSource.inRange(prefetchOffset, pageSize) && !this._prefetching && this.prefetch) {\n                   this._prefetching = true;\n                   this.trigger(\"prefetching\", { skip: prefetchOffset, take: pageSize });\n\n                   dataSource.prefetch(prefetchOffset, pageSize, function() {\n                       buffer._prefetching = false;\n                       buffer.trigger(\"prefetched\", { skip: prefetchOffset, take: pageSize });\n                   });\n               }\n           },\n\n           _goToRange: function(offset, expanding) {\n               if (this.offset !== offset) {\n                   return;\n               }\n\n               this.dataOffset = offset;\n               this._expanding = expanding;\n               this.dataSource.range(offset, this.pageSize);\n               this.dataSource.enableRequestsInProgress();\n           },\n\n           _reset: function() {\n               this._syncPending = true;\n           },\n\n           _change: function() {\n               var dataSource = this.dataSource;\n\n               this.length = this.useRanges ? dataSource.lastRange().end : dataSource.view().length;\n\n               if (this._syncPending) {\n                   this._syncWithDataSource();\n                   this._recalculate();\n                   this._syncPending = false;\n                   this.trigger(\"reset\", { offset: this.offset });\n               }\n\n               this.trigger(\"resize\");\n\n               if (this._expanding) {\n                   this.trigger(\"expand\");\n               }\n\n               delete this._expanding;\n           },\n\n           _syncWithDataSource: function() {\n               var dataSource = this.dataSource;\n\n               this._firstItemUid = dataSource.firstItemUid();\n               this.dataOffset = this.offset = dataSource.skip() || 0;\n               this.pageSize = dataSource.pageSize();\n               this.useRanges = dataSource.options.serverPaging;\n           },\n\n           _recalculate: function() {\n               var pageSize = this.pageSize,\n                   offset = this.offset,\n                   viewSize = this.viewSize,\n                   skip = Math.ceil(offset / pageSize) * pageSize;\n\n               this.skip = skip;\n               this.midPageThreshold = skip + pageSize - 1;\n               this.nextPageThreshold = skip + viewSize - 1;\n               this.prefetchThreshold = skip + Math.floor(pageSize / 3 * 2);\n               this.pullBackThreshold = this.offset - 1;\n\n               this.nextMidRange = skip + pageSize - viewSize;\n               this.nextFullRange = skip;\n               this.previousMidRange = offset - viewSize;\n               this.previousFullRange = skip - pageSize;\n           }\n       });\n\n       var BatchBuffer = kendo.Observable.extend({\n           init: function(dataSource, batchSize) {\n               var batchBuffer = this;\n\n               kendo.Observable.fn.init.call(batchBuffer);\n\n               this.dataSource = dataSource;\n               this.batchSize = batchSize;\n               this._total = 0;\n\n               this.buffer = new Buffer(dataSource, batchSize * 3);\n\n               this.buffer.bind({\n                   \"endreached\": function(e) {\n                       batchBuffer.trigger(\"endreached\", { index: e.index });\n                   },\n                   \"prefetching\": function(e) {\n                       batchBuffer.trigger(\"prefetching\", { skip: e.skip, take: e.take });\n                   },\n                   \"prefetched\": function(e) {\n                       batchBuffer.trigger(\"prefetched\", { skip: e.skip, take: e.take });\n                   },\n                   \"reset\": function() {\n                       batchBuffer._total = 0;\n                       batchBuffer.trigger(\"reset\");\n                   },\n                   \"resize\": function() {\n                       batchBuffer._total = Math.ceil(this.length / batchBuffer.batchSize);\n                       batchBuffer.trigger(\"resize\", { total: batchBuffer.total(), offset: this.offset });\n                   }\n               });\n           },\n\n           syncDataSource: function() {\n               this.buffer.syncDataSource();\n           },\n\n           at: function(index) {\n               var buffer = this.buffer,\n                   skip = index * this.batchSize,\n                   take = this.batchSize,\n                   view = [],\n                   item;\n\n               if (buffer.offset > skip) {\n                   buffer.at(buffer.offset - 1);\n               }\n\n               for (var i = 0; i < take; i++) {\n                   item = buffer.at(skip + i);\n\n                   if (item === null) {\n                       break;\n                   }\n\n                   view.push(item);\n               }\n\n               return view;\n           },\n\n           total: function() {\n               return this._total;\n           },\n\n           destroy: function() {\n               this.buffer.destroy();\n               this.unbind();\n           }\n       });\n\n       extend(true, kendo.data, {\n           readers: {\n               json: DataReader\n           },\n           Query: Query,\n           DataSource: DataSource,\n           HierarchicalDataSource: HierarchicalDataSource,\n           Node: Node,\n           Comparer: Comparer,\n           ObservableObject: ObservableObject,\n           ObservableArray: ObservableArray,\n           LazyObservableArray: LazyObservableArray,\n           LocalTransport: LocalTransport,\n           RemoteTransport: RemoteTransport,\n           Cache: Cache,\n           DataReader: DataReader,\n           Model: Model,\n           Buffer: Buffer,\n           BatchBuffer: BatchBuffer\n       });\n   })(window.kendo.jQuery);\n\n}));\n"]}