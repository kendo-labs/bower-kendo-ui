{"version":3,"file":"kendo.dateinput.min.js","names":["factory","define","amd","$","undefined$1","kendo","window","caret","ui","Widget","keys","ns","objectToString","toString","isPlainObject","INPUT_EVENT_NAME","support","propertyChangeEvent","FOCUSED","STATEDISABLED","STATEINVALID","DISABLED","READONLY","CHANGE","knownSymbols","DateInput","extend","init","element","options","that","this","fn","call","format","_extractFormat","getCulture","culture","calendars","standard","patterns","d","min","parseDate","attr","max","wrapperClass","parent","skipStyling","indexOf","wrapper","wrap","addClass","className","removeClass","style","cssText","css","height","_validationIcon","icon","iconClass","insertAfter","_form","on","_change","setAttribute","e","type","is","parents","enable","readonly","value","val","_applyCssClasses","label","_label","notify","name","Date","messages","year","month","day","weekday","hour","minute","second","dayperiod","size","fillMode","rounded","events","setOptions","_unbindInput","_bindInput","_updateElementValue","_inputLabel","_unwrapFloating","remove","destroy","off","_formElement","_resetHandler","_dateTime","getDateObject","getTime","customDateTime","_oldValue","floatingLabel","refresh","stringAndFormat","toPair","_oldText","_format","_toggleDateMask","toShow","_hasDateInput","_editable","disable","labelOptions","content","Label","widget","floatCheck","document","activeElement","_paste","bind","_keydown","_input","_mouseUp","_scroll","length","removeAttribute","oldValue","trigger","blinkInvalid","_activeElement","diff","oldText","oldFormat","newText","oldTextSeparator","substring","i","push","deletedSymbol","symbol","Math","approximateStringMatching","navigationOnly","valid","parsePart","_selectSegment","difSym","setTimeout","keyCode","preventDefault","_blinkInvalidState","_addInvalidState","clearTimeout","_invalidStateTimeout","_removeInvalidState","selection","_selectNearestSegment","newEvent","event","shiftKey","wheelDelta","detail","returnValue","stopPropagation","formId","form","closest","initialValue","key","dir","index","interval","modifyPart","browser","msie","version","keycode","which","ENTER","start","j","begin","end","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","concat","plugin","initDate","initFormat","initCulture","initMessages","date","hours","minutes","seconds","typedMonthPart","typedDayPeriodPart","placeholders","zeros","pad","number","digits","dateFormatRegExp","months","calendar","days","returnsFormat","matcher","match","mins","sign","result","getDate","namesAbbr","getDay","names","getMonth","getFullYear","getHours","getMinutes","getSeconds","floor","getMilliseconds","AM","PM","getTimezoneOffset","abs","split","slice","formatResult","generateMatcher","retFormat","setExisting","setMonth","setValue","getValue","offset","newValue","setFullYear","newMonth","setDate","setHours","setMinutes","setSeconds","currentChar","newHours","lastDateOfMonth","newDate","parseInt","isNaN","monthNames","toLowerCase","newYear","newMinutes","newSeconds","replace","sampleFormat","jQuery"],"sources":["kendo.dateinput.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.label', 'kendo.icons'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"dateinput\",\n        name: \"DateInput\",\n        category: \"web\",\n        description: \"The DateInput widget allows to edit date by typing.\",\n        depends: [ \"core\", \"label\" ]\n    };\n\n    (function($, undefined$1) {\n        var global = window;\n        var kendo = global.kendo;\n        var caret = kendo.caret;\n        var ui = kendo.ui;\n        var Widget = ui.Widget;\n        var keys = kendo.keys;\n        var ns = \".kendoDateInput\";\n        var objectToString = {}.toString;\n        var isPlainObject = $.isPlainObject;\n\n        var INPUT_EVENT_NAME = (kendo.support.propertyChangeEvent ? \"propertychange.kendoDateInput input\" : \"input\") + ns;\n\n        var FOCUSED = \"k-focus\";\n        var STATEDISABLED = \"k-disabled\";\n        var STATEINVALID = \"k-invalid\";\n\n        var DISABLED = \"disabled\";\n        var READONLY = \"readonly\";\n        var CHANGE = \"change\";\n\n        var knownSymbols = \"dMyHhmftsz\";\n\n        var DateInput = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n                element = that.element;\n\n                options = that.options;\n                options.format = kendo._extractFormat(options.format || kendo.getCulture(options.culture).calendars.standard.patterns.d);\n                options.min = kendo.parseDate(element.attr(\"min\")) || kendo.parseDate(options.min);\n                options.max = kendo.parseDate(element.attr(\"max\")) || kendo.parseDate(options.max);\n\n                var wrapperClass = (element.parent().attr(\"class\") || \"\");\n                var skipStyling = wrapperClass.indexOf(\"picker\") >= 0 && wrapperClass.indexOf(\"rangepicker\") < 0;\n\n                that.wrapper = element.wrap(\"<span class='k-dateinput k-input'></span>\").parent();\n                if (skipStyling) {\n                    that.wrapper = that.wrapper.parent();\n                } else {\n                    that.wrapper.addClass(element[0].className).removeClass('input-validation-error');\n                }\n                that.wrapper[0].style.cssText = element[0].style.cssText;\n                element.css({\n                    height: element[0].style.height\n                });\n\n\n                that._validationIcon = $(kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-input-validation-icon k-hidden\" })).insertAfter(element);\n\n                that._form();\n\n                that.element\n                    .addClass(\"k-input-inner\")\n                    .attr(\"autocomplete\", \"off\")\n                    .on(\"focus\" + ns, function() {\n                        that.wrapper.addClass(FOCUSED);\n                    })\n                    .on(\"focusout\" + ns, function() {\n                        that.wrapper.removeClass(FOCUSED);\n                        that._change();\n                    });\n\n                try {\n                    element[0].setAttribute(\"type\", \"text\");\n                } catch (e) {\n                    element[0].type = \"text\";\n                }\n\n                var disabled = element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n\n                if (disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(element.is(\"[readonly]\"));\n                }\n                that.value(that.options.value || element.val());\n                if (!skipStyling) {\n                    that._applyCssClasses();\n                }\n\n                if (options.label) {\n                    that._label();\n                }\n\n                kendo.notify(that);\n            },\n\n            options: {\n                name: \"DateInput\",\n                culture: \"\",\n                value: \"\",\n                format: \"\",\n                min: new Date(1900, 0, 1),\n                max: new Date(2099, 11, 31),\n                messages: {\n                    \"year\": \"year\",\n                    \"month\": \"month\",\n                    \"day\": \"day\",\n                    \"weekday\": \"day of the week\",\n                    \"hour\": \"hours\",\n                    \"minute\": \"minutes\",\n                    \"second\": \"seconds\",\n                    \"dayperiod\": \"AM/PM\"\n                },\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                label: null\n            },\n\n            events: [\n                CHANGE\n            ],\n\n            min: function(value) {\n                if (value !== undefined$1) {\n                    this.options.min = value;\n                } else {\n                    return this.options.min;\n                }\n            },\n\n            max: function(value) {\n                if (value !== undefined$1) {\n                    this.options.max = value;\n                } else {\n                    return this.options.max;\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                Widget.fn.setOptions.call(that, options);\n                this._unbindInput();\n                this._bindInput();\n                this._updateElementValue();\n\n                if (options.label && that._inputLabel) {\n                    that.label.setOptions(options.label);\n                } else if (options.label === false) {\n                    that.label._unwrapFloating();\n                    that._inputLabel.remove();\n                    delete that._inputLabel;\n                } else if (options.label) {\n                    that._label();\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n                that.element.off(ns);\n\n                if (that._formElement) {\n                    that._formElement.off(\"reset\", that._resetHandler);\n                }\n\n                if (that.label) {\n                    that.label.destroy();\n                }\n\n                Widget.fn.destroy.call(that);\n            },\n\n            value: function(value) {\n                if (value === undefined$1) {\n                    return this._dateTime.getDateObject();\n                }\n\n                if (value === null) {\n                    value = \"\";\n                }\n\n                if (objectToString.call(value) !== \"[object Date]\") {\n                    value = kendo.parseDate(value, this.options.format, this.options.culture);\n                }\n\n                if (value && !value.getTime()) {\n                    value = null;\n                }\n\n                this._dateTime = new customDateTime(value, this.options.format, this.options.culture, this.options.messages);\n\n                this._updateElementValue();\n                this._oldValue = value;\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.refresh();\n                }\n            },\n\n            _updateElementValue: function() {\n                var stringAndFormat = this._dateTime.toPair(this.options.format, this.options.culture, this.options.messages);\n                this.element.val(stringAndFormat[0]);\n                this._oldText = stringAndFormat[0];\n                this._format = stringAndFormat[1];\n            },\n\n            _toggleDateMask: function(toShow) {\n                var that = this;\n\n                if (toShow) {\n                    that._updateElementValue();\n                } else {\n                    this.element.val(\"\");\n                }\n            },\n\n            _hasDateInput: function() {\n                var emptyInput = (new customDateTime(null, this.options.format, this.options.culture, this.options.messages))\n                                    .toPair(this.options.format, this.options.culture, this.options.messages)[0];\n                var currentInput = this._dateTime.toPair(this.options.format, this.options.culture, this.options.messages)[0];\n\n                return emptyInput !== currentInput;\n            },\n\n            readonly: function(readonly) {\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            _label: function() {\n                var that = this;\n                var options = that.options;\n                var labelOptions = isPlainObject(options.label) ? options.label : {\n                    content: options.label\n                };\n\n                that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                    widget: that,\n                    floatCheck: function () {\n                        that._toggleDateMask(true);\n\n                        if (!that.value() && !that._hasDateInput() && document.activeElement !== that.element[0]) {\n                            that._toggleDateMask(false);\n                            return true;\n                        }\n\n                        return false;\n                    }\n                }));\n\n                that._inputLabel = that.label.element;\n            },\n\n            _bindInput: function() {\n                var that = this;\n                that.element\n                    .on(\"focus\" + ns, function() {\n                        that.wrapper.addClass(FOCUSED);\n                    })\n                    .on(\"focusout\" + ns, function() {\n                        that.wrapper.removeClass(FOCUSED);\n                        that._change();\n                    })\n                    .on(\"paste\" + ns, that._paste.bind(that))\n                    .on(\"keydown\" + ns, that._keydown.bind(that))\n                    .on(INPUT_EVENT_NAME, that._input.bind(that))\n                    .on(\"mouseup\" + ns, that._mouseUp.bind(that))\n                    .on(\"DOMMouseScroll\" + ns + \" mousewheel\" + ns, that._scroll.bind(that));\n            },\n\n            _unbindInput: function() {\n                this.element\n                    .off(\"keydown\" + ns)\n                    .off(\"paste\" + ns)\n                    .off(\"focus\" + ns)\n                    .off(\"focusout\" + ns)\n                    .off(INPUT_EVENT_NAME)\n                    .off(\"mouseup\" + ns)\n                    .off(\"DOMMouseScroll\" + ns + \" mousewheel\" + ns);\n            },\n\n            _editable: function(options) {\n                var that = this;\n                var element = that.element;\n                var disable = options.disable;\n                var readonly = options.readonly;\n                var wrapper = that.wrapper;\n\n                that._unbindInput();\n\n                if (!readonly && !disable) {\n                    wrapper.removeClass(STATEDISABLED);\n                    if (element && element.length) {\n                        element[0].removeAttribute(DISABLED);\n                        element[0].removeAttribute(READONLY);\n                    }\n\n                    that._bindInput();\n                } else {\n                    if (disable) {\n                        wrapper.addClass(STATEDISABLED);\n                        element.attr(DISABLED, disable);\n                        if (element && element.length) {\n                            element[0].removeAttribute(READONLY);\n                        }\n                    }\n                    if (readonly) {\n                        element.attr(READONLY, readonly);\n                    }\n                }\n            },\n\n            _change: function() {\n                var that = this;\n                var oldValue = that._oldValue;\n                var value = that.value();\n\n                if (value && that.min() && value < that.min()) {\n                    that.value(that.min());\n                    value = that.value();\n                }\n                if (value && that.max() && value > that.max()) {\n                    that.value(that.max());\n                    value = that.value();\n                }\n\n                if (oldValue && value && value.getTime() !== oldValue.getTime() ||\n                    oldValue && !value ||\n                    !oldValue && value\n                ) {\n                    that._oldValue = value;\n                    that.trigger(CHANGE);\n                    that.element.trigger(CHANGE);\n                }\n            },\n\n            _input: function() {\n                var that = this;\n                var element = that.element[0];\n                var blinkInvalid = false;\n\n                if (kendo._activeElement() !== element) {\n                    return;\n                }\n\n                var diff = approximateStringMatching(\n                    this._oldText,\n                    this._format,\n                    this.element[0].value,\n                    caret(this.element[0])[0]);\n\n                var navigationOnly = (diff.length === 1 && diff[0][1] === \" \");\n                if (!navigationOnly) {\n                    for (var i = 0; i < diff.length; i++) {\n                        var valid = this._dateTime.parsePart(diff[i][0], diff[i][1]);\n                        blinkInvalid = blinkInvalid || !valid;\n                    }\n                }\n                this._updateElementValue();\n\n                if (diff.length && diff[0][0] !== \" \") {\n                    this._selectSegment(diff[0][0]);\n\n                    //android fix\n                    if (!navigationOnly) {\n                        var difSym = diff[0][0];\n                        setTimeout(function() { that._selectSegment(difSym); });\n                    }\n                }\n                if (navigationOnly) {\n                    var newEvent = { keyCode: 39, preventDefault: function() { } };\n                    this._keydown(newEvent);\n                }\n                if (blinkInvalid) {\n                    that._blinkInvalidState();\n                }\n            },\n\n            _blinkInvalidState: function() {\n                var that = this;\n\n                that._addInvalidState();\n                clearTimeout(that._invalidStateTimeout);\n                that._invalidStateTimeout = setTimeout(that._removeInvalidState.bind(that), 100);\n            },\n\n            _addInvalidState: function() {\n                var that = this;\n\n                that.wrapper.addClass(STATEINVALID);\n                that._validationIcon.removeClass(\"k-hidden\");\n            },\n\n            _removeInvalidState: function() {\n                var that = this;\n\n                that.wrapper.removeClass(STATEINVALID);\n                that._validationIcon.addClass(\"k-hidden\");\n                that._invalidStateTimeout = null;\n            },\n\n            _mouseUp: function() {\n                var selection = caret(this.element[0]);\n                if (selection[0] === selection[1]) {\n                    this._selectNearestSegment();\n                }\n            },\n\n            _scroll: function(e) {\n                if (kendo._activeElement() !== this.element[0] || this.element.is(\"[readonly]\")) {\n                    return;\n                }\n                e = window.event || e;\n\n                var newEvent = { keyCode: 37, preventDefault: function() { } };\n\n                if (e.shiftKey) {\n                    newEvent.keyCode = (e.wheelDelta || -e.detail) > 0 ? 37 : 39;\n                } else {\n                    newEvent.keyCode = (e.wheelDelta || -e.detail) > 0 ? 38 : 40;\n                }\n                this._keydown(newEvent);\n                e.returnValue = false;\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n            },\n\n            _form: function() {\n                var that = this;\n                var element = that.element;\n                var formId = element.attr(\"form\");\n                var form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n                var initialValue = element[0].value;\n\n                if (!initialValue && that.options.value) {\n                    initialValue = that.options.value;\n                }\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        setTimeout(function() {\n                            that.value(initialValue);\n                        });\n                    };\n\n                    that._formElement = form.on(\"reset\", that._resetHandler);\n                }\n            },\n\n            _paste: function(e) {\n                e.preventDefault();\n            },\n\n            _keydown: function(e) {\n                var key = e.keyCode;\n                var selection;\n                if (key == 37 || key == 39) { //left/right\n                    e.preventDefault();\n                    selection = caret(this.element[0]);\n                    if (selection[0] != selection[1]) {\n                        this._selectNearestSegment();\n                    }\n                    var dir = (key == 37) ? -1 : 1;\n                    var index = (dir == -1) ? caret(this.element[0])[0] - 1 : caret(this.element[0])[1] + 1;\n                    while (index >= 0 && index < this._format.length) {\n                        if (knownSymbols.indexOf(this._format[index]) >= 0) {\n                            this._selectSegment(this._format[index]);\n                            break;\n                        }\n                        index += dir;\n                    }\n                }\n                if (key == 38 || key == 40) { //up/down\n                    e.preventDefault();\n                    selection = caret(this.element[0]);\n                    var symbol = this._format[selection[0]];\n                    if (knownSymbols.indexOf(symbol) >= 0) {\n                        var interval = 1;\n                        if (symbol == 'm') {\n                            interval = this.options.interval || 1;\n                        }\n                        this._dateTime.modifyPart(symbol, key == 38 ? interval * 1 : interval * -1);\n                        this._updateElementValue();\n                        this._selectSegment(symbol);\n                        this.element.trigger(CHANGE);\n                    }\n                }\n                if (kendo.support.browser.msie && kendo.support.browser.version < 10) {\n                    var keycode = e.keyCode ? e.keyCode : e.which;\n                    if (keycode === 8 || keycode === 46) {\n                        var that = this;\n                        setTimeout(function() {\n                            that._input();\n                        }, 0);\n                    }\n                }\n                if (key === keys.ENTER) {\n                    this._change();\n                }\n            },\n\n            _selectNearestSegment: function() {\n                var selection = caret(this.element[0]);\n                var start = selection[0];\n                for (var i = start, j = start - 1; i < this._format.length || j >= 0; i++ , j--) {\n                    if (i < this._format.length && knownSymbols.indexOf(this._format[i]) !== -1) {\n                        this._selectSegment(this._format[i]);\n                        return;\n                    }\n                    if (j >= 0 && knownSymbols.indexOf(this._format[j]) !== -1) {\n                        this._selectSegment(this._format[j]);\n                        return;\n                    }\n                }\n            },\n\n            _selectSegment: function(symbol) {\n                var begin = -1, end = 0;\n                for (var i = 0; i < this._format.length; i++) {\n                    if (this._format[i] === symbol) {\n                        end = i + 1;\n                        if (begin === -1) {\n                            begin = i;\n                        }\n                    }\n                }\n                if (begin < 0) {\n                    begin = 0;\n                }\n                caret(this.element, begin, end);\n            }\n\n        });\n\n        kendo.cssProperties.registerPrefix(\"DateInput\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"DateInput\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(DateInput);\n\n        var customDateTime = function(initDate, initFormat, initCulture, initMessages) {\n\n            var value = null;\n            var year = true, month = true, date = true, hours = true, minutes = true, seconds = true, milliseconds = true;\n            var typedMonthPart = \"\";\n            var typedDayPeriodPart = \"\";\n            var placeholders = {};\n\n            //TODO: rewrite pad method\n            var zeros = [\"\", \"0\", \"00\", \"000\", \"0000\"];\n            function pad(number, digits, end) {\n                number = number + \"\";\n                digits = digits || 2;\n                end = digits - number.length;\n\n                if (end) {\n                    return zeros[digits].substring(0, end) + number;\n                }\n\n                return number;\n            }\n            var dateFormatRegExp = /dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|HH|H|hh|h|mm|m|fff|ff|f|tt|ss|s|zzz|zz|z|\"[^\"]*\"|'[^']*'/g;\n            var months = null, calendar = null, days = null, returnsFormat = false;\n            var matcher = function(match) {\n                var mins, sign;\n                var result;\n\n                switch (match) {\n                    case (\"d\"): result = date ? value.getDate() : placeholders.day; break;\n                    case (\"dd\"): result = date ? pad(value.getDate()) : placeholders.day; break;\n                    case (\"ddd\"): result = date && month && year ? days.namesAbbr[value.getDay()] : placeholders.weekday; break;\n                    case (\"dddd\"): result = date && month && year ? days.names[value.getDay()] : placeholders.weekday; break;\n\n                    case (\"M\"): result = month ? value.getMonth() + 1 : placeholders.month; break;\n                    case (\"MM\"): result = month ? pad(value.getMonth() + 1) : placeholders.month; break;\n                    case (\"MMM\"): result = month ? months.namesAbbr[value.getMonth()] : placeholders.month; break;\n                    case (\"MMMM\"): result = month ? months.names[value.getMonth()] : placeholders.month; break;\n\n                    case (\"yy\"): result = year ? pad(value.getFullYear() % 100) : placeholders.year; break;\n                    case (\"yyyy\"): result = year ? pad(value.getFullYear(), 4) : placeholders.year; break;\n\n                    case (\"h\"): result = hours ? value.getHours() % 12 || 12 : placeholders.hour; break;\n                    case (\"hh\"): result = hours ? pad(value.getHours() % 12 || 12) : placeholders.hour; break;\n                    case (\"H\"): result = hours ? value.getHours() : placeholders.hour; break;\n                    case (\"HH\"): result = hours ? pad(value.getHours()) : placeholders.hour; break;\n\n                    case (\"m\"): result = minutes ? value.getMinutes() : placeholders.minute; break;\n                    case (\"mm\"): result = minutes ? pad(value.getMinutes()) : placeholders.minute; break;\n                    case (\"s\"): result = seconds ? value.getSeconds() : placeholders.second; break;\n                    case (\"ss\"): result = seconds ? pad(value.getSeconds()) : placeholders.second; break;\n                    case (\"f\"): result = milliseconds ? Math.floor(value.getMilliseconds() / 100) : milliseconds; break;\n                    case (\"ff\"):\n                        result = value.getMilliseconds();\n                        if (result > 99) {\n                            result = Math.floor(result / 10);\n                        }\n                        result = milliseconds ? pad(result) : match;\n                        break;\n                    case (\"fff\"): result = milliseconds ? pad(value.getMilliseconds(), 3) : match; break;\n                    case (\"tt\"): result = hours ? (value.getHours() < 12 ? calendar.AM[0] : calendar.PM[0]) : placeholders.dayperiod; break;\n                    case (\"zzz\"):\n                        mins = value.getTimezoneOffset();\n                        sign = mins < 0;\n                        result = Math.abs(mins / 60).toString().split(\".\")[0];\n                        mins = Math.abs(mins) - (result * 60);\n                        result = (sign ? \"+\" : \"-\") + pad(result);\n                        result += \":\" + pad(mins);\n                        break;\n                    case (\"z\"):\n                    case (\"zz\"):\n                        result = value.getTimezoneOffset() / 60;\n                        sign = result < 0;\n                        result = Math.abs(result).toString().split(\".\")[0];\n                        result = (sign ? \"+\" : \"-\") + (match === \"zz\" ? pad(result) : result);\n                        break;\n                }\n                result = (result !== undefined$1 ? result : match.slice(1, match.length - 1));\n\n                if (returnsFormat) {\n                    result = \"\" + result;\n                    var formatResult = \"\";\n                    if (match == \"ddd\") { match = \"EEE\"; }\n                    if (match == \"dddd\") { match = \"EEEE\"; }\n                    for (var i = 0; i < result.length; i++) {\n                        formatResult += match[0];\n                    }\n                    return formatResult;\n                } else {\n                    return result;\n                }\n            };\n\n            function generateMatcher(retFormat) {\n                returnsFormat = retFormat;\n                return matcher;\n            }\n\n            function setExisting(symbol, val) {\n                switch (symbol) {\n                    case \"y\": year = val; break;\n                    case \"M\": month = val;\n                        if (!val) {\n                            value.setMonth(0);\n                            typedMonthPart = \"\";\n                        }\n                        break;\n                    case \"d\": date = val; break;\n                    case \"H\":\n                    case \"h\": hours = val;\n                        if (!val) {\n                            typedDayPeriodPart = \"\";\n                        }\n                        break;\n                    case \"m\": minutes = val; break;\n                    case \"s\": seconds = val; break;\n                    default: return;\n                }\n            }\n\n            this.setValue = function(val) {\n                date = val;\n            };\n\n            this.getValue = function() {\n                return date;\n            };\n\n            this.modifyPart = function(symbol, offset) {\n                var newValue = new Date((value && value.getTime) ? value.getTime() : value);\n                switch (symbol) {\n                    case \"y\": newValue.setFullYear(newValue.getFullYear() + offset); break;\n                    case \"M\":\n                        var newMonth = newValue.getMonth() + offset;\n                        newValue.setMonth(newMonth);\n                        if (newValue.getMonth() % 12 !== (newMonth + 12) % 12) {\n                            //handle case when new month does not have such date\n                            newValue.setDate(1);\n                            newValue.setMonth(newMonth);\n                        }\n                        break;\n                    case \"d\":\n                    case \"E\": newValue.setDate(newValue.getDate() + offset); break;\n                    case \"H\":\n                    case \"h\": newValue.setHours(newValue.getHours() + offset); break;\n                    case \"m\": newValue.setMinutes(newValue.getMinutes() + offset); break;\n                    case \"s\": newValue.setSeconds(newValue.getSeconds() + offset); break;\n                    case \"t\": newValue.setHours((newValue.getHours() + 12) % 24); break;\n                    default: break;\n                }\n                if (newValue.getFullYear() > 0) {\n                    setExisting(symbol, true);\n                    value = newValue;\n                }\n            };\n\n            this.parsePart = function(symbol, currentChar) {\n                if (!currentChar) {\n                    setExisting(symbol, false);\n                    return true;\n                }\n                var newValue = new Date((value && value.getTime) ? value.getTime() : value);\n                var lastDateOfMonth = new Date(newValue.getFullYear(), newValue.getMonth() + 1, 0).getDate();\n                var newHours;\n                switch (symbol) {\n                    case \"d\":\n                        var newDate = (date ? newValue.getDate() * 10 : 0) + parseInt(currentChar, 10);\n                        if (isNaN(newDate)) { return; }\n                        while (newDate > lastDateOfMonth) {\n                            newDate = parseInt(newDate.toString().slice(1), 10);\n                        }\n                        if (newDate < 1) {\n                            date = false;\n                        } else {\n                            newValue.setDate(newDate);\n                            if (newValue.getMonth() !== value.getMonth()) {\n                                return;\n                            }\n                            date = true;\n                        }\n                        break;\n                    case \"M\":\n                        var newMonth = (month ? (newValue.getMonth() + 1) * 10 : 0) + parseInt(currentChar, 10);\n                        if (!isNaN(newMonth)) {\n                            while (newMonth > 12) {\n                                newMonth = parseInt(newMonth.toString().slice(1), 10);\n                            }\n                            if (newMonth < 1) {\n                                month = false;\n                            } else {\n                                newValue.setMonth(newMonth - 1);\n                                if (newValue.getMonth() !== newMonth - 1) {\n                                    newValue.setDate(1);\n                                    newValue.setMonth(newMonth - 1);\n                                }\n                                month = true;\n                            }\n                        }\n                        else {\n                            var monthNames = calendar.months.names;\n                            typedMonthPart += currentChar.toLowerCase();\n\n                            while (typedMonthPart.length > 0) {\n                                for (var i = 0; i < monthNames.length; i++) {\n                                    if (monthNames[i].toLowerCase().indexOf(typedMonthPart) === 0) {\n                                        newValue.setMonth(i);\n                                        month = true;\n                                        value = newValue;\n                                        return true;\n                                    }\n                                }\n                                typedMonthPart = typedMonthPart.substring(1, typedMonthPart.length);\n                            }\n                            return false;\n                        }\n                        break;\n                    case \"y\":\n                        var newYear = (year ? (newValue.getFullYear()) * 10 : 0) + parseInt(currentChar, 10);\n                        if (isNaN(newYear)) {return;}\n                        while (newYear > 9999) {\n                            newYear = parseInt(newYear.toString().slice(1), 10);\n                        }\n                        if (newYear < 1) {\n                            year = false;\n                        } else {\n                            newValue.setFullYear(newYear);\n                            year = true;\n                        }\n                        break;\n                    case \"h\":\n                        newHours = (hours ? (newValue.getHours() % 12 || 12) * 10 : 0) + parseInt(currentChar, 10);\n                        if (isNaN(newHours)) { return; }\n                        while (newHours > 12) {\n                            newHours = parseInt(newHours.toString().slice(1), 10);\n                        }\n                        newValue.setHours(Math.floor(newValue.getHours() / 12) * 12 + newHours % 12);\n                        hours = true;\n                        break;\n                    case \"H\":\n                        newHours = (hours ? (newValue.getHours()) * 10 : 0) + parseInt(currentChar, 10);\n                        if (isNaN(newHours)) { return; }\n                        while (newHours > 23) {\n                            newHours = parseInt(newHours.toString().slice(1), 10);\n                        }\n                        newValue.setHours(newHours);\n                        hours = true;\n                        break;\n                    case \"m\":\n                        var newMinutes = (minutes ? (newValue.getMinutes()) * 10 : 0) + parseInt(currentChar, 10);\n                        if (isNaN(newMinutes)) { return; }\n                        while (newMinutes > 59) {\n                            newMinutes = parseInt(newMinutes.toString().slice(1), 10);\n                        }\n                        newValue.setMinutes(newMinutes);\n                        minutes = true;\n                        break;\n                    case \"s\":\n                        var newSeconds = (seconds ? (newValue.getSeconds()) * 10 : 0) + parseInt(currentChar, 10);\n                        if (isNaN(newSeconds)) { return; }\n                        while (newSeconds > 59) {\n                            newSeconds = parseInt(newSeconds.toString().slice(1), 10);\n                        }\n                        newValue.setSeconds(newSeconds);\n                        seconds = true;\n                        break;\n                    case \"t\":\n                        if (hours) {\n                            typedDayPeriodPart += currentChar.toLowerCase();\n                            while (typedDayPeriodPart.length > 0) {\n                                if (calendar.AM[0].toLowerCase().indexOf(typedDayPeriodPart) === 0 && newValue.getHours() >= 12 ||\n                                    calendar.PM[0].toLowerCase().indexOf(typedDayPeriodPart) === 0 && newValue.getHours() < 12) {\n                                    newValue.setHours((newValue.getHours() + 12) % 24);\n                                    value = newValue;\n                                    return true;\n                                }\n                                typedDayPeriodPart = typedDayPeriodPart.substring(1, typedDayPeriodPart.length);\n                            }\n                            return false;\n                        }\n                        break;\n                    default: break;\n                }\n                value = newValue;\n                return true;\n            };\n\n            this.toPair = function(format, culture , messages) {\n                if (!format) {\n                    return [\"\", \"\"];\n                }\n                culture = kendo.getCulture(culture);\n                calendar = culture.calendars.standard;\n                format = calendar.patterns[format] || format;\n                days = calendar.days;\n                months = calendar.months;\n                placeholders = messages;\n                return [\n                    format.replace(dateFormatRegExp, generateMatcher(false)),\n                    format.replace(dateFormatRegExp, generateMatcher(true))\n                ];\n            };\n\n            this.getDateObject = function() {\n                return (year && month && date && hours && minutes && seconds && milliseconds) ?\n                    new Date(value.getTime()) : null;\n            };\n\n            if (!initDate) {\n                value = new Date();\n                var sampleFormat = this.toPair(initFormat, initCulture, initMessages)[1];\n                for (var i = 0; i < sampleFormat.length; i++) {\n                    setExisting(sampleFormat[i], false);\n                }\n            } else {\n                value = new Date(initDate.getTime());\n            }\n        };\n\n        function approximateStringMatching(oldText, oldFormat, newText, caret) {\n            var oldTextSeparator = oldText[caret + oldText.length - newText.length];\n            oldText = oldText.substring(0, caret + oldText.length - newText.length);\n            newText = newText.substring(0, caret);\n            var diff = [];\n            var i;\n            //handle typing single character over the same selection\n            if (oldText === newText && caret > 0) {\n                diff.push([oldFormat[caret - 1], newText[caret - 1]]);\n                return diff;\n            }\n            if (oldText.indexOf(newText) === 0 && (newText.length === 0 || oldFormat[newText.length - 1] !== oldFormat[newText.length])) {\n                //handle delete/backspace\n                var deletedSymbol = \"\";\n                for (i = newText.length; i < oldText.length; i++) {\n                    if (oldFormat[i] !== deletedSymbol && knownSymbols.indexOf(oldFormat[i]) >= 0) {\n                        deletedSymbol = oldFormat[i];\n                        diff.push([deletedSymbol, \"\"]);\n                    }\n                }\n                return diff;\n            }\n\n            //handle entering space or separator, for nagivation to next item\n            if (newText[newText.length - 1] === \" \" || newText[newText.length - 1] === oldTextSeparator) {\n                return [[oldFormat[caret - 1], \" \"]];\n            }\n\n            //handle inserting text (new text is longer than previous)\n            //handle typing over literal as well\n            if (newText.indexOf(oldText) === 0 || knownSymbols.indexOf(oldFormat[caret - 1]) === -1) {\n                var symbol = oldFormat[0];\n                for (i = Math.max(0, oldText.length - 1); i < oldFormat.length; i++) {\n                    if (knownSymbols.indexOf(oldFormat[i]) >= 0) {\n                        symbol = oldFormat[i];\n                        break;\n                    }\n                }\n                return [[symbol, newText[caret - 1]]];\n            }\n            //handle typing over correctly selected part\n            return [[oldFormat[caret - 1], newText[caret - 1]]];\n    }\n\n    })(window.kendo.jQuery);\n\n}));\n"]}