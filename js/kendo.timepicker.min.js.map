{"version":3,"sources":["raw-js/kendo.timepicker.js"],"names":["factory","define","amd","$","undefined$1","kendo","window","keys","html","parse","parseDate","activeElement","_activeElement","extractFormat","_extractFormat","support","browser","ui","Widget","OPEN","CLOSE","CHANGE","ns","CLICK","DISABLED","READONLY","LI","FOCUSED","HOVER","HOVEREVENTS","MOUSEDOWN","MS_PER_MINUTE","MS_PER_DAY","SELECTED","STATEDISABLED","ARIA_SELECTED","ARIA_EXPANDED","ARIA_HIDDEN","ARIA_DISABLED","ARIA_READONLY","ARIA_ACTIVEDESCENDANT","ID","isArray","Array","extend","DATE","Date","dateFormatRegExp","LITERAL","MONTH","HOUR","ZONE","WEEKDAY","QUARTER","DATE_FIELD_MAP","G","y","q","Q","M","L","d","E","c","e","h","H","k","K","m","s","a","x","X","z","Z","NAME_TYPES","month","type","minLength","standAlone","quarter","weekday","dayperiod","era","TODAY","MODERN_RENDERING_TEMPLATE","mainSize","messages","buttonSize","renderButton","now","fillMode","size","NEW_RENDERING_FOOTER","set","themeColor","cancel","getFullYear","getMonth","getDate","TimeView","options","that","this","id","_dates","_createList","timeView","list","_timeViewID","_optionID","ul","attr","_heightHandler","_height","bind","_popup","getMilliseconds","date","getHours","getMinutes","getSeconds","isInRange","value","min","max","msValue","msMin","msMax","prototype","scroll","_createScrollList","_createClassicRenderingList","templateOptions","getValidCssClass","popupContent","template","on","preventDefault","find","_nowClickHandler","_cancelClickHandler","_setClickHandler","_mouseOverHandler","_scrollerKeyDownHandler","key","keyCode","currentTarget","lists","length","index","isRtl","wrapper","itemHeight","getItemHeight","eq","container","RIGHT","LEFT","_focusList","UP","scrollTop","DOWN","ENTER","ESC","removeClass","addClass","trigger","_scrollTop","listParent","css","overflow","kineticScrollNeeded","_click","append","data","current","candidate","active","_current","removeAttribute","_updateTitle","toString","_value","format","culture","applyValue","designator","is12hourFormat","includes","toLowerCase","hours","minutes","seconds","indexAttr","hoursList","minutessList","secondsList","designatorList","_internalScroll","_scrollListToPosition","item","pad","close","popup","destroy","off","open","popupHovered","firstChild","_hovered","setTimeout","dataBind","dates","idx","_html","refresh","interval","today","midnight","noon","offset","getTimezoneOffset","ignoreDST","parsedValue","mergeDateAndTime","msLastTime","setMinutes","msInterval","start","useValueToRender","startDate","_createListContent","specifier","part","names","patternLength","info","pattern","result","calendar","patterns","datePattern","parts","lastIndex","match","exec","addLiteral","substring","startsWith","hour12","isHour12","nameType","dateNameType","push","splitDateFormat","getDatesInRange","msStart","forEach","_showAllHiddenItems","items","i","show","_updateListBottomOffset","bottomOffset","outerHeight","height","_updateHoursRange","useMax","useMin","minHours","_minHours","maxHours","_maxHours","selectedDesignator","_findSelectedValue","each","_","_validateMin","_validateMax","hide","_updateMinutesRange","minutesList","minMinutes","_minMinutes","maxMinutes","_maxMinutes","selectedHour","_updateSecondsRange","minSeconds","_minSeconds","maxSeconds","selectedMinutes","_updateDesignatorRange","_updateRanges","specifiedRange","_currentlySelected","endTime","startTime","validateDate","_maxSeconds","addTranslate","listHeight","translate","transform","_itemClickHandler","_listScrollHandler","change","_scrollingTimeout","clearTimeout","_updateCurrentlySelected","selectedSeconds","is","setHours","setSeconds","firstOccurence","Math","round","originalEvent","setTime","getTime","maxSet","values","_literalTemplate","_getValues","_itemTemplate","title","shouldPad","end","innerHTML","unbind","one","select","scrollIntoViewIfNeeded","element","centerIfNeeded","makeRange","coverRange","inner","outer","makePoint","dX","dY","absolute","elem","pt","offsetLeft","offsetTop","offsetParent","origin","target","extent","offsetWidth","offsetHeight","parentNode","HTMLElement","clientLeft","clientTop","scrollLeft","clientWidth","clientHeight","li","selection","text","grep","childNodes","node","textContent","innerText","_distinctSelection","currentValue","selectionIndex","inArray","children","setOptions","old","toggle","visible","isDefaultPrevented","parent","closest","elements","add","scrollHeight","_parse","parseFormats","_adjustListWidth","computedStyle","computedWidth","width","style","anchor","outerWidth","_outerWidth","getComputedStyle","parseFloat","mozilla","msie","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","fontFamily","omitPopup","appendTo","timeDiv","Popup","animation","activate","move","down","altKey","nextSibling","previousSibling","lastChild","TAB","TimePicker","init","componentType","fn","call","_specifiedRange","normalize","_initialOptions","_wrapper","_change","val","_ariaLabel","_icon","_reset","setAttribute","role","autocomplete","parents","enable","readonly","dateInput","_dateInput","DateInput","rounded","_old","_update","_oldText","_applyCssClasses","label","_label","notify","name","hour","minute","second","millisecond","events","componentTypes","classic","modern","_arrow","remove","_editable","_inputLabel","_unwrapFloating","disable","arrow","_unbindInput","_toggleHover","_keydown","_blur","_bindInput","labelOptions","isPlainObject","content","floatCheck","_toggleDateMask","_hasDateInput","document","Label","widget","floatingLabel","_form","_resetHandler","_option","touch","dateChanged","oldValue","valueUpdated","isEqualDate","_typing","textFormatted","next","icon","shape","insertAfter","stopImmediatePropagation","option","toggleClass","wrap","cssText","className","formId","form","defaultValue","getCulture","calendars","standard","t","splice","time","lastPart","formatLength","searchString","position","indexOf","subStr","returnValue","String","getBoundingClientRect","cssProperties","registerPrefix","registerValues","prop","roundedValues","concat","plugin","jQuery"],"mappings":"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","file":"kendo.timepicker.min.js","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.popup', 'kendo.dateinput', 'kendo.html.button', 'kendo.label'], factory) :\n    factory();\n})((function () {\n    // The current file development is no longer in active phase but the code will be kept as is.\n\n    var __meta__ = {\n        id: \"timepicker\",\n        name: \"TimePicker\",\n        category: \"web\",\n        description: \"The TimePicker widget allows the end user to select a value from a list of predefined values or to type a new value.\",\n        depends: [ \"calendar\", \"popup\", \"html.button\", \"label\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            keys = kendo.keys,\n            html = kendo.html,\n            parse = kendo.parseDate,\n            activeElement = kendo._activeElement,\n            extractFormat = kendo._extractFormat,\n            support = kendo.support,\n            browser = support.browser,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            CHANGE = \"change\",\n            ns = \".kendoTimePicker\",\n            CLICK = \"click\" + ns,\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            LI = \"li\",\n            SPAN = \"<span></span>\",\n            FOCUSED = \"k-focus\",\n            HOVER = \"k-hover\",\n            HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n            MOUSEDOWN = \"mousedown\" + ns,\n            MS_PER_MINUTE = 60000,\n            MS_PER_DAY = 86400000,\n            SELECTED = \"k-selected\",\n            STATEDISABLED = \"k-disabled\",\n            ARIA_SELECTED = \"aria-selected\",\n            ARIA_EXPANDED = \"aria-expanded\",\n            ARIA_HIDDEN = \"aria-hidden\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_READONLY = \"aria-readonly\",\n            ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n            ID = \"id\",\n            isArray = Array.isArray,\n            extend = $.extend,\n            DATE = Date,\n            dateFormatRegExp = /d{1,2}|E{1,6}|e{1,6}|c{3,6}|c{1}|M{1,5}|L{1,5}|y{1,4}|H{1,2}|h{1,2}|k{1,2}|K{1,2}|m{1,2}|a{1,5}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|x{1,5}|X{1,5}|G{1,5}|q{1,5}|Q{1,5}|\"[^\"]*\"|'[^']*'/g,\n            LITERAL = \"literal\",\n            MONTH = \"month\",\n            HOUR = \"hour\",\n            ZONE = \"zone\",\n            WEEKDAY = \"weekday\",\n            QUARTER = \"quarter\",\n            DATE_FIELD_MAP = {\n                \"G\": \"era\",\n                \"y\": \"year\",\n                \"q\": QUARTER,\n                \"Q\": QUARTER,\n                \"M\": MONTH,\n                \"L\": MONTH,\n                \"d\": \"day\",\n                \"E\": WEEKDAY,\n                \"c\": WEEKDAY,\n                \"e\": WEEKDAY,\n                \"h\": HOUR,\n                \"H\": HOUR,\n                \"k\": HOUR,\n                \"K\": HOUR,\n                \"m\": \"minute\",\n                \"s\": \"second\",\n                \"a\": \"dayperiod\",\n                \"x\": ZONE,\n                \"X\": ZONE,\n                \"z\": ZONE,\n                \"Z\": ZONE\n            },\n            NAME_TYPES = {\n                month: {\n                    type: \"months\",\n                    minLength: 3,\n                    standAlone: \"L\"\n                },\n\n                quarter: {\n                    type: \"quarters\",\n                    minLength: 3,\n                    standAlone: \"q\"\n                },\n\n                weekday: {\n                    type: \"days\",\n                    minLength: {\n                        E: 0,\n                        c: 3,\n                        e: 3\n                    },\n                    standAlone: \"c\"\n                },\n\n                dayperiod: {\n                    type: \"dayPeriods\",\n                    minLength: 0\n                },\n\n                era: {\n                    type: \"eras\",\n                    minLength: 0\n                }\n            },\n            TODAY = new DATE(),\n            MODERN_RENDERING_TEMPLATE = ({ mainSize, messages, buttonSize }) =>\n            '<div>' +\n                `<div tabindex=\"0\" class=\"k-timeselector ${mainSize}\">` +\n                    '<div class=\"k-time-header\">' +\n                        '<span class=\"k-title\"></span>' +\n                        kendo.html.renderButton(`<button class=\"k-time-now\" title=\"Select now\" aria-label=\"Select now\">${messages.now}</button>`, {\n                            fillMode: \"flat\",\n                            size: buttonSize\n                        }) +\n                    '</div>' +\n                    '<div class=\"k-time-list-container\">' +\n                        '<span class=\"k-time-highlight\"></span>' +\n                    '</div>' +\n                '</div>' +\n                NEW_RENDERING_FOOTER(buttonSize, messages) +\n            '</div>',\n            NEW_RENDERING_FOOTER = (buttonSize, messages) => '<div class=\"k-time-footer k-actions k-actions-stretched k-actions-horizontal\">' +\n                kendo.html.renderButton(`<button class=\"k-time-accept\" title=\"Set time\" aria-label=\"Set time\">${messages.set}</button>`, {\n                    size: buttonSize,\n                    themeColor: \"primary\"\n                }) +\n                kendo.html.renderButton(`<button class=\"k-time-cancel\" title=\"Cancel changes\" aria-label=\"Cancel changes\">${messages.cancel}</button>`, {\n                    size: buttonSize\n                }) +\n            '</div>',\n            HIGHLIGHTCONTAINER = '<span class=\"k-time-highlight\"></span>';\n\n            TODAY = new Date(TODAY.getFullYear(), TODAY.getMonth(), TODAY.getDate(), 0, 0, 0);\n\n        var TimeView = function(options) {\n            var that = this,\n            id = options.id;\n\n            that.options = options;\n            that._dates = [];\n\n            that._createList(options.timeView && options.timeView.list === \"scroll\");\n\n            if (id) {\n                that._timeViewID = id + \"_timeview\";\n                that._optionID = id + \"_option_selected\";\n\n                that.ul.attr(ID, that._timeViewID);\n            }\n\n            that._heightHandler = that._height.bind(that);\n            that._popup();\n        };\n\n        TimeView.prototype = {\n            _createList: function(scroll) {\n                if (scroll) {\n                    this._createScrollList();\n                } else {\n                    this._createClassicRenderingList();\n                }\n            },\n            _createScrollList: function() {\n                var templateOptions = $.extend({}, this.options, {\n                    mainSize: kendo.getValidCssClass(\"k-timeselector-\", \"size\", this.options.size || \"medium\"),\n                    buttonSize: this.options.size || \"medium\"\n                });\n                this.popupContent = $(kendo.template(MODERN_RENDERING_TEMPLATE)(templateOptions))\n                .on(MOUSEDOWN, preventDefault);\n                this.list = this.popupContent.find(\".k-timeselector\");\n\n                this.ul = this.list.find(\".k-time-list-container\");\n                this.popupContent.on(\"click\" + ns, \".k-time-header button.k-time-now\", this._nowClickHandler.bind(this));\n                this.popupContent.on(\"click\" + ns, \".k-time-footer button.k-time-cancel\", this._cancelClickHandler.bind(this));\n                this.popupContent.on(\"click\" + ns, \".k-time-footer button.k-time-accept\", this._setClickHandler.bind(this));\n                this.list.on(\"mouseover\" + ns, \".k-time-list-wrapper\", this._mouseOverHandler.bind(this));\n                this.list.on(\"keydown\" + ns, this._scrollerKeyDownHandler.bind(this));\n            },\n\n            _scrollerKeyDownHandler: function(e) {\n                var that = this,\n                    key = e.keyCode,\n                    list = $(e.currentTarget).find(\".k-time-list-wrapper.k-focus\"),\n                    lists = that.list.find(\".k-time-list-wrapper\"),\n                    length = lists.length,\n                    index = lists.index(list),\n                    isRtl = kendo.support.isRtl(that.wrapper),\n                    itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0)),\n                    container = list.find(\".k-time-container.k-content.k-scrollable\");\n\n                if (!list.length) {\n                    return;\n                }\n\n                if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                    if (index + 1 < length) {\n                        that._focusList(lists.eq(index + 1));\n                    }\n\n                } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                    if (index - 1 >= 0) {\n                        that._focusList(lists.eq(index - 1));\n                    }\n                } else if (key == keys.UP) {\n                    container.scrollTop(container.scrollTop() - itemHeight);\n                    e.preventDefault();\n                } else if (key == keys.DOWN) {\n                    container.scrollTop(container.scrollTop() + itemHeight);\n                    e.preventDefault();\n                } else if (key === keys.ENTER) {\n                    that._setClickHandler(e);\n                } else if (key === keys.ESC) {\n                    that._cancelClickHandler(e);\n                }\n            },\n\n            _mouseOverHandler: function(e) {\n                this._focusList($(e.currentTarget));\n            },\n\n            _focusList: function(list) {\n                this.list.find(\".k-time-list-wrapper\").removeClass(FOCUSED);\n                list.addClass(FOCUSED);\n                this.list.trigger(\"focus\");\n                this._scrollTop = list.find('.k-scrollable').scrollTop();\n            },\n            _createClassicRenderingList: function() {\n                var that = this;\n                var listParent = $('<div class=\"k-list ' + kendo.getValidCssClass(\"k-list-\", \"size\", that.options.size) + '\"><ul tabindex=\"-1\" role=\"listbox\" aria-hidden=\"true\" unselectable=\"on\" class=\"k-list-ul\"/></div>');\n\n                that.ul = listParent.find(\"ul\")\n                    .css({\n                        overflow: support.kineticScrollNeeded ? \"\" : \"auto\"\n                    })\n                    .on(CLICK, LI, that._click.bind(that))\n                    .on(\"mouseenter\" + ns, LI, function() {\n                        $(this).addClass(HOVER);\n                    })\n                    .on(\"mouseleave\" + ns, LI, function() {\n                        $(this).removeClass(HOVER);\n                    });\n\n                that.list = $(\"<div class='k-list-container k-list-scroller' unselectable='on'/>\")\n                    .append(listParent)\n                    .on(MOUSEDOWN, preventDefault);\n\n                that.template = (data) => `<li tabindex=\"-1\" role=\"option\" class=\"k-list-item\" unselectable=\"on\"><span class=\"k-list-item-text\">${data}</span></li>`;\n\n            },\n            current: function(candidate) {\n                var that = this,\n                    active = that.options.active;\n\n                if (candidate !== undefined$1) {\n                    if (that._current) {\n                        that._current\n                            .removeClass(SELECTED);\n                            if (that._current && that._current.length) {\n                                that._current[0].removeAttribute(ID);\n                                that._current[0].removeAttribute(ARIA_SELECTED);\n                            }\n                    }\n\n                    if (candidate) {\n                        candidate = $(candidate).addClass(SELECTED)\n                                                .attr(ID, that._optionID)\n                                                .attr(ARIA_SELECTED, true);\n\n                        that.scroll(candidate[0]);\n                    }\n\n                    that._current = candidate;\n\n                    if (active) {\n                        active(candidate);\n                    }\n                } else {\n                    return that._current;\n                }\n            },\n\n            _updateTitle: function() {\n                this.list.find(\".k-time-header > .k-title\").html(kendo.toString(this._value, this.options.format, this.options.culture));\n            },\n\n            applyValue: function(value) {\n                if (!value) {\n                    return;\n                }\n\n                var is12hourFormat = includes(this.options.format.toLowerCase(), \"t\");\n                var hours = value.getHours();\n                var minutes = value.getMinutes();\n                var seconds = value.getSeconds();\n                var designator;\n                var indexAttr = kendo.attr('index');\n                var hoursList = this.ul.find('[' + indexAttr + '=\"1\"]');\n                var minutessList = this.ul.find('[' + indexAttr + '=\"2\"]');\n                var secondsList = this.ul.find('[' + indexAttr + '=\"3\"]');\n                var designatorList = this.ul.find('[' + indexAttr + '=\"4\"]');\n\n                if (is12hourFormat) {\n                    if (hours >= 12) {\n                        designator = \"PM\";\n                        if (hours > 12) {\n                            hours -= 12;\n                        }\n                    } else {\n                        designator = \"AM\";\n                        if (hours === 0) {\n                            hours = 12;\n                        }\n                    }\n                }\n\n                this._internalScroll = true;\n                if (hoursList.length) {\n                    this._scrollListToPosition(hoursList, hours);\n                }\n\n                if (minutessList.length) {\n                    this._scrollListToPosition(minutessList, minutes);\n                }\n\n                if (secondsList.length) {\n                    this._scrollListToPosition(secondsList, seconds);\n                }\n\n                if (designatorList.length) {\n                    this._scrollListToPosition(designatorList, designator);\n                }\n                this._internalScroll = false;\n            },\n\n            _scrollListToPosition: function(list, value) {\n                var item = list.find('.k-item[data-value=\"' + pad(value) + '\"]');\n                var itemHeight = getItemHeight(item);\n\n                list.scrollTop(list.find(\".k-item:visible\").index(item) * itemHeight);\n            },\n\n            close: function() {\n                this.popup.close();\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.ul.off(ns);\n                that.list.off(ns);\n                if (that.popupContent) {\n                    that.popupContent.off(ns);\n                }\n                if (that.popup) {\n                    that.popup.destroy();\n                }\n            },\n\n            open: function() {\n                var that = this;\n                var popupHovered;\n\n                if (!that.ul[0].firstChild || (that.ul.find(\"li\").length < 1)) {\n                    that.bind();\n                }\n\n                // In some cases when the popup is opened resize is triggered which will cause it to close\n                // Setting the below flag will prevent this from happening\n                // Reference: https://github.com/telerik/kendo/pull/7553\n                popupHovered = that.popup._hovered;\n                that.popup._hovered = true;\n\n                that.popup.open();\n\n                setTimeout(function() {\n                    that.popup._hovered = popupHovered;\n                }, 1);\n\n                if (that._current) {\n                    that.scroll(that._current[0]);\n                }\n            },\n\n            dataBind: function(dates) {\n                var that = this,\n                    options = that.options,\n                    format = options.format,\n                    toString = kendo.toString,\n                    template = that.template,\n                    length = dates.length,\n                    idx = 0,\n                    date,\n                    html = \"\";\n\n                for (; idx < length; idx++) {\n                    date = dates[idx];\n\n                    if (isInRange(date, options.min, options.max)) {\n                        html += template(toString(date, format, options.culture));\n                    }\n                }\n\n                that._html(html);\n            },\n\n            refresh: function() {\n                var that = this,\n                    options = that.options,\n                    format = options.format,\n                    offset = dst(),\n                    ignoreDST = offset < 0,\n                    value = kendo.parseDate(that._value),\n                    parsedValue = value ? mergeDateAndTime(value, options.min) : mergeDateAndTime(new Date(), options.min),\n                    min = options.min,\n                    max = options.max,\n                    msMin = getMilliseconds(min),\n                    msMax = getMilliseconds(max),\n                    msLastTime = getMilliseconds(lastTimeOption(options.interval)),\n                    msInterval = options.interval * MS_PER_MINUTE,\n                    toString = kendo.toString,\n                    template = that.template,\n                    start = options.useValueToRender ? parsedValue : new Date(+options.min),\n                    startDate = new DATE(start),\n                    msStart,\n                    length,\n                    html = \"\";\n\n                if (ignoreDST) {\n                    length = (MS_PER_DAY + (offset * MS_PER_MINUTE)) / msInterval;\n                } else {\n                    length = MS_PER_DAY / msInterval;\n                }\n\n                if (msMin != msMax || msLastTime === msMax) {\n                    if (msMin > msMax) {\n                        msMax += MS_PER_DAY;\n                    }\n\n                    length = ((msMax - msMin) / msInterval) + 1;\n                }\n\n                if (options.timeView && options.timeView.list === \"scroll\") {\n                    html = that._createListContent(splitDateFormat(format));\n                } else {\n                    that.getDatesInRange(msStart, msMax, startDate, max, msInterval, start).forEach(function(date) {\n                        html += template(toString(date, format, options.culture));\n                    });\n                }\n\n                that._html(html);\n            },\n\n            _showAllHiddenItems: function() {\n                var items = this.list.find('.k-time-container');\n                var length = items.length;\n                var item;\n\n                for (var i = 0; i < length; i++) {\n                    item = $(items[i]);\n                    item.find('.k-item:hidden').show();\n                    this._updateListBottomOffset(item);\n                }\n            },\n\n            _updateListBottomOffset: function(list) {\n                var itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0));\n                var listHeight = list.outerHeight();\n                var bottomOffset = listHeight - itemHeight;\n                list.find(\".k-scrollable-placeholder\").css({\n                    height: list.find(\"ul\").height() + bottomOffset\n                });\n            },\n\n            _updateHoursRange: function() {\n                var that = this;\n                var indexAttr = kendo.attr('index');\n                var hoursList = this.ul.find('[' + indexAttr + '=\"1\"]');\n                var minHours = this._minHours;\n                var maxHours = this._maxHours;\n                var is12hourFormat = includes(this.options.format.toLowerCase(), \"t\");\n                var useMax;\n                var useMin;\n                var selectedDesignator = this._findSelectedValue(this.ul.find('[' + indexAttr + '=\"4\"]'));\n\n                if (!hoursList.length) {\n                    return;\n                }\n\n                if (is12hourFormat && selectedDesignator) {\n\n                    if (selectedDesignator === \"AM\") {\n                        if (minHours < 12) {\n                            useMin = true;\n                        }\n\n                        if (maxHours < 12) {\n                            useMax = true;\n                        }\n                    } else if (selectedDesignator === \"PM\") {\n\n                        if (minHours > 12) {\n                            useMin = true;\n                            minHours -= 12;\n                        }\n\n                        if (maxHours > 12) {\n                            useMax = true;\n                            maxHours -= 12;\n                        }\n                    }\n\n                    hoursList.find(\".k-item\").each(function(_, item) {\n                        item = $(item);\n                        var value = +item.attr(\"data-value\");\n                        if ((that._validateMin && useMin && value < minHours) || (that._validateMax && useMax && value > maxHours)) {\n                            item.hide();\n                        } else {\n                            item.show();\n                        }\n                    });\n                } else {\n                    hoursList.find(\".k-item\").each(function(_, item) {\n                        item = $(item);\n                        var value = +item.attr(\"data-value\");\n                        if ((that._validateMin && value < minHours) ||\n                            (that._validateMax && value > maxHours)) {\n                            item.hide();\n                        } else {\n                            item.show();\n                        }\n                    });\n                }\n\n                this._updateListBottomOffset(hoursList);\n            },\n\n            _updateMinutesRange: function() {\n                var that = this;\n                var indexAttr = kendo.attr('index');\n                var minutesList = this.ul.find('[' + indexAttr + '=\"2\"]');\n                var minHours = this._minHours;\n                var maxHours = this._maxHours;\n                var minMinutes = this._minMinutes;\n                var maxMinutes = this._maxMinutes;\n                var selectedHour = +this._findSelectedValue(this.ul.find('[' + indexAttr + '=\"1\"]'));\n                var is12hourFormat = includes(this.options.format.toLowerCase(), \"t\");\n                var selectedDesignator = this._findSelectedValue(this.ul.find('[' + indexAttr + '=\"4\"]'));\n\n                if (is12hourFormat && selectedDesignator === \"PM\") {\n                    selectedHour += 12;\n                }\n\n                if (!minutesList.length) {\n                    return;\n                }\n\n                minutesList.find(\".k-item\").each(function(_, item) {\n                    item = $(item);\n                    var value = +item.attr(\"data-value\");\n                    if ((that._validateMin && value < minMinutes && minHours && selectedHour === minHours) ||\n                        (that._validateMax && value > maxMinutes && maxHours && selectedHour === maxHours)) {\n                        item.hide();\n                    } else {\n                        item.show();\n                    }\n                });\n\n                this._updateListBottomOffset(minutesList);\n            },\n\n            _updateSecondsRange: function() {\n                var that = this;\n                var indexAttr = kendo.attr('index');\n                var secondsList = this.ul.find('[' + indexAttr + '=\"3\"]');\n                var minSeconds = this._minSeconds;\n                var maxSeconds = this._minSeconds;\n                var minMinutes = this._minMinutes;\n                var maxMinutes = this._maxMinutes;\n                var selectedMinutes = +this._findSelectedValue(this.ul.find('[' + indexAttr + '=\"2\"]'));\n\n                if (!secondsList.length) {\n                    return;\n                }\n\n                secondsList.find(\".k-item\").each(function(_, item) {\n                    item = $(item);\n                    var value = +item.attr(\"data-value\");\n                    if ((that._validateMin && value < minSeconds && minMinutes && selectedMinutes === minMinutes) ||\n                        (that._validateMax && value > maxSeconds && maxMinutes && selectedMinutes === maxMinutes)) {\n                        item.hide();\n                    } else {\n                        item.show();\n                    }\n                });\n\n                this._updateListBottomOffset(secondsList);\n            },\n\n            _updateDesignatorRange: function() {\n                var minHours = this._minHours;\n                var maxHours = this._maxHours;\n                var indexAttr = kendo.attr('index');\n                var designatorList = this.ul.find('[' + indexAttr + '=\"4\"]');\n\n                if (!designatorList.length) {\n                   return;\n                }\n\n                if (this._validateMin && minHours >= 12) {\n                    designatorList.find('.k-item[data-value=\"AM\"]').hide();\n                } else {\n                    designatorList.find('.k-item[data-value=\"AM\"]').show();\n                }\n\n                if (this._validateMax && maxHours < 12) {\n                    designatorList.find('.k-item[data-value=\"PM\"]').hide();\n                } else {\n                    designatorList.find('.k-item[data-value=\"PM\"]').show();\n                }\n            },\n\n\n            _updateRanges: function() {\n                if (!this.options.specifiedRange) {\n                    return;\n                }\n                if (!this._currentlySelected) {\n                    this._currentlySelected = new Date();\n                }\n\n                var max = this.options.endTime ? this.options.endTime : this.options.max;\n                var min = this.options.startTime ? this.options.startTime : this.options.min;\n\n                if (this.options.validateDate) {\n                    if (max.getFullYear() === this._currentlySelected.getFullYear() &&\n                        max.getMonth() === this._currentlySelected.getMonth() &&\n                        max.getDate() === this._currentlySelected.getDate()) {\n                        this._validateMax = true;\n                    } else {\n                        this._validateMax = false;\n                    }\n\n                    if (min.getFullYear() === this._currentlySelected.getFullYear() &&\n                        min.getMonth() === this._currentlySelected.getMonth() &&\n                        min.getDate() === this._currentlySelected.getDate()) {\n                        this._validateMin = true;\n                    } else {\n                        this._validateMin = false;\n                    }\n\n                    if (!this._validateMax && !this._validateMin) {\n                        this._showAllHiddenItems();\n                        return;\n                    }\n                } else {\n                    this._validateMax = true;\n                    this._validateMin = true;\n                }\n\n                this._minMinutes = min.getMinutes();\n                this._maxMinutes = max.getMinutes();\n                this._minHours = min.getHours();\n                this._maxHours = max.getHours();\n                this._minSeconds = min.getSeconds();\n                this._maxSeconds = max.getSeconds();\n\n                this._updateDesignatorRange();\n                this._updateHoursRange();\n                this._updateMinutesRange();\n                this._updateSecondsRange();\n            },\n\n            addTranslate: function() {\n                var lists = this.ul.find(\".k-time-container.k-content.k-scrollable\");\n                var length = lists.length;\n                var list;\n                var itemHeight;\n                var listHeight;\n                var topOffset;\n                var translate;\n                var bottomOffset;\n\n                for (var i = 0; i < length; i++) {\n                    list = lists.eq(i);\n                    itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0));\n                    listHeight = list.outerHeight();\n                    topOffset = (listHeight - itemHeight) / 2;\n                    translate = \"translateY(\" + topOffset + \"px)\";\n                    bottomOffset = listHeight - itemHeight;\n                    list.find(\"ul\").css({\n                        transform: translate,\n                        \"-ms-transform\": translate\n                    });\n                    list.find(\".k-scrollable-placeholder\").css({\n                        height: list.find(\"ul\").height() + bottomOffset\n                    });\n                    list.off(ns)\n                        .on(\"click\" + ns, \".k-item\", this._itemClickHandler.bind(this))\n                        .on(\"scroll\" + ns, this._listScrollHandler.bind(this));\n                }\n            },\n\n            _nowClickHandler: function(e) {\n                e.preventDefault();\n\n                var now = new Date();\n                this.value(now);\n                this.options.change(kendo.toString(now, this.options.format, this.options.culture), true);\n            },\n\n            _cancelClickHandler: function(e) {\n                e.preventDefault();\n                this.value(this._value);\n                this.popup.close();\n            },\n\n            _setClickHandler: function(e) {\n                e.preventDefault();\n                this._value = new Date(this._currentlySelected);\n\n                this.options.change(kendo.toString(this._currentlySelected, this.options.format, this.options.culture), true);\n                this.popup.close();\n            },\n\n            _listScrollHandler: function(e) {\n                var that = this;\n                var itemHeight = getItemHeight($(e.currentTarget).find(\".k-item:visible\").eq(0));\n\n                if (that._internalScroll) {\n                    return;\n                }\n\n                if (that._scrollingTimeout) {\n                    clearTimeout(that._scrollingTimeout);\n                }\n\n                that._scrollingTimeout = setTimeout(function() {\n                    if (e.currentTarget.scrollTop % itemHeight > 1) {\n                        e.currentTarget.scrollTop += itemHeight - e.currentTarget.scrollTop % itemHeight;\n                    }\n                    that._scrollTop = e.currentTarget.scrollTop;\n                    that._updateCurrentlySelected();\n                    that._updateRanges();\n                }, 100);\n            },\n\n            _updateCurrentlySelected: function() {\n                var is12hourFormat = includes(this.options.format.toLowerCase(), \"t\");\n                var indexAttr = kendo.attr('index');\n                var hoursList = this.ul.find('[' + indexAttr + '=\"1\"]');\n                var minutesList = this.ul.find('[' + indexAttr + '=\"2\"]');\n                var secondsList = this.ul.find('[' + indexAttr + '=\"3\"]');\n                var designatorList = this.ul.find('[' + indexAttr + '=\"4\"]');\n                var selectedHour;\n                var selectedMinutes;\n                var selectedSeconds;\n                var selectedDesignator;\n\n                if (!this.ul.is(\":visible\")) {\n                    return;\n                }\n\n                if (!this._currentlySelected) {\n                    this._currentlySelected = this._value ? new Date(this._value) : new Date();\n                }\n\n                if (hoursList.length) {\n                    selectedHour = +this._findSelectedValue(hoursList);\n                }\n\n                if (minutesList.length) {\n                    selectedMinutes = +this._findSelectedValue(minutesList);\n                }\n\n                if (secondsList.length) {\n                    selectedSeconds = +this._findSelectedValue(secondsList);\n                }\n\n                if (designatorList.length) {\n                    selectedDesignator = this._findSelectedValue(designatorList);\n                }\n\n                if (is12hourFormat) {\n                    if (selectedDesignator == \"PM\") {\n                        selectedHour += 12;\n                        if (selectedHour == 24) {\n                            selectedHour = 12;\n                        }\n                    }\n\n                    if (selectedDesignator === \"AM\" && selectedHour === 12) {\n                        selectedHour = 0;\n                    }\n                }\n\n                if (selectedHour !== undefined$1) {\n                    this._currentlySelected.setHours(selectedHour);\n                }\n\n                if (selectedMinutes !== undefined$1) {\n                    this._currentlySelected.setMinutes(selectedMinutes);\n                }\n\n                if (selectedSeconds !== undefined$1) {\n                    this._currentlySelected.setSeconds(selectedSeconds);\n                }\n            },\n\n            _findSelectedValue: function(list) {\n               var firstOccurence = firstItemIndex(list.scrollTop(), getItemHeight(list.find(\".k-item:visible\").eq(0)));\n               return list.find(\".k-item:visible\").eq(firstOccurence).attr(\"data-value\");\n            },\n\n            _itemClickHandler: function(e) {\n                var list = $(e.originalEvent.currentTarget);\n                var index = list.find(\".k-item:visible\").index($(e.currentTarget));\n                var itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0));\n\n                list.scrollTop(index * itemHeight);\n            },\n\n            getDatesInRange: function(msStart, msMax, startDate, max, msInterval, start) {\n                var result = [];\n\n                while (true) {\n                    if (msMax && (getMilliseconds(start) >= msMax || startDate.getDate() != start.getDate())) {\n                        msStart = getMilliseconds(start);\n                        if (startDate < start) {\n                            msStart += MS_PER_DAY;\n                        }\n                        if (msStart > msMax) {\n                            start = new DATE(+max);\n                        }\n                        if (getMilliseconds(start) > 0) {\n                            result.push(new Date(start));\n                        }\n                        break;\n                    }\n                    if (startDate.getDate() != start.getDate()) {\n                        break;\n                    }\n                    result.push(new Date(start));\n                    start.setTime(start.getTime() + msInterval);\n                    if (!msMax && this.options.maxSet) {\n                        break;\n                    }\n                }\n\n                return result;\n            },\n\n            _createListContent: function(parts) {\n                var length = parts.length;\n                var result = \"\";\n                var part;\n                var values;\n\n                for (var i = 0; i < length; i++) {\n                    part = parts[i];\n\n                    if (part.type === \"literal\") {\n                        result += this._literalTemplate(part);\n                    } else {\n                        values = this._getValues(part, true);\n                        result += this._itemTemplate(values.values, part, this.options.messages[part.type], values.index);\n                    }\n                }\n\n                return result;\n            },\n\n            _itemTemplate: function(values, part, title, index) {\n                var result = \"\";\n                var length = values.length;\n                var indexAttr = kendo.attr('index');\n\n                result += '<div class=\"k-time-list-wrapper\" role=\"presentation\">' +\n                            '<span class=\"k-title\">' + (title || part.type) + '</span>' +\n                            '<div class=\"k-time-list\">' +\n                                '<div class=\"k-time-container k-content k-scrollable\" role=\"presentation\" ' + indexAttr + '=\"' + index + '\">' +\n                                    '<ul class=\"k-reset\">';\n\n                for ( var i = 0; i < length; i++) {\n                    result += '<li class=\"k-item\" data-value=\"' + values[i] + '\">' +\n                                    '<span>' + values[i] + '</span>' +\n                               '</li>';\n                }\n\n                result += '</ul>' +\n                          '<div class=\"k-scrollable-placeholder\"></div>' +\n                        '</div>' +\n                    '</div>' +\n                '</div>';\n\n                return result;\n            },\n\n            _getValues: function(part, shouldPad) {\n                var result = [];\n                var index;\n                var start = 0;\n                var end;\n\n                if (part.type === \"hour\") {\n                    start = part.hour12 ? 1 : 0;\n                    index = 1;\n                    end = part.hour12 ? 12 : 23;\n                } else if (part.type === \"minute\") {\n                    index = 2;\n                    end = 59;\n                } else if (part.type === \"second\") {\n                    index = 3;\n                    end = 59;\n                }\n\n                for (; start <= end; start++) {\n                    result.push(shouldPad ? pad(start) : start);\n                }\n\n                return {\n                    values: result,\n                    index: index\n                };\n            },\n\n            _literalTemplate: function(part) {\n                var result = '<div class=\"k-time-separator\">' +\n                    (part.pattern === \" tt\" ? ':' : part.pattern) +\n                    '</div>';\n\n                if (part.pattern === \" tt\") {\n                    result += this._itemTemplate([\"AM\", \"PM\"], part, \"AM/PM\", 4);\n                }\n\n                return result;\n            },\n\n            bind: function() {\n                var that = this,\n                    dates = that.options.dates;\n\n                if (dates && dates[0]) {\n                    that.dataBind(dates);\n                } else {\n                    that.refresh();\n                }\n            },\n\n            _html: function(html) {\n                var that = this;\n\n                if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                    html = HIGHLIGHTCONTAINER + html;\n                    that.ul.html(html);\n                } else {\n                    that.ul[0].innerHTML = html;\n                    that.popup.unbind(OPEN, that._heightHandler);\n                    that.popup.one(OPEN, that._heightHandler);\n\n                    that.current(null);\n                    that.select(that._value);\n                }\n            },\n\n            scroll: function(item) {\n                if (!item) {\n                    return;\n                }\n\n                if (item.scrollIntoViewIfNeeded) {\n                    item.scrollIntoViewIfNeeded();\n                } else {\n                    scrollIntoViewIfNeeded(item);\n                }\n            },\n\n            select: function(li) {\n                var that = this,\n                    options = that.options,\n                    current = that._current,\n                    selection;\n\n                if (li instanceof Date) {\n                    li = kendo.toString(li, options.format, options.culture);\n                }\n\n                if (typeof li === \"string\") {\n                    if (!current || current.text() !== li) {\n                        li = $.grep(that.ul[0].childNodes, function(node) {\n                            return (node.textContent || node.innerText) == li;\n                        });\n\n                        li = li[0] ? li : null;\n                    } else {\n                        li = current;\n                    }\n                }\n                selection = that._distinctSelection(li);\n                that.current(selection);\n            },\n\n            _distinctSelection: function(selection) {\n                var that = this,\n                    currentValue,\n                    selectionIndex;\n\n                if (selection && selection.length > 1) {\n                    currentValue = getMilliseconds(that._value);\n                    selectionIndex = $.inArray(currentValue, that._dates);\n                    selection = that.ul.children()[selectionIndex];\n                }\n\n                return selection;\n            },\n\n            setOptions: function(options) {\n                var old = this.options;\n\n                options.min = parse(options.min);\n                options.max = parse(options.max);\n\n                this.options = extend(old, options, {\n                    active: old.active,\n                    change: old.change,\n                    close: old.close,\n                    open: old.open\n                });\n\n                this.bind();\n            },\n\n            toggle: function() {\n                var that = this;\n\n                if (that.popup.visible()) {\n                    that.close();\n                } else {\n                    that.open();\n                }\n            },\n\n            value: function(value) {\n                var that = this;\n\n                that._value = value;\n                if (that.ul[0].firstChild) {\n                    if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                        that.applyValue(value);\n                    } else {\n                        that.select(value);\n                    }\n                }\n            },\n\n            _click: function(e) {\n                var that = this,\n                    li = $(e.currentTarget),\n                    date = li.text(),\n                    dates = that.options.dates;\n\n                if (dates && dates.length > 0) {\n                    date = dates[li.index()];\n                }\n\n                if (!e.isDefaultPrevented()) {\n                    that.select(li);\n                    that.options.change(date, true);\n                    that.close();\n                }\n            },\n\n            _height: function() {\n                var that = this;\n                var list = that.list;\n                var parent = list.closest(\".k-child-animation-container\");\n                var container = list.closest(\".k-animation-container\");\n                var height = that.options.height;\n                var elements = list.add(container);\n                var ul = that.ul[0];\n\n                if (ul.children.length) {\n                    elements.add(parent).show();\n\n                    list.add(parent)\n                        .height(ul.scrollHeight > height ? height : \"auto\");\n\n                    elements.hide();\n                }\n            },\n\n            _parse: function(value) {\n                var that = this,\n                    options = that.options,\n                    min = getMilliseconds(options.min) != getMilliseconds(TODAY) ? options.min : null,\n                    max = getMilliseconds(options.max) != getMilliseconds(TODAY) ? options.max : null,\n                    current = that._value || min || max || TODAY;\n\n                if (value instanceof DATE) {\n                    return value;\n                }\n\n                value = parse(value, options.parseFormats, options.culture);\n\n                if (value) {\n                    value = new DATE(current.getFullYear(),\n                                     current.getMonth(),\n                                     current.getDate(),\n                                     value.getHours(),\n                                     value.getMinutes(),\n                                     value.getSeconds(),\n                                     value.getMilliseconds());\n                }\n\n                return value;\n            },\n\n            _adjustListWidth: function() {\n                var list = this.list,\n                    width = list[0].style.width,\n                    wrapper = this.options.anchor,\n                    computedStyle, computedWidth,\n                    outerWidth = kendo._outerWidth;\n\n                if (!list.data(\"width\") && width) {\n                    return;\n                }\n\n                computedStyle = window.getComputedStyle ? window.getComputedStyle(wrapper[0], null) : 0;\n                computedWidth = computedStyle ? parseFloat(computedStyle.width) : outerWidth(wrapper);\n\n                if (computedStyle && (browser.mozilla || browser.msie)) { // getComputedStyle returns different box in FF and IE.\n                    computedWidth += parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight) + parseFloat(computedStyle.borderLeftWidth) + parseFloat(computedStyle.borderRightWidth);\n                }\n\n                width = computedWidth - (outerWidth(list) - list.width());\n\n                list.css({\n                    fontFamily: wrapper.css(\"font-family\"),\n                    width: width\n                })\n                .data(\"width\", width);\n            },\n\n            _popup: function() {\n                var that = this,\n                    list = that.list,\n                    options = that.options,\n                    anchor = options.anchor;\n\n                if (!this.options.omitPopup) {\n\n                    that.popup = new ui.Popup(that.popupContent || list, extend(options.popup, {\n                        anchor: anchor,\n                        open: options.open,\n                        close: options.close,\n                        animation: options.animation,\n                        isRtl: support.isRtl(options.anchor),\n                        activate: function() {\n                            if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                                that.addTranslate();\n                                if (that._value) {\n                                    that.applyValue(that._value);\n                                } else {\n                                    that._updateCurrentlySelected();\n                                }\n                                that._updateRanges();\n                                that._focusList(that.list.find(\".k-time-list-wrapper\").eq(0));\n                            }\n                        }\n                    }));\n                } else {\n                    list.appendTo(options.timeDiv);\n                }\n            },\n\n            move: function(e) {\n                var that = this,\n                    key = e.keyCode,\n                    ul = that.ul[0],\n                    current = that._current,\n                    down = key === keys.DOWN;\n\n                if (key === keys.UP || down) {\n                    if (e.altKey) {\n                        that.toggle(down);\n                        return;\n                    } else if (down) {\n                        current = current ? current[0].nextSibling : ul.firstChild;\n                    } else {\n                        current = current ? current[0].previousSibling : ul.lastChild;\n                    }\n\n                    if (current) {\n                        that.select(current);\n                    }\n\n                    that.options.change(that._current.text());\n                    e.preventDefault();\n\n                } else if (key === keys.ENTER || key === keys.TAB || key === keys.ESC) {\n                    e.preventDefault();\n                    if (current) {\n                        that.options.change(current.text(), true);\n                    }\n                    that.close();\n                }\n            }\n        };\n\n        function dst() {\n            var today = new DATE(),\n                midnight = new DATE(today.getFullYear(), today.getMonth(), today.getDate(), 0, 0, 0),\n                noon = new DATE(today.getFullYear(), today.getMonth(), today.getDate(), 12, 0, 0);\n\n            return -1 * (midnight.getTimezoneOffset() - noon.getTimezoneOffset());\n        }\n\n        function getMilliseconds(date) {\n            return date.getHours() * 60 * MS_PER_MINUTE + date.getMinutes() * MS_PER_MINUTE + date.getSeconds() * 1000 + date.getMilliseconds();\n        }\n\n        function lastTimeOption(interval) {\n            var date = new Date(2100, 0, 1);\n            date.setMinutes(-interval);\n            return date;\n        }\n\n        function isInRange(value, min, max) {\n            var msMin = getMilliseconds(min),\n                msMax = getMilliseconds(max),\n                msValue;\n\n            if (!value || msMin == msMax) {\n                return true;\n            }\n\n            msValue = getMilliseconds(value);\n\n            if (msMin > msValue) {\n                msValue += MS_PER_DAY;\n            }\n\n            if (msMax < msMin) {\n                msMax += MS_PER_DAY;\n            }\n\n            return msValue >= msMin && msValue <= msMax;\n        }\n\n        TimeView.getMilliseconds = getMilliseconds;\n\n        kendo.TimeView = TimeView;\n\n        var TimePicker = Widget.extend({\n            init: function(element, options) {\n                var that = this, ul, timeView, disabled;\n\n                options = options || {};\n                options.componentType = options.componentType || \"classic\";\n\n                Widget.fn.init.call(that, element, options);\n\n                element = that.element;\n                options = that.options;\n\n                options.min = parse(element.attr(\"min\")) || parse(options.min);\n                options.max = parse(element.attr(\"max\")) || parse(options.max);\n\n                if (+options.max != +TODAY || +options.min != +TODAY) {\n                    this._specifiedRange = true;\n                }\n\n                normalize(options);\n\n                that._initialOptions = extend({}, options);\n\n                that._wrapper();\n\n                if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                    that.options.height = null;\n                }\n\n                that.timeView = timeView = new TimeView(extend({}, options, {\n                    id: element.attr(ID),\n                    anchor: that.wrapper,\n                    format: options.format,\n                    change: function(value, trigger) {\n                        if (trigger) {\n                            that._change(value);\n                        } else {\n                            element.val(value);\n                        }\n                    },\n                    open: function(e) {\n                        if (that.options.timeView && that.options.timeView.list !== \"scroll\") {\n                            that.timeView._adjustListWidth();\n                        } else {\n                            that.timeView._updateTitle();\n                        }\n\n                        if (that.trigger(OPEN)) {\n                            e.preventDefault();\n                        } else {\n                            element.attr(ARIA_EXPANDED, true);\n                            ul.attr(ARIA_HIDDEN, false);\n\n                            if (timeView.current()) {\n                                element.attr(ARIA_ACTIVEDESCENDANT, timeView._optionID);\n                            }\n                        }\n                    },\n                    close: function(e) {\n                        if (that.trigger(CLOSE)) {\n                            e.preventDefault();\n                        } else {\n                            element.attr(ARIA_EXPANDED, false);\n                            ul.attr(ARIA_HIDDEN, true);\n                            element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                        }\n                    },\n                    active: function(current) {\n                        if (element && element.length) {\n                            element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                        }\n                        if (current) {\n                            element.attr(ARIA_ACTIVEDESCENDANT, timeView._optionID);\n                        }\n                    },\n                    specifiedRange: that._specifiedRange,\n                    maxSet: +options.max != +TODAY\n                }));\n                ul = timeView.ul;\n\n                that._ariaLabel(ul);\n\n                that._icon();\n                that._reset();\n\n                try {\n                    element[0].setAttribute(\"type\", \"text\");\n                } catch (e) {\n                    element[0].type = \"text\";\n                }\n\n                element.addClass(\"k-input-inner\")\n                       .attr({\n                            \"role\": \"combobox\",\n                            \"aria-expanded\": false,\n                            \"aria-controls\": timeView._timeViewID,\n                            \"autocomplete\": \"off\"\n                       });\n\n                disabled = element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n                if (disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(element.is(\"[readonly]\"));\n                }\n                if (options.dateInput) {\n                    var min = options.min;\n                    var max = options.max;\n                    var today = new DATE();\n                    if (getMilliseconds(min) == getMilliseconds(max)) {\n                        min = new DATE(today.getFullYear(), today.getMonth(), today.getDate(), 0, 0, 0);\n                        max = new DATE(today.getFullYear(), today.getMonth(), today.getDate(), 24, 0, 0);\n                    }\n\n                    that._dateInput = new ui.DateInput(element, {\n                        culture: options.culture,\n                        format: options.format,\n                        min: min,\n                        max: max,\n                        value: options.value,\n                        interval: options.interval,\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        rounded: options.rounded,\n                        messages: options.messages.dateInput\n                    });\n                }\n                that._old = that._update(options.value || that.element.val());\n                that._oldText = element.val();\n                that._applyCssClasses();\n\n                if (options.label) {\n                    that._label();\n                }\n\n                kendo.notify(that);\n            },\n\n            options: {\n                name: \"TimePicker\",\n                min: TODAY,\n                max: TODAY,\n                format: \"\",\n                dates: [],\n                parseFormats: [],\n                value: null,\n                interval: 30,\n                height: 200,\n                animation: {},\n                dateInput: false,\n                messages: {\n                    set: \"Set\",\n                    cancel: \"Cancel\",\n                    hour: \"hour\",\n                    minute: \"minute\",\n                    second: \"second\",\n                    millisecond: \"millisecond\",\n                    now: \"Now\"\n                },\n                componentType: \"classic\",\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                label: null\n            },\n\n            events: [\n             OPEN,\n             CLOSE,\n             CHANGE\n            ],\n\n            componentTypes: {\n                \"classic\": {\n                    timeView: {\n                        list: \"list\"\n                    }\n                },\n                \"modern\": {\n                    timeView: {\n                        list: \"scroll\"\n                    }\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                var value = that._value;\n\n                Widget.fn.setOptions.call(that, options);\n                options = that.options;\n\n                if (+options.max != +TODAY || +options.min != +TODAY) {\n                    this._specifiedRange = true;\n                }\n\n                that._arrow.off(ns);\n                that._arrow.remove();\n\n                normalize(options);\n\n                that.timeView.setOptions(options);\n\n                that._icon();\n                that._editable(options);\n\n                if (value) {\n                    that.element.val(kendo.toString(value, options.format, options.culture));\n                }\n\n                if (options.label && that._inputLabel) {\n                    that.label.setOptions(options.label);\n                } else if (options.label === false) {\n                    that.label._unwrapFloating();\n                    that._inputLabel.remove();\n                    delete that._inputLabel;\n                } else if (options.label) {\n                    that._label();\n                }\n            },\n\n            dataBind: function(dates) {\n                if (isArray(dates)) {\n                    this.timeView.dataBind(dates);\n                }\n            },\n\n            _editable: function(options) {\n                var that = this,\n                    disable = options.disable,\n                    readonly = options.readonly,\n                    arrow = that._arrow.off(ns),\n                    element = that.element.off(ns),\n                    wrapper = that.wrapper.off(ns);\n\n                if (that._dateInput) {\n                    that._dateInput._unbindInput();\n                }\n\n                if (!readonly && !disable) {\n                    wrapper\n                        .removeClass(STATEDISABLED)\n                        .on(HOVEREVENTS, that._toggleHover);\n\n                    if (element && element.length) {\n                        element[0].removeAttribute(DISABLED);\n                        element[0].removeAttribute(READONLY);\n                    }\n                    element.attr(ARIA_DISABLED, false)\n                           .attr(ARIA_READONLY, false)\n                           .on(\"keydown\" + ns, that._keydown.bind(that))\n                           .on(\"focusout\" + ns, that._blur.bind(that))\n                           .on(\"focus\" + ns, function() {\n                               that.wrapper.addClass(FOCUSED);\n                           });\n\n                    if (that._dateInput) {\n                        that._dateInput._bindInput();\n                    }\n                   arrow.on(CLICK, that._click.bind(that))\n                       .on(MOUSEDOWN, preventDefault);\n                } else {\n                    wrapper\n                        .addClass(disable ? STATEDISABLED : \"\")\n                        .removeClass(disable ? \"\" : STATEDISABLED);\n\n                    element.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable)\n                           .attr(ARIA_READONLY, readonly);\n                }\n            },\n\n            _label: function() {\n                var that = this;\n                var options = that.options;\n                var labelOptions = $.isPlainObject(options.label) ? options.label : {\n                    content: options.label\n                };\n\n                if (that._dateInput) {\n                    labelOptions.floatCheck = () => {\n                        that._dateInput._toggleDateMask(true);\n\n                        if (!that.value() && !that._dateInput._hasDateInput() && document.activeElement !== that.element[0]) {\n                            that._dateInput._toggleDateMask(false);\n                            return true;\n                        }\n\n                        return false;\n                    };\n                }\n\n                that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                    widget: that\n                }));\n\n                that._inputLabel = that.label.element;\n            },\n\n            readonly: function(readonly) {\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n\n                that.timeView.destroy();\n\n                that.element.off(ns);\n                that._arrow.off(ns);\n                that.wrapper.off(ns);\n\n                if (that._form) {\n                    that._form.off(\"reset\", that._resetHandler);\n                }\n\n                if (that.label) {\n                    that.label.destroy();\n                }\n            },\n\n            close: function() {\n                this.timeView.close();\n            },\n\n            open: function() {\n                this.timeView.open();\n            },\n\n            min: function(value) {\n                if (value) {\n                    this._specifiedRange = true;\n                }\n\n                return this._option(\"min\", value);\n            },\n\n            max: function(value) {\n                if (value && this.timeView) {\n                    this._specifiedRange = true;\n                    this.timeView.options.maxSet = true;\n                } else if (this.timeView) {\n                    this.timeView.options.maxSet = false;\n                }\n                return this._option(\"max\", value);\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                that._old = that._update(value);\n\n                if (that._old === null) {\n                    that.element.val(\"\");\n                }\n\n                that._oldText = that.element.val();\n\n                if (that.label && that.label.floatingLabel) {\n                    that.label.floatingLabel.refresh();\n                }\n            },\n\n            _blur: function() {\n                var that = this,\n                    value = that.element.val();\n\n               if (!(that.options.timeView && that.options.timeView.list === \"scroll\")) {\n                   that.close();\n               }\n\n                if (value !== that._oldText) {\n                    that._change(value);\n                }\n                that.wrapper.removeClass(FOCUSED);\n            },\n\n            _click: function() {\n                var that = this,\n                    element = that.element;\n\n                that.timeView.toggle();\n\n                if (!support.touch && element[0] !== activeElement()) {\n                    element.trigger(\"focus\");\n                }\n            },\n\n            _change: function(value) {\n                var that = this,\n                oldValue = that.element.val(),\n                dateChanged;\n\n                value = that._update(value);\n                dateChanged = !kendo.calendar.isEqualDate(that._old, value);\n\n                var valueUpdated = dateChanged && !that._typing;\n                var textFormatted = oldValue !== that.element.val();\n\n                if (valueUpdated || textFormatted) {\n                    that.element.trigger(CHANGE);\n                }\n\n                if (dateChanged) {\n                    that._old = value;\n                    that._oldText = that.element.val();\n\n                    that.trigger(CHANGE);\n                }\n\n                that._typing = false;\n            },\n\n            _icon: function() {\n                var that = this,\n                    element = that.element,\n                    options = that.options,\n                    arrow;\n\n                arrow = element.next(\"button.k-input-button\");\n\n                if (!arrow[0]) {\n                    arrow = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-input-button\" aria-label=\"select\"></button>', {\n                        icon: \"clock\",\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        shape: \"none\",\n                        rounded: \"none\"\n                    })).insertAfter(element);\n                }\n\n                that._arrow = arrow.attr({\n                    \"role\": \"button\"\n                });\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    key = e.keyCode,\n                    timeView = that.timeView,\n                    value = that.element.val();\n\n                if (timeView.popup.visible() || e.altKey) {\n                    timeView.move(e);\n                    if (that._dateInput && e.stopImmediatePropagation) {\n                        e.stopImmediatePropagation();\n                    }\n                } else if (key === keys.ENTER && value !== that._oldText) {\n                    that._change(value);\n                } else {\n                    that._typing = true;\n                }\n            },\n\n            _option: function(option, value) {\n                var that = this,\n                    options = that.options;\n\n                if (value === undefined$1) {\n                    return options[option];\n                }\n\n                value = that.timeView._parse(value);\n\n                if (!value) {\n                    return;\n                }\n\n                value = new DATE(+value);\n\n                options[option] = value;\n                that.timeView.options[option] = value;\n                that.timeView.bind();\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n            },\n\n            _update: function(value) {\n                var that = this,\n                    options = that.options,\n                    timeView = that.timeView,\n                    date = timeView._parse(value);\n\n                if (!isInRange(date, options.min, options.max)) {\n                    date = null;\n                }\n\n                that._value = date;\n                that._currentlySelected = date;\n                if (that._dateInput && date) {\n                    that._dateInput.value(date || value);\n                } else {\n                    that.element.val(kendo.toString(date || value, options.format, options.culture));\n                }\n                timeView.value(date);\n\n                return date;\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    wrapper;\n\n                wrapper = element.parents(\".k-timepicker\");\n\n                if (!wrapper[0]) {\n                    wrapper = element.wrap(SPAN).parent();\n                }\n\n                wrapper[0].style.cssText = element[0].style.cssText;\n                that.wrapper = wrapper.addClass(\"k-timepicker k-input\")\n                    .addClass(element[0].className);\n\n                element.css({\n                    height: element[0].style.height\n                });\n            },\n\n            _reset: function() {\n                var that = this,\n                    element = that.element,\n                    formId = element.attr(\"form\"),\n                    form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        that.value(element[0].defaultValue);\n                        that.max(that._initialOptions.max);\n                        that.min(that._initialOptions.min);\n                    };\n\n                    that._form = form.on(\"reset\", that._resetHandler);\n                }\n            }\n        });\n\n        function normalize(options) {\n            var parseFormats = options.parseFormats;\n\n            options.format = extractFormat(options.format || kendo.getCulture(options.culture).calendars.standard.patterns.t);\n\n            parseFormats = isArray(parseFormats) ? parseFormats : [parseFormats];\n            parseFormats.splice(0, 0, options.format);\n            options.parseFormats = parseFormats;\n        }\n\n        function preventDefault(e) {\n            e.preventDefault();\n        }\n\n        function mergeDateAndTime(date, time) {\n            return new Date(date.getFullYear(),\n                date.getMonth(),\n                date.getDate(),\n                time.getHours(),\n                time.getMinutes(),\n                time.getSeconds(),\n                time.getMilliseconds());\n        }\n\n        function datePattern(format, info) {\n            var calendar = info.calendar;\n            var result;\n            if (typeof format === \"string\") {\n                if (calendar.patterns[format]) {\n                    result = calendar.patterns[format];\n                } else {\n                    result = format;\n                }\n            }\n\n            if (!result) {\n                result = calendar.patterns.d;\n            }\n\n            return result;\n        }\n\n        function addLiteral(parts, value) {\n            var lastPart = parts[parts.length - 1];\n            if (lastPart && lastPart.type === \"LITERAL\") {\n                lastPart.pattern += value;\n            } else {\n                parts.push({\n                    type: LITERAL,\n                    pattern: value\n                });\n            }\n        }\n\n        function isHour12(pattern) {\n            return pattern === \"h\" || pattern === \"K\";\n        }\n\n        function dateNameType(formatLength) {\n            var nameType;\n            if (formatLength <= 3) {\n                nameType = \"abbreviated\";\n            } else if (formatLength === 4) {\n                nameType = \"wide\";\n            } else if (formatLength === 5) {\n                nameType = \"narrow\";\n            } else if (formatLength === 6) {\n                nameType = \"short\";\n            }\n\n            return nameType;\n        }\n\n        function startsWith(text, searchString, position) {\n            position = position || 0;\n            return text.indexOf(searchString, position) === position;\n        }\n\n        function includes(text, subStr) {\n            var returnValue = false;\n\n            if (text.indexOf(subStr) !== -1) {\n                returnValue = true;\n            }\n\n            return returnValue;\n        }\n\n        function splitDateFormat(format) {\n            var info = kendo.culture();\n            var pattern = datePattern(format, info);\n            var parts = [];\n            var lastIndex = dateFormatRegExp.lastIndex = 0;\n            var match = dateFormatRegExp.exec(pattern);\n            var specifier;\n            var type;\n            var part;\n            var names;\n            var minLength;\n            var patternLength;\n\n            while (match) {\n                var value = match[0];\n\n                if (lastIndex < match.index) {\n                    addLiteral(parts, pattern.substring(lastIndex, match.index));\n                }\n\n                if (startsWith(value, '\"') || startsWith(value, \"'\")) {\n                    addLiteral(parts, value);\n                } else {\n                    specifier = value[0];\n                    type = DATE_FIELD_MAP[specifier];\n                    part = {\n                        type: type,\n                        pattern: value\n                    };\n\n                    if (type === \"hour\") {\n                        part.hour12 = isHour12(value);\n                    }\n\n                    names = NAME_TYPES[type];\n\n                    if (names) {\n                        minLength = typeof names.minLength === \"number\" ? names.minLength : names.minLength[specifier];\n                        patternLength = value.length;\n\n                        if (patternLength >= minLength) {\n                            part.names = {\n                                type: names.type,\n                                nameType: dateNameType(patternLength),\n                                standAlone: names.standAlone === specifier\n                            };\n                        }\n                    }\n\n                    parts.push(part);\n                }\n\n                lastIndex = dateFormatRegExp.lastIndex;\n                match = dateFormatRegExp.exec(pattern);\n            }\n\n            if (lastIndex < pattern.length) {\n                addLiteral(parts, pattern.substring(lastIndex));\n            }\n\n            return parts;\n        }\n\n        function pad(value, size) {\n            var s = String(value);\n            while (s.length < (size || 2)) {\n                s = \"0\" + s;\n            }\n            return s;\n        }\n\n        function firstItemIndex(scrollTop, itemHeight) {\n            return Math.max(Math.round(scrollTop / itemHeight), 0);\n        }\n\n        function getItemHeight(item) {\n            return item.length && item[0].getBoundingClientRect().height;\n        }\n\n        function scrollIntoViewIfNeeded(element, centerIfNeeded) {\n\n            function makeRange(start, length) {\n                return { start: start, length: length, end: start + length };\n            }\n\n            function coverRange(inner, outer) {\n                if (centerIfNeeded === false ||\n                    (outer.start < inner.end && inner.start < outer.end))\n                {\n                    return Math.min(\n                        inner.start, Math.max(outer.start, inner.end - outer.length)\n                    );\n                }\n                return (inner.start + inner.end - outer.length) / 2;\n            }\n\n            function makePoint(x, y) {\n                return {\n                    x: x, y: y,\n                    translate: function translate(dX, dY) {\n                        return makePoint(x + dX, y + dY);\n                    }\n                };\n            }\n\n            function absolute(elem, pt) {\n                while (elem) {\n                    pt = pt.translate(elem.offsetLeft, elem.offsetTop);\n                    elem = elem.offsetParent;\n                }\n                return pt;\n            }\n\n            var target = absolute(element, makePoint(0, 0)),\n                extent = makePoint(element.offsetWidth, element.offsetHeight),\n                elem = element.parentNode,\n                origin;\n\n            while (elem instanceof HTMLElement) {\n                origin = absolute(elem, makePoint(elem.clientLeft, elem.clientTop));\n                elem.scrollLeft = coverRange(\n                    makeRange(target.x - origin.x, extent.x),\n                    makeRange(elem.scrollLeft, elem.clientWidth)\n                );\n                elem.scrollTop = coverRange(\n                    makeRange(target.y - origin.y, extent.y),\n                    makeRange(elem.scrollTop, elem.clientHeight)\n                );\n\n                target = target.translate(-elem.scrollLeft, -elem.scrollTop);\n                elem = elem.parentNode;\n            }\n        }\n\n\n        kendo.cssProperties.registerPrefix(\"TimePicker\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"TimePicker\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(TimePicker);\n\n    })(window.kendo.jQuery);\n\n}));\n"]}