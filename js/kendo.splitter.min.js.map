{"version":3,"file":"kendo.splitter.min.js","names":["factory","define","amd","$","undefined$1","kendo","window","ui","keys","extend","Widget","pxUnitsRegex","percentageUnitsRegex","NS","EXPAND","COLLAPSE","CONTENTLOAD","ERROR","LAYOUTCHANGE","HORIZONTAL","VERTICAL","CLICK","PANE","FOCUSED","KPANE","PANECLASS","isPercentageSize","size","test","isPixelSize","isFluid","calculateSize","total","output","parseInt","Math","floor","panePropertyAccessor","propertyName","triggersResize","pane","value","paneConfig","this","element","find","data","arguments","length","options","name","resize","Splitter","init","isHorizontal","that","fn","call","wrapper","orientation","toLowerCase","_dimension","_keys","decrease","LEFT","UP","increase","RIGHT","DOWN","_resizeStep","_marker","guid","substring","_initPanes","resizing","PaneResizing","triggerHandler","events","_addOverlays","_panes","append","_removeOverlays","children","remove","_attachEvents","on","_keydown","bind","e","currentTarget","focus","addClass","removeClass","end","_togglePane","_arrowClick","document","_detachEvents","off","panes","destroy","key","keyCode","target","navigationKeys","ctrlKey","isResizing","_triggerAction","move","preventDefault","HOME","prev","collapse","END","expand","ENTER","panesConfig","each","i","nodeName","_initPane","config","attr","toggleClass","scrollable","ajaxRequest","url","contentUrl","isLocalUrl","jQuery","ajax","type","dataType","success","angular","elements","get","html","trigger","error","xhr","status","shouldExecute","collapsed","collapsible","arrow","closest","is","next","arrowType","parent","_updateSplitBar","splitbar","previousPane","nextPane","previousPaneEl","catIconIf","actionType","iconType","condition","icon","draggable","resizable","prevCollapsible","prevCollapsed","nextCollapsible","nextCollapsed","previousPaneId","labelId","label","removeAttr","_updateSplitBars","prevAll","first","nextAll","_removeSplitBars","_resetAriaValueNow","splitBars","panesSizes","valueNow","joinDimension","round","setAttribute","_resize","splitBarsCount","sizingProperty","totalSize","slice","after","sizedPanesWidth","freeSizedPanes","css","position","top","collapsedSize","add","push","freeSizePanesCount","freeSizePaneWidth","eq","forEach","sum","alternateSizingProperty","positioningProperty","sizingDomProperty","lastNonCollapsedPane","filter","last","child","tagName","style","toggle","_addPane","idx","paneElement","splice","appendTo","insertBefore","referencePane","index","insertAfter","min","max","plugin","verticalDefaults","mousePositioningProperty","horizontalDefaults","splitter","owner","_element","_resizable","Resizable","handle","hint","_createHint","start","_start","_max","_min","invalidClass","resizeend","_stop","prototype","press","delta","pressed","previousPaneConfig","nextPaneConfig","prevBoundary","nextBoundary","toPx","val","prevMinSize","prevMaxSize","nextMinSize","nextMaxSize","_maxPosition","_minPosition","ESC","ghostPosition","previousPaneNewSize","nextPaneNewSize","fluidPanesCount"],"sources":["kendo.splitter.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.resizable', 'kendo.icons'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"splitter\",\n        name: \"Splitter\",\n        category: \"web\",\n        description: \"The Splitter widget provides an easy way to create a dynamic layout of resizable and collapsible panes.\",\n        depends: [ \"resizable\", \"icons\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            keys = kendo.keys,\n            extend = $.extend,\n            Widget = ui.Widget,\n            pxUnitsRegex = /^\\d+(\\.\\d+)?px$/i,\n            percentageUnitsRegex = /^\\d+(\\.\\d+)?%$/i,\n            NS = \".kendoSplitter\",\n            EXPAND = \"expand\",\n            COLLAPSE = \"collapse\",\n            CONTENTLOAD = \"contentLoad\",\n            ERROR = \"error\",\n            RESIZE = \"resize\",\n            LAYOUTCHANGE = \"layoutChange\",\n            HORIZONTAL = \"horizontal\",\n            VERTICAL = \"vertical\",\n            MOUSEENTER = \"mouseenter\",\n            CLICK = \"click\",\n            PANE = \"pane\",\n            MOUSELEAVE = \"mouseleave\",\n            FOCUSED = \"k-focus\",\n            KPANE = \"k-\" + PANE,\n            PANECLASS = \".\" + KPANE,\n            TABINDEX = \"tabindex\",\n            ARIA_VALUEMIN = \"aria-valuemin\",\n            ARIA_VALUEMAX = \"aria-valuemax\",\n            ARIA_VALUENOW = \"aria-valuenow\",\n            ARIA_CONTROLS = \"aria-controls\",\n            ARIA_LABEL = \"aria-label\",\n            ARIA_LABELLEDBY = \"aria-labelledby\",\n            ARIA_ORIENTATION = \"aria-orientation\";\n\n        function isPercentageSize(size) {\n            return percentageUnitsRegex.test(size);\n        }\n\n        function isPixelSize(size) {\n            return pxUnitsRegex.test(size) || /^\\d+$/.test(size);\n        }\n\n        function isFluid(size) {\n            return !isPercentageSize(size) && !isPixelSize(size);\n        }\n\n        function calculateSize(size, total) {\n            var output = parseInt(size, 10);\n\n            if (isPercentageSize(size)) {\n                output = Math.floor(output * total / 100);\n            }\n\n            return output;\n        }\n\n        function panePropertyAccessor(propertyName, triggersResize) {\n            return function(pane, value) {\n                var paneConfig = this.element.find(pane).data(PANE);\n\n                if (arguments.length == 1) {\n                    return paneConfig[propertyName];\n                }\n\n                paneConfig[propertyName] = value;\n\n                if (triggersResize) {\n                    var splitter = this.element.data(\"kendo\" + this.options.name);\n                    splitter.resize(true);\n                }\n            };\n        }\n\n        var Splitter = Widget.extend({\n            init: function(element, options) {\n                var that = this,\n                    isHorizontal;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.wrapper = that.element;\n\n                if (that.options.orientation) {\n                    isHorizontal = that.options.orientation.toLowerCase() != VERTICAL;\n                }\n\n                that.orientation = isHorizontal ? HORIZONTAL : VERTICAL;\n                that._dimension = isHorizontal ? \"width\" : \"height\";\n                that._keys = {\n                    decrease: isHorizontal ? keys.LEFT : keys.UP,\n                    increase: isHorizontal ? keys.RIGHT : keys.DOWN\n                };\n\n                that._resizeStep = 10;\n\n                that._marker = kendo.guid().substring(0, 8);\n\n                that._initPanes();\n\n                that.resizing = new PaneResizing(that);\n\n                that.element.triggerHandler(\"init\" + NS);\n            },\n            events: [\n                EXPAND,\n                COLLAPSE,\n                CONTENTLOAD,\n                ERROR,\n                RESIZE,\n                LAYOUTCHANGE\n            ],\n\n            _addOverlays: function() {\n                this._panes().append(\"<div class='k-splitter-overlay k-overlay' />\");\n            },\n\n            _removeOverlays: function() {\n                this._panes().children(\".k-splitter-overlay\").remove();\n            },\n\n            _attachEvents: function() {\n                var that = this,\n                    orientation = that.options.orientation;\n\n                // do not use delegated events to increase performance of nested elements\n                that.element\n                    .children(\".k-splitbar-draggable-\" + orientation)\n                        .on(\"keydown\" + NS, that._keydown.bind(that))\n                        .on(\"mousedown\" + NS, function(e) { e.currentTarget.focus(); })\n                        .on(\"focus\" + NS, function(e) { $(e.currentTarget).addClass(FOCUSED); })\n                        .on(\"blur\" + NS, function(e) { $(e.currentTarget).removeClass(FOCUSED);\n                            if (that.resizing) {\n                                that.resizing.end();\n                            }\n                        })\n                        .on(MOUSEENTER + NS, function() { $(this).addClass(\"k-splitbar-\" + that.orientation + \"-hover\"); })\n                        .on(MOUSELEAVE + NS, function() { $(this).removeClass(\"k-splitbar-\" + that.orientation + \"-hover\"); })\n                        .on(\"mousedown\" + NS, that._addOverlays.bind(that))\n                    .end()\n                    .children(\".k-splitbar\")\n                        .on(\"dblclick\" + NS, that._togglePane.bind(that))\n                        .children(\".k-collapse-next, .k-collapse-prev\").on(CLICK + NS, that._arrowClick(COLLAPSE)).end()\n                        .children(\".k-expand-next, .k-expand-prev\").on(CLICK + NS, that._arrowClick(EXPAND)).end()\n                    .end();\n\n                $(window).on(\"resize\" + NS + that._marker, that.resize.bind(that, false));\n                $(document).on(\"mouseup\" + NS + that._marker, that._removeOverlays.bind(that));\n            },\n\n            _detachEvents: function() {\n                var that = this;\n\n                that.element\n                    .children(\".k-splitbar-draggable-\" + that.orientation).off(NS).end()\n                    .children(\".k-splitbar\").off(\"dblclick\" + NS)\n                        .children(\".k-collapse-next, .k-collapse-prev, .k-expand-next, .k-expand-prev\").off(NS);\n\n                $(window).off(NS + that._marker);\n                $(document).off(NS + that._marker);\n            },\n\n            options: {\n                name: \"Splitter\",\n                orientation: HORIZONTAL,\n                panes: []\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this._detachEvents();\n\n                if (this.resizing) {\n                    this.resizing.destroy();\n                }\n\n                kendo.destroy(this.element);\n\n                this.wrapper = this.element = null;\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    key = e.keyCode,\n                    resizing = that.resizing,\n                    target = $(e.currentTarget),\n                    navigationKeys = that._keys,\n                    increase = key === navigationKeys.increase,\n                    decrease = key === navigationKeys.decrease,\n                    pane;\n\n                if (increase || decrease) {\n                    if (e.ctrlKey) {\n                        pane = target[decrease ? \"next\" : \"prev\"]();\n\n                        if (resizing && resizing.isResizing()) {\n                            resizing.end();\n                        }\n\n                        if (!pane[that._dimension]()) {\n                            that._triggerAction(EXPAND, pane);\n                        } else {\n                            that._triggerAction(COLLAPSE, target[decrease ? \"prev\" : \"next\"]());\n                        }\n                    } else if (resizing) {\n                        resizing.move((decrease ? -1 : 1) * that._resizeStep, target);\n                    }\n                    e.preventDefault();\n                } else if (key === keys.HOME) {\n                    pane = target.prev();\n                    that.collapse(pane);\n                    e.preventDefault();\n                } else if (key === keys.END) {\n                    pane = target.prev();\n                    that.expand(pane);\n                    e.preventDefault();\n                } else if (key === keys.ENTER && resizing) {\n                    resizing.end();\n                    e.preventDefault();\n                }\n            },\n\n            _initPanes: function() {\n                var panesConfig = this.options.panes || [];\n                var that = this;\n\n                this.element\n                    .addClass(\"k-widget\").addClass(\"k-splitter\")\n                    .children()\n                        .each(function(i, pane) {\n                            if (pane.nodeName.toLowerCase() != \"script\") {\n                                that._initPane(pane, panesConfig[i]);\n                            }\n                        });\n\n                this.resize();\n            },\n\n            _initPane: function(pane, config) {\n                pane = $(pane)\n                    .attr(\"role\", \"group\")\n                    .addClass(KPANE);\n\n                pane.data(PANE, config ? config : {})\n                    .toggleClass(\"k-scrollable\", config ? config.scrollable !== false : true);\n\n                this.ajaxRequest(pane);\n            },\n\n            ajaxRequest: function(pane, url, data) {\n                var that = this,\n                    paneConfig;\n\n                pane = that.element.find(pane);\n                paneConfig = pane.data(PANE);\n\n                url = url || paneConfig.contentUrl;\n\n                if (url) {\n                    pane.append(\"<span class='k-icon k-i-loading k-pane-loading' />\");\n\n                    if (kendo.isLocalUrl(url)) {\n                        jQuery.ajax({\n                            url: url,\n                            data: data || {},\n                            type: \"GET\",\n                            dataType: \"html\",\n                            success: function(data) {\n                                that.angular(\"cleanup\", function() { return { elements: pane.get() }; });\n                                pane.html(data);\n                                that.angular(\"compile\", function() { return { elements: pane.get() }; });\n\n                                that.trigger(CONTENTLOAD, { pane: pane[0] });\n                            },\n                            error: function(xhr, status) {\n                                that.trigger(ERROR, {\n                                    pane: pane[0],\n                                    status: status,\n                                    xhr: xhr\n                                });\n                            }\n                        });\n                    } else {\n                        pane.removeClass(\"k-scrollable\")\n                            .html(\"<iframe src='\" + url + \"' frameborder='0' class='k-content-frame'>\" +\n                                    \"This page requires frames in order to show content\" +\n                                  \"</iframe>\");\n                    }\n                }\n            },\n\n            _triggerAction: function(type, pane) {\n                var paneConfig = pane.data(PANE);\n                var shouldExecute = (paneConfig.collapsed && type == EXPAND) || (!paneConfig.collapsed && type == COLLAPSE);\n\n                if (!paneConfig.collapsible) {\n                    return;\n                }\n\n                if (shouldExecute && !this.trigger(type, { pane: pane[0] })) {\n                    this[type](pane[0]);\n                }\n            },\n\n            _togglePane: function(e) {\n                var that = this,\n                    target = $(e.target),\n                    arrow;\n\n                if (target.closest(\".k-splitter\")[0] != that.element[0]) {\n                    return;\n                }\n\n                arrow = target.children(\"span:not(.k-resize-handle)\");\n\n                if (arrow.length !== 1) {\n                    return;\n                }\n\n                if (arrow.is(\".k-collapse-prev\")) {\n                    that._triggerAction(COLLAPSE, target.prev());\n                } else if (arrow.is(\".k-collapse-next\")) {\n                    that._triggerAction(COLLAPSE, target.next());\n                } else if (arrow.is(\".k-expand-prev\")) {\n                    that._triggerAction(EXPAND, target.prev());\n                } else if (arrow.is(\".k-expand-next\")) {\n                    that._triggerAction(EXPAND, target.next());\n                }\n            },\n            _arrowClick: function(arrowType) {\n                var that = this;\n\n                return function(e) {\n                    var target = $(e.currentTarget),\n                        pane;\n\n                    if (target.closest(\".k-splitter\")[0] != that.element[0]) {\n                        return;\n                    }\n\n                    if (target.is(\".k-\" + arrowType + \"-prev\")) {\n                        pane = target.parent().prev();\n                    } else {\n                        pane = target.parent().next();\n                    }\n                    that._triggerAction(arrowType, pane);\n                };\n            },\n            _updateSplitBar: function(splitbar, previousPane, nextPane, previousPaneEl) {\n                var catIconIf = function(actionType, iconType, condition) {\n                        var icon = iconType ? ui.icon({ icon: iconType, size: \"xsmall\" }) : \"\";\n                        return condition ? \"<span class='k-\" + actionType + \"'>\" + icon + \"</span>\" : \"\";\n                    },\n                    orientation = this.orientation,\n                    draggable = (previousPane.resizable !== false) && (nextPane.resizable !== false),\n                    prevCollapsible = previousPane.collapsible,\n                    prevCollapsed = previousPane.collapsed,\n                    nextCollapsible = nextPane.collapsible,\n                    nextCollapsed = nextPane.collapsed,\n                    previousPaneId = previousPaneEl.attr(\"id\");\n\n                if (!previousPaneId) {\n                    previousPaneId = kendo.guid();\n                    previousPaneEl.attr(\"id\", previousPaneId);\n                }\n\n                splitbar.addClass(\"k-splitbar k-splitbar-\" + orientation)\n                        .attr(\"role\", \"separator\")\n                        .attr(ARIA_VALUEMIN, \"0\")\n                        .attr(ARIA_VALUEMAX, \"100\")\n                        .attr(ARIA_CONTROLS, previousPaneId)\n                        .removeClass(\"k-splitbar-\" + orientation + \"-hover\")\n                        .toggleClass(\"k-splitbar-draggable-\" + orientation,\n                            draggable && !prevCollapsed && !nextCollapsed)\n                        .toggleClass(\"k-splitbar-static-\" + orientation,\n                            !draggable && !prevCollapsible && !nextCollapsible)\n                        .html(\n                            catIconIf(\"collapse-prev\", \"caret-alt-up\", prevCollapsible && !prevCollapsed && !nextCollapsed && orientation == VERTICAL) +\n                            catIconIf(\"collapse-prev\", \"caret-alt-left\", prevCollapsible && !prevCollapsed && !nextCollapsed && orientation == HORIZONTAL) +\n                            catIconIf(\"expand-prev\", \"caret-alt-down\", prevCollapsible && prevCollapsed && !nextCollapsed && orientation == VERTICAL) +\n                            catIconIf(\"expand-prev\", \"caret-alt-right\", prevCollapsible && prevCollapsed && !nextCollapsed && orientation == HORIZONTAL) +\n                            catIconIf(\"resize-handle\", null, draggable && orientation == VERTICAL) +\n                            catIconIf(\"resize-handle\", null, draggable && orientation == HORIZONTAL) +\n                            catIconIf(\"collapse-next\", \"caret-alt-down\", nextCollapsible && !nextCollapsed && !prevCollapsed && orientation == VERTICAL) +\n                            catIconIf(\"collapse-next\", \"caret-alt-right\", nextCollapsible && !nextCollapsed && !prevCollapsed && orientation == HORIZONTAL) +\n                            catIconIf(\"expand-next\", \"caret-alt-up\", nextCollapsible && nextCollapsed && !prevCollapsed && orientation == VERTICAL) +\n                            catIconIf(\"expand-next\", \"caret-alt-left\", nextCollapsible && nextCollapsed && !prevCollapsed && orientation == HORIZONTAL)\n                        );\n\n                if (previousPane.labelId) {\n                    splitbar.attr(ARIA_LABELLEDBY, previousPane.labelId);\n                } else if (previousPane.label) {\n                    splitbar.attr(ARIA_LABEL, previousPane.label);\n                }\n\n                if (orientation == HORIZONTAL) {\n                    splitbar.attr(ARIA_ORIENTATION, VERTICAL);\n                }\n\n                if (!draggable && !prevCollapsible && !nextCollapsible) {\n                    splitbar.removeAttr(TABINDEX);\n                }\n            },\n            _updateSplitBars: function() {\n                var that = this;\n\n                this.element.children(\".k-splitbar\").each(function() {\n                    var splitbar = $(this),\n                        previousPaneEl = splitbar.prevAll(PANECLASS).first(),\n                        previousPane = previousPaneEl.data(PANE),\n                        nextPane = splitbar.nextAll(PANECLASS).first().data(PANE);\n\n                    if (!nextPane) {\n                        return;\n                    }\n\n                    that._updateSplitBar(splitbar, previousPane, nextPane, previousPaneEl);\n                });\n            },\n            _removeSplitBars: function() {\n                this.element.children(\".k-splitbar\").remove();\n            },\n            _panes: function() {\n                if (!this.element) {\n                    return $();\n                }\n                return this.element.children(PANECLASS);\n            },\n\n            _resetAriaValueNow: function(splitBars, panesSizes) {\n                var i, splitbar, valueNow, joinDimension;\n\n                for (i = 0; i < splitBars.length; i++) {\n                    joinDimension = (panesSizes[i] + panesSizes[i + 1]) || 1;\n                    valueNow = Math.round(panesSizes[i] / joinDimension * 100);\n                    splitbar = splitBars[i];\n                    splitbar.setAttribute(ARIA_VALUENOW, valueNow);\n                }\n            },\n\n            _resize: function() {\n                var that = this,\n                    element = that.element,\n                    panes = element.children(PANECLASS),\n                    isHorizontal = that.orientation == HORIZONTAL,\n                    splitBars = element.children(\".k-splitbar\"),\n                    splitBarsCount = splitBars.length,\n                    sizingProperty = isHorizontal ? \"width\" : \"height\",\n                    totalSize = element[sizingProperty](),\n                    panesSizes = [];\n\n                that.wrapper.addClass(\"k-splitter-resizing\");\n\n                if (splitBarsCount === 0) {\n                    splitBarsCount = panes.length - 1;\n                    panes.slice(0, splitBarsCount)\n                         .after(\"<div tabindex='0' class='k-splitbar' data-marker='\" + that._marker + \"' />\");\n\n                    that._updateSplitBars();\n                    splitBars = element.children(\".k-splitbar\");\n                } else {\n                    that._updateSplitBars();\n                }\n\n                // discard splitbar sizes from total size\n                splitBars.each(function() {\n                    totalSize -= this[isHorizontal ? \"offsetWidth\" : \"offsetHeight\"];\n                });\n\n                var sizedPanesWidth = 0,\n                    sizedPanesCount = 0,\n                    freeSizedPanes = $();\n\n                panes.css({ position: \"absolute\", top: 0 })\n                    [sizingProperty](function() {\n                        var element = $(this),\n                            config = element.data(PANE) || {}, size;\n\n                        element.removeClass(\"k-collapsed\");\n                        if (config.collapsed) {\n                            size = config.collapsedSize ? calculateSize(config.collapsedSize, totalSize) : 0;\n                            element.css(\"overflow\", \"hidden\").addClass(\"k-collapsed\");\n                        } else if (isFluid(config.size)) {\n                            freeSizedPanes = freeSizedPanes.add(this);\n                            panesSizes.push(false);\n                            return;\n                        } else { // sized in px/%, not collapsed\n                            size = calculateSize(config.size, totalSize);\n                        }\n\n                        sizedPanesCount++;\n                        sizedPanesWidth += size;\n                        panesSizes.push(size);\n\n                        return size;\n                    });\n\n                totalSize -= sizedPanesWidth;\n\n                var freeSizePanesCount = freeSizedPanes.length,\n                    freeSizePaneWidth = Math.floor(totalSize / freeSizePanesCount);\n\n                freeSizedPanes\n                    .slice(0, freeSizePanesCount - 1)\n                        .css(sizingProperty, freeSizePaneWidth)\n                    .end()\n                    .eq(freeSizePanesCount - 1)\n                        .css(sizingProperty, totalSize - (freeSizePanesCount - 1) * freeSizePaneWidth);\n\n                panesSizes.forEach(function(size, i) {\n                    if (size === false) {\n                        panesSizes[i] = freeSizePaneWidth;\n                    }\n                });\n\n                that._resetAriaValueNow(splitBars, panesSizes);\n\n                // arrange panes\n                var sum = 0,\n                    alternateSizingProperty = isHorizontal ? \"height\" : \"width\",\n                    positioningProperty = isHorizontal ? \"left\" : \"top\",\n                    sizingDomProperty = isHorizontal ? \"offsetWidth\" : \"offsetHeight\";\n\n                if (freeSizePanesCount === 0) {\n                    var lastNonCollapsedPane = panes.filter(function() {\n                        return !(($(this).data(PANE) || {}).collapsed);\n                    }).last();\n\n                    lastNonCollapsedPane[sizingProperty](totalSize + lastNonCollapsedPane[0][sizingDomProperty]);\n                }\n\n                element.children()\n                    .css(alternateSizingProperty, element[alternateSizingProperty]())\n                    .each(function(i, child) {\n                        if (child.tagName.toLowerCase() != \"script\") {\n                            child.style[positioningProperty] = Math.floor(sum) + \"px\";\n                            sum += child[sizingDomProperty];\n                        }\n                    });\n\n                that._detachEvents();\n                that._attachEvents();\n\n                that.wrapper.removeClass(\"k-splitter-resizing\");\n\n                kendo.resize(panes);\n                that.trigger(LAYOUTCHANGE);\n            },\n\n            toggle: function(pane, expand) {\n                var that = this,\n                    paneConfig;\n\n                pane = that.element.find(pane);\n                paneConfig = pane.data(PANE);\n\n                if (!expand && !paneConfig.collapsible) {\n                    return;\n                }\n\n                if (arguments.length == 1) {\n                    expand = paneConfig.collapsed === undefined$1 ? false : paneConfig.collapsed;\n                }\n\n                paneConfig.collapsed = !expand;\n\n                if (paneConfig.collapsed) {\n                    pane.css(\"overflow\", \"hidden\");\n                } else {\n                    pane.css(\"overflow\", \"\");\n                }\n\n                that.resize(true);\n            },\n\n            collapse: function(pane) {\n                this.toggle(pane, false);\n            },\n\n            expand: function(pane) {\n                this.toggle(pane, true);\n            },\n\n            _addPane: function(config, idx, paneElement) {\n                var that = this;\n\n                if (paneElement.length) {\n                    that.options.panes.splice(idx, 0, config);\n                    that._initPane(paneElement, config);\n\n                    that._removeSplitBars();\n\n                    that.resize(true);\n                }\n\n                return paneElement;\n            },\n\n            append: function(config) {\n                config = config || {};\n\n                var that = this,\n                    paneElement = $(\"<div />\").appendTo(that.element);\n\n                return that._addPane(config, that.options.panes.length, paneElement);\n            },\n\n            insertBefore: function(config, referencePane) {\n                referencePane = $(referencePane);\n                config = config || {};\n\n                var that = this,\n                    idx = that.wrapper.children(\".k-pane\").index(referencePane),\n                    paneElement = $(\"<div />\").insertBefore($(referencePane));\n\n                return that._addPane(config, idx, paneElement);\n            },\n\n            insertAfter: function(config, referencePane) {\n                referencePane = $(referencePane);\n                config = config || {};\n\n                var that = this,\n                    idx = that.wrapper.children(\".k-pane\").index(referencePane),\n                    paneElement = $(\"<div />\").insertAfter($(referencePane));\n\n                return that._addPane(config, idx + 1, paneElement);\n            },\n\n            remove: function(pane) {\n                var that = this;\n                pane = that.wrapper.find(pane);\n\n                if (pane.length) {\n                    kendo.destroy(pane);\n                    pane.each(function(idx, element) {\n                        that.options.panes.splice(that.wrapper.children(\".k-pane\").index(element), 1);\n                        $(element).remove();\n                    });\n\n                    that._removeSplitBars();\n\n                    if (that.options.panes.length) {\n                        that.resize(true);\n                    }\n                }\n\n                return that;\n            },\n\n            size: panePropertyAccessor(\"size\", true),\n\n            min: panePropertyAccessor(\"min\"),\n\n            max: panePropertyAccessor(\"max\")\n        });\n\n        ui.plugin(Splitter);\n\n        var verticalDefaults = {\n                sizingProperty: \"height\",\n                sizingDomProperty: \"offsetHeight\",\n                alternateSizingProperty: \"width\",\n                positioningProperty: \"top\",\n                mousePositioningProperty: \"pageY\"\n            };\n\n        var horizontalDefaults = {\n                sizingProperty: \"width\",\n                sizingDomProperty: \"offsetWidth\",\n                alternateSizingProperty: \"height\",\n                positioningProperty: \"left\",\n                mousePositioningProperty: \"pageX\"\n            };\n\n        function PaneResizing(splitter) {\n            var that = this,\n                orientation = splitter.orientation;\n\n            that.owner = splitter;\n            that._element = splitter.element;\n            that.orientation = orientation;\n\n            extend(that, orientation === HORIZONTAL ? horizontalDefaults : verticalDefaults);\n\n            that._resizable = new kendo.ui.Resizable(splitter.element, {\n                orientation: orientation,\n                handle: \".k-splitbar-draggable-\" + orientation + \"[data-marker=\" + splitter._marker + \"]\",\n                hint: that._createHint.bind(that),\n                start: that._start.bind(that),\n                max: that._max.bind(that),\n                min: that._min.bind(that),\n                invalidClass: \"k-restricted-size-\" + orientation,\n                resizeend: that._stop.bind(that)\n            });\n        }\n\n        PaneResizing.prototype = {\n            press: function(target) {\n                this._resizable.press(target);\n            },\n\n            move: function(delta, target) {\n                if (!this.pressed) {\n                    this.press(target);\n                    this.pressed = true;\n                }\n\n                if (!this._resizable.target) {\n                    this._resizable.press(target);\n                }\n\n                this._resizable.move(delta);\n            },\n\n            end: function() {\n                this._resizable.end();\n                this.pressed = false;\n            },\n\n            destroy: function() {\n                this._resizable.destroy();\n                this._resizable = this._element = this.owner = null;\n            },\n\n            isResizing: function() {\n                return this._resizable.resizing;\n            },\n\n            _createHint: function(handle) {\n                var that = this;\n                return $(\"<div class='k-ghost-splitbar k-ghost-splitbar-\" + that.orientation + \"' />\")\n                            .css(that.alternateSizingProperty, handle[that.alternateSizingProperty]());\n            },\n\n            _start: function(e) {\n                var that = this,\n                    splitbar = $(e.currentTarget),\n                    previousPane = splitbar.prev(),\n                    nextPane = splitbar.next(),\n                    previousPaneConfig = previousPane.data(PANE),\n                    nextPaneConfig = nextPane.data(PANE),\n                    prevBoundary = parseInt(previousPane[0].style[that.positioningProperty], 10),\n                    nextBoundary = parseInt(nextPane[0].style[that.positioningProperty], 10) + nextPane[0][that.sizingDomProperty] - splitbar[0][that.sizingDomProperty],\n                    totalSize = parseInt(that._element.css(that.sizingProperty), 10),\n                    toPx = function(value) {\n                        var val = parseInt(value, 10);\n                        return (isPixelSize(value) ? val : (totalSize * val) / 100) || 0;\n                    },\n                    prevMinSize = toPx(previousPaneConfig.min),\n                    prevMaxSize = toPx(previousPaneConfig.max) || nextBoundary - prevBoundary,\n                    nextMinSize = toPx(nextPaneConfig.min),\n                    nextMaxSize = toPx(nextPaneConfig.max) || nextBoundary - prevBoundary;\n\n                that.previousPane = previousPane;\n                that.nextPane = nextPane;\n                that._maxPosition = Math.min(nextBoundary - nextMinSize, prevBoundary + prevMaxSize);\n                that._minPosition = Math.max(prevBoundary + prevMinSize, nextBoundary - nextMaxSize);\n            },\n            _max: function() {\n                return this._maxPosition;\n            },\n            _min: function() {\n                return this._minPosition;\n            },\n            _stop: function(e) {\n                var that = this,\n                    splitbar = $(e.currentTarget),\n                    owner = that.owner;\n\n                owner._panes().children(\".k-splitter-overlay\").remove();\n\n                if (e.keyCode !== kendo.keys.ESC) {\n                    var ghostPosition = e.position,\n                        previousPane = splitbar.prev(),\n                        nextPane = splitbar.next(),\n                        previousPaneConfig = previousPane.data(PANE),\n                        nextPaneConfig = nextPane.data(PANE),\n                        previousPaneNewSize = ghostPosition - parseInt(previousPane[0].style[that.positioningProperty], 10),\n                        nextPaneNewSize = parseInt(nextPane[0].style[that.positioningProperty], 10) + nextPane[0][that.sizingDomProperty] - ghostPosition - splitbar[0][that.sizingDomProperty],\n                        fluidPanesCount = that._element.children(PANECLASS).filter(function() { return isFluid($(this).data(PANE).size); }).length;\n\n                    if (!isFluid(previousPaneConfig.size) || fluidPanesCount > 1) {\n                        if (isFluid(previousPaneConfig.size)) {\n                            fluidPanesCount--;\n                        }\n\n                        previousPaneConfig.size = previousPaneNewSize + \"px\";\n                    }\n\n                    if (!isFluid(nextPaneConfig.size) || fluidPanesCount > 1) {\n                        nextPaneConfig.size = nextPaneNewSize + \"px\";\n                    }\n\n                    owner.resize(true);\n                }\n\n                return false;\n            }\n        };\n\n    })(window.kendo.jQuery);\n\n}));\n"]}