{"version":3,"file":"kendo.splitter.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendosplitter","js","this","$","undefined$1","kendo","window","ui","keys","extend","Widget","pxUnitsRegex","percentageUnitsRegex","NS","EXPAND","COLLAPSE","CONTENTLOAD","ERROR","LAYOUTCHANGE","HORIZONTAL","VERTICAL","CLICK","PANE","FOCUSED","KPANE","PANECLASS","isPercentageSize","size","test","isPixelSize","isFluid","calculateSize","total","output","parseInt","Math","floor","panePropertyAccessor","propertyName","triggersResize","pane","value","paneConfig","element","find","data","arguments","length","options","name","resize","Splitter","init","isHorizontal","that","fn","call","wrapper","orientation","toLowerCase","_dimension","_keys","decrease","LEFT","UP","increase","RIGHT","DOWN","_resizeStep","_marker","guid","substring","_initPanes","resizing","PaneResizing","triggerHandler","events","_addOverlays","_panes","append","_removeOverlays","children","remove","_attachEvents","on","_keydown","bind","e","currentTarget","focus","addClass","removeClass","end","_togglePane","_arrowClick","document","_detachEvents","off","clickMoveClick","panes","destroy","key","keyCode","target","navigationKeys","ctrlKey","isResizing","_triggerAction","move","preventDefault","HOME","prev","collapse","END","expand","ENTER","panesConfig","each","i","nodeName","_initPane","config","attr","toggleClass","scrollable","ajaxRequest","url","contentUrl","isLocalUrl","jQuery","ajax","type","dataType","success","html","trigger","error","xhr","status","shouldExecute","collapsed","collapsible","arrow","closest","is","next","arrowType","parent","_updateSplitBar","splitbar","previousPane","nextPane","previousPaneEl","catIconIf","actionType","iconType","condition","icon","draggable","resizable","prevCollapsible","prevCollapsed","nextCollapsible","nextCollapsed","previousPaneId","labelId","label","removeAttr","_updateSplitBars","prevAll","first","nextAll","_removeSplitBars","_resetAriaValueNow","splitBars","panesSizes","valueNow","joinDimension","round","setAttribute","_resize","splitBarsCount","sizingProperty","totalSize","_suppressResize","slice","after","sizedPanesWidth","freeSizedPanes","css","position","top","collapsedSize","add","push","freeSizePanesCount","freeSizePaneWidth","eq","forEach","sum","alternateSizingProperty","positioningProperty","sizingDomProperty","lastNonCollapsedPane","filter","last","child","tagName","style","toggle","_addPane","idx","paneElement","splice","appendTo","insertBefore","referencePane","index","insertAfter","min","max","plugin","verticalDefaults","mousePositioningProperty","horizontalDefaults","splitter","handle","owner","_element","_resizable","Resizable","hint","_createHint","start","_start","_max","_min","invalidClass","resizeend","_stop","prototype","press","delta","pressed","initialTarget","previousPaneConfig","nextPaneConfig","prevBoundary","nextBoundary","toPx","val","sender","cancel","prevMinSize","prevMaxSize","nextMinSize","nextMaxSize","_maxPosition","_minPosition","ESC","ghostPosition","previousPaneNewSize","nextPaneNewSize","fluidPanesCount"],"sources":["kendo.splitter.js"],"mappings":"CAAA,SAAWA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBA,OAAOD,QAAUD,EAAQG,QAAQ,sBAAuBA,QAAQ,mBAC7G,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,CAAC,sBAAuB,mBAAoBJ,KAC/FD,EAA+B,oBAAfO,WAA6BA,WAAaP,GAAUQ,MAAcC,cAAgBT,EAAOS,eAAiB,CAAC,EAAGT,EAAOS,cAAcC,GAAKT,IAC5J,CAJD,CAIGU,MAAM,WA00BL,OAj0BA,SAAUC,EAAGC,GACT,IAAIC,EAAQC,OAAOD,MACfE,EAAKF,EAAME,GACXC,EAAOH,EAAMG,KACbC,EAASN,EAAEM,OACXC,EAASH,EAAGG,OACZC,EAAe,mBACfC,EAAuB,kBACvBC,EAAK,iBACLC,EAAS,SACTC,EAAW,WACXC,EAAc,cACdC,EAAQ,QAERC,EAAe,eACfC,EAAa,aACbC,EAAW,WAEXC,EAAQ,QACRC,EAAO,OAEPC,EAAU,UACVC,EAAQ,KAAOF,EACfG,EAAY,IAAMD,EAUtB,SAASE,EAAiBC,GACtB,OAAOf,EAAqBgB,KAAKD,EACrC,CAEA,SAASE,EAAYF,GACjB,OAAOhB,EAAaiB,KAAKD,IAAS,QAAQC,KAAKD,EACnD,CAEA,SAASG,EAAQH,GACb,OAAQD,EAAiBC,KAAUE,EAAYF,EACnD,CAEA,SAASI,EAAcJ,EAAMK,GACzB,IAAIC,EAASC,SAASP,EAAM,IAM5B,OAJID,EAAiBC,KACjBM,EAASE,KAAKC,MAAMH,EAASD,EAAQ,MAGlCC,CACX,CAEA,SAASI,EAAqBC,EAAcC,GACxC,OAAO,SAASC,EAAMC,GAClB,IAAIC,EAAaxC,KAAKyC,QAAQC,KAAKJ,GAAMK,KAAKvB,GAE9C,GAAwB,GAApBwB,UAAUC,OACV,OAAOL,EAAWJ,IAGtBI,EAAWJ,GAAgBG,EAEvBF,IACerC,KAAKyC,QAAQE,KAAK,QAAU3C,KAAK8C,QAAQC,MAC/CC,QAAO,EAExB,CACJ,CAEA,IAAIC,EAAWzC,EAAOD,OAAO,CACzB2C,KAAM,SAAST,EAASK,GACpB,IACIK,EADAC,EAAOpD,KAGXQ,EAAO6C,GAAGH,KAAKI,KAAKF,EAAMX,EAASK,GAEnCM,EAAKG,QAAUH,EAAKX,QAEhBW,EAAKN,QAAQU,cACbL,EAAeC,EAAKN,QAAQU,YAAYC,eAAiBvC,GAG7DkC,EAAKI,YAAcL,EAAelC,EAAaC,EAC/CkC,EAAKM,WAAaP,EAAe,QAAU,SAC3CC,EAAKO,MAAQ,CACTC,SAAUT,EAAe7C,EAAKuD,KAAOvD,EAAKwD,GAC1CC,SAAUZ,EAAe7C,EAAK0D,MAAQ1D,EAAK2D,MAG/Cb,EAAKc,YAAc,GAEnBd,EAAKe,QAAUhE,EAAMiE,OAAOC,UAAU,EAAG,GAEzCjB,EAAKkB,aAELlB,EAAKmB,SAAW,IAAIC,EAAapB,GAEjCA,EAAKX,QAAQgC,eAAe,OAAS9D,EACzC,EACA+D,OAAQ,CACJ9D,EACAC,EACAC,EACAC,EA7FK,SA+FLC,GAGJ2D,aAAc,WACV3E,KAAK4E,SAASC,OAAO,+CACzB,EAEAC,gBAAiB,WACb9E,KAAK4E,SAASG,SAAS,uBAAuBC,QAClD,EAEAC,cAAe,WACX,IAAI7B,EAAOpD,KACPwD,EAAcJ,EAAKN,QAAQU,YAG/BJ,EAAKX,QACAsC,SAAS,yBAA2BvB,GAChC0B,GAAG,UAAYvE,EAAIyC,EAAK+B,SAASC,KAAKhC,IACtC8B,GAAG,YAAcvE,GAAI,SAAS0E,GAAKA,EAAEC,cAAcC,OAAS,IAC5DL,GAAG,QAAUvE,GAAI,SAAS0E,GAAKpF,EAAEoF,EAAEC,eAAeE,SAASnE,EAAU,IACrE6D,GAAG,OAASvE,GAAI,SAAS0E,GAAKpF,EAAEoF,EAAEC,eAAeG,YAAYpE,GACtD+B,EAAKmB,UACLnB,EAAKmB,SAASmB,KAEtB,IACCR,GArHA,aAqHgBvE,GAAI,WAAaV,EAAED,MAAMwF,SAAS,cAAgBpC,EAAKI,YAAc,SAAW,IAChG0B,GAnHA,aAmHgBvE,GAAI,WAAaV,EAAED,MAAMyF,YAAY,cAAgBrC,EAAKI,YAAc,SAAW,IACnG0B,GAAG,YAAcvE,EAAIyC,EAAKuB,aAAaS,KAAKhC,IAChDsC,MACAX,SAAS,eACLG,GAAG,WAAavE,EAAIyC,EAAKuC,YAAYP,KAAKhC,IAC1C2B,SAAS,sCAAsCG,GAAG/D,EAAQR,EAAIyC,EAAKwC,YAAY/E,IAAW6E,MAC1FX,SAAS,kCAAkCG,GAAG/D,EAAQR,EAAIyC,EAAKwC,YAAYhF,IAAS8E,MACxFA,MAELzF,EAAEG,QAAQ8E,GAAG,SAAWvE,EAAKyC,EAAKe,QAASf,EAAKJ,OAAOoC,KAAKhC,GAAM,IAClEnD,EAAE4F,UAAUX,GAAG,UAAYvE,EAAKyC,EAAKe,QAASf,EAAK0B,gBAAgBM,KAAKhC,GAC5E,EAEA0C,cAAe,WACX,IAAI1C,EAAOpD,KAEXoD,EAAKX,QACAsC,SAAS,yBAA2B3B,EAAKI,aAAauC,IAAIpF,GAAI+E,MAC9DX,SAAS,eAAegB,IAAI,WAAapF,GACrCoE,SAAS,sEAAsEgB,IAAIpF,GAE5FV,EAAEG,QAAQ2F,IAAIpF,EAAKyC,EAAKe,SACxBlE,EAAE4F,UAAUE,IAAIpF,EAAKyC,EAAKe,QAC9B,EAEArB,QAAS,CACLC,KAAM,WACNiD,gBAAgB,EAChBxC,YAAavC,EACbgF,MAAO,IAGXC,QAAS,WACL1F,EAAO6C,GAAG6C,QAAQ5C,KAAKtD,MAEvBA,KAAK8F,gBAED9F,KAAKuE,UACLvE,KAAKuE,SAAS2B,UAGlB/F,EAAM+F,QAAQlG,KAAKyC,SAEnBzC,KAAKuD,QAAUvD,KAAKyC,QAAU,IAClC,EAEA0C,SAAU,SAASE,GACf,IAOI/C,EAPAc,EAAOpD,KACPmG,EAAMd,EAAEe,QACR7B,EAAWnB,EAAKmB,SAChB8B,EAASpG,EAAEoF,EAAEC,eACbgB,EAAiBlD,EAAKO,MACtBI,EAAWoC,IAAQG,EAAevC,SAClCH,EAAWuC,IAAQG,EAAe1C,SAGlCG,GAAYH,GACRyB,EAAEkB,SACFjE,EAAO+D,EAAOzC,EAAW,OAAS,UAE9BW,GAAYA,EAASiC,cACrBjC,EAASmB,MAGRpD,EAAKc,EAAKM,cAGXN,EAAKqD,eAAe5F,EAAUwF,EAAOzC,EAAW,OAAS,WAFzDR,EAAKqD,eAAe7F,EAAQ0B,IAIzBiC,GACPA,EAASmC,MAAM9C,GAAY,EAAI,GAAKR,EAAKc,YAAamC,GAE1DhB,EAAEsB,kBACKR,IAAQ7F,EAAKsG,MACpBtE,EAAO+D,EAAOQ,OACdzD,EAAK0D,SAASxE,GACd+C,EAAEsB,kBACKR,IAAQ7F,EAAKyG,KACpBzE,EAAO+D,EAAOQ,OACdzD,EAAK4D,OAAO1E,GACZ+C,EAAEsB,kBACKR,IAAQ7F,EAAK2G,OAAS1C,IAC7BA,EAASmB,MACTL,EAAEsB,iBAEV,EAEArC,WAAY,WACR,IAAI4C,EAAclH,KAAK8C,QAAQmD,OAAS,GACpC7C,EAAOpD,KAEXA,KAAKyC,QACA+C,SAAS,YAAYA,SAAS,cAC9BT,WACIoC,MAAK,SAASC,EAAG9E,GACqB,UAA/BA,EAAK+E,SAAS5D,eACdL,EAAKkE,UAAUhF,EAAM4E,EAAYE,GAEzC,IAERpH,KAAKgD,QACT,EAEAsE,UAAW,SAAShF,EAAMiF,IACtBjF,EAAOrC,EAAEqC,GACJkF,KAAK,OAAQ,SACbhC,SAASlE,IAETqB,KAAKvB,EAAMmG,GAAkB,CAAC,GAC9BE,YAAY,gBAAgBF,IAA+B,IAAtBA,EAAOG,YAEjD1H,KAAK2H,YAAYrF,EACrB,EAEAqF,YAAa,SAASrF,EAAMsF,EAAKjF,GAC7B,IACIH,EADAY,EAAOpD,KAIXwC,GADAF,EAAOc,EAAKX,QAAQC,KAAKJ,IACPK,KAAKvB,IAEvBwG,EAAMA,GAAOpF,EAAWqF,cAGpBvF,EAAKuC,OAAO,sDAER1E,EAAM2H,WAAWF,GACjBG,OAAOC,KAAK,CACRJ,IAAKA,EACLjF,KAAMA,GAAQ,CAAC,EACfsF,KAAM,MACNC,SAAU,OACVC,QAAS,SAASxF,GACdL,EAAK8F,KAAKzF,GAEVS,EAAKiF,QAAQvH,EAAa,CAAEwB,KAAMA,EAAK,IAC3C,EACAgG,MAAO,SAASC,EAAKC,GACjBpF,EAAKiF,QAAQtH,EAAO,CAChBuB,KAAMA,EAAK,GACXkG,OAAQA,EACRD,IAAKA,GAEb,IAGJjG,EAAKmD,YAAY,gBACZ2C,KAAK,gBAAkBR,EAAlB,yGAKtB,EAEAnB,eAAgB,SAASwB,EAAM3F,GAC3B,IAAIE,EAAaF,EAAKK,KAAKvB,GACvBqH,EAAiBjG,EAAWkG,WAAaT,GAAQrH,IAAa4B,EAAWkG,WAAaT,GAAQpH,EAE7F2B,EAAWmG,aAIZF,IAAkBzI,KAAKqI,QAAQJ,EAAM,CAAE3F,KAAMA,EAAK,MAClDtC,KAAKiI,GAAM3F,EAAK,GAExB,EAEAqD,YAAa,SAASN,GAClB,IAEIuD,EAFAxF,EAAOpD,KACPqG,EAASpG,EAAEoF,EAAEgB,QAGbA,EAAOwC,QAAQ,eAAe,IAAMzF,EAAKX,QAAQ,IAMhC,KAFrBmG,EAAQvC,EAAOtB,SAAS,+BAEdlC,SAIN+F,EAAME,GAAG,oBACT1F,EAAKqD,eAAe5F,EAAUwF,EAAOQ,QAC9B+B,EAAME,GAAG,oBAChB1F,EAAKqD,eAAe5F,EAAUwF,EAAO0C,QAC9BH,EAAME,GAAG,kBAChB1F,EAAKqD,eAAe7F,EAAQyF,EAAOQ,QAC5B+B,EAAME,GAAG,mBAChB1F,EAAKqD,eAAe7F,EAAQyF,EAAO0C,QAE3C,EACAnD,YAAa,SAASoD,GAClB,IAAI5F,EAAOpD,KAEX,OAAO,SAASqF,GACZ,IACI/C,EADA+D,EAASpG,EAAEoF,EAAEC,eAGbe,EAAOwC,QAAQ,eAAe,IAAMzF,EAAKX,QAAQ,KAKjDH,EADA+D,EAAOyC,GAAG,MAAQE,EAAY,SACvB3C,EAAO4C,SAASpC,OAEhBR,EAAO4C,SAASF,OAE3B3F,EAAKqD,eAAeuC,EAAW1G,GACnC,CACJ,EACA4G,gBAAiB,SAASC,EAAUC,EAAcC,EAAUC,GACxD,IAAIC,EAAY,SAASC,EAAYC,EAAUC,GACvC,IAAIC,EAAOF,EAAWpJ,EAAGsJ,KAAK,CAAEA,KAAMF,EAAUhI,KAAM,WAAc,GACpE,OAAOiI,EAAY,kBAAoBF,EAAa,KAAOG,EAAO,UAAY,EAClF,EACAnG,EAAcxD,KAAKwD,YACnBoG,GAAwC,IAA3BR,EAAaS,YAAgD,IAAvBR,EAASQ,UAC5DC,EAAkBV,EAAaT,YAC/BoB,EAAgBX,EAAaV,UAC7BsB,EAAkBX,EAASV,YAC3BsB,EAAgBZ,EAASX,UACzBwB,EAAiBZ,EAAe9B,KAAK,MAEpC0C,IACDA,EAAiB/J,EAAMiE,OACvBkF,EAAe9B,KAAK,KAAM0C,IAG9Bf,EAAS3D,SAAS,yBAA2BhC,GACpCgE,KAAK,OAAQ,aACbA,KArVG,gBAqViB,KACpBA,KArVG,gBAqViB,OACpBA,KApVG,gBAoViB0C,GACpBzE,YAAY,cAAgBjC,EAAc,UAC1CiE,YAAY,wBAA0BjE,EACnCoG,IAAcG,IAAkBE,GACnCxC,YAAY,qBAAuBjE,GAC/BoG,IAAcE,IAAoBE,GACtC5B,KACGmB,EAAU,gBAAiB,eAAgBO,IAAoBC,IAAkBE,GAAiBzG,GAAetC,GACjHqI,EAAU,gBAAiB,iBAAkBO,IAAoBC,IAAkBE,GAAiBzG,GAAevC,GACnHsI,EAAU,cAAe,iBAAkBO,GAAmBC,IAAkBE,GAAiBzG,GAAetC,GAChHqI,EAAU,cAAe,kBAAmBO,GAAmBC,IAAkBE,GAAiBzG,GAAevC,GACjHsI,EAAU,gBAAiB,KAAMK,GAAapG,GAAetC,GAC7DqI,EAAU,gBAAiB,KAAMK,GAAapG,GAAevC,GAC7DsI,EAAU,gBAAiB,iBAAkBS,IAAoBC,IAAkBF,GAAiBvG,GAAetC,GACnHqI,EAAU,gBAAiB,kBAAmBS,IAAoBC,IAAkBF,GAAiBvG,GAAevC,GACpHsI,EAAU,cAAe,eAAgBS,GAAmBC,IAAkBF,GAAiBvG,GAAetC,GAC9GqI,EAAU,cAAe,iBAAkBS,GAAmBC,IAAkBF,GAAiBvG,GAAevC,IAGxHmI,EAAae,QACbhB,EAAS3B,KAtWC,kBAsWqB4B,EAAae,SACrCf,EAAagB,OACpBjB,EAAS3B,KAzWJ,aAyWqB4B,EAAagB,OAGvC5G,GAAevC,GACfkI,EAAS3B,KA3WE,mBA2WqBtG,GAG/B0I,GAAcE,GAAoBE,GACnCb,EAASkB,WAtXN,WAwXX,EACAC,iBAAkB,WACd,IAAIlH,EAAOpD,KAEXA,KAAKyC,QAAQsC,SAAS,eAAeoC,MAAK,WACtC,IAAIgC,EAAWlJ,EAAED,MACbsJ,EAAiBH,EAASoB,QAAQhJ,GAAWiJ,QAC7CpB,EAAeE,EAAe3G,KAAKvB,GACnCiI,EAAWF,EAASsB,QAAQlJ,GAAWiJ,QAAQ7H,KAAKvB,GAEnDiI,GAILjG,EAAK8F,gBAAgBC,EAAUC,EAAcC,EAAUC,EAC3D,GACJ,EACAoB,iBAAkB,WACd1K,KAAKyC,QAAQsC,SAAS,eAAeC,QACzC,EACAJ,OAAQ,WACJ,OAAK5E,KAAKyC,QAGHzC,KAAKyC,QAAQsC,SAASxD,GAFlBtB,GAGf,EAEA0K,mBAAoB,SAASC,EAAWC,GACpC,IAAIzD,EAAa0D,EAAUC,EAE3B,IAAK3D,EAAI,EAAGA,EAAIwD,EAAU/H,OAAQuE,IAC9B2D,EAAiBF,EAAWzD,GAAKyD,EAAWzD,EAAI,IAAO,EACvD0D,EAAW7I,KAAK+I,MAAMH,EAAWzD,GAAK2D,EAAgB,KAC3CH,EAAUxD,GACZ6D,aAvZD,gBAuZ6BH,EAE7C,EAEAI,QAAS,WACL,IAAI9H,EAAOpD,KACPyC,EAAUW,EAAKX,QACfwD,EAAQxD,EAAQsC,SAASxD,GACzB4B,EAAeC,EAAKI,aAAevC,EACnC2J,EAAYnI,EAAQsC,SAAS,eAC7BoG,EAAiBP,EAAU/H,OAC3BuI,EAAiBjI,EAAe,QAAU,SAC1CkI,EAAY5I,EAAQ2I,KACpBP,EAAa,GAIjB,GAFAzH,EAAKG,QAAQiC,SAAS,wBAElBpC,EAAKkI,gBAAT,CAIuB,IAAnBH,GACAA,EAAiBlF,EAAMpD,OAAS,EAChCoD,EAAMsF,MAAM,EAAGJ,GACTK,MAAM,qDAAuDpI,EAAKe,QAAU,QAElFf,EAAKkH,mBACLM,EAAYnI,EAAQsC,SAAS,gBAE7B3B,EAAKkH,mBAITM,EAAUzD,MAAK,WACXkE,GAAarL,KAAKmD,EAAe,cAAgB,eACrD,IAEA,IAAIsI,EAAkB,EAElBC,EAAiBzL,IAErBgG,EAAM0F,IAAI,CAAEC,SAAU,WAAYC,IAAK,IAClCT,IAAgB,WACb,IACuC3J,EADnCgB,EAAUxC,EAAED,MACZuH,EAAS9E,EAAQE,KAAKvB,IAAS,CAAC,EAGpC,GADAqB,EAAQgD,YAAY,eAChB8B,EAAOmB,UACPjH,EAAO8F,EAAOuE,cAAgBjK,EAAc0F,EAAOuE,cAAeT,GAAa,EAC/E5I,EAAQkJ,IAAI,WAAY,UAAUnG,SAAS,mBACxC,IAAI5D,EAAQ2F,EAAO9F,MAGtB,OAFAiK,EAAiBA,EAAeK,IAAI/L,WACpC6K,EAAWmB,MAAK,GAGhBvK,EAAOI,EAAc0F,EAAO9F,KAAM4J,EACtC,CAMA,OAHAI,GAAmBhK,EACnBoJ,EAAWmB,KAAKvK,GAETA,CACX,IAEJ4J,GAAaI,EAEb,IAAIQ,EAAqBP,EAAe7I,OACpCqJ,EAAoBjK,KAAKC,MAAMmJ,EAAYY,GAE/CP,EACKH,MAAM,EAAGU,EAAqB,GAC1BN,IAAIP,EAAgBc,GACxBxG,MACAyG,GAAGF,EAAqB,GACpBN,IAAIP,EAAgBC,GAAaY,EAAqB,GAAKC,GAEpErB,EAAWuB,SAAQ,SAAS3K,EAAM2F,IACjB,IAAT3F,IACAoJ,EAAWzD,GAAK8E,EAExB,IAEA9I,EAAKuH,mBAAmBC,EAAWC,GAGnC,IAAIwB,EAAM,EACNC,EAA0BnJ,EAAe,SAAW,QACpDoJ,EAAsBpJ,EAAe,OAAS,MAC9CqJ,EAAoBrJ,EAAe,cAAgB,eAEvD,GAA2B,IAAvB8I,EAA0B,CAC1B,IAAIQ,EAAuBxG,EAAMyG,QAAO,WACpC,QAAUzM,EAAED,MAAM2C,KAAKvB,IAAS,CAAC,GAAY,SACjD,IAAGuL,OAEHF,EAAqBrB,GAAgBC,EAAYoB,EAAqB,GAAGD,GAC7E,CAEA/J,EAAQsC,WACH4G,IAAIW,EAAyB7J,EAAQ6J,MACrCnF,MAAK,SAASC,EAAGwF,GACqB,UAA/BA,EAAMC,QAAQpJ,gBACdmJ,EAAME,MAAMP,GAAuBtK,KAAKC,MAAMmK,GAAO,KACrDA,GAAOO,EAAMJ,GAErB,IAEJpJ,EAAK0C,gBACL1C,EAAK6B,gBAEL7B,EAAKG,QAAQkC,YAAY,uBAEzBtF,EAAM6C,OAAOiD,GACb7C,EAAKiF,QAAQrH,EA/Fb,CAgGJ,EAEA+L,OAAQ,SAASzK,EAAM0E,GACnB,IACIxE,EAGJA,GADAF,EAHWtC,KAGCyC,QAAQC,KAAKJ,IACPK,KAAKvB,IAElB4F,GAAWxE,EAAWmG,eAIH,GAApB/F,UAAUC,SACVmE,EAnjBhB,YAmjByBxE,EAAWkG,WAAoClG,EAAWkG,WAGvElG,EAAWkG,WAAa1B,EAEpBxE,EAAWkG,UACXpG,EAAKqJ,IAAI,WAAY,UAErBrJ,EAAKqJ,IAAI,WAAY,IAnBd3L,KAsBNgD,QAAO,GAChB,EAEA8D,SAAU,SAASxE,GACftC,KAAK+M,OAAOzK,GAAM,EACtB,EAEA0E,OAAQ,SAAS1E,GACbtC,KAAK+M,OAAOzK,GAAM,EACtB,EAEA0K,SAAU,SAASzF,EAAQ0F,EAAKC,GAC5B,IAAI9J,EAAOpD,KAWX,OATIkN,EAAYrK,SACZO,EAAKN,QAAQmD,MAAMkH,OAAOF,EAAK,EAAG1F,GAClCnE,EAAKkE,UAAU4F,EAAa3F,GAE5BnE,EAAKsH,mBAELtH,EAAKJ,QAAO,IAGTkK,CACX,EAEArI,OAAQ,SAAS0C,GACbA,EAASA,GAAU,CAAC,EAEpB,IAAInE,EAAOpD,KACPkN,EAAcjN,EAAE,WAAWmN,SAAShK,EAAKX,SAE7C,OAAOW,EAAK4J,SAASzF,EAAQnE,EAAKN,QAAQmD,MAAMpD,OAAQqK,EAC5D,EAEAG,aAAc,SAAS9F,EAAQ+F,GAC3BA,EAAgBrN,EAAEqN,GAClB/F,EAASA,GAAU,CAAC,EAEpB,IACI0F,EADOjN,KACIuD,QAAQwB,SAAS,WAAWwI,MAAMD,GAC7CJ,EAAcjN,EAAE,WAAWoN,aAAapN,EAAEqN,IAE9C,OAJWtN,KAICgN,SAASzF,EAAQ0F,EAAKC,EACtC,EAEAM,YAAa,SAASjG,EAAQ+F,GAC1BA,EAAgBrN,EAAEqN,GAClB/F,EAASA,GAAU,CAAC,EAEpB,IACI0F,EADOjN,KACIuD,QAAQwB,SAAS,WAAWwI,MAAMD,GAC7CJ,EAAcjN,EAAE,WAAWuN,YAAYvN,EAAEqN,IAE7C,OAJWtN,KAICgN,SAASzF,EAAQ0F,EAAM,EAAGC,EAC1C,EAEAlI,OAAQ,SAAS1C,GACb,IAAIc,EAAOpD,KAiBX,OAhBAsC,EAAOc,EAAKG,QAAQb,KAAKJ,IAEhBO,SACL1C,EAAM+F,QAAQ5D,GACdA,EAAK6E,MAAK,SAAS8F,EAAKxK,GACpBW,EAAKN,QAAQmD,MAAMkH,OAAO/J,EAAKG,QAAQwB,SAAS,WAAWwI,MAAM9K,GAAU,GAC3ExC,EAAEwC,GAASuC,QACf,IAEA5B,EAAKsH,mBAEDtH,EAAKN,QAAQmD,MAAMpD,QACnBO,EAAKJ,QAAO,IAIbI,CACX,EAEA3B,KAAMU,EAAqB,QAAQ,GAEnCsL,IAAKtL,EAAqB,OAE1BuL,IAAKvL,EAAqB,SAG9B9B,EAAGsN,OAAO1K,GAEV,IAAI2K,EAAmB,CACfxC,eAAgB,SAChBoB,kBAAmB,eACnBF,wBAAyB,QACzBC,oBAAqB,MACrBsB,yBAA0B,SAG9BC,EAAqB,CACjB1C,eAAgB,QAChBoB,kBAAmB,cACnBF,wBAAyB,SACzBC,oBAAqB,OACrBsB,yBAA0B,SAGlC,SAASrJ,EAAauJ,GAClB,IAAI3K,EAAOpD,KACPwD,EAAcuK,EAASvK,YACvBwK,EAAS,yBAA2BxK,EAAc,gBAAkBuK,EAAS5J,QAAU,IAEvF4J,EAASjL,QAAQkD,iBACjBgI,GAAU,sBAGd5K,EAAK6K,MAAQF,EACb3K,EAAK8K,SAAWH,EAAStL,QACzBW,EAAKI,YAAcA,EAEnBjD,EAAO6C,EAAMI,IAAgBvC,EAAa6M,EAAqBF,GAE/DxK,EAAK+K,WAAa,IAAIhO,EAAME,GAAG+N,UAAUL,EAAStL,QAAS,CACvDe,YAAaA,EACbwK,OAAQA,EACRhI,eAAgB+H,EAASjL,QAAQkD,eACjCqI,KAAMjL,EAAKkL,YAAYlJ,KAAKhC,GAC5BmL,MAAOnL,EAAKoL,OAAOpJ,KAAKhC,GACxBsK,IAAKtK,EAAKqL,KAAKrJ,KAAKhC,GACpBqK,IAAKrK,EAAKsL,KAAKtJ,KAAKhC,GACpBuL,aAAc,qBAAuBnL,EACrCoL,UAAWxL,EAAKyL,MAAMzJ,KAAKhC,IAEnC,CAEAoB,EAAasK,UAAY,CACrBC,MAAO,SAAS1I,GACZrG,KAAKmO,WAAWY,MAAM1I,EAC1B,EAEAK,KAAM,SAASsI,EAAO3I,GACbrG,KAAKiP,UACNjP,KAAK+O,MAAM1I,GACXrG,KAAKiP,SAAU,GAGdjP,KAAKmO,WAAW9H,QACjBrG,KAAKmO,WAAWY,MAAM1I,GAG1BrG,KAAKmO,WAAWzH,KAAKsI,EACzB,EAEAtJ,IAAK,WACD1F,KAAKmO,WAAWzI,MAChB1F,KAAKiP,SAAU,CACnB,EAEA/I,QAAS,WACLlG,KAAKmO,WAAWjI,UAChBlG,KAAKmO,WAAanO,KAAKkO,SAAWlO,KAAKiO,MAAQ,IACnD,EAEAzH,WAAY,WACR,OAAOxG,KAAKmO,WAAW5J,QAC3B,EAEA+J,YAAa,SAASN,GAClB,IAAI5K,EAAOpD,KACX,OAAOC,EAAE,iDAAmDmD,EAAKI,YAAc,QAClEmI,IAAIvI,EAAKkJ,wBAAyB0B,EAAO5K,EAAKkJ,2BAC/D,EAEAkC,OAAQ,SAASnJ,GACb,IAAIjC,EAAOpD,KACPmJ,EAAWlJ,EAAEoF,EAAEC,eACf8D,EAAeD,EAAStC,OACxBwC,EAAWF,EAASJ,OAExB,GAAI9I,EAAEoF,EAAE6J,eAAerG,QAAQ,sEAAsEhG,OAAS,IACzGwG,EAASxG,SACTuG,EAAavG,OACVwC,EAAEsB,qBAHV,CAOA,IAAIwI,EAAqB/F,EAAazG,KAAKvB,GACvCgO,EAAiB/F,EAAS1G,KAAKvB,GAC/BiO,EAAerN,SAASoH,EAAa,GAAG0D,MAAM1J,EAAKmJ,qBAAsB,IACzE+C,EAAetN,SAASqH,EAAS,GAAGyD,MAAM1J,EAAKmJ,qBAAsB,IAAMlD,EAAS,GAAGjG,EAAKoJ,mBAAqBrD,EAAS,GAAG/F,EAAKoJ,mBAClInB,EAAYrJ,SAASoB,EAAK8K,SAASvC,IAAIvI,EAAKgI,gBAAiB,IAC7DmE,EAAO,SAAShN,GACZ,IAAIiN,EAAMxN,SAASO,EAAO,IAC1B,OAAQZ,EAAYY,GAASiN,EAAOnE,EAAYmE,EAAO,MAAQ,CACnE,EAEJ,IAAKL,IAAuBC,EAIxB,OAHA/J,EAAEsB,iBACFtB,EAAEoK,OAAO7F,UAAU5D,eAAe0J,cAClCtM,EAAK6K,MAAMxL,QAAQC,KAAK,qBAAqBsC,SAIjD,IAAI2K,EAAcJ,EAAKJ,EAAmB1B,KACtCmC,EAAcL,EAAKJ,EAAmBzB,MAAQ4B,EAAeD,EAC7DQ,EAAcN,EAAKH,EAAe3B,KAClCqC,EAAcP,EAAKH,EAAe1B,MAAQ4B,EAAeD,EAE7DjM,EAAKgG,aAAeA,EACpBhG,EAAKiG,SAAWA,EAChBjG,EAAK2M,aAAe9N,KAAKwL,IAAI6B,EAAeO,EAAaR,EAAeO,GACxExM,EAAK4M,aAAe/N,KAAKyL,IAAI2B,EAAeM,EAAaL,EAAeQ,EA3BxE,CA4BJ,EACArB,KAAM,WACF,OAAOzO,KAAK+P,YAChB,EACArB,KAAM,WACF,OAAO1O,KAAKgQ,YAChB,EACAnB,MAAO,SAASxJ,GACZ,IAAIjC,EAAOpD,KACPmJ,EAAWlJ,EAAEoF,EAAEC,eACf2I,EAAQ7K,EAAK6K,MAIjB,GAFAA,EAAMrJ,SAASG,SAAS,uBAAuBC,SAE3CK,EAAEe,UAAYjG,EAAMG,KAAK2P,IAAK,CAC9B,IAAIC,EAAgB7K,EAAEuG,SAClBxC,EAAeD,EAAStC,OACxBwC,EAAWF,EAASJ,OAExB,IAAKM,EAASxG,SAAWuG,EAAavG,OAClC,OAAO,EAGX,IAAIsM,EAAqB/F,EAAazG,KAAKvB,GACvCgO,EAAiB/F,EAAS1G,KAAKvB,GAC/B+O,EAAsBD,EAAgBlO,SAASoH,EAAa,GAAG0D,MAAM1J,EAAKmJ,qBAAsB,IAChG6D,EAAkBpO,SAASqH,EAAS,GAAGyD,MAAM1J,EAAKmJ,qBAAsB,IAAMlD,EAAS,GAAGjG,EAAKoJ,mBAAqB0D,EAAgB/G,EAAS,GAAG/F,EAAKoJ,mBACrJ6D,EAAkBjN,EAAK8K,SAASnJ,SAASxD,GAAWmL,QAAO,WAAa,OAAO9K,EAAQ3B,EAAED,MAAM2C,KAAKvB,GAAMK,KAAO,IAAGoB,SAEnHjB,EAAQuN,EAAmB1N,OAAS4O,EAAkB,KACnDzO,EAAQuN,EAAmB1N,OAC3B4O,IAGJlB,EAAmB1N,KAAO0O,EAAsB,QAG/CvO,EAAQwN,EAAe3N,OAAS4O,EAAkB,KACnDjB,EAAe3N,KAAO2O,EAAkB,MAG5CnC,EAAMjL,QAAO,EACjB,CAEA,OAAO,CACX,EAGP,CA9zBD,CA8zBG5C,OAAOD,MAAM4H,QACF5H,KAIjB","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.resizable.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.resizable', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendosplitter = global.kendosplitter || {}, global.kendosplitter.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"splitter\",\n        name: \"Splitter\",\n        category: \"web\",\n        description: \"The Splitter widget provides an easy way to create a dynamic layout of resizable and collapsible panes.\",\n        depends: [ \"resizable\", \"icons\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            keys = kendo.keys,\n            extend = $.extend,\n            Widget = ui.Widget,\n            pxUnitsRegex = /^\\d+(\\.\\d+)?px$/i,\n            percentageUnitsRegex = /^\\d+(\\.\\d+)?%$/i,\n            NS = \".kendoSplitter\",\n            EXPAND = \"expand\",\n            COLLAPSE = \"collapse\",\n            CONTENTLOAD = \"contentLoad\",\n            ERROR = \"error\",\n            RESIZE = \"resize\",\n            LAYOUTCHANGE = \"layoutChange\",\n            HORIZONTAL = \"horizontal\",\n            VERTICAL = \"vertical\",\n            MOUSEENTER = \"mouseenter\",\n            CLICK = \"click\",\n            PANE = \"pane\",\n            MOUSELEAVE = \"mouseleave\",\n            FOCUSED = \"k-focus\",\n            KPANE = \"k-\" + PANE,\n            PANECLASS = \".\" + KPANE,\n            TABINDEX = \"tabindex\",\n            ARIA_VALUEMIN = \"aria-valuemin\",\n            ARIA_VALUEMAX = \"aria-valuemax\",\n            ARIA_VALUENOW = \"aria-valuenow\",\n            ARIA_CONTROLS = \"aria-controls\",\n            ARIA_LABEL = \"aria-label\",\n            ARIA_LABELLEDBY = \"aria-labelledby\",\n            ARIA_ORIENTATION = \"aria-orientation\";\n\n        function isPercentageSize(size) {\n            return percentageUnitsRegex.test(size);\n        }\n\n        function isPixelSize(size) {\n            return pxUnitsRegex.test(size) || /^\\d+$/.test(size);\n        }\n\n        function isFluid(size) {\n            return !isPercentageSize(size) && !isPixelSize(size);\n        }\n\n        function calculateSize(size, total) {\n            var output = parseInt(size, 10);\n\n            if (isPercentageSize(size)) {\n                output = Math.floor(output * total / 100);\n            }\n\n            return output;\n        }\n\n        function panePropertyAccessor(propertyName, triggersResize) {\n            return function(pane, value) {\n                var paneConfig = this.element.find(pane).data(PANE);\n\n                if (arguments.length == 1) {\n                    return paneConfig[propertyName];\n                }\n\n                paneConfig[propertyName] = value;\n\n                if (triggersResize) {\n                    var splitter = this.element.data(\"kendo\" + this.options.name);\n                    splitter.resize(true);\n                }\n            };\n        }\n\n        var Splitter = Widget.extend({\n            init: function(element, options) {\n                var that = this,\n                    isHorizontal;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.wrapper = that.element;\n\n                if (that.options.orientation) {\n                    isHorizontal = that.options.orientation.toLowerCase() != VERTICAL;\n                }\n\n                that.orientation = isHorizontal ? HORIZONTAL : VERTICAL;\n                that._dimension = isHorizontal ? \"width\" : \"height\";\n                that._keys = {\n                    decrease: isHorizontal ? keys.LEFT : keys.UP,\n                    increase: isHorizontal ? keys.RIGHT : keys.DOWN\n                };\n\n                that._resizeStep = 10;\n\n                that._marker = kendo.guid().substring(0, 8);\n\n                that._initPanes();\n\n                that.resizing = new PaneResizing(that);\n\n                that.element.triggerHandler(\"init\" + NS);\n            },\n            events: [\n                EXPAND,\n                COLLAPSE,\n                CONTENTLOAD,\n                ERROR,\n                RESIZE,\n                LAYOUTCHANGE\n            ],\n\n            _addOverlays: function() {\n                this._panes().append(\"<div class='k-splitter-overlay k-overlay' />\");\n            },\n\n            _removeOverlays: function() {\n                this._panes().children(\".k-splitter-overlay\").remove();\n            },\n\n            _attachEvents: function() {\n                var that = this,\n                    orientation = that.options.orientation;\n\n                // do not use delegated events to increase performance of nested elements\n                that.element\n                    .children(\".k-splitbar-draggable-\" + orientation)\n                        .on(\"keydown\" + NS, that._keydown.bind(that))\n                        .on(\"mousedown\" + NS, function(e) { e.currentTarget.focus(); })\n                        .on(\"focus\" + NS, function(e) { $(e.currentTarget).addClass(FOCUSED); })\n                        .on(\"blur\" + NS, function(e) { $(e.currentTarget).removeClass(FOCUSED);\n                            if (that.resizing) {\n                                that.resizing.end();\n                            }\n                        })\n                        .on(MOUSEENTER + NS, function() { $(this).addClass(\"k-splitbar-\" + that.orientation + \"-hover\"); })\n                        .on(MOUSELEAVE + NS, function() { $(this).removeClass(\"k-splitbar-\" + that.orientation + \"-hover\"); })\n                        .on(\"mousedown\" + NS, that._addOverlays.bind(that))\n                    .end()\n                    .children(\".k-splitbar\")\n                        .on(\"dblclick\" + NS, that._togglePane.bind(that))\n                        .children(\".k-collapse-next, .k-collapse-prev\").on(CLICK + NS, that._arrowClick(COLLAPSE)).end()\n                        .children(\".k-expand-next, .k-expand-prev\").on(CLICK + NS, that._arrowClick(EXPAND)).end()\n                    .end();\n\n                $(window).on(\"resize\" + NS + that._marker, that.resize.bind(that, false));\n                $(document).on(\"mouseup\" + NS + that._marker, that._removeOverlays.bind(that));\n            },\n\n            _detachEvents: function() {\n                var that = this;\n\n                that.element\n                    .children(\".k-splitbar-draggable-\" + that.orientation).off(NS).end()\n                    .children(\".k-splitbar\").off(\"dblclick\" + NS)\n                        .children(\".k-collapse-next, .k-collapse-prev, .k-expand-next, .k-expand-prev\").off(NS);\n\n                $(window).off(NS + that._marker);\n                $(document).off(NS + that._marker);\n            },\n\n            options: {\n                name: \"Splitter\",\n                clickMoveClick: true,\n                orientation: HORIZONTAL,\n                panes: []\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this._detachEvents();\n\n                if (this.resizing) {\n                    this.resizing.destroy();\n                }\n\n                kendo.destroy(this.element);\n\n                this.wrapper = this.element = null;\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    key = e.keyCode,\n                    resizing = that.resizing,\n                    target = $(e.currentTarget),\n                    navigationKeys = that._keys,\n                    increase = key === navigationKeys.increase,\n                    decrease = key === navigationKeys.decrease,\n                    pane;\n\n                if (increase || decrease) {\n                    if (e.ctrlKey) {\n                        pane = target[decrease ? \"next\" : \"prev\"]();\n\n                        if (resizing && resizing.isResizing()) {\n                            resizing.end();\n                        }\n\n                        if (!pane[that._dimension]()) {\n                            that._triggerAction(EXPAND, pane);\n                        } else {\n                            that._triggerAction(COLLAPSE, target[decrease ? \"prev\" : \"next\"]());\n                        }\n                    } else if (resizing) {\n                        resizing.move((decrease ? -1 : 1) * that._resizeStep, target);\n                    }\n                    e.preventDefault();\n                } else if (key === keys.HOME) {\n                    pane = target.prev();\n                    that.collapse(pane);\n                    e.preventDefault();\n                } else if (key === keys.END) {\n                    pane = target.prev();\n                    that.expand(pane);\n                    e.preventDefault();\n                } else if (key === keys.ENTER && resizing) {\n                    resizing.end();\n                    e.preventDefault();\n                }\n            },\n\n            _initPanes: function() {\n                var panesConfig = this.options.panes || [];\n                var that = this;\n\n                this.element\n                    .addClass(\"k-widget\").addClass(\"k-splitter\")\n                    .children()\n                        .each(function(i, pane) {\n                            if (pane.nodeName.toLowerCase() != \"script\") {\n                                that._initPane(pane, panesConfig[i]);\n                            }\n                        });\n\n                this.resize();\n            },\n\n            _initPane: function(pane, config) {\n                pane = $(pane)\n                    .attr(\"role\", \"group\")\n                    .addClass(KPANE);\n\n                pane.data(PANE, config ? config : {})\n                    .toggleClass(\"k-scrollable\", config ? config.scrollable !== false : true);\n\n                this.ajaxRequest(pane);\n            },\n\n            ajaxRequest: function(pane, url, data) {\n                var that = this,\n                    paneConfig;\n\n                pane = that.element.find(pane);\n                paneConfig = pane.data(PANE);\n\n                url = url || paneConfig.contentUrl;\n\n                if (url) {\n                    pane.append(\"<span class='k-icon k-i-loading k-pane-loading' />\");\n\n                    if (kendo.isLocalUrl(url)) {\n                        jQuery.ajax({\n                            url: url,\n                            data: data || {},\n                            type: \"GET\",\n                            dataType: \"html\",\n                            success: function(data) {\n                                pane.html(data);\n\n                                that.trigger(CONTENTLOAD, { pane: pane[0] });\n                            },\n                            error: function(xhr, status) {\n                                that.trigger(ERROR, {\n                                    pane: pane[0],\n                                    status: status,\n                                    xhr: xhr\n                                });\n                            }\n                        });\n                    } else {\n                        pane.removeClass(\"k-scrollable\")\n                            .html(\"<iframe src='\" + url + \"' frameborder='0' class='k-content-frame'>\" +\n                                    \"This page requires frames in order to show content\" +\n                                  \"</iframe>\");\n                    }\n                }\n            },\n\n            _triggerAction: function(type, pane) {\n                var paneConfig = pane.data(PANE);\n                var shouldExecute = (paneConfig.collapsed && type == EXPAND) || (!paneConfig.collapsed && type == COLLAPSE);\n\n                if (!paneConfig.collapsible) {\n                    return;\n                }\n\n                if (shouldExecute && !this.trigger(type, { pane: pane[0] })) {\n                    this[type](pane[0]);\n                }\n            },\n\n            _togglePane: function(e) {\n                var that = this,\n                    target = $(e.target),\n                    arrow;\n\n                if (target.closest(\".k-splitter\")[0] != that.element[0]) {\n                    return;\n                }\n\n                arrow = target.children(\"span:not(.k-resize-handle)\");\n\n                if (arrow.length !== 1) {\n                    return;\n                }\n\n                if (arrow.is(\".k-collapse-prev\")) {\n                    that._triggerAction(COLLAPSE, target.prev());\n                } else if (arrow.is(\".k-collapse-next\")) {\n                    that._triggerAction(COLLAPSE, target.next());\n                } else if (arrow.is(\".k-expand-prev\")) {\n                    that._triggerAction(EXPAND, target.prev());\n                } else if (arrow.is(\".k-expand-next\")) {\n                    that._triggerAction(EXPAND, target.next());\n                }\n            },\n            _arrowClick: function(arrowType) {\n                var that = this;\n\n                return function(e) {\n                    var target = $(e.currentTarget),\n                        pane;\n\n                    if (target.closest(\".k-splitter\")[0] != that.element[0]) {\n                        return;\n                    }\n\n                    if (target.is(\".k-\" + arrowType + \"-prev\")) {\n                        pane = target.parent().prev();\n                    } else {\n                        pane = target.parent().next();\n                    }\n                    that._triggerAction(arrowType, pane);\n                };\n            },\n            _updateSplitBar: function(splitbar, previousPane, nextPane, previousPaneEl) {\n                var catIconIf = function(actionType, iconType, condition) {\n                        var icon = iconType ? ui.icon({ icon: iconType, size: \"xsmall\" }) : \"\";\n                        return condition ? \"<span class='k-\" + actionType + \"'>\" + icon + \"</span>\" : \"\";\n                    },\n                    orientation = this.orientation,\n                    draggable = (previousPane.resizable !== false) && (nextPane.resizable !== false),\n                    prevCollapsible = previousPane.collapsible,\n                    prevCollapsed = previousPane.collapsed,\n                    nextCollapsible = nextPane.collapsible,\n                    nextCollapsed = nextPane.collapsed,\n                    previousPaneId = previousPaneEl.attr(\"id\");\n\n                if (!previousPaneId) {\n                    previousPaneId = kendo.guid();\n                    previousPaneEl.attr(\"id\", previousPaneId);\n                }\n\n                splitbar.addClass(\"k-splitbar k-splitbar-\" + orientation)\n                        .attr(\"role\", \"separator\")\n                        .attr(ARIA_VALUEMIN, \"0\")\n                        .attr(ARIA_VALUEMAX, \"100\")\n                        .attr(ARIA_CONTROLS, previousPaneId)\n                        .removeClass(\"k-splitbar-\" + orientation + \"-hover\")\n                        .toggleClass(\"k-splitbar-draggable-\" + orientation,\n                            draggable && !prevCollapsed && !nextCollapsed)\n                        .toggleClass(\"k-splitbar-static-\" + orientation,\n                            !draggable && !prevCollapsible && !nextCollapsible)\n                        .html(\n                            catIconIf(\"collapse-prev\", \"caret-alt-up\", prevCollapsible && !prevCollapsed && !nextCollapsed && orientation == VERTICAL) +\n                            catIconIf(\"collapse-prev\", \"caret-alt-left\", prevCollapsible && !prevCollapsed && !nextCollapsed && orientation == HORIZONTAL) +\n                            catIconIf(\"expand-prev\", \"caret-alt-down\", prevCollapsible && prevCollapsed && !nextCollapsed && orientation == VERTICAL) +\n                            catIconIf(\"expand-prev\", \"caret-alt-right\", prevCollapsible && prevCollapsed && !nextCollapsed && orientation == HORIZONTAL) +\n                            catIconIf(\"resize-handle\", null, draggable && orientation == VERTICAL) +\n                            catIconIf(\"resize-handle\", null, draggable && orientation == HORIZONTAL) +\n                            catIconIf(\"collapse-next\", \"caret-alt-down\", nextCollapsible && !nextCollapsed && !prevCollapsed && orientation == VERTICAL) +\n                            catIconIf(\"collapse-next\", \"caret-alt-right\", nextCollapsible && !nextCollapsed && !prevCollapsed && orientation == HORIZONTAL) +\n                            catIconIf(\"expand-next\", \"caret-alt-up\", nextCollapsible && nextCollapsed && !prevCollapsed && orientation == VERTICAL) +\n                            catIconIf(\"expand-next\", \"caret-alt-left\", nextCollapsible && nextCollapsed && !prevCollapsed && orientation == HORIZONTAL)\n                        );\n\n                if (previousPane.labelId) {\n                    splitbar.attr(ARIA_LABELLEDBY, previousPane.labelId);\n                } else if (previousPane.label) {\n                    splitbar.attr(ARIA_LABEL, previousPane.label);\n                }\n\n                if (orientation == HORIZONTAL) {\n                    splitbar.attr(ARIA_ORIENTATION, VERTICAL);\n                }\n\n                if (!draggable && !prevCollapsible && !nextCollapsible) {\n                    splitbar.removeAttr(TABINDEX);\n                }\n            },\n            _updateSplitBars: function() {\n                var that = this;\n\n                this.element.children(\".k-splitbar\").each(function() {\n                    var splitbar = $(this),\n                        previousPaneEl = splitbar.prevAll(PANECLASS).first(),\n                        previousPane = previousPaneEl.data(PANE),\n                        nextPane = splitbar.nextAll(PANECLASS).first().data(PANE);\n\n                    if (!nextPane) {\n                        return;\n                    }\n\n                    that._updateSplitBar(splitbar, previousPane, nextPane, previousPaneEl);\n                });\n            },\n            _removeSplitBars: function() {\n                this.element.children(\".k-splitbar\").remove();\n            },\n            _panes: function() {\n                if (!this.element) {\n                    return $();\n                }\n                return this.element.children(PANECLASS);\n            },\n\n            _resetAriaValueNow: function(splitBars, panesSizes) {\n                var i, splitbar, valueNow, joinDimension;\n\n                for (i = 0; i < splitBars.length; i++) {\n                    joinDimension = (panesSizes[i] + panesSizes[i + 1]) || 1;\n                    valueNow = Math.round(panesSizes[i] / joinDimension * 100);\n                    splitbar = splitBars[i];\n                    splitbar.setAttribute(ARIA_VALUENOW, valueNow);\n                }\n            },\n\n            _resize: function() {\n                var that = this,\n                    element = that.element,\n                    panes = element.children(PANECLASS),\n                    isHorizontal = that.orientation == HORIZONTAL,\n                    splitBars = element.children(\".k-splitbar\"),\n                    splitBarsCount = splitBars.length,\n                    sizingProperty = isHorizontal ? \"width\" : \"height\",\n                    totalSize = element[sizingProperty](),\n                    panesSizes = [];\n\n                that.wrapper.addClass(\"k-splitter-resizing\");\n\n                if (that._suppressResize) {\n                    return;\n                }\n\n                if (splitBarsCount === 0) {\n                    splitBarsCount = panes.length - 1;\n                    panes.slice(0, splitBarsCount)\n                         .after(\"<div tabindex='0' class='k-splitbar' data-marker='\" + that._marker + \"' />\");\n\n                    that._updateSplitBars();\n                    splitBars = element.children(\".k-splitbar\");\n                } else {\n                    that._updateSplitBars();\n                }\n\n                // discard splitbar sizes from total size\n                splitBars.each(function() {\n                    totalSize -= this[isHorizontal ? \"offsetWidth\" : \"offsetHeight\"];\n                });\n\n                var sizedPanesWidth = 0,\n                    sizedPanesCount = 0,\n                    freeSizedPanes = $();\n\n                panes.css({ position: \"absolute\", top: 0 })\n                    [sizingProperty](function() {\n                        var element = $(this),\n                            config = element.data(PANE) || {}, size;\n\n                        element.removeClass(\"k-collapsed\");\n                        if (config.collapsed) {\n                            size = config.collapsedSize ? calculateSize(config.collapsedSize, totalSize) : 0;\n                            element.css(\"overflow\", \"hidden\").addClass(\"k-collapsed\");\n                        } else if (isFluid(config.size)) {\n                            freeSizedPanes = freeSizedPanes.add(this);\n                            panesSizes.push(false);\n                            return;\n                        } else { // sized in px/%, not collapsed\n                            size = calculateSize(config.size, totalSize);\n                        }\n\n                        sizedPanesCount++;\n                        sizedPanesWidth += size;\n                        panesSizes.push(size);\n\n                        return size;\n                    });\n\n                totalSize -= sizedPanesWidth;\n\n                var freeSizePanesCount = freeSizedPanes.length,\n                    freeSizePaneWidth = Math.floor(totalSize / freeSizePanesCount);\n\n                freeSizedPanes\n                    .slice(0, freeSizePanesCount - 1)\n                        .css(sizingProperty, freeSizePaneWidth)\n                    .end()\n                    .eq(freeSizePanesCount - 1)\n                        .css(sizingProperty, totalSize - (freeSizePanesCount - 1) * freeSizePaneWidth);\n\n                panesSizes.forEach(function(size, i) {\n                    if (size === false) {\n                        panesSizes[i] = freeSizePaneWidth;\n                    }\n                });\n\n                that._resetAriaValueNow(splitBars, panesSizes);\n\n                // arrange panes\n                var sum = 0,\n                    alternateSizingProperty = isHorizontal ? \"height\" : \"width\",\n                    positioningProperty = isHorizontal ? \"left\" : \"top\",\n                    sizingDomProperty = isHorizontal ? \"offsetWidth\" : \"offsetHeight\";\n\n                if (freeSizePanesCount === 0) {\n                    var lastNonCollapsedPane = panes.filter(function() {\n                        return !(($(this).data(PANE) || {}).collapsed);\n                    }).last();\n\n                    lastNonCollapsedPane[sizingProperty](totalSize + lastNonCollapsedPane[0][sizingDomProperty]);\n                }\n\n                element.children()\n                    .css(alternateSizingProperty, element[alternateSizingProperty]())\n                    .each(function(i, child) {\n                        if (child.tagName.toLowerCase() != \"script\") {\n                            child.style[positioningProperty] = Math.floor(sum) + \"px\";\n                            sum += child[sizingDomProperty];\n                        }\n                    });\n\n                that._detachEvents();\n                that._attachEvents();\n\n                that.wrapper.removeClass(\"k-splitter-resizing\");\n\n                kendo.resize(panes);\n                that.trigger(LAYOUTCHANGE);\n            },\n\n            toggle: function(pane, expand) {\n                var that = this,\n                    paneConfig;\n\n                pane = that.element.find(pane);\n                paneConfig = pane.data(PANE);\n\n                if (!expand && !paneConfig.collapsible) {\n                    return;\n                }\n\n                if (arguments.length == 1) {\n                    expand = paneConfig.collapsed === undefined$1 ? false : paneConfig.collapsed;\n                }\n\n                paneConfig.collapsed = !expand;\n\n                if (paneConfig.collapsed) {\n                    pane.css(\"overflow\", \"hidden\");\n                } else {\n                    pane.css(\"overflow\", \"\");\n                }\n\n                that.resize(true);\n            },\n\n            collapse: function(pane) {\n                this.toggle(pane, false);\n            },\n\n            expand: function(pane) {\n                this.toggle(pane, true);\n            },\n\n            _addPane: function(config, idx, paneElement) {\n                var that = this;\n\n                if (paneElement.length) {\n                    that.options.panes.splice(idx, 0, config);\n                    that._initPane(paneElement, config);\n\n                    that._removeSplitBars();\n\n                    that.resize(true);\n                }\n\n                return paneElement;\n            },\n\n            append: function(config) {\n                config = config || {};\n\n                var that = this,\n                    paneElement = $(\"<div />\").appendTo(that.element);\n\n                return that._addPane(config, that.options.panes.length, paneElement);\n            },\n\n            insertBefore: function(config, referencePane) {\n                referencePane = $(referencePane);\n                config = config || {};\n\n                var that = this,\n                    idx = that.wrapper.children(\".k-pane\").index(referencePane),\n                    paneElement = $(\"<div />\").insertBefore($(referencePane));\n\n                return that._addPane(config, idx, paneElement);\n            },\n\n            insertAfter: function(config, referencePane) {\n                referencePane = $(referencePane);\n                config = config || {};\n\n                var that = this,\n                    idx = that.wrapper.children(\".k-pane\").index(referencePane),\n                    paneElement = $(\"<div />\").insertAfter($(referencePane));\n\n                return that._addPane(config, idx + 1, paneElement);\n            },\n\n            remove: function(pane) {\n                var that = this;\n                pane = that.wrapper.find(pane);\n\n                if (pane.length) {\n                    kendo.destroy(pane);\n                    pane.each(function(idx, element) {\n                        that.options.panes.splice(that.wrapper.children(\".k-pane\").index(element), 1);\n                        $(element).remove();\n                    });\n\n                    that._removeSplitBars();\n\n                    if (that.options.panes.length) {\n                        that.resize(true);\n                    }\n                }\n\n                return that;\n            },\n\n            size: panePropertyAccessor(\"size\", true),\n\n            min: panePropertyAccessor(\"min\"),\n\n            max: panePropertyAccessor(\"max\")\n        });\n\n        ui.plugin(Splitter);\n\n        var verticalDefaults = {\n                sizingProperty: \"height\",\n                sizingDomProperty: \"offsetHeight\",\n                alternateSizingProperty: \"width\",\n                positioningProperty: \"top\",\n                mousePositioningProperty: \"pageY\"\n            };\n\n        var horizontalDefaults = {\n                sizingProperty: \"width\",\n                sizingDomProperty: \"offsetWidth\",\n                alternateSizingProperty: \"height\",\n                positioningProperty: \"left\",\n                mousePositioningProperty: \"pageX\"\n            };\n\n        function PaneResizing(splitter) {\n            var that = this,\n                orientation = splitter.orientation,\n                handle = \".k-splitbar-draggable-\" + orientation + \"[data-marker=\" + splitter._marker + \"]\";\n\n            if (splitter.options.clickMoveClick) {\n                handle += \",.k-ghost-splitbar\";\n            }\n\n            that.owner = splitter;\n            that._element = splitter.element;\n            that.orientation = orientation;\n\n            extend(that, orientation === HORIZONTAL ? horizontalDefaults : verticalDefaults);\n\n            that._resizable = new kendo.ui.Resizable(splitter.element, {\n                orientation: orientation,\n                handle: handle,\n                clickMoveClick: splitter.options.clickMoveClick,\n                hint: that._createHint.bind(that),\n                start: that._start.bind(that),\n                max: that._max.bind(that),\n                min: that._min.bind(that),\n                invalidClass: \"k-restricted-size-\" + orientation,\n                resizeend: that._stop.bind(that)\n            });\n        }\n\n        PaneResizing.prototype = {\n            press: function(target) {\n                this._resizable.press(target);\n            },\n\n            move: function(delta, target) {\n                if (!this.pressed) {\n                    this.press(target);\n                    this.pressed = true;\n                }\n\n                if (!this._resizable.target) {\n                    this._resizable.press(target);\n                }\n\n                this._resizable.move(delta);\n            },\n\n            end: function() {\n                this._resizable.end();\n                this.pressed = false;\n            },\n\n            destroy: function() {\n                this._resizable.destroy();\n                this._resizable = this._element = this.owner = null;\n            },\n\n            isResizing: function() {\n                return this._resizable.resizing;\n            },\n\n            _createHint: function(handle) {\n                var that = this;\n                return $(\"<div class='k-ghost-splitbar k-ghost-splitbar-\" + that.orientation + \"' />\")\n                            .css(that.alternateSizingProperty, handle[that.alternateSizingProperty]());\n            },\n\n            _start: function(e) {\n                var that = this,\n                    splitbar = $(e.currentTarget),\n                    previousPane = splitbar.prev(),\n                    nextPane = splitbar.next();\n\n                if ($(e.initialTarget).closest(\".k-expand-next, .k-expand-prev, .k-collapse-next, .k-collapse-prev\").length > 0 ||\n                    !nextPane.length ||\n                    !previousPane.length) {\n                        e.preventDefault();\n                        return;\n                }\n\n                var previousPaneConfig = previousPane.data(PANE),\n                    nextPaneConfig = nextPane.data(PANE),\n                    prevBoundary = parseInt(previousPane[0].style[that.positioningProperty], 10),\n                    nextBoundary = parseInt(nextPane[0].style[that.positioningProperty], 10) + nextPane[0][that.sizingDomProperty] - splitbar[0][that.sizingDomProperty],\n                    totalSize = parseInt(that._element.css(that.sizingProperty), 10),\n                    toPx = function(value) {\n                        var val = parseInt(value, 10);\n                        return (isPixelSize(value) ? val : (totalSize * val) / 100) || 0;\n                    };\n\n                if (!previousPaneConfig || !nextPaneConfig) {\n                    e.preventDefault();\n                    e.sender.draggable.clickMoveClick.cancel();\n                    that.owner.element.find(\".k-ghost-splitbar\").remove();\n                    return;\n                }\n\n                var prevMinSize = toPx(previousPaneConfig.min),\n                    prevMaxSize = toPx(previousPaneConfig.max) || nextBoundary - prevBoundary,\n                    nextMinSize = toPx(nextPaneConfig.min),\n                    nextMaxSize = toPx(nextPaneConfig.max) || nextBoundary - prevBoundary;\n\n                that.previousPane = previousPane;\n                that.nextPane = nextPane;\n                that._maxPosition = Math.min(nextBoundary - nextMinSize, prevBoundary + prevMaxSize);\n                that._minPosition = Math.max(prevBoundary + prevMinSize, nextBoundary - nextMaxSize);\n            },\n            _max: function() {\n                return this._maxPosition;\n            },\n            _min: function() {\n                return this._minPosition;\n            },\n            _stop: function(e) {\n                var that = this,\n                    splitbar = $(e.currentTarget),\n                    owner = that.owner;\n\n                owner._panes().children(\".k-splitter-overlay\").remove();\n\n                if (e.keyCode !== kendo.keys.ESC) {\n                    var ghostPosition = e.position,\n                        previousPane = splitbar.prev(),\n                        nextPane = splitbar.next();\n\n                    if (!nextPane.length || !previousPane.length) {\n                        return false;\n                    }\n\n                    var previousPaneConfig = previousPane.data(PANE),\n                        nextPaneConfig = nextPane.data(PANE),\n                        previousPaneNewSize = ghostPosition - parseInt(previousPane[0].style[that.positioningProperty], 10),\n                        nextPaneNewSize = parseInt(nextPane[0].style[that.positioningProperty], 10) + nextPane[0][that.sizingDomProperty] - ghostPosition - splitbar[0][that.sizingDomProperty],\n                        fluidPanesCount = that._element.children(PANECLASS).filter(function() { return isFluid($(this).data(PANE).size); }).length;\n\n                    if (!isFluid(previousPaneConfig.size) || fluidPanesCount > 1) {\n                        if (isFluid(previousPaneConfig.size)) {\n                            fluidPanesCount--;\n                        }\n\n                        previousPaneConfig.size = previousPaneNewSize + \"px\";\n                    }\n\n                    if (!isFluid(nextPaneConfig.size) || fluidPanesCount > 1) {\n                        nextPaneConfig.size = nextPaneNewSize + \"px\";\n                    }\n\n                    owner.resize(true);\n                }\n\n                return false;\n            }\n        };\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}