{"version":3,"sources":["raw-js/kendo.html.base.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendohtml","base","js","this","$","undefined$1","kendo","window","Class","html","HTMLBase","extend","init","element","options","name","_initOptions","stylingOptions","_addClasses","that","previouslyAddedClasses","wrapper","data","map","option","validFill","cssProperties","getValidClass","widget","propName","value","fillMode","length","fill","removeClass","join","addClass","outerHTML","jQuery"],"mappings":";;;;;;;;;;;;;;;CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,EAAAG,QAAA,kBACA,mBAAAC,QAAAA,OAAAC,IAAAD,OAAA,CAAA,kBAAAJ,KACAD,EAAA,oBAAAO,WAAAA,WAAAP,GAAAQ,MAAAC,UAAAT,EAAAS,WAAA,CAAA,EAAAT,EAAAS,UAAAC,KAAAV,EAAAS,UAAAC,MAAA,CAAA,EAAAV,EAAAS,UAAAC,KAAAC,GAAAV,IACA,CAJA,CAIAW,MAAA,WA6EA,OAnEA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,OAAAD,MACAE,EAAAF,EAAAE,MAEAF,EAAAG,KAAAH,EAAAG,MAAA,CAAA,EAEA,IAAAC,EAAAF,EAAAG,OAAA,CACAC,KAAA,SAAAC,EAAAC,GACAX,KACAU,QAAAT,EAAAS,UACAC,EAAAA,GAAA,CAAA,GACAC,KAHAZ,KAIAa,aAAAF,EACA,EACAA,QAAA,CACAG,eAAA,IAEAC,YAAA,WACA,IAAAC,EAAAhB,KACAW,EAAAK,EAAAL,QACAG,EAAAH,EAAAG,eACAG,EAAAD,EAAAE,QAAAC,KAAA,iBAEAL,EAAAA,EAAAM,KAAA,SAAAC,GACA,IAAAC,EAEA,MAAA,eAAAD,IACAC,EAAAnB,EAAAoB,cAAAC,cAAA,CACAC,OAAAd,EAAAC,KACAc,SAAA,WACAC,MAAAhB,EAAAiB,aAGA,IAAAN,EAAAO,OAKA1B,EAAAoB,cAAAC,cAAA,CACAC,OAAAd,EAAAC,KACAc,SAAAL,EACAM,MAAAhB,EAAAU,GACAS,KAAAnB,EAAAiB,WARA,EAUA,IAEAX,GACAD,EAAAE,QAAAa,YAAAd,EAAAe,KAAA,MAGAhB,EAAAE,QAAAC,KAAA,gBAAAL,GACAE,EAAAE,QAAAe,SAAAnB,EAAAkB,KAAA,KACA,EACA1B,KAAA,WAGA,OAFAN,KAEAkB,QAAA,GAAAgB,SACA,IAGAjC,EAAAO,OAAAL,EAAAG,KAAA,CACAC,SAAAA,GAGA,CAhEA,CAgEAH,OAAAD,MAAAgC,QACAhC,KAIA","file":"kendo.html.base.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendohtml = global.kendohtml || {}, global.kendohtml.base = global.kendohtml.base || {}, global.kendohtml.base.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"html.base\",\n        name: \"Html.Base\",\n        category: \"web\",\n        description: \"\",\n        depends: [\"core\"],\n        features: []\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Class = kendo.Class;\n\n        kendo.html = kendo.html || {};\n\n        var HTMLBase = Class.extend({\n            init: function(element, options) {\n                var that = this;\n                that.element = $(element);\n                options = options || {};\n                delete options.name;\n                that._initOptions(options);\n            },\n            options: {\n                stylingOptions: []\n            },\n            _addClasses: function() {\n                var that = this,\n                    options = that.options,\n                    stylingOptions = options.stylingOptions,\n                    previouslyAddedClasses = that.wrapper.data(\"added-classes\");\n\n                stylingOptions = stylingOptions.map(function(option) {\n                    var validFill;\n\n                    if (option === \"themeColor\") {\n                        validFill = kendo.cssProperties.getValidClass({\n                            widget: options.name,\n                            propName: \"fillMode\",\n                            value: options.fillMode\n                        });\n\n                        if (!validFill || validFill.length === 0) {\n                            return \"\";\n                        }\n                    }\n\n                    return kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: option,\n                        value: options[option],\n                        fill: options.fillMode\n                    });\n                });\n\n                if (previouslyAddedClasses) {\n                    that.wrapper.removeClass(previouslyAddedClasses.join(\" \"));\n                }\n\n                that.wrapper.data(\"added-classes\", stylingOptions);\n                that.wrapper.addClass(stylingOptions.join(\" \"));\n            },\n            html: function() {\n                var that = this;\n\n                return that.wrapper[0].outerHTML;\n            }\n        });\n\n        $.extend(kendo.html, {\n            HTMLBase: HTMLBase\n        });\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}