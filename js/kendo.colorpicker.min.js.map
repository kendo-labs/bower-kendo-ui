{"version":3,"sources":["raw-js/kendo.colorpicker.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendocolorpicker","js","this","$","undefined$1","kendo","window","ui","Widget","parseColor","TabKeyTrap","Popup","extend","NS","KEYDOWN_NS","ColorSelector","init","element","options","that","fn","call","is","_initialValue","_preventDefaultLabelClick","_value","value","_tabIndex","attr","_standalone","_triggerSelect","_triggerChange","name","ARIATemplate","data","events","color","_updateInput","_updateUI","opacity","toCssRgba","toCss","enable","arguments","length","wrapper","toggleClass","_onEnable","_attachFocusEvents","on","_navKeydown","bind","_navFocusout","val","_innerTabindex","find","_isInputTypeColor","el","test","tagName","type","setTimeout","contains","document","activeElement","_releaseInnerFocus","e","keyCode","keys","ENTER","preventDefault","_trapInnerFocus","ESC","trigger","_tabKeyTrap","removeTrap","_select","nohooks","prev","equals","_navigation","indexOf","replace","_otOfPicker","_ariaTemplate","template","tabindex","removeAttr","trap","triggerEvent","destroy","off","label","closest","id","add","ev","noop","valueForLabel","formattedValue","a","_selectOnHide","_cancel","colorpicker","jQuery","Color","getContrastFromTwoRGBAs","b","luminance1","getLuminance","getRGBFromRGBA","luminance2","r","g","Math","max","min","rgb","map","v","pow","foregroundColor","backgroundColor","r1","fitIntoBounds","g1","b1","a1","r2","g2","b2","round","contender","isNaN","svgPath","points","command","d","reduce","acc","point","i","format","line","pointA","pointB","lengthX","lengthY","sqrt","angle","atan2","contrastToolUtils","renderSvgCurveLine","gradientRectMetrics","hsva","controlPointCalc","lineCalc","findValue","contrast","saturation","low","high","comparer","mid","currentHsva","s","width","height","currentContrast","hue","h","alpha","fromHSV","getColorFromHSV","toBytes","reversedComparer","getPaths","stepCount","reversed","push","bezierCommandCalc","current","previous","next","reverse","smooth","l","PI","cos","sin","cps","cpe","paths","Observable","encode","htmlEncode","KEYS","WHITE","BLACK","ColorInput","_viewModel","observable","switchMode","keydown","isHEXMode","get","isRGBMode","formats","hex","_changeHandler","change","_render","_template","ns","optionsSize","size","optionsTabIndex","vStackElement","messages","toggleFormat","hexInputElement","rgbaInputElement","red","green","blue","unbind","field","_color","_tryParseColor","set","sender","_preventChangeEvent","textbox","target","_change","reset","model","currentFormat","index","append","guid","parent","error","ColorGradient","deepExtend","previewInput","_wrapper","_sliders","_hsvArea","_gradientInputs","hsvDragARIATemplate","input","contrastTool","contrastRatio","fail","pass","focus","_hsvHandle","setBackgroundColor","isPlainObject","_updateColorContrast","_getHSV","rect","_hsvRect","handlePosition","position","_hueSlider","left","top","_opacitySlider","toHSV","_colorgradientInputs","_colorInput","callback","obj","hsvRect","hsvHandle","_hsvKeydown","apply","update","x","y","resultX","resultY","offset","dx","dy","rw","rh","_svChange","_hsvDragAriaTemplate","_hsvEvents","UserEvents","press","getOffset","location","start","addClass","move","end","removeClass","prop","c","shiftKey","LEFT","ctrlKey","RIGHT","UP","DOWN","F2","select","_reset","_resetHsv","_resetColorContrast","contrastOptions","_contrastTool","_updateHsv","hueSlider","opacitySlider","hueChange","opacityChange","kendoSlider","tickPlacement","showButtons","orientation","slide","contrastRatioTemplate","ratio","toString","icon","labelTemplate","limit","level","output","remove","_updateContrastSvg","newSvg","svgClassName","metrics","applyStylesFromKendoAttributes","css","_hueElements","_updateHsvAria","dontChangeInput","wrap","role","_selectedColor","_colorAsText","plugin","DOT","BACKGROUNDCOLOR","ITEMSELECTEDCLASS","ITEMSFOCUSEDCLASS","TILE_CLASS","FOCUS_NS","CLICK_NS","BLUR_NS","ColorPalette","_selectedID","ariaId","_attachEvents","columns","tileSize","palette","currentTarget","_keydown","_focus","_colors","colors","split","Array","isArray","_current","item","first","newCurrent","items","filter","prototype","parentNode","children","previousSibling","nextSibling","nodeType","cellElements","selected","_tileSize","parseFloat","Error","each","templateElement","html","NO_COLOR","SELECTED","PREVIEW_MASK","ARIA_PRESSED","ARIA_DISABLED","VIEWS","gradient","FlatColorPicker","autoupdate","_changeView","view","_setViewSize","_previousColor","toDisplay","_view","_viewsContainer","empty","buttons","preview","clearButton","views","cancel","noColor","clearColor","_clearColor","viewButton","_updatePreviousColor","mode","selectedColor","hsvColor","selector","_cachedHue","appendTo","dontChangeView","previewWidth","parseInt","previewHeight","previewColumns","style","setProperty","buttonOptions","fillMode","themeColor","rounded","renderButton","ColorPicker","_buttonHtml","content","_inputWrapper","_applyCssClasses","hide","after","accesskey","isDefaultPrevented","toggle","_popup","_selector","arrow","close","toolIcon","iconClass","closeOnSelect","open","_getPopup","selOptions","_closing","handler","visible","_noColorIcon","dontChangeSelector","key","popup","selectorType","selectorWrapper","body","kendoPopup","anchor","adjustSize","event","MouseEvent","parents","activate","cssProperties","registerPrefix","registerValues","values","roundedValues","concat"],"mappings":"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","file":"kendo.colorpicker.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.color.js'), require('kendo.popup.js'), require('kendo.slider.js'), require('kendo.userevents.js'), require('kendo.button.js'), require('kendo.binder.js'), require('kendo.textbox.js'), require('kendo.numerictextbox.js'), require('kendo.html.button.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.color', 'kendo.popup', 'kendo.slider', 'kendo.userevents', 'kendo.button', 'kendo.binder', 'kendo.textbox', 'kendo.numerictextbox', 'kendo.html.button', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendocolorpicker = global.kendocolorpicker || {}, global.kendocolorpicker.js = factory()));\n})(this, (function () {\n    (function($, undefined$1) {\n        // WARNING: removing the following jshint declaration and turning\n        // == into === to make JSHint happy will break functionality.\n\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            parseColor = kendo.parseColor,\n            TabKeyTrap = kendo.ui.Popup.TabKeyTrap,\n\n            extend = $.extend,\n\n            NS = \".kendoColorTools\",\n            KEYDOWN_NS = \"keydown\" + NS,\n            DISABLED = \"k-disabled\";\n\n        var ColorSelector = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n                element = that.element;\n                options = that.options;\n\n                if (element.is(\"input\")) {\n                    that._initialValue();\n                    that._preventDefaultLabelClick();\n                } else {\n                    that._value = parseColor(options.value);\n                }\n\n                that._tabIndex = element.attr(\"tabIndex\") || 0;\n\n                if (options._standalone) {\n                    that._triggerSelect = that._triggerChange;\n                }\n            },\n            options: {\n                name: \"ColorSelector\",\n                ARIATemplate: (data) => `Current selected color is ${data || \"none\"}`,\n                value: null,\n                _standalone: true\n            },\n            events: [\n                \"change\",\n                \"select\",\n                \"forceSelect\",\n                \"cancel\"\n            ],\n            color: function(value) {\n                if (value !== undefined$1) {\n                    this._value = parseColor(value);\n\n                    if (this.element.is(\"input\")) {\n                        this._updateInput(this._value);\n                    }\n\n                    this._updateUI(this._value);\n                }\n\n                return this._value;\n            },\n            value: function(color) {\n                color = this.color(color);\n\n                if (color) {\n                    if (this.options.opacity) {\n                        color = color.toCssRgba();\n                    } else {\n                        color = color.toCss();\n                    }\n                }\n\n                return color || null;\n            },\n            enable: function(enable) {\n                if (arguments.length === 0) {\n                    enable = true;\n                }\n\n                if (this.element.is(\"input\")) {\n                    this.element.attr(\"disabled\", !enable);\n                }\n\n                this.wrapper.toggleClass(DISABLED, !enable);\n\n                this._onEnable(enable);\n            },\n            _attachFocusEvents: function () {\n                this.wrapper.on(KEYDOWN_NS, this._navKeydown.bind(this))\n                    .on(\"focusout\" + NS, this._navFocusout.bind(this));\n            },\n            _initialValue: function() {\n                var element = this.element,\n                    options = this.options,\n                    value = options.value || element.attr(\"value\");\n\n                if (value) {\n                    this._value = parseColor(value, true);\n                }\n\n                this.element.val(value);\n            },\n            _innerTabindex: function(value) {\n                var wrapper = this.wrapper;\n\n                wrapper.find(\".k-draghandle, .k-button, .k-input-inner\").attr(\"tabindex\", value);\n            },\n            _isInputTypeColor: function() {\n                var el = this.element[0];\n                return (/^input$/i).test(el.tagName) && (/^color$/i).test(el.type);\n            },\n            _navFocusout: function() {\n                var that = this,\n                    wrapper = that.wrapper[0];\n\n                setTimeout(function() {\n                    if (!wrapper.contains(document.activeElement)) {\n                        that._releaseInnerFocus();\n                    }\n                });\n            },\n            _navKeydown: function(e) {\n                var wrapper = this.wrapper;\n\n                if (e.keyCode === kendo.keys.ENTER && wrapper.attr(\"tabindex\")) {\n                    e.preventDefault();\n\n                    this._trapInnerFocus();\n                } else if (e.keyCode === kendo.keys.ESC && wrapper.attr(\"tabindex\") === undefined$1) {\n                    this._releaseInnerFocus();\n                    this.wrapper.trigger(\"focus\");\n                }\n            },\n            _releaseInnerFocus: function() {\n                this._tabKeyTrap.removeTrap();\n                this.wrapper.attr(\"tabindex\", this._tabIndex);\n                this._innerTabindex(-1);\n            },\n            _select: function(color, nohooks) {\n                var prev = this._value;\n\n                color = this.color(color);\n\n                if (!nohooks) {\n                    if ((color && (!prev || !color.equals(prev))) || (color === null && color !== prev)) {\n                        if (color === null && this.element.val) {\n                            this.element.val(color);\n                        }\n\n                        this.element.trigger(\"change\");\n                        this.trigger(\"change\", { value: this.value() });\n                    } else if (!this._standalone) {\n                        this.trigger(\"cancel\");\n                    }\n                }\n            },\n            _navigation: function() {\n                var value = this.value();\n\n                if (value && value.indexOf(\"rgba\") > -1) {\n                    value = value.replace(\"rgba\", \"RGBA\");\n                };\n\n                if (this.options._otOfPicker) {\n                    this._innerTabindex(-1);\n                    this._attachFocusEvents();\n                    this._tabKeyTrap = new TabKeyTrap(this.wrapper);\n\n                    this._ariaTemplate = kendo.template(this.options.ARIATemplate);\n                    this.wrapper.attr({\n                        \"aria-label\": this._ariaTemplate(value || \"\"),\n                        tabindex: this._tabIndex\n                    });\n                } else {\n                    this.wrapper.removeAttr(\"tabindex\");\n                    this.wrapper.removeAttr(\"aria-label\");\n                    this.wrapper.removeAttr(\"role\");\n                    this.wrapper.removeAttr(\"aria-keyshortcuts\");\n                }\n            },\n            _trapInnerFocus: function() {\n                this._innerTabindex(0);\n                this.wrapper.removeAttr(\"tabindex\");\n                this.wrapper.find(\".k-hsv-draghandle\").trigger(\"focus\");\n                this._tabKeyTrap.trap();\n            },\n            _triggerSelect: function(color) {\n                triggerEvent(this, \"select\", color);\n            },\n            _triggerChange: function(color) {\n                triggerEvent(this, \"change\", color);\n            },\n            destroy: function() {\n                if (this.element) {\n                    this.element.off(NS);\n                }\n\n                if (this.wrapper) {\n                    this.wrapper.off(KEYDOWN_NS);\n                    this.wrapper.off(NS).find(\"*\").off(NS);\n                    this.wrapper = null;\n                }\n\n                Widget.fn.destroy.call(this);\n            },\n            _preventDefaultLabelClick: function() {\n                // if there exists a <label> associated with this\n                // input field, we must catch clicks on it to prevent\n                // the built-in color picker from showing up.\n                // https://github.com/telerik/kendo-ui-core/issues/292\n                var element = this.element,\n                    label = element.closest(\"label\"),\n                    id = element.attr(\"id\");\n\n                if (id) {\n                    label = label.add('label[for=\"' + id + '\"]');\n                }\n                label.on(\"click\", function(ev) {\n                    ev.preventDefault();\n                });\n            },\n            _updateUI: $.noop,\n            _updateInput: function(value) {\n                var formattedValue = \"\",\n                    valueForLabel;\n\n                if (value) {\n                    if (this._isInputTypeColor() || value.a == 1) {\n                        // seems that input type=\"color\" doesn't support opacity\n                        // in colors; the only accepted format is hex #RRGGBB\n                        formattedValue = value.toCss();\n                    } else {\n                        formattedValue = value.toCssRgba();\n                    }\n\n                    this.element.val(formattedValue);\n                }\n\n                if (this.options._otOfPicker) {\n                    if (!this._ariaTemplate) {\n                        this._ariaTemplate = kendo.template(this.options.ARIATemplate);\n                    }\n\n                    valueForLabel = this.value();\n\n                    if (valueForLabel && valueForLabel.indexOf(\"rgba\") > -1) {\n                        valueForLabel = valueForLabel.replace(\"rgba\", \"RGBA\");\n                    };\n\n                    this.wrapper.attr(\"aria-label\", this._ariaTemplate(valueForLabel || \"\"));\n                }\n            },\n            _selectOnHide: function() {\n                return null;\n            },\n            _cancel: function() {\n                this.trigger(\"cancel\");\n            }\n        });\n\n        function triggerEvent(self, type, color) {\n            color = parseColor(color);\n\n            if ((color && !color.equals(self.color())) || color !== self.color()) {\n                if (type == \"change\") {\n                    // UI is already updated.  setting _value directly\n                    // rather than calling self.color(color) to avoid an\n                    // endless loop.\n                    self._value = color;\n                    self._updateInput(self._value);\n                }\n                if (color && color.a != 1) {\n                    color = color.toCssRgba();\n                } else if (color) {\n                    color = color.toCss();\n                }\n\n                self.trigger(type, { value: color });\n            }\n        }\n\n        extend(ui, {\n            colorpicker: {\n                ColorSelector: ColorSelector\n            }\n        });\n\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1){\n        var colorpicker = kendo.ui.colorpicker,\n            extend = $.extend,\n            Color = kendo.Color,\n            parseColor = kendo.parseColor,\n\n            AA_CONTRAST = 4.5,\n            AAA_CONTRAST = 7,\n            STEP_COUNT = 16;\n\n        // Color utils - calc contrast\n\n        function getContrast(luminance1, luminance2) {\n            var brightest = Math.max(luminance1, luminance2);\n            var darkest = Math.min(luminance1, luminance2);\n            return (brightest + 0.05) / (darkest + 0.05);\n        }\n\n        function getContrastFromTwoRGBAs(a, b) {\n            return getContrast(\n                getLuminance(getRGBFromRGBA(a, b)),\n                getLuminance(getRGBFromRGBA(b, { r: 0, g: 0, b: 0, a: 1 })));\n        }\n\n        function getLuminance (rgb) {\n            var a = [rgb.r, rgb.g, rgb.b].map(function (v) {\n                v /= 255;\n                return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n            });\n            return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n        }\n\n        function getRGBFromRGBA(foregroundColor, backgroundColor) {\n            var r1 = fitIntoBounds(foregroundColor.r, 0, 255);\n            var g1 = fitIntoBounds(foregroundColor.g, 0, 255);\n            var b1 = fitIntoBounds(foregroundColor.b, 0, 255);\n            var a1 = fitIntoBounds(foregroundColor.a, 0, 1);\n\n            var r2 = fitIntoBounds(backgroundColor.r, 0, 255);\n            var g2 = fitIntoBounds(backgroundColor.g, 0, 255);\n            var b2 = fitIntoBounds(backgroundColor.b, 0, 255);\n\n            return {\n                r: Math.round(((1 - a1) * r2) + (a1 * r1)),\n                g: Math.round(((1 - a1) * g2) + (a1 * g1)),\n                b: Math.round(((1 - a1) * b2) + (a1 * b1))\n            };\n        }\n\n        function fitIntoBounds(contender, min, max) {\n            if (!isPresent(contender) || isNaN(contender)) {\n                return min;\n            }\n\n            return contender <= min ? min : contender >= max ? max : contender;\n        }\n\n        function isPresent(value) { return value !== null && value !== undefined$1; }\n\n\n        // Color utils - Contrast tool SVG path\n\n        function renderSvgCurveLine(gradientRectMetrics, hsva, backgroundColor) {\n            var findValue = function (contrast, saturation, low, high, comparer) {\n                var mid = (low + high) / 2;\n                var currentHsva = extend({}, hsva, { s: saturation / gradientRectMetrics.width, v: 1 - mid / gradientRectMetrics.height });\n                var currentContrast = getContrastFromTwoRGBAs(parseColor(getColorFromHSV(currentHsva)).toBytes(), parseColor(backgroundColor).toBytes());\n\n                if (low + 0.5 > high) {\n                    if (currentContrast < contrast + 1 && currentContrast > contrast - 1) {\n                        return mid;\n                    } else {\n                        return null;\n                    }\n                }\n\n                if (comparer(currentContrast, contrast)) {\n                    return findValue(contrast, saturation, low, high - (high - low) / 2, comparer);\n                }\n                return findValue(contrast, saturation, low + (high - low) / 2, high, comparer);\n            };\n\n            var comparer = function (a, b) {\n                return a > b;\n            };\n\n            var reversedComparer = function (a, b) {\n                return a < b;\n            };\n\n            var getPaths = function (contrast, stepCount, reversed) {\n                var points = [];\n                for (var i = 0; i <= gradientRectMetrics.width; i += gradientRectMetrics.width/stepCount) {\n                   var value = findValue(contrast, i, 0, gradientRectMetrics.height, reversed ? reversedComparer : comparer);\n                    if (value !== null){\n                        points.push([i, value]);\n                    }\n                }\n                return points;\n            };\n\n            var bezierCommandCalc = bezierCommand(controlPoint(line));\n            var paths = svgPath(getPaths(AA_CONTRAST, STEP_COUNT, false), bezierCommandCalc) +\n                    svgPath(getPaths(AA_CONTRAST, STEP_COUNT, true), bezierCommandCalc) +\n                    svgPath(getPaths(AAA_CONTRAST, STEP_COUNT, false), bezierCommandCalc) +\n                    svgPath(getPaths(AAA_CONTRAST, STEP_COUNT, true), bezierCommandCalc);\n\n            return `<svg xmlns=\"http://www.w3.org/2000/svg\" ${kendo.attr(\"style-position\")}=\"absolute\" ${kendo.attr(\"style-overflow\")}=\"visible\" ${kendo.attr(\"style-pointer-events\")}=\"none\" ` +\n                    `${kendo.attr(\"style-left\")}=\"0px\" ${kendo.attr(\"style-top\")}=\"0px\" ${kendo.attr(\"style-z-index\")}=\"3\" >` +\n                        paths  + '</svg>';\n        }\n\n        function svgPath(points, command) {\n            if (points.length === 0){\n                return '';\n            }\n\n            var reducer = function (acc, point, i, a) {\n                return i === 0 ?\n                    // if first point\n                    kendo.format(\"M {0},{1}\", point[0], point[1]) :\n                    // else\n                    kendo.format(\"{0} {1}\", acc, command(point, i, a));\n            };\n\n            // build the d attributes by looping over the points\n            var d = points.reduce(reducer, \"\");\n\n            return kendo.format('<path d=\"{0}\" fill=\"none\" stroke=\"white\" stroke-width=\"1\"/>', d);\n        }\n\n        function bezierCommand(controlPointCalc) {\n            return function(point, i, a) {\n                // start control point\n                var cps = controlPointCalc(a[i - 1], a[i - 2], point); // [cpsX, cpsY]\n\n                // end control point\n                var cpe = controlPointCalc(point, a[i - 1], a[i + 1], true); //  [cpeX, cpeY]\n\n                return kendo.format(\"C {0},{1} {2},{3} {4},{5}\", cps[0], cps[1], cpe[0], cpe[1], point[0], point[1]);\n            };\n        }\n\n        function controlPoint(lineCalc) {\n            return function (current, previous, next, reverse) {\n                // when 'current' is the first or last point of the array\n                // 'previous' and 'next' are undefined\n                // replace with 'current'\n                    var p = previous || current;\n                    var n = next || current;\n                    var smooth = 0.1;\n\n                    // properties of the line between previous and next\n                    var l = lineCalc(p, n);\n\n                    // If is end-control-point, add PI to the angle to go backward\n                    var angle = l.angle + (reverse ? Math.PI : 0);\n                    var length = l.length * smooth;\n\n                    // The control point position is relative to the current point\n                    var x = current[0] + Math.cos(angle) * length;\n                    var y = current[1] + Math.sin(angle) * length;\n\n                    return [x, y];\n            };\n        }\n\n        function line (pointA, pointB) {\n            var lengthX = pointB[0] - pointA[0];\n            var lengthY = pointB[1] - pointA[1];\n\n            return {\n                length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n                angle: Math.atan2(lengthY, lengthX)\n            };\n        }\n\n        function getColorFromHSV (hsva) {\n            var hue = fitIntoBounds(hsva.h, 0, 359.9);\n            var saturation = fitIntoBounds(hsva.s, 0, 1);\n            var value = fitIntoBounds(hsva.v, 0, 1);\n            var alpha = fitIntoBounds(hsva.a, 0, 1);\n\n            return Color.fromHSV(hue, saturation, value, alpha).toCssRgba();\n        }\n\n        extend(colorpicker, {\n            contrastToolUtils: {\n                getContrastFromTwoRGBAs: getContrastFromTwoRGBAs,\n                renderSvgCurveLine: renderSvgCurveLine\n            }\n        });\n\n    })(window.kendo.jQuery);\n\n    var __meta__$1 = {\n            id: \"colorgradient\",\n            name: \"ColorGradient\",\n            category: \"web\", // suite\n            description: \"ColorGradient allows selection of a color from an HSV canvas.\",\n            depends: [\"core\", \"popup\", \"textbox\", \"icons\"] // dependencies\n        };\n    (function($, undefined$1) {\n        // WARNING: removing the following jshint declaration and turning\n        // == into === to make JSHint happy will break functionality.\n\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Observable = kendo.Observable,\n            parseColor = kendo.parseColor,\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n            Color = kendo.Color,\n            KEYS = kendo.keys,\n            BACKGROUNDCOLOR = \"background-color\",\n            WHITE = \"#ffffff\",\n            BLACK = \"#000000\",\n            NS = \".kendoColorTools\",\n            KEYDOWN_NS = \"keydown\" + NS,\n            ColorSelector = ui.colorpicker.ColorSelector,\n\n            contrastToolUtils = ui.colorpicker.contrastToolUtils;\n\n        function preventDefault(ev) { ev.preventDefault(); }\n\n        function bind(callback, obj) {\n            return function() {\n                return callback.apply(obj, arguments);\n            };\n        }\n\n        var ColorInput = Observable.extend({\n            init: function(element, options) {\n                var that = this;\n\n                that.element = element;\n                that.options = options;\n\n                that._viewModel = kendo.observable({\n                    switchMode: that.switchMode.bind(that),\n                    keydown: that.keydown.bind(that),\n                    isHEXMode: function () { return this.get(\"format\") === 'hex' },\n                    isRGBMode: function () { return this.get(\"format\") === 'rgb' },\n                    format: options.format,\n                    formats: options.formats,\n                    rgb: null,\n                    hex: function () {\n                        return this.get(\"rgb\") !== null && this.get(\"rgb\").toCss({alpha: options.opacity});\n                    }\n                });\n\n                that._changeHandler = that.change.bind(that);\n\n                that._viewModel.bind(\"change\", that._changeHandler);\n\n                that._render();\n\n                that.element.on(KEYDOWN_NS, that.keydown.bind(that));\n\n                Observable.fn.init.call(that);\n            },\n            _template: kendo.template(({ options, ns }) => {\n                let optionsSize = encode(options.size);\n                let optionsTabIndex = encode(options.tabindex);\n\n                let vStackElement = \"\";\n                if (options.formats && options.formats.length > 1) {\n                    let optionsMessagesToggleFormat = encode(options.messages.toggleFormat);\n\n                    vStackElement =\n                    '<div class=\"k-vstack\">' +\n                        `<button class=\"k-colorgradient-toggle-mode\" data-${ns}role=\"button\" data-${ns}icon=\"caret-alt-expand\" data data-${ns}bind=\"click: switchMode\" data-${ns}fill-mode=\"flat\" data-${ns}size=\"${optionsSize}\" title=\"${optionsMessagesToggleFormat}\">` +\n                        '</button>' +\n                    '</div>';\n                }\n\n                // HEX input\n                let hexInputElement = \"\";\n                if (options.formats && options.formats.indexOf(\"hex\") >= 0) {\n                    let optionsMessagesHex = encode(options.messages.hex);\n\n                    hexInputElement =\n                    `<div class=\"k-vstack\" data-${ns}bind=\"visible: isHEXMode\">` +\n                        `<input type=\"text\" data-${ns}bind=\"value: hex\" data-${ns}role=\"textbox\" data-${ns}size=\"${optionsSize}\" tabindex=\"${optionsTabIndex}\"  aria-label=\"${optionsMessagesHex}\"/>` +\n                        '<label class=\"k-colorgradient-input-label\">HEX</label>' +\n                    '</div>';\n                }\n\n                // RGBA input\n                let rgbaInputElement = \"\";\n                if (options.formats && options.formats.indexOf(\"rgb\") >= 0) {\n                    let optionsMessagesRed = encode(options.messages.red);\n                    let optionsMessagesGreen = encode(options.messages.green);\n                    let optionsMessagesBlue = encode(options.messages.blue);\n\n                    rgbaInputElement =\n                    `<div class=\"k-vstack\" data-${ns}bind=\"visible: isRGBMode\">` +\n                        `<input tabindex=\"${optionsTabIndex}\" data-${ns}bind=\"value: rgb.r\" data-${ns}role=\"numerictextbox\" data-${ns}size=\"${optionsSize}\" data-${ns}max=\"255\" data-${ns}min=\"0\" data-${ns}decimals=\"0\" data-${ns}spinners=\"false\" data-${ns}format=\"n0\" aria-label=\"${optionsMessagesRed}\" />` +\n                        '<label class=\"k-colorgradient-input-label\">R</label>' +\n                    '</div>' +\n                    `<div class=\"k-vstack\" data-${ns}bind=\"visible: isRGBMode\">` +\n                        `<input tabindex=\"${optionsTabIndex}\" data-${ns}bind=\"value: rgb.g\" data-${ns}role=\"numerictextbox\" data-${ns}size=\"${optionsSize}\" data-${ns}max=\"255\" data-${ns}min=\"0\" data-${ns}decimals=\"0\" data-${ns}spinners=\"false\" data-${ns}format=\"n0\" aria-label=\"${optionsMessagesGreen}\" />` +\n                        '<label class=\"k-colorgradient-input-label\">G</label>' +\n                    '</div>' +\n                    `<div class=\"k-vstack\" data-${ns}bind=\"visible: isRGBMode\">` +\n                        `<input tabindex=\"${optionsTabIndex}\" data-${ns}bind=\"value: rgb.b\" data-${ns}role=\"numerictextbox\" data-${ns}size=\"${optionsSize}\" data-${ns}max=\"255\" data-${ns}min=\"0\" data-${ns}decimals=\"0\" data-${ns}spinners=\"false\" data-${ns}format=\"n0\" aria-label=\"${optionsMessagesBlue}\"/>` +\n                        '<label class=\"k-colorgradient-input-label\">B</label>' +\n                    '</div>';\n\n                    if(options.opacity) {\n                        let optionsMessagesAlpha = options.messages.alpha;\n                        rgbaInputElement +=\n                        `<div class=\"k-vstack\" data-${ns}bind=\"visible: isRGBMode\">` +\n                            `<input tabindex=\"${optionsTabIndex}\" data-${ns}bind=\"value: rgb.a\" data-${ns}role=\"numerictextbox\" data-${ns}size=\"${optionsSize}\" data-${ns}step=\"0.1\" data-${ns}max=\"1\" data-${ns}min=\"0\" data-${ns}decimals=\"1\" data-${ns}spinners=\"false\" data-${ns}format=\"n1\" aria-label=\"${optionsMessagesAlpha}\" />` +\n                            '<label class=\"k-colorgradient-input-label\">A</label>' +\n                        '</div>';\n                    }\n                }\n\n                return vStackElement + hexInputElement + rgbaInputElement;\n            }),\n            destroy: function(){\n                var that = this;\n\n                that._viewModel.unbind(\"change\", that._changeHandler);\n                kendo.unbind(that.element);\n                kendo.destroy(that.element);\n                that.element.off(KEYDOWN_NS);\n                delete that._viewModel;\n                delete that._changeHandler;\n            },\n            change: function (ev) {\n                var that = this;\n\n                if (ev.field.indexOf(\"rgb\") >= 0) {\n                    that._color = that._tryParseColor(that._viewModel.rgb.toCssRgba());\n                    that._viewModel.set(\"hex\", that._color.toCss({ alpha: that.options.opacity }));\n                } else if (ev.field === \"hex\") {\n                    that._color = that._tryParseColor(ev.sender[ev.field]);\n                    that._viewModel.set(\"rgb\", that._color);\n                }\n\n                if (!that._preventChangeEvent) {\n                    that.trigger(\"change\", {value: that._color});\n                }\n            },\n            keydown: function (ev) {\n                var that = this,\n                    textbox = $(ev.target).data(\"kendoTextBox\");\n\n                if (ev.keyCode === KEYS.ENTER && $(ev.target).is(\"input\")) {\n                    if(textbox && textbox._change) {\n                        textbox._change();\n                    }\n\n                    that.trigger(\"change\", {value: that._color});\n                    that.trigger(\"select\", {value: that._color});\n                }\n            },\n            reset: function () {\n                var that = this;\n\n                that._preventChangeEvent = true;\n                that._viewModel.set(\"rgb\", parseColor(BLACK));\n                delete that._preventChangeEvent;\n            },\n            switchMode: function() {\n                var that = this,\n                    model = that._viewModel,\n                    currentFormat = model.format,\n                    index = model.formats.indexOf(currentFormat) + 1;\n\n                index = index >= model.formats.length ? 0 : index;\n\n                that._preventChangeEvent = true;\n                that._viewModel.set(\"format\", model.formats[index]);\n                delete that._preventChangeEvent;\n            },\n            value: function (color) {\n                var that = this;\n\n                that._color = (color && color.toBytes()) || parseColor(BLACK);\n                that._preventChangeEvent = true;\n                that._viewModel.set(\"rgb\", that._color);\n                delete that._preventChangeEvent;\n            },\n            _render: function() {\n                var that = this;\n\n                that.element\n                    .append(that._template({ ns: kendo.ns, guid: kendo.guid(), options: that.options }))\n                    .parent();\n\n                kendo.bind(that.element, that._viewModel);\n                that.element.attr(\"data-\" + kendo.ns + \"stop\", \"stop\");\n            },\n            _tryParseColor: function (color) {\n                var that = this;\n\n                try {\n                    color = parseColor(color) || that._color;\n                } catch (error) {\n                    color = that._color;\n                }\n\n                return color;\n            }\n        });\n\n        var ColorGradient = ColorSelector.extend({\n            init: function (element, options) {\n                var that = this,\n                    value;\n\n                ColorSelector.fn.init.call(that, element, options);\n\n                options = that.options = kendo.deepExtend({}, that.options, options);\n\n                if(options.messages.previewInput) {\n                    options.messages.hex = options.messages.previewInput;\n                }\n\n                options.messages = options.messages ? $.extend(that.options.messages, options.messages) : that.options.messages;\n                element = that.element;\n\n                that._wrapper();\n                that._sliders();\n                that._hsvArea();\n\n                value = that._value;\n\n                that._gradientInputs();\n                that._updateUI(value);\n                that._navigation();\n            },\n            options: {\n                name : \"ColorGradient\",\n                opacity : false,\n                hsvDragARIATemplate: (data) => `Color well with two-dimensional slider for selecting saturation and value. Selected color is ${data || \"none\"}`,\n                input : true,\n                format: \"hex\",\n                formats: [\"rgb\", \"hex\"],\n                contrastTool: false,\n                size: \"medium\",\n                messages: {\n                    contrastRatio: \"Contrast ratio:\",\n                    fail: \"Fail\",\n                    pass: \"Pass\",\n                    hex: \"HEX\",\n                    toggleFormat: \"Toggle format\",\n                    red: \"Red channel\",\n                    green: \"Green channel\",\n                    blue: \"Blue channel\",\n                    alpha: \"Alpha channel\"\n                },\n                _otOfPicker: true\n            },\n            _template: kendo.template((options) =>\n                    '<div class=\"k-colorgradient-canvas k-hstack\">' +\n                        '<div class=\"k-hsv-rectangle\"><div class=\"k-hsv-gradient\"><div role=\"slider\" aria-orientation=\"undefined\" class=\"k-hsv-draghandle k-draghandle\"></div></div></div>' +\n                        '<div class=\"k-hsv-controls k-hstack\">' +\n                            '<input class=\"k-hue-slider k-colorgradient-slider\" />' +\n                            (options.opacity ? '<input class=\"k-alpha-slider k-colorgradient-slider\" />' : '') +\n                        '</div>' +\n                    '</div>' +\n                    (options.input ? '<div class=\"k-colorgradient-inputs k-hstack\"></div>' : '') +\n                    (options.contrastTool ? '<div class=\"k-colorgradient-color-contrast k-vbox\"></div>' : '')\n            ),\n            focus: function() {\n                this._hsvHandle.focus();\n            },\n            setBackgroundColor: function(color) {\n                var that = this;\n\n                if (that.options.contrastTool) {\n                    that.options.contrastTool = $.isPlainObject(that.options.contrastTool) ? extend({}, that.options.contrastTool, {\n                        backgroundColor: color\n                    }) : {\n                        backgroundColor: color\n                    };\n\n                    that._updateColorContrast(that.color() || parseColor(WHITE));\n                }\n            },\n            _getHSV: function(h, s, v, a) {\n                var that = this,\n                    rect = that._hsvRect,\n                    width = rect.width(),\n                    height = rect.height(),\n                    handlePosition = this._hsvHandle.position();\n\n                if(!width || !height) {\n                    return that.color() ? that.color().toHSV() : parseColor(BLACK);\n                }\n\n                if (h == null) {\n                    h = that._hueSlider.value();\n                }\n                if (s == null) {\n                    s = handlePosition.left / width;\n                }\n                if (v == null) {\n                    v = 1 - handlePosition.top / height;\n                }\n                if (a == null) {\n                    a = that._opacitySlider ? that._opacitySlider.value() / 100 : 1;\n                }\n                return Color.fromHSV(h, s, v, a);\n            },\n            _gradientInputs: function() {\n                var that = this,\n                    options = that.options;\n\n                if(that._colorgradientInputs.length) {\n                    that._colorInput = new ColorInput(that._colorgradientInputs, extend({}, options, {\n                        tabindex: 0\n                    }));\n\n                    that._colorInput.bind(\"change\", function(ev){\n                        that._updateUI(ev.value, true);\n                    });\n\n                    that._colorInput.bind(\"select\", function(ev){\n                        var color = parseColor(ev.value);\n                        that._select(color);\n                        that.trigger(\"forceSelect\", { value: that.value() });\n                    });\n                }\n            },\n            _hsvArea: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    hsvRect = wrapper.find(\".k-hsv-rectangle\"),\n                    hsvHandle = hsvRect.find(\".k-draghandle\").attr(\"tabIndex\", 0).on(KEYDOWN_NS, bind(that._hsvKeydown, that)),\n                    value = this.value();\n\n                if (value && value.indexOf(\"rgba\") > -1) {\n                    value = value.replace(\"rgba\", \"RGBA\");\n                };\n\n                if (!this._hsvDragAriaTemplate) {\n                    this._hsvDragAriaTemplate = kendo.template(this.options.hsvDragARIATemplate);\n                }\n\n                hsvHandle.attr(\"aria-label\", this._hsvDragAriaTemplate(value || ''));\n\n                function update(x, y) {\n                    var offset = this.offset,\n                        dx = x - offset.left, dy = y - offset.top,\n                        rw = this.width, rh = this.height,\n                        resultX, resultY;\n\n                    dx = dx < 0 ? 0 : dx > rw ? rw : dx;\n                    dy = dy < 0 ? 0 : dy > rh ? rh : dy;\n                    resultX = dx / rw;\n                    resultY = 1 - dy / rh;\n\n                    that._svChange(resultX, resultY);\n                }\n\n                that._hsvEvents = new kendo.UserEvents(hsvRect, {\n                    global: true,\n                    press: function(e) {\n                        this.offset = kendo.getOffset(hsvRect);\n                        this.width = hsvRect.width();\n                        this.height = hsvRect.height();\n                        hsvHandle.focus();\n                        update.call(this, e.x.location, e.y.location);\n                    },\n                    start: function() {\n                        hsvRect.addClass(\"k-dragging\");\n                        hsvHandle.focus();\n                    },\n                    move: function(e) {\n                        e.preventDefault();\n                        update.call(this, e.x.location, e.y.location);\n                    },\n                    end: function() {\n                        hsvRect.removeClass(\"k-dragging\");\n                    }\n                });\n\n                that._hsvRect = hsvRect;\n                that._hsvHandle = hsvHandle;\n            },\n            _hsvKeydown: function(ev) {\n                var that = this;\n                function move(prop, d) {\n                    var c = that._getHSV();\n                    c[prop] += d * (ev.shiftKey ? 0.01 : 0.05);\n                    if (c[prop] < 0) { c[prop] = 0; }\n                    if (c[prop] > 1) { c[prop] = 1; }\n                    that._updateUI(c);\n                    preventDefault(ev);\n                }\n                function hue(d) {\n                    var c = that._getHSV();\n                    c.h += d * (ev.shiftKey ? 1 : 5);\n                    if (c.h < 0) { c.h = 0; }\n                    if (c.h > 359) { c.h = 359; }\n                    that._updateUI(c);\n                    preventDefault(ev);\n                }\n                switch (ev.keyCode) {\n                case KEYS.LEFT:\n                    if (ev.ctrlKey) {\n                        hue(-1);\n                    } else {\n                        move(\"s\", -1);\n                    }\n                    break;\n                case KEYS.RIGHT:\n                    if (ev.ctrlKey) {\n                        hue(1);\n                    } else {\n                        move(\"s\", 1);\n                    }\n                    break;\n                case KEYS.UP:\n                    move(ev.ctrlKey && that._opacitySlider ? \"a\" : \"v\", 1);\n                    break;\n                case KEYS.DOWN:\n                    move(ev.ctrlKey && that._opacitySlider ? \"a\" : \"v\", -1);\n                    break;\n                case KEYS.ENTER:\n                    that._select(that._getHSV());\n                    break;\n                case KEYS.F2:\n                    that._colorInput.element.find(\"input\").trigger(\"focus\").select();\n                    break;\n                case KEYS.ESC:\n                    that._cancel();\n                    break;\n                }\n            },\n            _onEnable: function(enable) {\n                var wrapper = this.wrapper;\n\n                this._hueSlider.enable(enable);\n\n                if (this._opacitySlider) {\n                    this._opacitySlider.enable(enable);\n                }\n\n                wrapper.find(\"input\").attr(\"disabled\", !enable);\n\n                if (this.options._standalone) {\n                    if (enable) {\n                        wrapper.removeAttr(\"aria-disabled\");\n                    } else {\n                        wrapper.attr(\"aria-disabled\", true);\n                    }\n                }\n            },\n            _reset: function () {\n                var that = this;\n\n                if (that._colorInput) {\n                    that._colorInput.reset();\n                }\n\n                that._resetHsv();\n                that._resetColorContrast();\n            },\n            _resetColorContrast: function () {\n                var that = this,\n                    contrastOptions = that.options.contrastTool;\n\n                if(that._contrastTool.length) {\n                    that._updateColorContrast(contrastOptions.backgroundColor ? parseColor(contrastOptions.backgroundColor) : parseColor(WHITE));\n                }\n            },\n            _resetHsv: function () {\n                var that = this,\n                    color = parseColor(BLACK);\n\n                that._updateHsv(color);\n            },\n            _sliders: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    hueSlider = wrapper.find(\".k-hue-slider\"),\n                    opacitySlider = wrapper.find(\".k-alpha-slider\");\n\n                function hueChange(e) {\n                    that._updateUI(that._getHSV(e.value, null, null, null));\n                }\n\n                hueSlider.attr(\"aria-label\", \"hue\");\n                that._hueSlider = hueSlider.kendoSlider({\n                    min: 0,\n                    max: 360,\n                    tickPlacement: \"none\",\n                    showButtons: false,\n                    orientation: \"vertical\",\n                    slide: hueChange,\n                    change: hueChange\n                }).data(\"kendoSlider\");\n\n                function opacityChange(e) {\n                    that._updateUI(that._getHSV(null, null, null, e.value / 100));\n                }\n\n                opacitySlider.attr(\"aria-label\", \"opacity\");\n                that._opacitySlider = opacitySlider.kendoSlider({\n                    min: 0,\n                    max: 100,\n                    tickPlacement: \"none\",\n                    showButtons: false,\n                    orientation: \"vertical\",\n                    slide: opacityChange,\n                    change: opacityChange\n                }).data(\"kendoSlider\");\n            },\n            _svChange: function(s, v) {\n                var color = this._getHSV(null, s, v, null);\n                this._updateUI(color);\n            },\n            _updateColorContrast: function (color) {\n                var that = this,\n                    contrastOptions = that.options.contrastTool,\n                    backgroundColor = contrastOptions.backgroundColor ? parseColor(contrastOptions.backgroundColor) : parseColor(WHITE),\n                    contrastRatio = contrastToolUtils.getContrastFromTwoRGBAs(parseColor(color.toCssRgba()), backgroundColor),\n                    contrastRatioTemplate = kendo.template(({ messages, ratio }) =>\n                                                '<div class=\"k-contrast-ratio\">' +\n                                                    `<span class=\"k-contrast-ratio-text\">${encode(messages.contrastRatio)} ${encode(kendo.toString(ratio, \"n2\"))}</span>` +\n                                                    '<span class=\"k-contrast-validation !k-text-success\">' +\n                                                        (ratio > 4.5 ?  kendo.ui.icon(\"check\") : '') +\n                                                        (ratio > 7 ?  kendo.ui.icon(\"check\") : '') +\n                                                '</span></div>'),\n                    labelTemplate = kendo.template(({ messages, ratio, limit, level }) =>\n                                                '<div>' +\n                                                    `<span>${encode(level)}: ${encode(limit)} </span>` +\n                                                    (ratio > limit ?\n                                                    `<span class=\"k-contrast-validation !k-text-success\">${encode(messages.pass)} ${kendo.ui.icon(\"check\")}</span>`\n                                                    :\n                                                    `<span class=\"k-contrast-validation !k-text-error\">${encode(messages.fail)} ${kendo.ui.icon(\"x\")}</span>`) +\n                                                '</div>'),\n                    output = \"\";\n\n                output += contrastRatioTemplate({\n                    messages: that.options.messages,\n                    ratio: contrastRatio,\n                });\n\n                output += labelTemplate({\n                    messages: that.options.messages,\n                    ratio: contrastRatio,\n                    limit: 4.5,\n                    level: \"AA\"\n                });\n\n                output += labelTemplate({\n                    messages: that.options.messages,\n                    ratio: contrastRatio,\n                    limit: 7,\n                    level: \"AAA\"\n                });\n\n                that._contrastTool.find(\".k-contrast-ratio, div\").remove();\n                that._contrastTool.append(output);\n\n                that._updateContrastSvg(backgroundColor);\n            },\n            _updateContrastSvg: function (backgroundColor) {\n                var that = this,\n                    hsvRect = that._hsvRect,\n                    svgClassName = \"k-color-contrast-svg\",\n                    metrics = { width: hsvRect.width(), height: hsvRect.height() },\n                    newSvg;\n\n                if(!metrics.width || !metrics.height) {\n                    return;\n                }\n\n                newSvg = $(contrastToolUtils.renderSvgCurveLine(metrics, that._getHSV(), backgroundColor)).addClass(svgClassName);\n                kendo.applyStylesFromKendoAttributes(newSvg, [\"position\", \"overflow\", \"pointer-events\", \"left\", \"top\", \"z-index\"]);\n\n                hsvRect.find(\".\" + svgClassName).remove();\n                hsvRect.append(newSvg);\n            },\n            _updateHsv: function (color) {\n                var that = this,\n                    rect = that._hsvRect;\n\n                color = color.toHSV();\n\n                that._hsvHandle.css({\n                    // saturation is 0 on the left side, full (1) on the right\n                    left: color.s * rect.width() + \"px\",\n                    // value is 0 on the bottom, full on the top.\n                    top: (1 - color.v) * rect.height() + \"px\"\n                });\n\n                that._hueElements.css(BACKGROUNDCOLOR, Color.fromHSV(color.h, 1, 1, 1).toCss());\n                that._hueSlider.value(color.h);\n\n                if (that._opacitySlider) {\n                    that._opacitySlider.wrapper.find(\".k-slider-track\").css(\"background\", \"linear-gradient(to top, transparent, \" + Color.fromHSV(color.h, 1, 1, 1).toCss());\n                    that._opacitySlider.value(100 * color.a);\n                }\n\n                that._updateHsvAria(color.s, color.v);\n            },\n            _updateHsvAria: function(x,y) {\n                var value = this.value();\n\n                if (value && value.indexOf(\"rgba\") > -1) {\n                    value = value.replace(\"rgba\", \"RGBA\");\n                }\n\n                this._hsvHandle.attr({\n                    \"aria-label\": this._hsvDragAriaTemplate(value || ''),\n                    \"aria-valuenow\": Math.round(x * 100),\n                    \"aria-valuetext\": \"saturation: \" + Math.round(x * 100) + \"%, value: \" + Math.round(y * 100) + \"%\"\n                });\n            },\n            _updateUI: function(color, dontChangeInput) {\n                var that = this;\n\n                if (!color) {\n                    that._reset();\n                    return;\n                }\n\n                if (!dontChangeInput && that._colorInput) {\n                    that._colorInput.value(color);\n                }\n\n                that._triggerSelect(color);\n                that._updateHsv(color);\n\n                if(that._contrastTool.length) {\n                    that._updateColorContrast(color);\n                }\n            },\n            _wrapper: function() {\n                var options = this.options,\n                    wrapper;\n\n                if (this.element.is(\"input\")) {\n                    wrapper = this.element.addClass(\"k-hidden\").wrap(\"<div>\").parent();\n                } else {\n                    wrapper = this.element;\n                }\n\n                wrapper.addClass(\"k-colorgradient\")\n                    .attr({\n                        \"role\": \"textbox\",\n                        \"aria-keyshortcuts\": \"Enter\"\n                    })\n                    .append(this._template(options));\n\n                this._hueElements = $(\".k-hsv-rectangle, .k-alpha-slider .k-slider-track\", wrapper);\n                this._colorgradientInputs = $(\".k-colorgradient-inputs\", wrapper);\n                this._contrastTool = $(\".k-colorgradient-color-contrast\", wrapper);\n\n                this.wrapper = wrapper;\n            },\n            destroy: function (){\n                this._hsvEvents.destroy();\n\n                this._hueSlider.destroy();\n                if (this._opacitySlider) {\n                    this._opacitySlider.destroy();\n                }\n\n                if(this._colorInput) {\n                    this._colorInput.destroy();\n                }\n\n                this._hueSlider = this._opacitySlider = this._hsvRect = this._hsvHandle =\n                    this._hueElements = this._selectedColor = this._colorAsText =\n                    this._contrastTool = null;\n\n                ColorSelector.fn.destroy.call(this);\n            }\n        });\n\n        ui.plugin(ColorGradient);\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1){\n        // WARNING: removing the following jshint declaration and turning\n        // == into === to make JSHint happy will break functionality.\n\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            parseColor = kendo.parseColor,\n            KEYS = kendo.keys,\n            DOT = \".\",\n            BACKGROUNDCOLOR = \"background-color\",\n            ITEMSELECTEDCLASS = \"k-selected\",\n            ITEMSFOCUSEDCLASS = \"k-focus\",\n            TILE_CLASS = \"k-colorpalette-tile\",\n            SIMPLEPALETTE = \"000000,7f7f7f,880015,ed1c24,ff7f27,fff200,22b14c,00a2e8,3f48cc,a349a4,ffffff,c3c3c3,b97a57,ffaec9,ffc90e,efe4b0,b5e61d,99d9ea,7092be,c8bfe7\",\n            WEBPALETTE = \"FFFFFF,FFCCFF,FF99FF,FF66FF,FF33FF,FF00FF,CCFFFF,CCCCFF,CC99FF,CC66FF,CC33FF,CC00FF,99FFFF,99CCFF,9999FF,9966FF,9933FF,9900FF,FFFFCC,FFCCCC,FF99CC,FF66CC,FF33CC,FF00CC,CCFFCC,CCCCCC,CC99CC,CC66CC,CC33CC,CC00CC,99FFCC,99CCCC,9999CC,9966CC,9933CC,9900CC,FFFF99,FFCC99,FF9999,FF6699,FF3399,FF0099,CCFF99,CCCC99,CC9999,CC6699,CC3399,CC0099,99FF99,99CC99,999999,996699,993399,990099,FFFF66,FFCC66,FF9966,FF6666,FF3366,FF0066,CCFF66,CCCC66,CC9966,CC6666,CC3366,CC0066,99FF66,99CC66,999966,996666,993366,990066,FFFF33,FFCC33,FF9933,FF6633,FF3333,FF0033,CCFF33,CCCC33,CC9933,CC6633,CC3333,CC0033,99FF33,99CC33,999933,996633,993333,990033,FFFF00,FFCC00,FF9900,FF6600,FF3300,FF0000,CCFF00,CCCC00,CC9900,CC6600,CC3300,CC0000,99FF00,99CC00,999900,996600,993300,990000,66FFFF,66CCFF,6699FF,6666FF,6633FF,6600FF,33FFFF,33CCFF,3399FF,3366FF,3333FF,3300FF,00FFFF,00CCFF,0099FF,0066FF,0033FF,0000FF,66FFCC,66CCCC,6699CC,6666CC,6633CC,6600CC,33FFCC,33CCCC,3399CC,3366CC,3333CC,3300CC,00FFCC,00CCCC,0099CC,0066CC,0033CC,0000CC,66FF99,66CC99,669999,666699,663399,660099,33FF99,33CC99,339999,336699,333399,330099,00FF99,00CC99,009999,006699,003399,000099,66FF66,66CC66,669966,666666,663366,660066,33FF66,33CC66,339966,336666,333366,330066,00FF66,00CC66,009966,006666,003366,000066,66FF33,66CC33,669933,666633,663333,660033,33FF33,33CC33,339933,336633,333333,330033,00FF33,00CC33,009933,006633,003333,000033,66FF00,66CC00,669900,666600,663300,660000,33FF00,33CC00,339900,336600,333300,330000,00FF00,00CC00,009900,006600,003300,000000\",\n            NS = \".kendoColorTools\",\n            FOCUS_NS = \"focus\" + NS,\n            CLICK_NS = \"click\" + NS,\n            KEYDOWN_NS = \"keydown\" + NS,\n            BLUR_NS = \"blur\" + NS,\n            ColorSelector = ui.colorpicker.ColorSelector;\n\n        function preventDefault(ev) { ev.preventDefault(); }\n\n        function bind(callback, obj) {\n            return function() {\n                return callback.apply(obj, arguments);\n            };\n        }\n\n        function relative(array, element, delta) {\n            array = Array.prototype.slice.call(array);\n            var n = array.length;\n            var pos = array.indexOf(element);\n            if (pos < 0) {\n                return delta < 0 ? array[n - 1] : array[0];\n            }\n            pos += delta;\n            if (pos < 0) {\n                pos += n;\n            } else {\n                pos %= n;\n            }\n            return array[pos];\n        }\n\n        var ColorPalette = ColorSelector.extend({\n            init: function(element, options) {\n                var that = this;\n\n                ColorSelector.fn.init.call(that, element, options);\n\n                that._tabIndex = this.element.attr(\"tabindex\") || 0;\n\n                that._wrapper();\n\n                options = that.options;\n\n                that._selectedID = (options.ariaId || kendo.guid()) + \"_selected\";\n                that._ariaTemplate = kendo.template(that.options.ARIATemplate);\n\n                if (that._value) {\n                    that._updateUI(that._value);\n                    that.wrapper.find(DOT + ITEMSFOCUSEDCLASS).removeClass(ITEMSFOCUSEDCLASS);\n                }\n\n                that.wrapper.attr(\"aria-label\", that._ariaTemplate(that.value() || \"\"));\n\n                that._attachEvents();\n            },\n            focus: function(){\n                if (this.wrapper && !this.wrapper.is(\"[unselectable='on']\")) {\n                    this.wrapper.trigger(\"focus\");\n                }\n            },\n            options: {\n                name: \"ColorPalette\",\n                columns: 10,\n                tileSize: null,\n                palette: \"basic\"\n            },\n            _attachEvents: function() {\n                var that = this;\n\n                that.wrapper.on(CLICK_NS, DOT + TILE_CLASS, function(ev){\n                    that._select(ev.currentTarget);\n                })\n                .on(KEYDOWN_NS, bind(that._keydown, that))\n                .on(BLUR_NS, function(){\n                    that.wrapper.find(DOT + TILE_CLASS).removeClass(ITEMSFOCUSEDCLASS);\n                })\n                .on(FOCUS_NS, bind(that._focus, that));\n            },\n            _colors: function() {\n                var options = this.options,\n                    colors = options.palette || \"basic\";\n\n                if (colors == \"websafe\") {\n                    colors = WEBPALETTE;\n                    options.columns = 18;\n                } else if (colors == \"basic\") {\n                    colors = SIMPLEPALETTE;\n                }\n\n                if (typeof colors == \"string\") {\n                    colors = colors.split(\",\");\n                }\n\n                if (Array.isArray(colors)) {\n                    colors = $.map(colors, function(x) { return parseColor(x); });\n                }\n\n                return colors;\n            },\n            _current: function(item) {\n                this.wrapper.find(DOT + TILE_CLASS)\n                    .removeClass(ITEMSFOCUSEDCLASS)\n                    .removeAttr(\"id\");\n\n                $(item)\n                    .addClass(ITEMSFOCUSEDCLASS)\n                    .attr(\"id\", this._selectedID);\n\n                this.wrapper\n                    .removeAttr(\"aria-activedescendant\")\n                    .attr(\"aria-activedescendant\", this._selectedID);\n            },\n            _focus: function() {\n                var wrapper = this.wrapper,\n                    selected = wrapper.find(\"#\" + this._selectedID);\n\n                if (selected.length === 0) {\n                    this._current(wrapper.find(DOT + TILE_CLASS).first());\n                }\n            },\n            _keydown: function(e) {\n                var newCurrent,\n                    wrapper = this.wrapper,\n                    items = wrapper.find(DOT + TILE_CLASS),\n                    current = items.filter(DOT + ITEMSFOCUSEDCLASS).get(0) || items.filter(DOT + ITEMSELECTEDCLASS).get(0),\n                    keyCode = e.keyCode,\n                    index;\n\n                if (current) {\n                    index = Array.prototype.indexOf.call(current.parentNode.children, current);\n                }\n\n                if (keyCode == KEYS.LEFT) {\n                    newCurrent = current ? current.previousSibling : items[items.length - 1];\n                } else if (keyCode == KEYS.RIGHT) {\n                    newCurrent = current ? current.nextSibling : items[0];\n                } else if (keyCode == KEYS.DOWN) {\n                    newCurrent = current ? (current.parentNode.nextSibling ? current.parentNode.nextSibling.children[index] : null) : items[0];\n                } else if (keyCode == KEYS.UP) {\n                    newCurrent = current ? (current.parentNode.previousSibling ? current.parentNode.previousSibling.children[index] : null) : items.get[items.length - 1];\n                } else if (keyCode == KEYS.ENTER) {\n                    preventDefault(e);\n                    if (current) {\n                        this._select(current);\n                        this.trigger(\"forceSelect\", { value: this.value() });\n                        return;\n                    }\n                } else if (keyCode == KEYS.ESC) {\n                    this._cancel();\n                }\n\n                if (newCurrent && newCurrent.nodeType !== 1) {\n                    newCurrent = null;\n                }\n\n                if (newCurrent) {\n                    preventDefault(e);\n\n                    this._current(newCurrent);\n                }\n            },\n            _onEnable: function(enable) {\n                if (this.options._standalone) {\n                    if (enable) {\n                        this.wrapper.attr(\"tabindex\", this._tabIndex);\n                        this.wrapper.removeAttr(\"aria-disabled\");\n                    } else {\n                        this.wrapper.removeAttr(\"tabindex\");\n                        this.wrapper.attr(\"aria-disabled\", true);\n                    }\n                }\n            },\n            _select: function(item) {\n                var that = this,\n                    items = that.wrapper.find(DOT + TILE_CLASS);\n\n                item = $(item);\n\n                ColorSelector.fn._select.call(that, item.css(BACKGROUNDCOLOR));\n\n                items.removeClass(ITEMSELECTEDCLASS).removeAttr(\"aria-selected\");\n                item.addClass(ITEMSELECTEDCLASS).attr(\"aria-selected\", true);\n            },\n            _template: kendo.template(({colors, columns, tileSize, value, id}) => {\n                let startPart = '<table class=\"k-colorpalette-table\" role=\"presentation\"><tr role=\"row\">';\n\n                let cellElements = \"\";\n                for (var i = 0; i < colors.length; ++i) {\n                    let selected = colors[i].equals(value);\n                    if (i && i % columns == 0) {\n                        cellElements += '</tr><tr role=\"row\">';\n                    }\n\n                    cellElements +=\n                    `<td role=\"gridcell\" unselectable=\"on\" ${kendo.attr(\"style-background-color\")}=\"${colors[i].toCss()}\"` +\n                        `${selected ? \" aria-selected=true\" : \"\"} ` +\n                        `${(id && i === 0) ? 'id=\\\\\"' + id + '\\\\\" ' : '' } ` +\n\n                        `class=\"k-colorpalette-tile${selected ? \" \" + ITEMSELECTEDCLASS : \"\"}\" ` +\n                        `aria-label=\"${colors[i].toCss()}\"></td>`;\n                }\n\n                let endPart = '</tr></table>';\n                return startPart + cellElements + endPart;\n            }),\n            _tileSize: function() {\n                var tileSize = this.options.tileSize,\n                    width, height;\n\n                if (tileSize) {\n                    if (/number|string/.test(typeof tileSize)) {\n                        width = height = parseFloat(tileSize);\n                    } else if (typeof tileSize == \"object\") {\n                        width = parseFloat(tileSize.width);\n                        height = parseFloat(tileSize.height);\n                    } else {\n                        throw new Error(\"Unsupported value for the 'tileSize' argument\");\n                    }\n                    this.wrapper.find(DOT + TILE_CLASS).css({ width: width, height: height });\n                }\n            },\n            _updateUI: function(color) {\n                var item = null,\n                    items = this.wrapper.find(DOT + TILE_CLASS);\n\n                this.wrapper.find(DOT + TILE_CLASS).each(function(){\n                    var c = parseColor($(this).css(BACKGROUNDCOLOR));\n\n                    if (c && c.equals(color)) {\n                        item = this;\n\n                        return false;\n                    }\n                });\n\n                this._current(item);\n\n                items.removeClass(ITEMSELECTEDCLASS);\n\n                if (item) {\n                    $(item).addClass(ITEMSELECTEDCLASS);\n                    this.wrapper.attr(\"aria-label\", this._ariaTemplate(this.value() || \"\"));\n                }\n            },\n            _wrapper: function() {\n                var options = this.options,\n                    colors = this._colors(),\n                    wrapper,\n                    templateElement;\n\n                if (this.element.is(\"input\")) {\n                    wrapper = this.element.addClass(\"k-hidden\").wrap(\"<div>\").parent();\n                } else {\n                    wrapper = this.element;\n                }\n\n                templateElement = $(this._template({\n                    colors: colors,\n                    columns: options.columns,\n                    tileSize: options.tileSize,\n                    value: this._value,\n                    id: options.ariaId\n                }));\n\n                kendo.applyStylesFromKendoAttributes(templateElement, [\"background-color\"]);\n                wrapper.addClass(\"k-colorpalette\")\n                    .attr(\"role\", \"grid\")\n                    .append(templateElement)\n                    .attr(\"tabindex\", this._tabIndex);\n\n                this.wrapper = wrapper;\n                this._tileSize();\n            }\n        });\n\n\n        ui.plugin(ColorPalette);\n\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1){\n        // WARNING: removing the following jshint declaration and turning\n        // == into === to make JSHint happy will break functionality.\n\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            html = kendo.html,\n            Color = kendo.Color,\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n            BACKGROUNDCOLOR = \"background-color\",\n            MESSAGES = {\n                apply  : \"Apply\",\n                cancel : \"Cancel\",\n                noColor: \"no color\",\n                clearColor: \"Clear color\",\n                previewInput: null,\n                contrastRatio: \"Contrast ratio:\",\n                fail: \"Fail\",\n                pass: \"Pass\",\n                hex: \"HEX\",\n                toggleFormat: \"Toggle format\",\n                red: \"Red\",\n                green: \"Green\",\n                blue: \"Blue\",\n                alpha: \"Alpha\",\n                gradient: \"Gradient view\",\n                palette: \"Palette view\"\n            },\n            NS = \".kendoColorTools\",\n            CLICK_NS = \"click\" + NS,\n            KEYDOWN_NS = \"keydown\" + NS,\n            ColorSelector = ui.colorpicker.ColorSelector,\n            KEYS = kendo.keys,\n\n            NO_COLOR = \"k-no-color\",\n            SELECTED = \"k-selected\",\n            PREVIEW_MASK = \".k-color-preview-mask\",\n\n            ARIA_PRESSED = \"aria-pressed\",\n            ARIA_DISABLED = \"aria-disabled\",\n\n            VIEWS = {\n                \"gradient\": ui.ColorGradient,\n                \"palette\": ui.ColorPalette\n            };\n\n        function bind(callback, obj) {\n            return function() {\n                return callback.apply(obj, arguments);\n            };\n        }\n\n        var FlatColorPicker = ColorSelector.extend({\n            init: function(element, options) {\n                var that = this;\n\n                if (options && options.autoupdate === false) {\n                    options._standalone = false;\n                }\n\n                ColorSelector.fn.init.call(that, element, options);\n                options = that.options = kendo.deepExtend({}, that.options, options);\n                element = that.element;\n\n                that._wrapper();\n\n                var value = that.color();\n\n                that._changeView(options.view);\n\n                that._setViewSize();\n\n                if (value) {\n                    that._updateUI(value);\n                    that._previousColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, value.toDisplay());\n                    that._selectedColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, value.toDisplay());\n                } else {\n                    that._selectedColor.addClass(NO_COLOR);\n                    that._previousColor.addClass(NO_COLOR);\n                }\n\n                that._attachEvents();\n                that._navigation();\n            },\n            destroy: function() {\n                var that = this;\n\n                ColorSelector.fn.destroy.call(this);\n\n                if (that._view) {\n                    that._view.destroy();\n                    that._viewsContainer.empty();\n                }\n\n                that.element.off(NS);\n\n                that._selectedColor = that._previousColor = that._viewsContainer = that._view = null;\n            },\n            options: {\n                name: \"FlatColorPicker\",\n                opacity: false,\n                buttons: false,\n                input: true,\n                preview: true,\n                clearButton: false,\n                format: \"hex\",\n                formats: [\"rgb\", \"hex\"],\n                view: \"gradient\",\n                views: [\"gradient\", \"palette\"],\n                palette: null,\n                autoupdate : true,\n                backgroundColor: null,\n                columns: 10,\n                tileSize: 24,\n                messages   : MESSAGES,\n                size: \"medium\", // Fake styling option to accomplish colorpicker's size for textbox and button\n                _otOfPicker: true\n            },\n            setBackgroundColor: function (color) {\n                var that = this;\n\n                if(that._view && that._view.setBackgroundColor) {\n                    that._view.setBackgroundColor(color);\n                }\n            },\n            _attachEvents: function() {\n                var that = this;\n\n                that.wrapper\n                    .on(KEYDOWN_NS, bind(that._keydown, that))\n                    .on(CLICK_NS, \".k-button[data-command]\", function () {\n                        that._clearColor = true;\n                        that._updateUI(null);\n                        that._view.value(null);\n                    })\n                    .on(CLICK_NS, \".k-coloreditor-apply\", function(){\n                        if(that._clearColor) {\n                            that._select(null);\n                        } else {\n                            that._select(that._view.color());\n                        }\n                    })\n                    .on(CLICK_NS, \".k-coloreditor-cancel\", function(){\n                        delete that._clearColor;\n                        that._updateUI(that.color());\n                        that._cancel();\n                    })\n                    .on(CLICK_NS, \".k-button[data-view]\", function(ev){\n                        var viewButton =  $(ev.target).closest(\"[data-view]\");\n\n                        if(viewButton.is(\".\" + SELECTED)) {\n                            return;\n                        }\n\n                        that.wrapper.find(\".k-button[data-view]\").removeClass(SELECTED).attr(ARIA_PRESSED, false);\n                        viewButton.addClass(SELECTED).attr(ARIA_PRESSED, true);\n                        that._changeView(viewButton.data(\"view\"));\n                    });\n            },\n            _select: function(value) {\n                var that = this;\n\n                ColorSelector.fn._select.call(that, value);\n\n                that._updatePreviousColor(value);\n            },\n            _updatePreviousColor: function (value) {\n                var that = this;\n\n                if (value) {\n                    that._previousColor.removeClass(NO_COLOR);\n                    that._previousColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, value.toDisplay());\n                } else {\n                    that._previousColor.addClass(NO_COLOR);\n                    that._previousColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, \"\");\n                }\n            },\n            _changeView: function (mode) {\n                var that = this,\n                    options = $.extend({}, that.options),\n                    selector =  VIEWS[mode],\n                    selectedColor, hsvColor;\n\n                if(that._view && that._view._colorInput) {\n                    that.options.format = that._view._colorInput._viewModel.format;\n                }\n\n                that.options.view = mode;\n\n                delete options.name;\n                delete options.change;\n                delete options.select;\n                delete options.cancel;\n                delete options._standalone;\n\n                if (that._view) {\n                    selectedColor = that._view.color();\n                    that._view.destroy();\n                    that._viewsContainer.empty();\n                }\n\n                if (selectedColor) {\n                    selectedColor = selectedColor.toHSV();\n                    hsvColor = Color.fromHSV(that._cachedHue || 0, selectedColor.s, selectedColor.v, selectedColor.a);\n                    that._cachedHue = selectedColor.toHSV().h;\n                    selectedColor = selectedColor.equals(hsvColor) ? hsvColor : selectedColor;\n                }\n\n                options._otOfPicker = false;\n\n                if (selector) {\n                    that._view = new VIEWS[mode]($(\"<div></div>\").appendTo(that._viewsContainer), options);\n                    that._view.value(selectedColor);\n\n                    that._view.bind(\"change\", function (ev) {\n                        delete that._clearColor;\n                        that._updateUI(ev.sender.color(), true);\n                    });\n\n                    that._view.bind(\"forceSelect\", function (ev) {\n                        delete that._clearColor;\n                        that._select(ev.sender.color());\n                    });\n                }\n            },\n            _onEnable: function(enable) {\n                var that = this;\n\n                if (that._view) {\n                    that._view._onEnable(enable);\n                }\n\n                if (that.options._standalone) {\n                    if (enable) {\n                        that.wrapper.removeAttr(ARIA_DISABLED);\n                    } else {\n                        that.wrapper.attr(ARIA_DISABLED, true);\n                    }\n                }\n            },\n            focus: function() {\n                var that = this;\n\n                if (that._view) {\n                    that._view.focus();\n                }\n            },\n            _updateUI: function(color, dontChangeView) {\n                var that = this;\n\n                if (color && color.toDisplay) {\n                    that._selectedColor.removeClass(NO_COLOR);\n                    that._selectedColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, color.toDisplay());\n                } else {\n                    that._selectedColor.addClass(NO_COLOR);\n                    that._selectedColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, \"\");\n                }\n\n                that._triggerSelect(color);\n\n                if (that.options.autoupdate) {\n                    that._updatePreviousColor(color);\n                }\n\n                if(!dontChangeView) {\n                    that._view.value(color);\n                }\n            },\n            _setViewSize: function() {\n                var that = this,\n                    wrapper = that.wrapper[0],\n                    previewWidth = parseInt((that.options.tileSize.width || that.options.tileSize), 10),\n                    previewHeight = parseInt((that.options.tileSize.width || that.options.tileSize), 10),\n                    previewColumns = that.options.columns;\n\n                wrapper.style.setProperty(\"--kendo-color-preview-columns\", previewColumns);\n                wrapper.style.setProperty(\"--kendo-color-preview-width\", previewWidth + \"px\");\n                wrapper.style.setProperty(\"--kendo-color-preview-height\", previewHeight + \"px\");\n            },\n            _keydown: function(e) {\n                if (e.keyCode == KEYS.ESC) {\n                    this._cancel();\n                }\n            },\n            _template: function () {\n                var that = this,\n                    options = that.options,\n                    buttonOptions = extend({}, options, {\n                        fillMode: \"flat\",\n                        themeColor: \"base\",\n                        rounded: \"medium\"\n                    });\n\n                return kendo.template((options, buttonOptions) =>\n                        '<div class=\"k-coloreditor-header k-hstack\">' +\n                            ((options.views && options.views.length > 1) ?\n                            '<div class=\"k-coloreditor-header-actions k-hstack\">' +\n                                '<div role=\"group\" class=\"k-button-group k-button-group-flat\">' +\n                                    html.renderButton(`<button aria-pressed=\"false\" data-view=\"gradient\" title=\"${encode(options.messages.gradient)}\"></button>`, extend({ icon: \"droplet-slider\" }, buttonOptions)) +\n                                    html.renderButton(`<button aria-pressed=\"false\" data-view=\"palette\" title=\"${encode(options.messages.palette)}\"></button>`, extend({ icon: \"palette\" }, buttonOptions)) +\n                                '</div>' +\n                            '</div>'\n                            : '') +\n                            '<div class=\"k-spacer\"></div>' +\n                            '<div class=\"k-coloreditor-header-actions k-hstack\">' +\n                                (options.clearButton ?\n                                html.renderButton(`<button data-command=\"reset\" title=\"${encode(options.messages.clearColor)}\"></button>`, extend({ icon: \"droplet-slash\" }, buttonOptions))\n                                : '') +\n                                (options.preview ?\n                                '<div class=\"k-coloreditor-preview k-vstack\">' +\n                                    '<span class=\"k-coloreditor-preview-color k-color-preview\">' +\n                                        '<span class=\"k-color-preview-mask\"></span>' +\n                                    '</span>' +\n                                    '<span class=\"k-coloreditor-current-color k-color-preview\">' +\n                                        '<span class=\"k-color-preview-mask\"></span>' +\n                                    '</span>' +\n                                '</div>'\n                                : '') +\n                            '</div>' +\n                        '</div>' +\n                        '<div class=\"k-coloreditor-views k-vstack\"></div>' +\n                        (options.buttons ?\n                        '<div class=\"k-coloreditor-footer k-actions k-actions-end k-actions-horizontal\">' +\n                            html.renderButton(`<button class=\"k-coloreditor-cancel\" title=\"${encode(options.messages.cancel)}\">${encode(options.messages.cancel)}</button>`, extend({}, buttonOptions, { fillMode: \"solid\" })) +\n                            html.renderButton(`<button class=\"k-coloreditor-apply\" title=\"${encode(options.messages.apply)}\">${encode(options.messages.apply)}</button>`, extend({}, buttonOptions, { fillMode: \"solid\", themeColor: \"primary\" })) +\n                        '</div>'\n                        : '')\n                    )(options, buttonOptions);\n            },\n            _wrapper: function() {\n                var options = this.options,\n                    wrapper;\n\n                if (this.element.is(\"input\")) {\n                    wrapper = this.element.addClass(\"k-hidden\").wrap(\"<div>\").parent();\n                } else {\n                    wrapper = this.element;\n                }\n\n                wrapper.addClass(\"k-flatcolorpicker k-coloreditor\")\n                    .attr({\n                        \"role\": \"textbox\",\n                        \"aria-keyshortcuts\": \"Enter\"\n                    })\n                    .append(this._template());\n\n                this._selectedColor = $(\".k-coloreditor-preview-color\", wrapper);\n                this._previousColor = $(\".k-coloreditor-current-color\", wrapper);\n                this._viewsContainer = $(\".k-coloreditor-views\", wrapper);\n\n                wrapper.find(\".k-button[data-view=\" + options.view + \"]\").addClass(SELECTED).attr(ARIA_PRESSED, true);\n\n                this.wrapper = wrapper;\n            }\n        });\n\n        ui.plugin(FlatColorPicker);\n    })(window.kendo.jQuery);\n\n    var __meta__ = {\n        id: \"colorpicker\",\n        name: \"Color tools\",\n        category: \"web\",\n        description: \"Color selection widgets\",\n        depends: [ \"core\", \"color\", \"popup\", \"slider\", \"userevents\", \"button\", \"binder\", \"textbox\", \"numerictextbox\", \"html.button\" ]\n    };\n\n    (function($, undefined$1) {\n        // WARNING: removing the following jshint declaration and turning\n        // == into === to make JSHint happy will break functionality.\n\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            Color = kendo.Color,\n            parseColor = kendo.parseColor,\n            KEYS = kendo.keys,\n            BACKGROUNDCOLOR = \"background-color\",\n            MESSAGES = {\n                apply: \"Apply\",\n                cancel: \"Cancel\",\n                noColor: \"no color\",\n                clearColor: \"Clear color\",\n                previewInput: null,\n                contrastRatio: \"Contrast ratio:\",\n                fail: \"Fail\",\n                pass: \"Pass\",\n                hex: \"HEX\",\n                toggleFormat: \"Toggle format\",\n                red: \"Red\",\n                green: \"Green\",\n                blue: \"Blue\",\n                alpha: \"Alpha\",\n                gradient: \"Gradient view\",\n                palette: \"Palette view\"\n            },\n            NS = \".kendoColorTools\",\n            CLICK_NS = \"click\" + NS,\n            KEYDOWN_NS = \"keydown\" + NS,\n            ColorSelector = ui.colorpicker.ColorSelector,\n            FlatColorPicker = ui.FlatColorPicker;\n\n        /* -----[ The ColorPicker widget ]----- */\n\n        var ColorPicker = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                // Legacy support for the cases where only palette is defined\n                if (options && options.palette && !options.view) {\n                    options.view = \"palette\";\n                }\n\n                Widget.fn.init.call(that, element, options);\n                options = that.options = kendo.deepExtend({}, that.options, options);\n                element = that.element;\n\n                let value = parseColor(options.value || element.attr(\"value\") || element.val(), true);\n                that._value = options.value = value;\n\n                var _buttonHtml = kendo.html.renderButton('<button class=\"k-input-button\" unselectable=\"on\" aria-label=\"select\" tabindex=\"-1\"></button>', $.extend({}, that.options, {\n                    icon: \"caret-alt-down\"\n                }));\n\n                var content = that._inputWrapper = that.wrapper = $(that._template($.extend({}, that.options, {\n                    _buttonHtml: _buttonHtml\n                })));\n\n                that._applyCssClasses();\n                element.hide().after(content);\n\n                if (element.is(\"input\")) {\n                    element.appendTo(content);\n                    that._preventDefaultLabelClick();\n                }\n\n                that._tabIndex = element.attr(\"tabIndex\") || 0;\n\n                that.enable(!element.attr(\"disabled\"));\n\n                var accesskey = element.attr(\"accesskey\");\n                if (accesskey) {\n                    element.attr(\"accesskey\", null);\n                    content.attr(\"accesskey\", accesskey);\n                }\n\n                that.bind(\"activate\", function(ev) {\n                    if (!ev.isDefaultPrevented()) {\n                        that.toggle();\n                    }\n                });\n\n                that._updateUI(value);\n            },\n            destroy: function() {\n                this.wrapper.off(NS).find(\"*\").off(NS);\n                if (this._popup) {\n                    this._selector.destroy();\n                    this._popup.destroy();\n                }\n                this._selector = this._popup = this.wrapper = null;\n                Widget.fn.destroy.call(this);\n            },\n            enable: function(enable) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    arrow = wrapper.find(\".k-input-button\");\n\n                if (arguments.length === 0) {\n                    enable = true;\n                }\n\n                that.element.attr(\"disabled\", !enable);\n                wrapper.attr(\"aria-disabled\", !enable);\n\n                arrow.off(NS).on(\"mousedown\" + NS, preventDefault);\n\n                wrapper.addClass(\"k-disabled\")\n                    .removeAttr(\"tabIndex\")\n                    .add(\"*\", wrapper).off(NS);\n\n                if (enable) {\n                    wrapper.removeClass(\"k-disabled\")\n                        .attr(\"tabIndex\", that._tabIndex)\n                        .on(\"mouseenter\" + NS, function() { wrapper.addClass(\"k-hover\"); })\n                        .on(\"mouseleave\" + NS, function() { wrapper.removeClass(\"k-hover\"); })\n                        .on(\"focus\" + NS, function() { wrapper.addClass(\"k-focus\"); })\n                        .on(\"blur\" + NS, function() { wrapper.removeClass(\"k-focus\"); })\n                        .on(KEYDOWN_NS, bind(that._keydown, that))\n                        .on(CLICK_NS, \".k-input-button\", bind(that.toggle, that))\n                        .on(CLICK_NS, \".k-input-inner\", function() {\n                            that.trigger(\"activate\");\n                        });\n                } else {\n                    that.close();\n                }\n            },\n\n            _template: kendo.template(({ toolIcon, _buttonHtml }) =>\n               '<span role=\"combobox\" aria-haspopup=\"dialog\" aria-expanded=\"false\" class=\"k-colorpicker k-picker k-icon-picker\">' +\n                    '<span class=\"k-input-inner\">' +\n                        `<span class=\"k-value-icon k-color-preview ${toolIcon ? 'k-icon-color-preview' : ''}\">` +\n                            (toolIcon ? kendo.ui.icon({ icon: toolIcon, iconClass: \"k-color-preview-icon\" }) : '') +\n                            '<span class=\"k-color-preview-mask\"></span>' +\n                        '</span>' +\n                    '</span >' +\n                    _buttonHtml +\n                '</span>'\n            ),\n\n            options: {\n                name: \"ColorPicker\",\n                closeOnSelect: false,\n                contrastTool: false,\n                palette: null,\n                columns: 10,\n                toolIcon: null,\n                value: null,\n                messages: MESSAGES,\n                opacity: false,\n                buttons: true,\n                preview: true,\n                clearButton: false,\n                input: true,\n                format: \"hex\",\n                formats: [\"rgb\", \"hex\"],\n                view: \"gradient\",\n                views: [\"gradient\", \"palette\"],\n                backgroundColor: null,\n                ARIATemplate: (data) => `Current selected color is ${data || \"none\"}`,\n                size: \"medium\",\n                rounded: \"medium\",\n                fillMode: \"solid\"\n            },\n\n            events: [ \"activate\", \"change\", \"select\", \"open\", \"close\" ],\n\n            open: function() {\n                if (!this.element.prop(\"disabled\")) {\n                    this._getPopup().open();\n                }\n            },\n            close: function() {\n                var selOptions = (this._selector && this._selector.options) || {};\n                selOptions._closing = true;\n                this._getPopup().close();\n\n                delete selOptions._closing;\n            },\n            toggle: function() {\n                if (!this.element.prop(\"disabled\")) {\n                    this._getPopup().toggle();\n                }\n            },\n            setBackgroundColor: function(color) {\n                var that = this,\n                    handler = function() { that._selector.setBackgroundColor(color); };\n\n                that.options.contrastTool.backgroundColor = color;\n\n                if (that._selector && (that._popup && that._popup.visible())) {\n                    that._selector.setBackgroundColor(color);\n                } else if (that._popup) {\n                    that._popup.unbind(\"activate\", handler);\n                    that._popup.bind(\"activate\", handler);\n                }\n            },\n            _noColorIcon: function() {\n                return this.wrapper.find(\".k-color-preview\");\n            },\n            color: ColorSelector.fn.color,\n            value: ColorSelector.fn.value,\n            _select: ColorSelector.fn._select,\n            _triggerSelect: ColorSelector.fn._triggerSelect,\n            _isInputTypeColor: ColorSelector.fn._isInputTypeColor,\n\n            _preventDefaultLabelClick: function() {\n                // if there exists a <label> associated with this\n                // input field, we must catch clicks on it to prevent\n                // the built-in color picker from showing up.\n                // https://github.com/telerik/kendo-ui-core/issues/292\n                var that = this,\n                    element = that.element,\n                    label = element.closest(\"label\"),\n                    id = element.attr(\"id\");\n\n                if (id) {\n                    label = label.add('label[for=\"' + id + '\"]');\n                }\n                label.on(\"click\", function(ev) {\n                    that.open();\n                    ev.preventDefault();\n                });\n            },\n\n            _updateUI: function(value, dontChangeSelector) {\n                this._updateInput(value);\n                this._triggerSelect(value);\n\n                this.wrapper.find(\".k-color-preview-mask\").css(\n                    BACKGROUNDCOLOR,\n                    value ? value.toDisplay() : \"\"\n                );\n\n                this._noColorIcon().toggleClass(\"k-no-color\", !value);\n\n                if (this._selector && !dontChangeSelector) {\n                    this._selector.value(value);\n                }\n            },\n            _updateInput: function(value) {\n                var formattedValue = \"\";\n\n                if (value) {\n                    if (this._isInputTypeColor() || value.a == 1) {\n                        // seems that input type=\"color\" doesn't support opacity\n                        // in colors; the only accepted format is hex #RRGGBB\n                        formattedValue = value.toCss();\n                    } else {\n                        formattedValue = value.toCssRgba();\n                    }\n\n                    this.element.val(formattedValue);\n                }\n\n                if (!this._ariaTemplate) {\n                    this._ariaTemplate = kendo.template(this.options.ARIATemplate);\n                }\n\n                this.wrapper.attr(\"aria-label\", this._ariaTemplate(formattedValue));\n            },\n            _keydown: function(ev) {\n                var key = ev.keyCode;\n                if (this._getPopup().visible()) {\n                    if (key == KEYS.ESC) {\n                        this._selector._cancel();\n                    } else {\n                        this._selector._keydown(ev);\n                    }\n                    preventDefault(ev);\n                }\n                else if (key == KEYS.ENTER || key == KEYS.DOWN) {\n                    this.open();\n                    preventDefault(ev);\n                }\n            },\n            _getPopup: function() {\n                var that = this, popup = that._popup;\n\n                if (!popup) {\n                    var options = that.options;\n                    var selectorType;\n\n                    selectorType = FlatColorPicker;\n\n                    options.autoupdate = options.buttons !== true;\n                    delete options.select;\n                    delete options.change;\n                    delete options.cancel;\n\n                    options._otOfPicker = false;\n\n                    var id = kendo.guid();\n\n                    var selectorWrapper = $('<div id=\"' + id + '\" class=\"k-colorpicker-popup\"></div>').appendTo(document.body);\n                    var selector = that._selector = new selectorType($('<div></div>').appendTo(selectorWrapper), options);\n\n                    that.wrapper.attr(\"aria-controls\", id);\n\n                    that._popup = popup = selectorWrapper.kendoPopup({\n                        anchor: that.wrapper,\n                        adjustSize: { width: 5, height: 0 }\n                    }).data(\"kendoPopup\");\n\n                    selector.bind({\n                        select: function(ev) {\n                            that._updateUI(parseColor(ev.value), true);\n                        },\n                        change: function(ev) {\n                            if (that.options.buttons) {\n                                that._select(selector.color());\n                            } else {\n                                that._updateUI(parseColor(ev.value), true);\n                            }\n\n                            if (that.options.buttons || (that._selector.options.view === \"palette\" && that.options.closeOnSelect)) {\n                                that.close();\n                            }\n                        },\n                        cancel: function() {\n                            that.close();\n                        }\n                    });\n                    popup.bind({\n                        close: function(ev) {\n                            if (that.trigger(\"close\")) {\n                                ev.preventDefault();\n                                return;\n                            }\n                            that.wrapper.removeClass(\"k-focus\");\n\n                            var color = selector.color();\n\n                            if (!that.options.buttons) {\n                                that._select(color);\n                            } else {\n                                that._select(that.color());\n                            }\n\n                            color = that.color();\n\n                            if (color && color.h) {\n                                that._cachedHue = color.h;\n                            }\n\n                            var clickedOutside = event &&\n                                event instanceof MouseEvent &&\n                                $(event.target).parents(\".k-colorpicker-popup\").length === 0;\n\n                            if (!clickedOutside) {\n                                setTimeout(function() {\n                                    if (that.wrapper && !that.wrapper.is(\"[unselectable='on']\")) {\n                                        that.wrapper.trigger(\"focus\");\n                                    }\n                                }, 0);\n                            }\n\n                            that.wrapper.attr(\"aria-expanded\", false);\n                        },\n                        open: function(ev) {\n                            if (that.trigger(\"open\")) {\n                                ev.preventDefault();\n                            } else {\n                                that.wrapper.addClass(\"k-focus\");\n                                that.wrapper.attr(\"aria-expanded\", true);\n                            }\n                        },\n                        activate: function() {\n                            var hsvColor,\n                                selectedColor = that.color();\n\n                            if (selectedColor) {\n                                selectedColor = selectedColor.toHSV();\n                                hsvColor = Color.fromHSV(that._cachedHue || 0, selectedColor.s, selectedColor.v, selectedColor.a);\n                                selectedColor = selectedColor.equals(hsvColor) ? hsvColor : selectedColor;\n                            }\n\n                            selector.value(selectedColor);\n                            selector.focus();\n                            that.wrapper.addClass(\"k-focus\");\n                        }\n                    });\n                }\n                return popup;\n            }\n        });\n\n        function preventDefault(ev) { ev.preventDefault(); }\n\n        function bind(callback, obj) {\n            return function() {\n                return callback.apply(obj, arguments);\n            };\n        }\n\n        ui.plugin(ColorPicker);\n\n        kendo.cssProperties.registerPrefix(\"ColorPicker\", \"k-picker-\");\n\n        kendo.cssProperties.registerValues(\"ColorPicker\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}