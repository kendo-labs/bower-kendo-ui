{"version":3,"sources":["raw-js/kendo.colorpicker.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendocolorpicker","js","this","$","undefined$1","kendo","window","ui","Widget","parseColor","TabKeyTrap","Popup","extend","NS","KEYDOWN_NS","ColorSelector","init","element","options","that","fn","call","is","_initialValue","_preventDefaultLabelClick","_value","value","_tabIndex","attr","_standalone","_triggerSelect","_triggerChange","name","ARIATemplate","data","events","color","_updateInput","_updateUI","opacity","toCssRgba","toCss","enable","arguments","length","wrapper","toggleClass","_onEnable","_attachFocusEvents","on","_navKeydown","bind","_navFocusout","val","_innerTabindex","find","_isInputTypeColor","el","test","tagName","type","setTimeout","contains","document","activeElement","_releaseInnerFocus","e","keyCode","keys","ENTER","preventDefault","_trapInnerFocus","ESC","trigger","_tabKeyTrap","removeTrap","_select","nohooks","prev","equals","_navigation","indexOf","replace","_otOfPicker","_ariaTemplate","template","tabindex","removeAttr","trap","triggerEvent","destroy","off","label","closest","id","add","ev","noop","valueForLabel","formattedValue","a","_selectOnHide","_cancel","colorpicker","jQuery","Color","getContrastFromTwoRGBAs","b","luminance1","getLuminance","getRGBFromRGBA","luminance2","r","g","Math","max","min","rgb","map","v","pow","foregroundColor","backgroundColor","r1","fitIntoBounds","g1","b1","a1","r2","g2","b2","round","contender","isNaN","svgPath","points","command","d","reduce","acc","point","i","format","line","pointA","pointB","lengthX","lengthY","sqrt","angle","atan2","contrastToolUtils","renderSvgCurveLine","gradientRectMetrics","hsva","controlPointCalc","lineCalc","findValue","contrast","saturation","low","high","comparer","mid","currentHsva","s","width","height","currentContrast","hue","h","alpha","fromHSV","getColorFromHSV","toBytes","reversedComparer","getPaths","stepCount","reversed","push","bezierCommandCalc","current","previous","next","reverse","smooth","l","PI","cos","sin","cps","cpe","paths","Observable","encode","htmlEncode","KEYS","WHITE","BLACK","ColorInput","_viewModel","observable","switchMode","keydown","isHEXMode","get","isRGBMode","formats","hex","_changeHandler","change","_render","_template","ns","optionsSize","size","optionsTabIndex","vStackElement","messages","toggleFormat","hexInputElement","optionsMessagesHex","_showAdaptiveView","rgbaInputElement","red","green","blue","unbind","field","_color","_tryParseColor","set","sender","_preventChangeEvent","textbox","target","_change","reset","model","currentFormat","index","append","guid","parent","error","ColorGradient","deepExtend","previewInput","_wrapper","_sliders","_hsvArea","_gradientInputs","hsvDragARIATemplate","input","contrastTool","contrastRatio","fail","pass","focus","_hsvHandle","setBackgroundColor","isPlainObject","_updateColorContrast","_getHSV","rect","_hsvRect","handlePosition","position","_hueSlider","left","top","_opacitySlider","toHSV","_colorgradientInputs","_colorInput","callback","obj","hsvRect","hsvHandle","_hsvKeydown","apply","update","x","y","resultX","resultY","offset","dx","dy","rw","rh","_svChange","_hsvDragAriaTemplate","_hsvEvents","UserEvents","press","getOffset","location","start","addClass","move","end","removeClass","prop","c","shiftKey","LEFT","ctrlKey","RIGHT","UP","DOWN","F2","select","_reset","_resetHsv","_resetColorContrast","contrastOptions","_contrastTool","_updateHsv","hueSlider","opacitySlider","hueChange","slidersOrientation","opacityChange","kendoSlider","tickPlacement","showButtons","orientation","slide","contrastRatioTemplate","ratio","toString","icon","labelTemplate","limit","level","output","remove","_updateContrastSvg","newSvg","svgClassName","metrics","applyStylesFromKendoAttributes","css","_hueElements","_updateHsvAria","dontChangeInput","_addSizeClass","specificSize","sizeClass","wrap","role","_selectedColor","_colorAsText","plugin","DOT","BACKGROUNDCOLOR","ITEMSELECTEDCLASS","ITEMSFOCUSEDCLASS","TILE_CLASS","FOCUS_NS","CLICK_NS","BLUR_NS","ColorPalette","_selectedID","ariaId","_attachEvents","columns","tileSize","palette","currentTarget","_keydown","_focus","_colors","colors","split","Array","isArray","_current","item","first","newCurrent","currentParentSibling","items","filter","prototype","parentNode","children","previousSibling","nextSibling","nodeType","cellElements","selected","_tileSize","parseFloat","Error","each","templateElement","html","NO_COLOR","SELECTED","PREVIEW_MASK","ARIA_PRESSED","ARIA_DISABLED","VIEWS","gradient","FlatColorPicker","autoupdate","_changeView","view","_setViewSize","_previousColor","toDisplay","_view","_viewsContainer","empty","buttons","preview","clearButton","views","cancel","noColor","clearColor","_clearColor","viewButton","_updatePreviousColor","mode","selectedColor","hsvColor","selector","_cachedHue","appendTo","dontChangeView","previewWidth","parseInt","previewHeight","previewColumns","style","setProperty","buttonOptions","fillMode","themeColor","rounded","renderButton","ColorPicker","_buttonHtml","content","_inputWrapper","_applyCssClasses","hide","after","accesskey","isDefaultPrevented","toggle","_bindMediaQueries","_popup","_selector","arrow","close","_adaptiveView","fullscreen","_getPopup","_toggleAdaptiveModeSizeClasses","_toggleSizeClassesForElement","className","adaptiveSize","classes","flatColorPicker","colorGradient","colorPalette","adaptiveMode","largeMQL","mediaQuery","mediumMQL","smallMQL","onEnter","toolIcon","iconClass","closeOnSelect","adaptiveTitle","open","selOptions","_closing","handler","visible","_noColorIcon","dontChangeSelector","key","_actionFooterButtons","text","buttonsHtml","forEach","_actionSheetApply","_actionSheetCancel","popup","isAdaptive","selectorType","selectorWrapper","body","kendoActionSheet","adaptive","closeButton","hideOverflowContent","title","footerTemplate","_footer","kendoPopup","anchor","adjustSize","parentSelector","event","MouseEvent","parents","activate","selectorInstance","resize","resizeSliders","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","kendo$1","__meta__","category","description","depends","Object","defineProperty"],"mappings":"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","file":"kendo.colorpicker.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.color.js'), require('kendo.popup.js'), require('kendo.slider.js'), require('kendo.userevents.js'), require('kendo.button.js'), require('kendo.binder.js'), require('kendo.textbox.js'), require('kendo.numerictextbox.js'), require('kendo.html.button.js'), require('kendo.icons.js'), require('kendo.actionsheet.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.color', 'kendo.popup', 'kendo.slider', 'kendo.userevents', 'kendo.button', 'kendo.binder', 'kendo.textbox', 'kendo.numerictextbox', 'kendo.html.button', 'kendo.icons', 'kendo.actionsheet'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendocolorpicker = global.kendocolorpicker || {}, global.kendocolorpicker.js = {})));\n})(this, (function (exports) {\n    (function($, undefined$1) {\n        // WARNING: removing the following jshint declaration and turning\n        // == into === to make JSHint happy will break functionality.\n\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            parseColor = kendo.parseColor,\n            TabKeyTrap = kendo.ui.Popup.TabKeyTrap,\n\n            extend = $.extend,\n\n            NS = \".kendoColorTools\",\n            KEYDOWN_NS = \"keydown\" + NS,\n            DISABLED = \"k-disabled\";\n\n        var ColorSelector = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n                element = that.element;\n                options = that.options;\n\n                if (element.is(\"input\")) {\n                    that._initialValue();\n                    that._preventDefaultLabelClick();\n                } else {\n                    that._value = parseColor(options.value);\n                }\n\n                that._tabIndex = element.attr(\"tabIndex\") || 0;\n\n                if (options._standalone) {\n                    that._triggerSelect = that._triggerChange;\n                }\n            },\n            options: {\n                name: \"ColorSelector\",\n                ARIATemplate: (data) => `Current selected color is ${data || \"none\"}`,\n                value: null,\n                _standalone: true\n            },\n            events: [\n                \"change\",\n                \"select\",\n                \"forceSelect\",\n                \"cancel\"\n            ],\n            color: function(value) {\n                if (value !== undefined$1) {\n                    this._value = parseColor(value);\n\n                    if (this.element.is(\"input\")) {\n                        this._updateInput(this._value);\n                    }\n\n                    this._updateUI(this._value);\n                }\n\n                return this._value;\n            },\n            value: function(color) {\n                color = this.color(color);\n\n                if (color) {\n                    if (this.options.opacity) {\n                        color = color.toCssRgba();\n                    } else {\n                        color = color.toCss();\n                    }\n                }\n\n                return color || null;\n            },\n            enable: function(enable) {\n                if (arguments.length === 0) {\n                    enable = true;\n                }\n\n                if (this.element.is(\"input\")) {\n                    this.element.attr(\"disabled\", !enable);\n                }\n\n                this.wrapper.toggleClass(DISABLED, !enable);\n\n                this._onEnable(enable);\n            },\n            _attachFocusEvents: function () {\n                this.wrapper.on(KEYDOWN_NS, this._navKeydown.bind(this))\n                    .on(\"focusout\" + NS, this._navFocusout.bind(this));\n            },\n            _initialValue: function() {\n                var element = this.element,\n                    options = this.options,\n                    value = options.value || element.attr(\"value\");\n\n                if (value) {\n                    this._value = parseColor(value, true);\n                }\n\n                this.element.val(value);\n            },\n            _innerTabindex: function(value) {\n                var wrapper = this.wrapper;\n\n                wrapper.find(\".k-draghandle, .k-button, .k-input-inner\").attr(\"tabindex\", value);\n            },\n            _isInputTypeColor: function() {\n                var el = this.element[0];\n                return (/^input$/i).test(el.tagName) && (/^color$/i).test(el.type);\n            },\n            _navFocusout: function() {\n                var that = this,\n                    wrapper = that.wrapper[0];\n\n                setTimeout(function() {\n                    if (!wrapper.contains(document.activeElement)) {\n                        that._releaseInnerFocus();\n                    }\n                });\n            },\n            _navKeydown: function(e) {\n                var wrapper = this.wrapper;\n\n                if (e.keyCode === kendo.keys.ENTER && wrapper.attr(\"tabindex\")) {\n                    e.preventDefault();\n\n                    this._trapInnerFocus();\n                } else if (e.keyCode === kendo.keys.ESC && wrapper.attr(\"tabindex\") === undefined$1) {\n                    this._releaseInnerFocus();\n                    this.wrapper.trigger(\"focus\");\n                }\n            },\n            _releaseInnerFocus: function() {\n                this._tabKeyTrap.removeTrap();\n\n                if (this.wrapper) {\n                    this.wrapper.attr(\"tabindex\", this._tabIndex);\n                    this._innerTabindex(-1);\n                }\n            },\n            _select: function(color, nohooks) {\n                var prev = this._value;\n\n                color = this.color(color);\n\n                if (!nohooks) {\n                    if ((color && (!prev || !color.equals(prev))) || (color === null && color !== prev)) {\n                        if (color === null && this.element.val) {\n                            this.element.val(color);\n                        }\n\n                        this.element.trigger(\"change\");\n                        this.trigger(\"change\", { value: this.value() });\n                    } else if (!this._standalone) {\n                        this.trigger(\"cancel\");\n                    }\n                }\n            },\n            _navigation: function() {\n                var value = this.value();\n\n                if (value && value.indexOf(\"rgba\") > -1) {\n                    value = value.replace(\"rgba\", \"RGBA\");\n                };\n\n                if (this.options._otOfPicker) {\n                    this._innerTabindex(-1);\n                    this._attachFocusEvents();\n                    this._tabKeyTrap = new TabKeyTrap(this.wrapper);\n\n                    this._ariaTemplate = kendo.template(this.options.ARIATemplate);\n                    this.wrapper.attr({\n                        \"aria-label\": this._ariaTemplate(value || \"\"),\n                        tabindex: this._tabIndex\n                    });\n                } else {\n                    this.wrapper.removeAttr(\"tabindex\");\n                    this.wrapper.removeAttr(\"aria-label\");\n                    this.wrapper.removeAttr(\"role\");\n                    this.wrapper.removeAttr(\"aria-keyshortcuts\");\n                }\n            },\n            _trapInnerFocus: function() {\n                this._innerTabindex(0);\n                this.wrapper.removeAttr(\"tabindex\");\n                this.wrapper.find(\".k-hsv-draghandle\").trigger(\"focus\");\n                this._tabKeyTrap.trap();\n            },\n            _triggerSelect: function(color) {\n                triggerEvent(this, \"select\", color);\n            },\n            _triggerChange: function(color) {\n                triggerEvent(this, \"change\", color);\n            },\n            destroy: function() {\n                if (this.element) {\n                    this.element.off(NS);\n                }\n\n                if (this.wrapper) {\n                    this.wrapper.off(KEYDOWN_NS);\n                    this.wrapper.off(NS).find(\"*\").off(NS);\n                    this.wrapper = null;\n                }\n\n                Widget.fn.destroy.call(this);\n            },\n            _preventDefaultLabelClick: function() {\n                // if there exists a <label> associated with this\n                // input field, we must catch clicks on it to prevent\n                // the built-in color picker from showing up.\n                // https://github.com/telerik/kendo-ui-core/issues/292\n                var element = this.element,\n                    label = element.closest(\"label\"),\n                    id = element.attr(\"id\");\n\n                if (id) {\n                    label = label.add('label[for=\"' + id + '\"]');\n                }\n                label.on(\"click\", function(ev) {\n                    ev.preventDefault();\n                });\n            },\n            _updateUI: $.noop,\n            _updateInput: function(value) {\n                var formattedValue = \"\",\n                    valueForLabel;\n\n                if (value) {\n                    if (this._isInputTypeColor() || value.a == 1) {\n                        // seems that input type=\"color\" doesn't support opacity\n                        // in colors; the only accepted format is hex #RRGGBB\n                        formattedValue = value.toCss();\n                    } else {\n                        formattedValue = value.toCssRgba();\n                    }\n\n                    this.element.val(formattedValue);\n                }\n\n                if (this.options._otOfPicker) {\n                    if (!this._ariaTemplate) {\n                        this._ariaTemplate = kendo.template(this.options.ARIATemplate);\n                    }\n\n                    valueForLabel = this.value();\n\n                    if (valueForLabel && valueForLabel.indexOf(\"rgba\") > -1) {\n                        valueForLabel = valueForLabel.replace(\"rgba\", \"RGBA\");\n                    };\n\n                    this.wrapper.attr(\"aria-label\", this._ariaTemplate(valueForLabel || \"\"));\n                }\n            },\n            _selectOnHide: function() {\n                return null;\n            },\n            _cancel: function() {\n                this.trigger(\"cancel\");\n            }\n        });\n\n        function triggerEvent(self, type, color) {\n            color = parseColor(color);\n\n            if ((color && !color.equals(self.color())) || color !== self.color()) {\n                if (type == \"change\") {\n                    // UI is already updated.  setting _value directly\n                    // rather than calling self.color(color) to avoid an\n                    // endless loop.\n                    self._value = color;\n                    self._updateInput(self._value);\n                }\n                if (color && color.a != 1) {\n                    color = color.toCssRgba();\n                } else if (color) {\n                    color = color.toCss();\n                }\n\n                self.trigger(type, { value: color });\n            }\n        }\n\n        extend(ui, {\n            colorpicker: {\n                ColorSelector: ColorSelector\n            }\n        });\n\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1){\n        var colorpicker = kendo.ui.colorpicker,\n            extend = $.extend,\n            Color = kendo.Color,\n            parseColor = kendo.parseColor,\n\n            AA_CONTRAST = 4.5,\n            AAA_CONTRAST = 7,\n            STEP_COUNT = 16;\n\n        // Color utils - calc contrast\n\n        function getContrast(luminance1, luminance2) {\n            var brightest = Math.max(luminance1, luminance2);\n            var darkest = Math.min(luminance1, luminance2);\n            return (brightest + 0.05) / (darkest + 0.05);\n        }\n\n        function getContrastFromTwoRGBAs(a, b) {\n            return getContrast(\n                getLuminance(getRGBFromRGBA(a, b)),\n                getLuminance(getRGBFromRGBA(b, { r: 0, g: 0, b: 0, a: 1 })));\n        }\n\n        function getLuminance (rgb) {\n            var a = [rgb.r, rgb.g, rgb.b].map(function (v) {\n                v /= 255;\n                return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n            });\n            return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n        }\n\n        function getRGBFromRGBA(foregroundColor, backgroundColor) {\n            var r1 = fitIntoBounds(foregroundColor.r, 0, 255);\n            var g1 = fitIntoBounds(foregroundColor.g, 0, 255);\n            var b1 = fitIntoBounds(foregroundColor.b, 0, 255);\n            var a1 = fitIntoBounds(foregroundColor.a, 0, 1);\n\n            var r2 = fitIntoBounds(backgroundColor.r, 0, 255);\n            var g2 = fitIntoBounds(backgroundColor.g, 0, 255);\n            var b2 = fitIntoBounds(backgroundColor.b, 0, 255);\n\n            return {\n                r: Math.round(((1 - a1) * r2) + (a1 * r1)),\n                g: Math.round(((1 - a1) * g2) + (a1 * g1)),\n                b: Math.round(((1 - a1) * b2) + (a1 * b1))\n            };\n        }\n\n        function fitIntoBounds(contender, min, max) {\n            if (!isPresent(contender) || isNaN(contender)) {\n                return min;\n            }\n            let contenderMax = contender >= max ? max : contender;\n            return contender <= min ? min : contenderMax;\n        }\n\n        function isPresent(value) { return value !== null && value !== undefined$1; }\n\n\n        // Color utils - Contrast tool SVG path\n\n        function renderSvgCurveLine(gradientRectMetrics, hsva, backgroundColor) {\n            var findValue = function (contrast, saturation, low, high, comparer) {\n                var mid = (low + high) / 2;\n                var currentHsva = extend({}, hsva, { s: saturation / gradientRectMetrics.width, v: 1 - mid / gradientRectMetrics.height });\n                var currentContrast = getContrastFromTwoRGBAs(parseColor(getColorFromHSV(currentHsva)).toBytes(), parseColor(backgroundColor).toBytes());\n\n                if (low + 0.5 > high) {\n                    if (currentContrast < contrast + 1 && currentContrast > contrast - 1) {\n                        return mid;\n                    } else {\n                        return null;\n                    }\n                }\n\n                if (comparer(currentContrast, contrast)) {\n                    return findValue(contrast, saturation, low, high - (high - low) / 2, comparer);\n                }\n                return findValue(contrast, saturation, low + (high - low) / 2, high, comparer);\n            };\n\n            var comparer = function (a, b) {\n                return a > b;\n            };\n\n            var reversedComparer = function (a, b) {\n                return a < b;\n            };\n\n            var getPaths = function (contrast, stepCount, reversed) {\n                var points = [];\n                for (var i = 0; i <= gradientRectMetrics.width; i += gradientRectMetrics.width/stepCount) {\n                   var value = findValue(contrast, i, 0, gradientRectMetrics.height, reversed ? reversedComparer : comparer);\n                    if (value !== null){\n                        points.push([i, value]);\n                    }\n                }\n                return points;\n            };\n\n            var bezierCommandCalc = bezierCommand(controlPoint(line));\n            var paths = svgPath(getPaths(AA_CONTRAST, STEP_COUNT, false), bezierCommandCalc) +\n                    svgPath(getPaths(AA_CONTRAST, STEP_COUNT, true), bezierCommandCalc) +\n                    svgPath(getPaths(AAA_CONTRAST, STEP_COUNT, false), bezierCommandCalc) +\n                    svgPath(getPaths(AAA_CONTRAST, STEP_COUNT, true), bezierCommandCalc);\n\n            return `<svg xmlns=\"http://www.w3.org/2000/svg\" ${kendo.attr(\"style-position\")}=\"absolute\" ${kendo.attr(\"style-overflow\")}=\"visible\" ${kendo.attr(\"style-pointer-events\")}=\"none\" ` +\n                    `${kendo.attr(\"style-left\")}=\"0px\" ${kendo.attr(\"style-top\")}=\"0px\" ${kendo.attr(\"style-z-index\")}=\"3\" >` +\n                        paths  + '</svg>';\n        }\n\n        function svgPath(points, command) {\n            if (points.length === 0){\n                return '';\n            }\n\n            var reducer = function (acc, point, i, a) {\n                return i === 0 ?\n                    // if first point\n                    kendo.format(\"M {0},{1}\", point[0], point[1]) :\n                    // else\n                    kendo.format(\"{0} {1}\", acc, command(point, i, a));\n            };\n\n            // build the d attributes by looping over the points\n            var d = points.reduce(reducer, \"\");\n\n            return kendo.format('<path d=\"{0}\" fill=\"none\" stroke=\"white\" stroke-width=\"1\"/>', d);\n        }\n\n        function bezierCommand(controlPointCalc) {\n            return function(point, i, a) {\n                // start control point\n                var cps = controlPointCalc(a[i - 1], a[i - 2], point); // [cpsX, cpsY]\n\n                // end control point\n                var cpe = controlPointCalc(point, a[i - 1], a[i + 1], true); //  [cpeX, cpeY]\n\n                return kendo.format(\"C {0},{1} {2},{3} {4},{5}\", cps[0], cps[1], cpe[0], cpe[1], point[0], point[1]);\n            };\n        }\n\n        function controlPoint(lineCalc) {\n            return function (current, previous, next, reverse) {\n                // when 'current' is the first or last point of the array\n                // 'previous' and 'next' are undefined\n                // replace with 'current'\n                    var p = previous || current;\n                    var n = next || current;\n                    var smooth = 0.1;\n\n                    // properties of the line between previous and next\n                    var l = lineCalc(p, n);\n\n                    // If is end-control-point, add PI to the angle to go backward\n                    var angle = l.angle + (reverse ? Math.PI : 0);\n                    var length = l.length * smooth;\n\n                    // The control point position is relative to the current point\n                    var x = current[0] + Math.cos(angle) * length;\n                    var y = current[1] + Math.sin(angle) * length;\n\n                    return [x, y];\n            };\n        }\n\n        function line (pointA, pointB) {\n            var lengthX = pointB[0] - pointA[0];\n            var lengthY = pointB[1] - pointA[1];\n\n            return {\n                length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n                angle: Math.atan2(lengthY, lengthX)\n            };\n        }\n\n        function getColorFromHSV (hsva) {\n            var hue = fitIntoBounds(hsva.h, 0, 359.9);\n            var saturation = fitIntoBounds(hsva.s, 0, 1);\n            var value = fitIntoBounds(hsva.v, 0, 1);\n            var alpha = fitIntoBounds(hsva.a, 0, 1);\n\n            return Color.fromHSV(hue, saturation, value, alpha).toCssRgba();\n        }\n\n        extend(colorpicker, {\n            contrastToolUtils: {\n                getContrastFromTwoRGBAs: getContrastFromTwoRGBAs,\n                renderSvgCurveLine: renderSvgCurveLine\n            }\n        });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        // WARNING: removing the following jshint declaration and turning\n        // == into === to make JSHint happy will break functionality.\n\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Observable = kendo.Observable,\n            parseColor = kendo.parseColor,\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n            Color = kendo.Color,\n            KEYS = kendo.keys,\n            BACKGROUNDCOLOR = \"background-color\",\n            WHITE = \"#ffffff\",\n            BLACK = \"#000000\",\n            NS = \".kendoColorTools\",\n            KEYDOWN_NS = \"keydown\" + NS,\n            ColorSelector = ui.colorpicker.ColorSelector,\n\n            contrastToolUtils = ui.colorpicker.contrastToolUtils;\n\n        function preventDefault(ev) { ev.preventDefault(); }\n\n        function bind(callback, obj) {\n            return function() {\n                return callback.apply(obj, arguments);\n            };\n        }\n\n        var ColorInput = Observable.extend({\n            init: function(element, options) {\n                var that = this;\n\n                that.element = element;\n                that.options = options;\n\n                that._viewModel = kendo.observable({\n                    switchMode: that.switchMode.bind(that),\n                    keydown: that.keydown.bind(that),\n                    isHEXMode: function () { return this.get(\"format\") === 'hex' },\n                    isRGBMode: function () { return this.get(\"format\") === 'rgb' },\n                    format: options.format,\n                    formats: options.formats,\n                    rgb: null,\n                    hex: function () {\n                        return this.get(\"rgb\") !== null && this.get(\"rgb\").toCss({alpha: options.opacity});\n                    }\n                });\n\n                that._changeHandler = that.change.bind(that);\n\n                that._viewModel.bind(\"change\", that._changeHandler);\n\n                that._render();\n\n                that.element.on(KEYDOWN_NS, that.keydown.bind(that));\n\n                Observable.fn.init.call(that);\n            },\n            _template: kendo.template(({ options, ns }) => {\n                let optionsSize = encode(options.size);\n                let optionsTabIndex = encode(options.tabindex);\n\n                let vStackElement = \"\";\n                if (options.formats && options.formats.length > 1) {\n                    let optionsMessagesToggleFormat = encode(options.messages.toggleFormat);\n\n                    vStackElement =\n                    '<div class=\"k-vstack\">' +\n                        `<button class=\"k-colorgradient-toggle-mode\" data-${ns}role=\"button\" data-${ns}icon=\"caret-alt-expand\" data data-${ns}bind=\"click: switchMode\" data-${ns}fill-mode=\"flat\" data-${ns}size=\"${optionsSize}\" title=\"${optionsMessagesToggleFormat}\">` +\n                        '</button>' +\n                    '</div>';\n                }\n\n                // HEX input\n                let hexInputElement = \"\";\n                if (options.formats && options.formats.indexOf(\"hex\") >= 0) {\n                    let optionsMessagesHex = encode(options.messages.hex);\n\n                    hexInputElement =\n                    `<div class=\"k-vstack${options._showAdaptiveView ? \" k-flex-1\" : \"\"}\" data-${ns}bind=\"visible: isHEXMode\">` +\n                        `<input type=\"text\" data-${ns}bind=\"value: hex\" data-${ns}role=\"textbox\" data-${ns}size=\"${optionsSize}\" tabindex=\"${optionsTabIndex}\"  aria-label=\"${optionsMessagesHex}\"/>` +\n                        '<label class=\"k-colorgradient-input-label\">HEX</label>' +\n                    '</div>';\n                }\n\n                // RGBA input\n                let rgbaInputElement = \"\";\n                if (options.formats && options.formats.indexOf(\"rgb\") >= 0) {\n                    let optionsMessagesRed = encode(options.messages.red);\n                    let optionsMessagesGreen = encode(options.messages.green);\n                    let optionsMessagesBlue = encode(options.messages.blue);\n\n                    rgbaInputElement =\n                    `<div class=\"k-vstack\" data-${ns}bind=\"visible: isRGBMode\">` +\n                        `<input tabindex=\"${optionsTabIndex}\" data-${ns}bind=\"value: rgb.r\" data-${ns}role=\"numerictextbox\" data-${ns}size=\"${optionsSize}\" data-${ns}max=\"255\" data-${ns}min=\"0\" data-${ns}decimals=\"0\" data-${ns}spinners=\"false\" data-${ns}format=\"n0\" aria-label=\"${optionsMessagesRed}\" inputmode=\"decimal\"/>` +\n                        '<label class=\"k-colorgradient-input-label\">R</label>' +\n                    '</div>' +\n                    `<div class=\"k-vstack\" data-${ns}bind=\"visible: isRGBMode\">` +\n                        `<input tabindex=\"${optionsTabIndex}\" data-${ns}bind=\"value: rgb.g\" data-${ns}role=\"numerictextbox\" data-${ns}size=\"${optionsSize}\" data-${ns}max=\"255\" data-${ns}min=\"0\" data-${ns}decimals=\"0\" data-${ns}spinners=\"false\" data-${ns}format=\"n0\" aria-label=\"${optionsMessagesGreen}\" inputmode=\"decimal\"/>` +\n                        '<label class=\"k-colorgradient-input-label\">G</label>' +\n                    '</div>' +\n                    `<div class=\"k-vstack\" data-${ns}bind=\"visible: isRGBMode\">` +\n                        `<input tabindex=\"${optionsTabIndex}\" data-${ns}bind=\"value: rgb.b\" data-${ns}role=\"numerictextbox\" data-${ns}size=\"${optionsSize}\" data-${ns}max=\"255\" data-${ns}min=\"0\" data-${ns}decimals=\"0\" data-${ns}spinners=\"false\" data-${ns}format=\"n0\" aria-label=\"${optionsMessagesBlue}\" inputmode=\"decimal\"/>` +\n                        '<label class=\"k-colorgradient-input-label\">B</label>' +\n                    '</div>';\n\n                    if(options.opacity) {\n                        let optionsMessagesAlpha = options.messages.alpha;\n                        rgbaInputElement +=\n                        `<div class=\"k-vstack\" data-${ns}bind=\"visible: isRGBMode\">` +\n                            `<input tabindex=\"${optionsTabIndex}\" data-${ns}bind=\"value: rgb.a\" data-${ns}role=\"numerictextbox\" data-${ns}size=\"${optionsSize}\" data-${ns}step=\"0.1\" data-${ns}max=\"1\" data-${ns}min=\"0\" data-${ns}decimals=\"1\" data-${ns}spinners=\"false\" data-${ns}format=\"n1\" aria-label=\"${optionsMessagesAlpha}\" inputmode=\"decimal\"/>` +\n                            '<label class=\"k-colorgradient-input-label\">A</label>' +\n                        '</div>';\n                    }\n                }\n\n                return vStackElement + hexInputElement + rgbaInputElement;\n            }),\n            destroy: function(){\n                var that = this;\n\n                that._viewModel.unbind(\"change\", that._changeHandler);\n                kendo.unbind(that.element);\n                kendo.destroy(that.element);\n                that.element.off(KEYDOWN_NS);\n                delete that._viewModel;\n                delete that._changeHandler;\n            },\n            change: function (ev) {\n                var that = this;\n\n                if (ev.field.indexOf(\"rgb\") >= 0) {\n                    that._color = that._tryParseColor(that._viewModel.rgb.toCssRgba());\n                    that._viewModel.set(\"hex\", that._color.toCss({ alpha: that.options.opacity }));\n                } else if (ev.field === \"hex\") {\n                    that._color = that._tryParseColor(ev.sender[ev.field]);\n                    that._viewModel.set(\"rgb\", that._color);\n                }\n\n                if (!that._preventChangeEvent) {\n                    that.trigger(\"change\", {value: that._color});\n                }\n            },\n            keydown: function (ev) {\n                var that = this,\n                    textbox = $(ev.target).data(\"kendoTextBox\");\n\n                if (ev.keyCode === KEYS.ENTER && $(ev.target).is(\"input\")) {\n                    if(textbox && textbox._change) {\n                        textbox._change();\n                    }\n\n                    that.trigger(\"change\", {value: that._color});\n                    that.trigger(\"select\", {value: that._color});\n                }\n            },\n            reset: function () {\n                var that = this;\n\n                that._preventChangeEvent = true;\n                that._viewModel.set(\"rgb\", parseColor(BLACK));\n                delete that._preventChangeEvent;\n            },\n            switchMode: function() {\n                var that = this,\n                    model = that._viewModel,\n                    currentFormat = model.format,\n                    index = model.formats.indexOf(currentFormat) + 1;\n\n                index = index >= model.formats.length ? 0 : index;\n\n                that._preventChangeEvent = true;\n                that._viewModel.set(\"format\", model.formats[index]);\n                delete that._preventChangeEvent;\n            },\n            value: function (color) {\n                var that = this;\n\n                that._color = (color && color.toBytes()) || parseColor(BLACK);\n                that._preventChangeEvent = true;\n                that._viewModel.set(\"rgb\", that._color);\n                delete that._preventChangeEvent;\n            },\n            _render: function() {\n                var that = this;\n\n                that.element\n                    .append(that._template({ ns: kendo.ns, guid: kendo.guid(), options: that.options }))\n                    .parent();\n\n                kendo.bind(that.element, that._viewModel);\n                that.element.attr(\"data-\" + kendo.ns + \"stop\", \"stop\");\n            },\n            _tryParseColor: function (color) {\n                var that = this;\n\n                try {\n                    color = parseColor(color) || that._color;\n                } catch (error) {\n                    color = that._color;\n                }\n\n                return color;\n            }\n        });\n\n        var ColorGradient = ColorSelector.extend({\n            init: function (element, options) {\n                var that = this,\n                    value;\n\n                ColorSelector.fn.init.call(that, element, options);\n\n                options = that.options = kendo.deepExtend({}, that.options, options);\n\n                if (options.messages.previewInput) {\n                    options.messages.hex = options.messages.previewInput;\n                }\n\n                options.messages = options.messages ? $.extend(that.options.messages, options.messages) : that.options.messages;\n\n                that._wrapper();\n                that._sliders();\n                that._hsvArea();\n\n                value = that._value;\n\n                that._gradientInputs();\n                that._updateUI(value);\n                that._navigation();\n            },\n            options: {\n                name : \"ColorGradient\",\n                opacity : false,\n                hsvDragARIATemplate: (data) => `Color well with two-dimensional slider for selecting saturation and value. Selected color is ${data || \"none\"}`,\n                input : true,\n                format: \"hex\",\n                formats: [\"rgb\", \"hex\"],\n                contrastTool: false,\n                size: \"medium\",\n                messages: {\n                    contrastRatio: \"Contrast ratio:\",\n                    fail: \"Fail\",\n                    pass: \"Pass\",\n                    hex: \"HEX\",\n                    toggleFormat: \"Toggle format\",\n                    red: \"Red channel\",\n                    green: \"Green channel\",\n                    blue: \"Blue channel\",\n                    alpha: \"Alpha channel\"\n                },\n                _otOfPicker: true,\n                _showAdaptiveView: false,\n            },\n            _template: kendo.template((options) =>\n                    `<div class=\"k-colorgradient-canvas ${options._showAdaptiveView ? \"k-vstack\" : \"k-hstack\" }\">` +\n                        '<div class=\"k-hsv-rectangle\"><div class=\"k-hsv-gradient\"><div role=\"slider\" aria-orientation=\"undefined\" class=\"k-hsv-draghandle k-draghandle\"></div></div></div>' +\n                        `<div class=\"k-hsv-controls ${options._showAdaptiveView ? \"k-vstack\" : \"k-hstack\" }\">` +\n                            '<input class=\"k-hue-slider k-colorgradient-slider\" />' +\n                            (options.opacity ? '<input class=\"k-alpha-slider k-colorgradient-slider\" />' : '') +\n                        '</div>' +\n                    '</div>' +\n                    (options.input ? '<div class=\"k-colorgradient-inputs k-hstack\"></div>' : '') +\n                    (options.contrastTool ? '<div class=\"k-colorgradient-color-contrast k-vbox\"></div>' : '')\n            ),\n            focus: function() {\n                this._hsvHandle.trigger(\"focus\");\n            },\n            setBackgroundColor: function(color) {\n                var that = this;\n\n                if (that.options.contrastTool) {\n                    that.options.contrastTool = $.isPlainObject(that.options.contrastTool) ? extend({}, that.options.contrastTool, {\n                        backgroundColor: color\n                    }) : {\n                        backgroundColor: color\n                    };\n\n                    that._updateColorContrast(that.color() || parseColor(WHITE));\n                }\n            },\n            _getHSV: function(h, s, v, a) {\n                var that = this,\n                    rect = that._hsvRect,\n                    width = rect.width(),\n                    height = rect.height(),\n                    handlePosition = this._hsvHandle.position();\n\n                if(!width || !height) {\n                    return that.color() ? that.color().toHSV() : parseColor(BLACK);\n                }\n\n                if (h == null) {\n                    h = that._hueSlider.value();\n                }\n                if (s == null) {\n                    s = handlePosition.left / width;\n                }\n                if (v == null) {\n                    v = 1 - handlePosition.top / height;\n                }\n                if (a == null) {\n                    a = that._opacitySlider ? that._opacitySlider.value() / 100 : 1;\n                }\n                return Color.fromHSV(h, s, v, a);\n            },\n            _gradientInputs: function() {\n                var that = this,\n                    options = that.options;\n\n                if(that._colorgradientInputs.length) {\n                    that._colorInput = new ColorInput(that._colorgradientInputs, extend({}, options, {\n                        tabindex: 0\n                    }));\n\n                    that._colorInput.bind(\"change\", function(ev){\n                        that._updateUI(ev.value, true);\n                    });\n\n                    that._colorInput.bind(\"select\", function(ev){\n                        var color = parseColor(ev.value);\n                        that._select(color);\n                        that.trigger(\"forceSelect\", { value: that.value() });\n                    });\n                }\n            },\n            _hsvArea: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    hsvRect = wrapper.find(\".k-hsv-rectangle\"),\n                    hsvHandle = hsvRect.find(\".k-draghandle\").attr(\"tabIndex\", 0).on(KEYDOWN_NS, bind(that._hsvKeydown, that)),\n                    value = this.value();\n\n                if (value && value.indexOf(\"rgba\") > -1) {\n                    value = value.replace(\"rgba\", \"RGBA\");\n                };\n\n                if (!this._hsvDragAriaTemplate) {\n                    this._hsvDragAriaTemplate = kendo.template(this.options.hsvDragARIATemplate);\n                }\n\n                hsvHandle.attr(\"aria-label\", this._hsvDragAriaTemplate(value || ''));\n\n                function update(x, y) {\n                    var offset = this.offset,\n                        dx = x - offset.left, dy = y - offset.top,\n                        rw = this.width, rh = this.height,\n                        dxrw = dx > rw ? rw : dx,\n                        dyrh = dy > rh ? rh : dy,\n                        resultX, resultY;\n\n                    dx = dx < 0 ? 0 : dxrw;\n                    dy = dy < 0 ? 0 : dyrh;\n                    resultX = dx / rw;\n                    resultY = 1 - dy / rh;\n\n                    that._svChange(resultX, resultY);\n                }\n\n                that._hsvEvents = new kendo.UserEvents(hsvRect, {\n                    global: true,\n                    press: function(e) {\n                        this.offset = kendo.getOffset(hsvRect);\n                        this.width = hsvRect.width();\n                        this.height = hsvRect.height();\n                        hsvHandle.trigger(\"focus\");\n                        update.call(this, e.x.location, e.y.location);\n                    },\n                    start: function() {\n                        hsvRect.addClass(\"k-dragging\");\n                        hsvHandle.trigger(\"focus\");\n                    },\n                    move: function(e) {\n                        e.preventDefault();\n                        update.call(this, e.x.location, e.y.location);\n                    },\n                    end: function() {\n                        hsvRect.removeClass(\"k-dragging\");\n                    }\n                });\n\n                that._hsvRect = hsvRect;\n                that._hsvHandle = hsvHandle;\n            },\n            _hsvKeydown: function(ev) {\n                var that = this;\n                function move(prop, d) {\n                    var c = that._getHSV();\n                    c[prop] += d * (ev.shiftKey ? 0.01 : 0.05);\n                    if (c[prop] < 0) { c[prop] = 0; }\n                    if (c[prop] > 1) { c[prop] = 1; }\n                    that._updateUI(c);\n                    preventDefault(ev);\n                }\n                function hue(d) {\n                    var c = that._getHSV();\n                    c.h += d * (ev.shiftKey ? 1 : 5);\n                    if (c.h < 0) { c.h = 0; }\n                    if (c.h > 359) { c.h = 359; }\n                    that._updateUI(c);\n                    preventDefault(ev);\n                }\n                switch (ev.keyCode) {\n                case KEYS.LEFT:\n                    if (ev.ctrlKey) {\n                        hue(-1);\n                    } else {\n                        move(\"s\", -1);\n                    }\n                    break;\n                case KEYS.RIGHT:\n                    if (ev.ctrlKey) {\n                        hue(1);\n                    } else {\n                        move(\"s\", 1);\n                    }\n                    break;\n                case KEYS.UP:\n                    move(ev.ctrlKey && that._opacitySlider ? \"a\" : \"v\", 1);\n                    break;\n                case KEYS.DOWN:\n                    move(ev.ctrlKey && that._opacitySlider ? \"a\" : \"v\", -1);\n                    break;\n                case KEYS.ENTER:\n                    that._select(that._getHSV());\n                    break;\n                case KEYS.F2:\n                    that._colorInput.element.find(\"input\").trigger(\"focus\").select();\n                    break;\n                case KEYS.ESC:\n                    that._cancel();\n                    break;\n                }\n            },\n            _onEnable: function(enable) {\n                var wrapper = this.wrapper;\n\n                this._hueSlider.enable(enable);\n\n                if (this._opacitySlider) {\n                    this._opacitySlider.enable(enable);\n                }\n\n                wrapper.find(\"input\").attr(\"disabled\", !enable);\n\n                if (this.options._standalone) {\n                    if (enable) {\n                        wrapper.removeAttr(\"aria-disabled\");\n                    } else {\n                        wrapper.attr(\"aria-disabled\", true);\n                    }\n                }\n            },\n            _reset: function () {\n                var that = this;\n\n                if (that._colorInput) {\n                    that._colorInput.reset();\n                }\n\n                that._resetHsv();\n                that._resetColorContrast();\n            },\n            _resetColorContrast: function () {\n                var that = this,\n                    contrastOptions = that.options.contrastTool;\n\n                if(that._contrastTool.length) {\n                    that._updateColorContrast(contrastOptions.backgroundColor ? parseColor(contrastOptions.backgroundColor) : parseColor(WHITE));\n                }\n            },\n            _resetHsv: function () {\n                var that = this,\n                    color = parseColor(BLACK);\n\n                that._updateHsv(color);\n            },\n            _sliders: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    hueSlider = wrapper.find(\".k-hue-slider\"),\n                    opacitySlider = wrapper.find(\".k-alpha-slider\");\n\n                function hueChange(e) {\n                    that._updateUI(that._getHSV(e.value, null, null, null));\n                }\n\n                const slidersOrientation = that.options._showAdaptiveView ? \"horizontal\" : \"vertical\";\n\n                hueSlider.attr(\"aria-label\", \"hue\");\n                that._hueSlider = hueSlider.kendoSlider({\n                    min: 0,\n                    max: 360,\n                    tickPlacement: \"none\",\n                    showButtons: false,\n                    orientation: slidersOrientation,\n                    slide: hueChange,\n                    change: hueChange\n                }).data(\"kendoSlider\");\n\n                function opacityChange(e) {\n                    that._updateUI(that._getHSV(null, null, null, e.value / 100));\n                }\n\n                opacitySlider.attr(\"aria-label\", \"opacity\");\n                that._opacitySlider = opacitySlider.kendoSlider({\n                    min: 0,\n                    max: 100,\n                    tickPlacement: \"none\",\n                    showButtons: false,\n                    orientation: slidersOrientation,\n                    slide: opacityChange,\n                    change: opacityChange\n                }).data(\"kendoSlider\");\n            },\n            _svChange: function(s, v) {\n                var color = this._getHSV(null, s, v, null);\n                this._updateUI(color);\n            },\n            _updateColorContrast: function(color) {\n                var that = this,\n                    contrastOptions = that.options.contrastTool,\n                    backgroundColor = contrastOptions.backgroundColor ? parseColor(contrastOptions.backgroundColor) : parseColor(WHITE),\n                    contrastRatio = contrastToolUtils.getContrastFromTwoRGBAs(parseColor(color.toCssRgba()), backgroundColor),\n                    contrastRatioTemplate = kendo.template(({ messages, ratio }) =>\n                                                '<div class=\"k-contrast-ratio\">' +\n                                                    `<span class=\"k-contrast-ratio-text\">${encode(messages.contrastRatio)} ${encode(kendo.toString(ratio, \"n2\"))}</span>` +\n                                                    '<span class=\"k-contrast-validation !k-text-success\">' +\n                                                        (ratio > 4.5 ?  kendo.ui.icon(\"check\") : '') +\n                                                        (ratio > 7 ?  kendo.ui.icon(\"check\") : '') +\n                                                '</span></div>'),\n                    labelTemplate = kendo.template(({ messages, ratio, limit, level }) =>\n                                                '<div>' +\n                                                    `<span>${encode(level)}: ${encode(limit)} </span>` +\n                                                    (ratio > limit ?\n                                                    `<span class=\"k-contrast-validation !k-text-success\">${encode(messages.pass)} ${kendo.ui.icon(\"check\")}</span>`\n                                                    :\n                                                    `<span class=\"k-contrast-validation !k-text-error\">${encode(messages.fail)} ${kendo.ui.icon(\"x\")}</span>`) +\n                                                '</div>'),\n                    output = \"\";\n\n                output += contrastRatioTemplate({\n                    messages: that.options.messages,\n                    ratio: contrastRatio,\n                });\n\n                output += labelTemplate({\n                    messages: that.options.messages,\n                    ratio: contrastRatio,\n                    limit: 4.5,\n                    level: \"AA\"\n                });\n\n                output += labelTemplate({\n                    messages: that.options.messages,\n                    ratio: contrastRatio,\n                    limit: 7,\n                    level: \"AAA\"\n                });\n\n                that._contrastTool.find(\".k-contrast-ratio, div\").remove();\n                that._contrastTool.append(output);\n\n                that._updateContrastSvg(backgroundColor);\n            },\n            _updateContrastSvg: function(backgroundColor) {\n                var that = this,\n                    hsvRect = that._hsvRect,\n                    svgClassName = \"k-color-contrast-svg\",\n                    metrics = { width: hsvRect.width(), height: hsvRect.height() },\n                    newSvg;\n\n                if (!metrics.width || !metrics.height) {\n                    return;\n                }\n\n                newSvg = $(contrastToolUtils.renderSvgCurveLine(metrics, that._getHSV(), backgroundColor)).addClass(svgClassName);\n                kendo.applyStylesFromKendoAttributes(newSvg, [\"position\", \"overflow\", \"pointer-events\", \"left\", \"top\", \"z-index\"]);\n\n                hsvRect.find(\".\" + svgClassName).remove();\n                hsvRect.append(newSvg);\n            },\n            _updateHsv: function (color) {\n                var that = this,\n                    rect = that._hsvRect;\n\n                color = color.toHSV();\n\n                that._hsvHandle.css({\n                    // saturation is 0 on the left side, full (1) on the right\n                    left: color.s * rect.width() + \"px\",\n                    // value is 0 on the bottom, full on the top.\n                    top: (1 - color.v) * rect.height() + \"px\"\n                });\n\n                that._hueElements.css(BACKGROUNDCOLOR, Color.fromHSV(color.h, 1, 1, 1).toCss());\n                that._hueSlider.value(color.h);\n\n                if (that._opacitySlider) {\n                    that._opacitySlider.wrapper.find(\".k-slider-track\").css(\"background\", `linear-gradient(to ${that.options._showAdaptiveView ? \"right\" : \"top\"}, transparent, ` + Color.fromHSV(color.h, 1, 1, 1).toCss());\n                    that._opacitySlider.value(100 * color.a);\n                }\n\n                that._updateHsvAria(color.s, color.v);\n            },\n            _updateHsvAria: function(x,y) {\n                var value = this.value();\n\n                if (value && value.indexOf(\"rgba\") > -1) {\n                    value = value.replace(\"rgba\", \"RGBA\");\n                }\n\n                this._hsvHandle.attr({\n                    \"aria-label\": this._hsvDragAriaTemplate(value || ''),\n                    \"aria-valuenow\": Math.round(x * 100),\n                    \"aria-valuetext\": \"saturation: \" + Math.round(x * 100) + \"%, value: \" + Math.round(y * 100) + \"%\"\n                });\n            },\n            _updateUI: function(color, dontChangeInput) {\n                var that = this;\n\n                if (!color) {\n                    that._reset();\n                    return;\n                }\n\n                if (!dontChangeInput && that._colorInput) {\n                    that._colorInput.value(color);\n                }\n\n                that._triggerSelect(color);\n                that._updateHsv(color);\n\n                if (that._contrastTool.length) {\n                    that._updateColorContrast(color);\n                }\n            },\n            _addSizeClass: function(specificSize) {\n                const options = this.options;\n\n                this.wrapper.removeClass(\"k-colorgradient-lg k-colorgradient-md k-colorgradient-sm\");\n                let size = specificSize || options.size;\n\n                if (size) {\n                    let sizeClass = \"k-colorgradient-\";\n\n                    switch (size) {\n                        case \"large\":\n                            sizeClass += \"lg\";\n                            break;\n                        case \"small\":\n                            sizeClass += \"sm\";\n                            break;\n                        default:\n                            sizeClass += \"md\";\n                            break;\n                    }\n                    this.wrapper.addClass(sizeClass);\n                }\n            },\n\n            _wrapper: function() {\n                var options = this.options,\n                    wrapper;\n\n                if (this.element.is(\"input\")) {\n                    wrapper = this.element.addClass(\"k-hidden\").wrap(\"<div>\").parent();\n                } else {\n                    wrapper = this.element;\n                }\n\n                wrapper.addClass(\"k-colorgradient\")\n                    .attr({\n                        \"role\": \"textbox\",\n                        \"aria-keyshortcuts\": \"Enter\"\n                    })\n                    .append(this._template(options));\n\n                    this._hueElements = $(\".k-hsv-rectangle, .k-alpha-slider .k-slider-track\", wrapper);\n                    this._colorgradientInputs = $(\".k-colorgradient-inputs\", wrapper);\n                    this._contrastTool = $(\".k-colorgradient-color-contrast\", wrapper);\n\n                    this.wrapper = wrapper;\n\n                    this._addSizeClass();\n            },\n            destroy: function (){\n                this._hsvEvents.destroy();\n\n                this._hueSlider.destroy();\n                if (this._opacitySlider) {\n                    this._opacitySlider.destroy();\n                }\n\n                if(this._colorInput) {\n                    this._colorInput.destroy();\n                }\n\n                this._hueSlider = this._opacitySlider = this._hsvRect = this._hsvHandle =\n                    this._hueElements = this._selectedColor = this._colorAsText =\n                    this._contrastTool = null;\n\n                ColorSelector.fn.destroy.call(this);\n            }\n        });\n\n        ui.plugin(ColorGradient);\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1){\n        // WARNING: removing the following jshint declaration and turning\n        // == into === to make JSHint happy will break functionality.\n\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            parseColor = kendo.parseColor,\n            KEYS = kendo.keys,\n            DOT = \".\",\n            BACKGROUNDCOLOR = \"background-color\",\n            ITEMSELECTEDCLASS = \"k-selected\",\n            ITEMSFOCUSEDCLASS = \"k-focus\",\n            TILE_CLASS = \"k-colorpalette-tile\",\n            SIMPLEPALETTE = \"000000,7f7f7f,880015,ed1c24,ff7f27,fff200,22b14c,00a2e8,3f48cc,a349a4,ffffff,c3c3c3,b97a57,ffaec9,ffc90e,efe4b0,b5e61d,99d9ea,7092be,c8bfe7\",\n            WEBPALETTE = \"FFFFFF,FFCCFF,FF99FF,FF66FF,FF33FF,FF00FF,CCFFFF,CCCCFF,CC99FF,CC66FF,CC33FF,CC00FF,99FFFF,99CCFF,9999FF,9966FF,9933FF,9900FF,FFFFCC,FFCCCC,FF99CC,FF66CC,FF33CC,FF00CC,CCFFCC,CCCCCC,CC99CC,CC66CC,CC33CC,CC00CC,99FFCC,99CCCC,9999CC,9966CC,9933CC,9900CC,FFFF99,FFCC99,FF9999,FF6699,FF3399,FF0099,CCFF99,CCCC99,CC9999,CC6699,CC3399,CC0099,99FF99,99CC99,999999,996699,993399,990099,FFFF66,FFCC66,FF9966,FF6666,FF3366,FF0066,CCFF66,CCCC66,CC9966,CC6666,CC3366,CC0066,99FF66,99CC66,999966,996666,993366,990066,FFFF33,FFCC33,FF9933,FF6633,FF3333,FF0033,CCFF33,CCCC33,CC9933,CC6633,CC3333,CC0033,99FF33,99CC33,999933,996633,993333,990033,FFFF00,FFCC00,FF9900,FF6600,FF3300,FF0000,CCFF00,CCCC00,CC9900,CC6600,CC3300,CC0000,99FF00,99CC00,999900,996600,993300,990000,66FFFF,66CCFF,6699FF,6666FF,6633FF,6600FF,33FFFF,33CCFF,3399FF,3366FF,3333FF,3300FF,00FFFF,00CCFF,0099FF,0066FF,0033FF,0000FF,66FFCC,66CCCC,6699CC,6666CC,6633CC,6600CC,33FFCC,33CCCC,3399CC,3366CC,3333CC,3300CC,00FFCC,00CCCC,0099CC,0066CC,0033CC,0000CC,66FF99,66CC99,669999,666699,663399,660099,33FF99,33CC99,339999,336699,333399,330099,00FF99,00CC99,009999,006699,003399,000099,66FF66,66CC66,669966,666666,663366,660066,33FF66,33CC66,339966,336666,333366,330066,00FF66,00CC66,009966,006666,003366,000066,66FF33,66CC33,669933,666633,663333,660033,33FF33,33CC33,339933,336633,333333,330033,00FF33,00CC33,009933,006633,003333,000033,66FF00,66CC00,669900,666600,663300,660000,33FF00,33CC00,339900,336600,333300,330000,00FF00,00CC00,009900,006600,003300,000000\",\n            NS = \".kendoColorTools\",\n            FOCUS_NS = \"focus\" + NS,\n            CLICK_NS = \"click\" + NS,\n            KEYDOWN_NS = \"keydown\" + NS,\n            BLUR_NS = \"blur\" + NS,\n            ColorSelector = ui.colorpicker.ColorSelector;\n\n        function preventDefault(ev) { ev.preventDefault(); }\n\n        function bind(callback, obj) {\n            return function() {\n                return callback.apply(obj, arguments);\n            };\n        }\n\n        var ColorPalette = ColorSelector.extend({\n            init: function(element, options) {\n                var that = this;\n\n                ColorSelector.fn.init.call(that, element, options);\n\n                that._tabIndex = this.element.attr(\"tabindex\") || 0;\n\n                that._wrapper();\n\n                options = that.options;\n\n                that._selectedID = (options.ariaId || kendo.guid()) + \"_selected\";\n                that._ariaTemplate = kendo.template(that.options.ARIATemplate);\n\n                if (that._value) {\n                    that._updateUI(that._value);\n                    that.wrapper.find(DOT + ITEMSFOCUSEDCLASS).removeClass(ITEMSFOCUSEDCLASS);\n                }\n\n                that.wrapper.attr(\"aria-label\", that._ariaTemplate(that.value() || \"\"));\n\n                that._attachEvents();\n            },\n            focus: function(){\n                if (this.wrapper && !this.wrapper.is(\"[unselectable='on']\")) {\n                    this.wrapper.trigger(\"focus\");\n                }\n            },\n            options: {\n                name: \"ColorPalette\",\n                columns: 10,\n                tileSize: null,\n                palette: \"basic\",\n                size: \"medium\",\n            },\n            _attachEvents: function() {\n                var that = this;\n\n                that.wrapper.on(CLICK_NS, DOT + TILE_CLASS, function(ev){\n                    that._select(ev.currentTarget);\n                })\n                .on(KEYDOWN_NS, bind(that._keydown, that))\n                .on(BLUR_NS, function(){\n                    that.wrapper.find(DOT + TILE_CLASS).removeClass(ITEMSFOCUSEDCLASS);\n                })\n                .on(FOCUS_NS, bind(that._focus, that));\n            },\n            _colors: function() {\n                var options = this.options,\n                    colors = options.palette || \"basic\";\n\n                if (colors == \"websafe\") {\n                    colors = WEBPALETTE;\n                    options.columns = 18;\n                } else if (colors == \"basic\") {\n                    colors = SIMPLEPALETTE;\n                }\n\n                if (typeof colors == \"string\") {\n                    colors = colors.split(\",\");\n                }\n\n                if (Array.isArray(colors)) {\n                    colors = $.map(colors, function(x) { return parseColor(x); });\n                }\n\n                return colors;\n            },\n            _current: function(item) {\n                this.wrapper.find(DOT + TILE_CLASS)\n                    .removeClass(ITEMSFOCUSEDCLASS)\n                    .removeAttr(\"id\");\n\n                $(item)\n                    .addClass(ITEMSFOCUSEDCLASS)\n                    .attr(\"id\", this._selectedID);\n\n                this.wrapper\n                    .removeAttr(\"aria-activedescendant\")\n                    .attr(\"aria-activedescendant\", this._selectedID);\n            },\n            _focus: function() {\n                var wrapper = this.wrapper,\n                    selected = wrapper.find(\"#\" + this._selectedID);\n\n                if (selected.length === 0) {\n                    this._current(wrapper.find(DOT + TILE_CLASS).first());\n                }\n            },\n            _keydown: function(e) {\n                var newCurrent,\n                    wrapper = this.wrapper,\n                    items = wrapper.find(DOT + TILE_CLASS),\n                    current = items.filter(DOT + ITEMSFOCUSEDCLASS).get(0) || items.filter(DOT + ITEMSELECTEDCLASS).get(0),\n                    keyCode = e.keyCode,\n                    currentParentSibling,\n                    index;\n\n                if (current) {\n                    index = Array.prototype.indexOf.call(current.parentNode.children, current);\n                }\n\n                if (keyCode == KEYS.LEFT) {\n                    newCurrent = current ? current.previousSibling : items[items.length - 1];\n                } else if (keyCode == KEYS.RIGHT) {\n                    newCurrent = current ? current.nextSibling : items[0];\n                } else if (keyCode == KEYS.DOWN) {\n                    currentParentSibling = current && current.parentNode.nextSibling ? current.parentNode.nextSibling.children[index] : null;\n                    newCurrent = current ? currentParentSibling : items[0];\n                } else if (keyCode == KEYS.UP) {\n                    currentParentSibling = current && current.parentNode.previousSibling ? current.parentNode.previousSibling.children[index] : null;\n                    newCurrent = current ? currentParentSibling : items.get[items.length - 1];\n                } else if (keyCode == KEYS.ENTER) {\n                    preventDefault(e);\n                    if (current) {\n                        this._select(current);\n                        this.trigger(\"forceSelect\", { value: this.value() });\n                        return;\n                    }\n                } else if (keyCode == KEYS.ESC) {\n                    this._cancel();\n                }\n\n                if (newCurrent && newCurrent.nodeType !== 1) {\n                    newCurrent = null;\n                }\n\n                if (newCurrent) {\n                    preventDefault(e);\n\n                    this._current(newCurrent);\n                }\n            },\n            _onEnable: function(enable) {\n                if (this.options._standalone) {\n                    if (enable) {\n                        this.wrapper.attr(\"tabindex\", this._tabIndex);\n                        this.wrapper.removeAttr(\"aria-disabled\");\n                    } else {\n                        this.wrapper.removeAttr(\"tabindex\");\n                        this.wrapper.attr(\"aria-disabled\", true);\n                    }\n                }\n            },\n            _select: function(item) {\n                var that = this,\n                    items = that.wrapper.find(DOT + TILE_CLASS);\n\n                item = $(item);\n\n                ColorSelector.fn._select.call(that, item.css(BACKGROUNDCOLOR));\n\n                items.removeClass(ITEMSELECTEDCLASS).removeAttr(\"aria-selected\");\n                item.addClass(ITEMSELECTEDCLASS).attr(\"aria-selected\", true);\n            },\n            _template: kendo.template(({colors, columns, tileSize, value, id}) => {\n                let startPart = '<table class=\"k-colorpalette-table\" role=\"presentation\"><tr role=\"row\">';\n\n                let cellElements = \"\";\n                for (var i = 0; i < colors.length; ++i) {\n                    let selected = colors[i].equals(value);\n                    if (i && i % columns == 0) {\n                        cellElements += '</tr><tr role=\"row\">';\n                    }\n\n                    cellElements +=\n                    `<td role=\"gridcell\" unselectable=\"on\" ${kendo.attr(\"style-background-color\")}=\"${colors[i].toCss()}\"` +\n                        `${selected ? \" aria-selected=true\" : \"\"} ` +\n                        `${(id && i === 0) ? 'id=\\\\\"' + id + '\\\\\" ' : '' } ` +\n\n                        `class=\"k-colorpalette-tile${selected ? \" \" + ITEMSELECTEDCLASS : \"\"}\" ` +\n                        `aria-label=\"${colors[i].toCss()}\"></td>`;\n                }\n\n                let endPart = '</tr></table>';\n                return startPart + cellElements + endPart;\n            }),\n            _tileSize: function() {\n                var tileSize = this.options.tileSize,\n                    width, height;\n\n                if (tileSize) {\n                    if (/number|string/.test(typeof tileSize)) {\n                        width = height = parseFloat(tileSize);\n                    } else if (typeof tileSize == \"object\") {\n                        width = parseFloat(tileSize.width);\n                        height = parseFloat(tileSize.height);\n                    } else {\n                        throw new Error(\"Unsupported value for the 'tileSize' argument\");\n                    }\n                    this.wrapper.find(DOT + TILE_CLASS).css({ width: width, height: height });\n                }\n            },\n            _updateUI: function(color) {\n                var item = null,\n                    items = this.wrapper.find(DOT + TILE_CLASS);\n\n                this.wrapper.find(DOT + TILE_CLASS).each(function(){\n                    var c = parseColor($(this).css(BACKGROUNDCOLOR));\n\n                    if (c && c.equals(color)) {\n                        item = this;\n\n                        return false;\n                    }\n                });\n\n                this._current(item);\n\n                items.removeClass(ITEMSELECTEDCLASS);\n\n                if (item) {\n                    $(item).addClass(ITEMSELECTEDCLASS);\n                    this.wrapper.attr(\"aria-label\", this._ariaTemplate(this.value() || \"\"));\n                }\n            },\n            _addSizeClass: function(specificSize) {\n                const options = this.options;\n\n                this.wrapper.removeClass(\"k-colorpalette-lg k-colorpalette-md k-colorpalette-sm\");\n                let size = specificSize || options.size;\n\n                if (size) {\n                    let sizeClass = \"k-colorpalette-\";\n\n                    switch (size) {\n                        case \"large\":\n                            sizeClass += \"lg\";\n                            break;\n                        case \"small\":\n                            sizeClass += \"sm\";\n                            break;\n                        default:\n                            sizeClass += \"md\";\n                            break;\n                    }\n                    this.wrapper.addClass(sizeClass);\n                }\n            },\n            _wrapper: function() {\n                var options = this.options,\n                    colors = this._colors(),\n                    wrapper,\n                    templateElement;\n\n                if (this.element.is(\"input\")) {\n                    wrapper = this.element.addClass(\"k-hidden\").wrap(\"<div>\").parent();\n                } else {\n                    wrapper = this.element;\n                }\n\n                templateElement = $(this._template({\n                    colors: colors,\n                    columns: options.columns,\n                    tileSize: options.tileSize,\n                    value: this._value,\n                    id: options.ariaId\n                }));\n\n                kendo.applyStylesFromKendoAttributes(templateElement, [\"background-color\"]);\n                wrapper.addClass(\"k-colorpalette\")\n                    .attr(\"role\", \"grid\")\n                    .append(templateElement)\n                    .attr(\"tabindex\", this._tabIndex);\n\n                this.wrapper = wrapper;\n                this._addSizeClass();\n                this._tileSize();\n            }\n        });\n\n\n        ui.plugin(ColorPalette);\n\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1){\n        // WARNING: removing the following jshint declaration and turning\n        // == into === to make JSHint happy will break functionality.\n\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            html = kendo.html,\n            Color = kendo.Color,\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n            BACKGROUNDCOLOR = \"background-color\",\n            MESSAGES = {\n                apply  : \"Apply\",\n                cancel : \"Cancel\",\n                noColor: \"no color\",\n                clearColor: \"Clear color\",\n                previewInput: null,\n                contrastRatio: \"Contrast ratio:\",\n                fail: \"Fail\",\n                pass: \"Pass\",\n                hex: \"HEX\",\n                toggleFormat: \"Toggle format\",\n                red: \"Red\",\n                green: \"Green\",\n                blue: \"Blue\",\n                alpha: \"Alpha\",\n                gradient: \"Gradient view\",\n                palette: \"Palette view\"\n            },\n            NS = \".kendoColorTools\",\n            CLICK_NS = \"click\" + NS,\n            KEYDOWN_NS = \"keydown\" + NS,\n            ColorSelector = ui.colorpicker.ColorSelector,\n            KEYS = kendo.keys,\n\n            NO_COLOR = \"k-no-color\",\n            SELECTED = \"k-selected\",\n            PREVIEW_MASK = \".k-color-preview-mask\",\n\n            ARIA_PRESSED = \"aria-pressed\",\n            ARIA_DISABLED = \"aria-disabled\",\n\n            VIEWS = {\n                \"gradient\": ui.ColorGradient,\n                \"palette\": ui.ColorPalette\n            };\n\n        function bind(callback, obj) {\n            return function() {\n                return callback.apply(obj, arguments);\n            };\n        }\n\n        var FlatColorPicker = ColorSelector.extend({\n            init: function(element, options) {\n                var that = this;\n\n                if (options && options.autoupdate === false) {\n                    options._standalone = false;\n                }\n\n                ColorSelector.fn.init.call(that, element, options);\n                options = that.options = kendo.deepExtend({}, that.options, options);\n\n                that._wrapper();\n\n                var value = that.color();\n\n                that._changeView(options.view);\n\n                that._setViewSize();\n\n                if (value) {\n                    that._updateUI(value);\n                    that._previousColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, value.toDisplay());\n                    that._selectedColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, value.toDisplay());\n                } else {\n                    that._selectedColor.addClass(NO_COLOR);\n                    that._previousColor.addClass(NO_COLOR);\n                }\n\n                that._attachEvents();\n                that._navigation();\n            },\n            destroy: function() {\n                var that = this;\n\n                ColorSelector.fn.destroy.call(this);\n\n                if (that._view) {\n                    that._view.destroy();\n                    that._viewsContainer.empty();\n                }\n\n                that.element.off(NS);\n\n                that._selectedColor = that._previousColor = that._viewsContainer = that._view = null;\n            },\n            options: {\n                name: \"FlatColorPicker\",\n                opacity: false,\n                buttons: false,\n                input: true,\n                preview: true,\n                clearButton: false,\n                format: \"hex\",\n                formats: [\"rgb\", \"hex\"],\n                view: \"gradient\",\n                views: [\"gradient\", \"palette\"],\n                palette: null,\n                autoupdate : true,\n                backgroundColor: null,\n                columns: 10,\n                tileSize: 24,\n                messages   : MESSAGES,\n                size: \"medium\", // Fake styling option to accomplish colorpicker's size for textbox and button\n                _otOfPicker: true,\n                _showAdaptiveView: false,\n            },\n            setBackgroundColor: function (color) {\n                var that = this;\n\n                if(that._view && that._view.setBackgroundColor) {\n                    that._view.setBackgroundColor(color);\n                }\n            },\n            _attachEvents: function() {\n                var that = this;\n\n                that.wrapper\n                    .on(KEYDOWN_NS, bind(that._keydown, that))\n                    .on(CLICK_NS, \".k-button[data-command]\", function () {\n                        that._clearColor = true;\n                        that._updateUI(null);\n                        that._view.value(null);\n                    })\n                    .on(CLICK_NS, \".k-coloreditor-apply\", function(){\n                        if(that._clearColor) {\n                            that._select(null);\n                        } else {\n                            that._select(that._view.color());\n                        }\n                    })\n                    .on(CLICK_NS, \".k-coloreditor-cancel\", function(){\n                        delete that._clearColor;\n                        that._updateUI(that.color());\n                        that._cancel();\n                    })\n                    .on(CLICK_NS, \".k-button[data-view]\", function(ev){\n                        var viewButton =  $(ev.target).closest(\"[data-view]\");\n\n                        if(viewButton.is(\".\" + SELECTED)) {\n                            return;\n                        }\n\n                        that.wrapper.find(\".k-button[data-view]\").removeClass(SELECTED).attr(ARIA_PRESSED, false);\n                        viewButton.addClass(SELECTED).attr(ARIA_PRESSED, true);\n                        that._changeView(viewButton.data(\"view\"));\n                    });\n            },\n            _select: function(value) {\n                var that = this;\n\n                ColorSelector.fn._select.call(that, value);\n\n                that._updatePreviousColor(value);\n            },\n            _updatePreviousColor: function (value) {\n                var that = this;\n\n                if (value) {\n                    that._previousColor.removeClass(NO_COLOR);\n                    that._previousColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, value.toDisplay());\n                } else {\n                    that._previousColor.addClass(NO_COLOR);\n                    that._previousColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, \"\");\n                }\n            },\n            _changeView: function (mode) {\n                var that = this,\n                    options = $.extend({}, that.options),\n                    selector =  VIEWS[mode],\n                    selectedColor, hsvColor;\n\n                if(that._view && that._view._colorInput) {\n                    that.options.format = that._view._colorInput._viewModel.format;\n                }\n\n                that.options.view = mode;\n\n                delete options.name;\n                delete options.change;\n                delete options.select;\n                delete options.cancel;\n                delete options._standalone;\n                \n                const size = options._showAdaptiveView ? \"large\" : options.size;\n\n                if (that._view) {\n                    selectedColor = that._view.color();\n                    that._view.destroy();\n                    that._viewsContainer.empty();\n                }\n\n                if (selectedColor) {\n                    selectedColor = selectedColor.toHSV();\n                    hsvColor = Color.fromHSV(that._cachedHue || 0, selectedColor.s, selectedColor.v, selectedColor.a);\n                    that._cachedHue = selectedColor.toHSV().h;\n                    selectedColor = selectedColor.equals(hsvColor) ? hsvColor : selectedColor;\n                }\n\n                options._otOfPicker = false;\n\n                if (selector) {\n                    that._view = new VIEWS[mode]($(\"<div></div>\").appendTo(that._viewsContainer), { ...options, size });\n                    that._view.value(selectedColor);\n\n                    that._view.bind(\"change\", function (ev) {\n                        delete that._clearColor;\n                        that._updateUI(ev.sender.color(), true);\n                    });\n\n                    that._view.bind(\"forceSelect\", function (ev) {\n                        delete that._clearColor;\n                        that._select(ev.sender.color());\n                    });\n                }\n            },\n            _onEnable: function(enable) {\n                var that = this;\n\n                if (that._view) {\n                    that._view._onEnable(enable);\n                }\n\n                if (that.options._standalone) {\n                    if (enable) {\n                        that.wrapper.removeAttr(ARIA_DISABLED);\n                    } else {\n                        that.wrapper.attr(ARIA_DISABLED, true);\n                    }\n                }\n            },\n            focus: function() {\n                var that = this;\n\n                if (that._view) {\n                    that._view.focus();\n                }\n            },\n            _updateUI: function(color, dontChangeView) {\n                var that = this;\n\n                if (color && color.toDisplay) {\n                    that._selectedColor.removeClass(NO_COLOR);\n                    that._selectedColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, color.toDisplay());\n                } else {\n                    that._selectedColor.addClass(NO_COLOR);\n                    that._selectedColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, \"\");\n                }\n\n                that._triggerSelect(color);\n\n                if (that.options.autoupdate) {\n                    that._updatePreviousColor(color);\n                }\n\n                if(!dontChangeView) {\n                    that._view.value(color);\n                }\n            },\n            _setViewSize: function() {\n                var that = this,\n                    wrapper = that.wrapper[0],\n                    previewWidth = parseInt((that.options.tileSize.width || that.options.tileSize), 10),\n                    previewHeight = parseInt((that.options.tileSize.width || that.options.tileSize), 10),\n                    previewColumns = that.options.columns;\n\n                wrapper.style.setProperty(\"--kendo-color-preview-columns\", previewColumns);\n                wrapper.style.setProperty(\"--kendo-color-preview-width\", previewWidth + \"px\");\n                wrapper.style.setProperty(\"--kendo-color-preview-height\", previewHeight + \"px\");\n            },\n            _keydown: function(e) {\n                if (e.keyCode == KEYS.ESC) {\n                    this._cancel();\n                }\n            },\n            _template: function () {\n                var that = this,\n                    options = that.options,\n                    buttonOptions = extend({}, options, {\n                        fillMode: \"flat\",\n                        themeColor: \"base\",\n                        rounded: \"medium\",\n                        size: options._showAdaptiveView ? \"large\" : options.size\n                    });\n\n                return kendo.template((options, buttonOptions) =>\n                        '<div class=\"k-coloreditor-header k-hstack\">' +\n                            ((options.views && options.views.length > 1) ?\n                            '<div class=\"k-coloreditor-header-actions k-hstack\">' +\n                                '<div role=\"group\" class=\"k-button-group k-button-group-flat\">' +\n                                    html.renderButton(`<button aria-pressed=\"false\" data-view=\"gradient\" title=\"${encode(options.messages.gradient)}\"></button>`, extend({ icon: \"droplet-slider\" }, buttonOptions)) +\n                                    html.renderButton(`<button aria-pressed=\"false\" data-view=\"palette\" title=\"${encode(options.messages.palette)}\"></button>`, extend({ icon: \"palette\" }, buttonOptions)) +\n                                '</div>' +\n                            '</div>'\n                            : '') +\n                            '<div class=\"k-spacer\"></div>' +\n                            '<div class=\"k-coloreditor-header-actions k-hstack\">' +\n                                (options.clearButton ?\n                                html.renderButton(`<button data-command=\"reset\" title=\"${encode(options.messages.clearColor)}\"></button>`, extend({ icon: \"droplet-slash\" }, buttonOptions))\n                                : '') +\n                                (options.preview ?\n                                '<div class=\"k-coloreditor-preview k-vstack\">' +\n                                    '<span class=\"k-coloreditor-preview-color k-color-preview\">' +\n                                        '<span class=\"k-color-preview-mask\"></span>' +\n                                    '</span>' +\n                                    '<span class=\"k-coloreditor-current-color k-color-preview\">' +\n                                        '<span class=\"k-color-preview-mask\"></span>' +\n                                    '</span>' +\n                                '</div>'\n                                : '') +\n                            '</div>' +\n                        '</div>' +\n                        '<div class=\"k-coloreditor-views k-vstack\"></div>' +\n                        (options.buttons ?\n                        '<div class=\"k-coloreditor-footer k-actions k-actions-end k-actions-horizontal\">' +\n                            html.renderButton(`<button class=\"k-coloreditor-cancel\" title=\"${encode(options.messages.cancel)}\">${encode(options.messages.cancel)}</button>`, extend({}, buttonOptions, { fillMode: \"solid\" })) +\n                            html.renderButton(`<button class=\"k-coloreditor-apply\" title=\"${encode(options.messages.apply)}\">${encode(options.messages.apply)}</button>`, extend({}, buttonOptions, { fillMode: \"solid\", themeColor: \"primary\" })) +\n                        '</div>'\n                        : '')\n                    )(options, buttonOptions);\n            },\n\n            _addSizeClass: function(specificSize) {\n                const options = this.options;\n\n                this.wrapper.removeClass(\"k-coloreditor-lg k-coloreditor-md k-coloreditor-sm\");\n                let size = specificSize || options.size;\n\n                if (size) {\n                    let sizeClass = \"k-coloreditor-\";\n\n                    switch (size) {\n                        case \"large\":\n                            sizeClass += \"lg\";\n                            break;\n                        case \"small\":\n                            sizeClass += \"sm\";\n                            break;\n                        default:\n                            sizeClass += \"md\";\n                            break;\n                    }\n                    this.wrapper.addClass(sizeClass);\n                }\n            },\n\n            _wrapper: function() {\n                var options = this.options,\n                    wrapper;\n\n                if (this.element.is(\"input\")) {\n                    wrapper = this.element.addClass(\"k-hidden\").wrap(\"<div>\").parent();\n                } else {\n                    wrapper = this.element;\n                }\n\n                wrapper.addClass(\"k-flatcolorpicker k-coloreditor\")\n                    .attr({\n                        \"role\": \"textbox\",\n                        \"aria-keyshortcuts\": \"Enter\"\n                    })\n                    .append(this._template());\n\n                this._selectedColor = $(\".k-coloreditor-preview-color\", wrapper);\n                this._previousColor = $(\".k-coloreditor-current-color\", wrapper);\n                this._viewsContainer = $(\".k-coloreditor-views\", wrapper);\n\n                wrapper.find(\".k-button[data-view=\" + options.view + \"]\").addClass(SELECTED).attr(ARIA_PRESSED, true);\n\n                this.wrapper = wrapper;\n                this._addSizeClass();\n            }\n        });\n\n        ui.plugin(FlatColorPicker);\n    })(window.kendo.jQuery);\n\n    const __meta__ = {\n        id: \"colorpicker\",\n        name: \"Color tools\",\n        category: \"web\",\n        description: \"Color selection widgets\",\n        depends: [ \"core\", \"color\", \"popup\", \"slider\", \"userevents\", \"button\", \"binder\", \"textbox\", \"numerictextbox\", \"html.button\", \"icons\", \"actionsheet\" ]\n    };\n\n    (function($, undefined$1) {\n        // WARNING: removing the following jshint declaration and turning\n        // == into === to make JSHint happy will break functionality.\n\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            Color = kendo.Color,\n            parseColor = kendo.parseColor,\n            KEYS = kendo.keys,\n            BACKGROUNDCOLOR = \"background-color\",\n            MESSAGES = {\n                apply: \"Apply\",\n                cancel: \"Cancel\",\n                noColor: \"no color\",\n                clearColor: \"Clear color\",\n                previewInput: null,\n                contrastRatio: \"Contrast ratio:\",\n                fail: \"Fail\",\n                pass: \"Pass\",\n                hex: \"HEX\",\n                toggleFormat: \"Toggle format\",\n                red: \"Red\",\n                green: \"Green\",\n                blue: \"Blue\",\n                alpha: \"Alpha\",\n                gradient: \"Gradient view\",\n                palette: \"Palette view\",\n                adaptiveTitle: \"Choose Color\",\n            },\n            NS = \".kendoColorTools\",\n            CLICK_NS = \"click\" + NS,\n            KEYDOWN_NS = \"keydown\" + NS,\n            ColorSelector = ui.colorpicker.ColorSelector,\n            FlatColorPicker = ui.FlatColorPicker;\n\n        /* -----[ The ColorPicker widget ]----- */\n\n        var ColorPicker = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                // Legacy support for the cases where only palette is defined\n                if (options && options.palette && !options.view) {\n                    options.view = \"palette\";\n                }\n\n                Widget.fn.init.call(that, element, options);\n                options = that.options = kendo.deepExtend({}, that.options, options);\n                element = that.element;\n\n                let value = parseColor(options.value || element.attr(\"value\") || element.val(), true);\n                that._value = options.value = value;\n\n                var _buttonHtml = kendo.html.renderButton('<button class=\"k-input-button\" unselectable=\"on\" aria-label=\"select\" tabindex=\"-1\"></button>', $.extend({}, that.options, {\n                    icon: \"caret-alt-down\"\n                }));\n\n                var content = that._inputWrapper = that.wrapper = $(that._template($.extend({}, that.options, {\n                    _buttonHtml: _buttonHtml\n                })));\n\n                that._applyCssClasses();\n                element.hide().after(content);\n\n                if (element.is(\"input\")) {\n                    element.appendTo(content);\n                    that._preventDefaultLabelClick();\n                }\n\n                that._tabIndex = element.attr(\"tabIndex\") || 0;\n\n                that.enable(!element.attr(\"disabled\"));\n\n                var accesskey = element.attr(\"accesskey\");\n                if (accesskey) {\n                    element.attr(\"accesskey\", null);\n                    content.attr(\"accesskey\", accesskey);\n                }\n\n                that.bind(\"activate\", function(ev) {\n                    if (!ev.isDefaultPrevented()) {\n                        that.toggle();\n                    }\n                });\n\n                that._bindMediaQueries();\n                that._updateUI(value);\n            },\n            destroy: function() {\n                this.wrapper.off(NS).find(\"*\").off(NS);\n                if (this._popup) {\n                    this._selector.destroy();\n                    this._popup.destroy();\n                }\n                this._selector = this._popup = this.wrapper = null;\n                Widget.fn.destroy.call(this);\n            },\n            enable: function(enable) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    arrow = wrapper.find(\".k-input-button\");\n\n                if (arguments.length === 0) {\n                    enable = true;\n                }\n\n                that.element.attr(\"disabled\", !enable);\n                wrapper.attr(\"aria-disabled\", !enable);\n\n                arrow.off(NS).on(\"mousedown\" + NS, preventDefault);\n\n                wrapper.addClass(\"k-disabled\")\n                    .removeAttr(\"tabIndex\")\n                    .add(\"*\", wrapper).off(NS);\n\n                if (enable) {\n                    wrapper.removeClass(\"k-disabled\")\n                        .attr(\"tabIndex\", that._tabIndex)\n                        .on(\"mouseenter\" + NS, function() { wrapper.addClass(\"k-hover\"); })\n                        .on(\"mouseleave\" + NS, function() { wrapper.removeClass(\"k-hover\"); })\n                        .on(\"focus\" + NS, function() { wrapper.addClass(\"k-focus\"); })\n                        .on(\"blur\" + NS, function() { wrapper.removeClass(\"k-focus\"); })\n                        .on(KEYDOWN_NS, bind(that._keydown, that))\n                        .on(CLICK_NS, \".k-input-button\", bind(that.toggle, that))\n                        .on(CLICK_NS, \".k-input-inner\", function() {\n                            that.trigger(\"activate\");\n                        });\n                } else {\n                    that.close();\n                }\n            },\n\n            _adaptiveView: function() {\n                const that = this;\n\n                if (!that._popup) {\n                    that._getPopup();\n                } else if (!that._popup.fullscreen) {\n                    that._popup.destroy();\n                    that._popup = null;\n                    that._getPopup();\n                } else if (!that._showAdaptiveView) {\n                    that._popup.wrapper && that._popup.wrapper.remove();\n                    that._popup.destroy();\n                    that._popup = null;\n                }\n\n                that._toggleAdaptiveModeSizeClasses(that._showAdaptiveView);\n            },\n\n            _toggleSizeClassesForElement: function(element, size, className) {\n                if (element && element.length) {\n                    if (element.data(\"handler\") && element.data(\"handler\")._addSizeClass) {\n                        if (size) {\n                            return element.data(\"handler\")._addSizeClass(size);\n                        }\n\n                        return element.data(\"handler\")._addSizeClass();\n                    }\n\n                    if (!element.is(\".\" + className)) {\n                        element = element.closest(\".\" + className);\n                    }\n\n                    element.removeClass(`${className}-sm ${className}-md ${className}-lg`);\n\n                    if (size) {\n                        element.addClass(`${className}-${size}`);\n                    }\n                }\n            },\n\n            _toggleAdaptiveModeSizeClasses: function(toggle) {\n                const that = this;\n                const wrapper = that._popup && that._popup.wrapper;\n                const adaptiveSize = \"large\";\n\n                const classes = {\n                    flatColorPicker: \"k-coloreditor\",\n                    colorGradient: \"k-colorgradient\",\n                    colorPalette: \"k-colorpalette\",\n                };\n\n                const flatColorPicker = wrapper && wrapper.length && wrapper.find(\".\" + classes.flatColorPicker);\n                const colorGradient = wrapper && wrapper.length && wrapper.find(\".\" + classes.colorGradient);\n                const colorPalette = wrapper && wrapper.length && wrapper.find(\".\" + classes.colorPalette);\n\n                if (toggle) {\n                    that._toggleSizeClassesForElement(flatColorPicker, adaptiveSize);\n                    that._toggleSizeClassesForElement(colorGradient, adaptiveSize);\n                    that._toggleSizeClassesForElement(colorPalette, adaptiveSize);\n\n                } else {\n                    that._toggleSizeClassesForElement(flatColorPicker);\n                    that._toggleSizeClassesForElement(colorGradient);\n                    that._toggleSizeClassesForElement(colorPalette);\n                }\n            },\n\n            _bindMediaQueries: function() {\n                const that = this;\n                const isAdaptive = that.options.adaptiveMode === \"auto\";\n\n                if (isAdaptive) {\n                    that.largeMQL = kendo.mediaQuery(\"large\");\n                    that.mediumMQL = kendo.mediaQuery(\"medium\");\n                    that.smallMQL = kendo.mediaQuery(\"small\");\n\n                    that.smallMQL\n                        .onEnter(() => {\n                            that._showAdaptiveView = true;\n\n                            that._adaptiveView();\n                            that._popup.fullscreen(true);\n                        });\n\n                    that.mediumMQL\n                        .onEnter(() => {\n                            that._showAdaptiveView = true;\n\n                            that._adaptiveView();\n                            that._popup.fullscreen(false);\n                        });\n\n                    that.largeMQL\n                        .onEnter(() => {\n                            that._showAdaptiveView = false;\n\n                            that._adaptiveView();\n                        });\n                } else {\n                    that.smallMQL && that.smallMQL.destroy();\n                    that.mediumMQL && that.mediumMQL.destroy();\n                    that.largeMQL && that.largeMQL.destroy();\n\n                    that._showAdaptiveView = false;\n                }\n            },\n\n            _template: kendo.template(({ toolIcon, _buttonHtml }) =>\n               '<span role=\"combobox\" aria-haspopup=\"dialog\" aria-expanded=\"false\" class=\"k-colorpicker k-picker k-icon-picker\">' +\n                    '<span class=\"k-input-inner\">' +\n                        `<span class=\"k-value-icon k-color-preview ${toolIcon ? 'k-icon-color-preview' : ''}\">` +\n                            (toolIcon ? kendo.ui.icon({ icon: toolIcon, iconClass: \"k-color-preview-icon\" }) : '') +\n                            '<span class=\"k-color-preview-mask\"></span>' +\n                        '</span>' +\n                    '</span >' +\n                    _buttonHtml +\n                '</span>'\n            ),\n\n            options: {\n                name: \"ColorPicker\",\n                closeOnSelect: false,\n                contrastTool: false,\n                palette: null,\n                columns: 10,\n                toolIcon: null,\n                value: null,\n                messages: MESSAGES,\n                opacity: false,\n                buttons: true,\n                preview: true,\n                clearButton: false,\n                input: true,\n                format: \"hex\",\n                formats: [\"rgb\", \"hex\"],\n                view: \"gradient\",\n                views: [\"gradient\", \"palette\"],\n                backgroundColor: null,\n                ARIATemplate: (data) => `Current selected color is ${data || \"none\"}`,\n                size: \"medium\",\n                rounded: \"medium\",\n                fillMode: \"solid\",\n                adaptiveMode: \"none\",\n            },\n\n            events: [ \"activate\", \"change\", \"select\", \"open\", \"close\" ],\n\n            open: function() {\n                if (!this.element.prop(\"disabled\")) {\n                    this._getPopup().open();\n                }\n            },\n            close: function() {\n                var selOptions = (this._selector && this._selector.options) || {};\n                selOptions._closing = true;\n                this._getPopup().close();\n\n                delete selOptions._closing;\n            },\n            toggle: function() {\n                if (!this.element.prop(\"disabled\")) {\n                    this._getPopup().toggle();\n                }\n            },\n            setBackgroundColor: function(color) {\n                var that = this,\n                    handler = function() { that._selector.setBackgroundColor(color); };\n\n                that.options.contrastTool.backgroundColor = color;\n\n                if (that._selector && (that._popup && that._popup.visible())) {\n                    that._selector.setBackgroundColor(color);\n                } else if (that._popup) {\n                    that._popup.unbind(\"activate\", handler);\n                    that._popup.bind(\"activate\", handler);\n                }\n            },\n            _noColorIcon: function() {\n                return this.wrapper.find(\".k-color-preview\");\n            },\n            color: ColorSelector.fn.color,\n            value: ColorSelector.fn.value,\n            _select: ColorSelector.fn._select,\n            _triggerSelect: ColorSelector.fn._triggerSelect,\n            _isInputTypeColor: ColorSelector.fn._isInputTypeColor,\n\n            _preventDefaultLabelClick: function() {\n                // if there exists a <label> associated with this\n                // input field, we must catch clicks on it to prevent\n                // the built-in color picker from showing up.\n                // https://github.com/telerik/kendo-ui-core/issues/292\n                var that = this,\n                    element = that.element,\n                    label = element.closest(\"label\"),\n                    id = element.attr(\"id\");\n\n                if (id) {\n                    label = label.add('label[for=\"' + id + '\"]');\n                }\n                label.on(\"click\", function(ev) {\n                    that.open();\n                    ev.preventDefault();\n                });\n            },\n\n            _updateUI: function(value, dontChangeSelector) {\n                this._updateInput(value);\n                this._triggerSelect(value);\n\n                this.wrapper.find(\".k-color-preview-mask\").css(\n                    BACKGROUNDCOLOR,\n                    value ? value.toDisplay() : \"\"\n                );\n\n                this._noColorIcon().toggleClass(\"k-no-color\", !value);\n\n                if (this._selector && !dontChangeSelector) {\n                    this._selector.value(value);\n                }\n            },\n            _updateInput: function(value) {\n                var formattedValue = \"\";\n\n                if (value) {\n                    if (this._isInputTypeColor() || value.a == 1) {\n                        // seems that input type=\"color\" doesn't support opacity\n                        // in colors; the only accepted format is hex #RRGGBB\n                        formattedValue = value.toCss();\n                    } else {\n                        formattedValue = value.toCssRgba();\n                    }\n\n                    this.element.val(formattedValue);\n                }\n\n                if (!this._ariaTemplate) {\n                    this._ariaTemplate = kendo.template(this.options.ARIATemplate);\n                }\n\n                this.wrapper.attr(\"aria-label\", this._ariaTemplate(formattedValue));\n            },\n            _keydown: function(ev) {\n                var key = ev.keyCode;\n                if (this._getPopup().visible()) {\n                    if (key == KEYS.ESC) {\n                        this._selector._cancel();\n                    } else {\n                        this._selector._keydown(ev);\n                    }\n                    preventDefault(ev);\n                }\n                else if (key == KEYS.ENTER || key == KEYS.DOWN) {\n                    this.open();\n                    preventDefault(ev);\n                }\n            },\n\n            _actionFooterButtons: function() {\n                const that = this;\n\n                const buttons = [\n                    {\n                        command: \"cancel\",\n                        text: \"Cancel\",\n                        size: \"large\",\n                        fillMode: that.options.fillMode,\n                        themeColor: \"base\",\n                    },\n                    {\n                        command: \"apply\",\n                        text: \"Apply\",\n                        size: \"large\",\n                        fillMode: that.options.fillMode,\n                        themeColor: \"primary\"\n                    }\n                ];\n                let buttonsHtml = \"\";\n\n                buttons.forEach(buttonOptions => {\n                    const command = buttonOptions.command;\n                    const text = buttonOptions.text;\n\n                    delete buttonOptions.command;\n                    delete buttonOptions.text;\n\n                    buttonsHtml += kendo.html.renderButton(`<button data-command=${command}>${text}</button>`, buttonOptions);\n                });\n\n                return buttonsHtml;\n            },\n\n            _actionSheetApply: function() {\n                const that = this._selector;\n                if (that._clearColor) {\n                    that._select(null);\n                } else {\n                    that._select(that._view.color());\n                }\n            },\n\n            _actionSheetCancel: function() {\n                const that = this._selector;\n                delete that._clearColor;\n                that._updateUI(that.color());\n                that._cancel();\n            },\n\n            _getPopup: function() {\n                var that = this, popup = that._popup;\n                const isAdaptive = that._showAdaptiveView;\n\n                if (!popup) {\n                    var options = that.options;\n                    var selectorType;\n\n                    selectorType = FlatColorPicker;\n\n                    options.autoupdate = options.buttons !== true && !isAdaptive;\n                    options._showAdaptiveView = isAdaptive;\n\n                    delete options.select;\n                    delete options.change;\n                    delete options.cancel;\n\n                    options._otOfPicker = false;\n\n                    var id = kendo.guid();\n\n                    var selectorWrapper = $(`<div id=\"${id}\" class=${ !isAdaptive ? \"k-colorpicker-popup\" : ''}></div>`).appendTo(document.body);\n                    var selector = that._selector = new selectorType($('<div></div>').appendTo(selectorWrapper), { ...options, buttons: !isAdaptive && options.buttons, value: isAdaptive ? that._value : that.options.value });\n\n                    that.wrapper.attr(\"aria-controls\", id);\n\n                    if (isAdaptive) {\n                        that._popup = popup = selectorWrapper.kendoActionSheet({\n                            adaptive: true,\n                            closeButton: true,\n                            hideOverflowContent: true,\n                            title: kendo.htmlEncode(options.messages.adaptiveTitle),\n                            footerTemplate: that._actionFooterButtons(),\n                        }).data(\"kendoActionSheet\");\n\n                        popup._footer.addClass(\"k-actions k-actions-horizontal k-actions-stretched\");\n\n                        popup._footer.on(\"click\", \"button[data-command]\", function(e) {\n                            const command = $(e.currentTarget).data(\"command\");\n\n                            switch (command) {\n                                case \"apply\":\n                                    that._actionSheetApply();\n                                    break;\n\n                                case \"cancel\":\n                                    that._actionSheetCancel();\n                                    break;\n                            }\n                        });\n                    } else {\n                        that._popup = popup = selectorWrapper.kendoPopup({\n                            anchor: that.wrapper,\n                            adjustSize: { width: 5, height: 0 }\n                        }).data(\"kendoPopup\");\n                    }\n\n                    selector.bind({\n                        select: function(ev) {\n                            that._updateUI(parseColor(ev.value), true);\n                        },\n                        change: function(ev) {\n                            if (that.options.buttons || isAdaptive) {\n                                that._select(selector.color());\n                            } else {\n                                that._updateUI(parseColor(ev.value), true);\n                            }\n\n                            if ((that.options.buttons || isAdaptive) || (that._selector.options.view === \"palette\" && that.options.closeOnSelect)) {\n                                that.close();\n                            }\n                        },\n                        cancel: function() {\n                            that.close();\n                        }\n                    });\n                    popup.bind({\n                        close: function(ev) {\n                            if (that.trigger(\"close\")) {\n                                ev.preventDefault();\n                                return;\n                            }\n                            that.wrapper.removeClass(\"k-focus\");\n\n                            var color = selector.color();\n\n                            if (!that.options.buttons || !isAdaptive) {\n                                that._select(color);\n                            } else {\n                                that._select(that.color());\n                            }\n\n                            color = that.color();\n\n                            if (color && color.h) {\n                                that._cachedHue = color.h;\n                            }\n\n                            const parentSelector = isAdaptive ? \".k-actionsheet\" : \".k-colorpicker-popup\";\n\n                            var clickedOutside = event &&\n                                event instanceof MouseEvent &&\n                                $(event.target).parents(parentSelector).length === 0;\n\n                            if (!clickedOutside) {\n                                setTimeout(function() {\n                                    if (that.wrapper && !that.wrapper.is(\"[unselectable='on']\")) {\n                                        that.wrapper.trigger(\"focus\");\n                                    }\n                                }, 0);\n                            }\n\n                            that.wrapper.attr(\"aria-expanded\", false);\n                        },\n                        open: function(ev) {\n                            if (that.trigger(\"open\")) {\n                                ev.preventDefault();\n                            } else {\n                                that.wrapper.addClass(\"k-focus\");\n                                that.wrapper.attr(\"aria-expanded\", true);\n                            }\n                        },\n                        activate: function() {\n                            var hsvColor,\n                                selectedColor = that.color();\n\n                            if (isAdaptive) {\n                                resizeSliders(selector);\n                            }\n\n                            if (selectedColor) {\n                                selectedColor = selectedColor.toHSV();\n                                hsvColor = Color.fromHSV(that._cachedHue || 0, selectedColor.s, selectedColor.v, selectedColor.a);\n                                selectedColor = selectedColor.equals(hsvColor) ? hsvColor : selectedColor;\n                            }\n\n                            selector.value(selectedColor);\n                            selector.focus();\n                            that.wrapper.addClass(\"k-focus\");\n                        }\n                    });\n                }\n                return popup;\n            }\n        });\n\n        function resizeSliders(selectorInstance) {\n            const view = selectorInstance._view;\n\n            if (view) {\n                if (view._hueSlider) {\n                    view._hueSlider.resize();\n                }\n\n                if (view._opacitySlider) {\n                    view._opacitySlider.resize();\n                }\n            }\n        }\n\n        function preventDefault(ev) { ev.preventDefault(); }\n\n        function bind(callback, obj) {\n            return function() {\n                return callback.apply(obj, arguments);\n            };\n        }\n\n        ui.plugin(ColorPicker);\n\n        kendo.cssProperties.registerPrefix(\"ColorPicker\", \"k-picker-\");\n\n        kendo.cssProperties.registerValues(\"ColorPicker\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports[\"default\"] = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}