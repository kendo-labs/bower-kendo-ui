{"version":3,"sources":["raw-js/kendo.selectable.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendoselectable","js","this","$","undefined$1","kendo","window","Widget","ui","support","abs","Math","ARIASELECTED","SELECTED","ACTIVE","CHANGE","CHANGING","UNSELECT","UNSELECTING","HOVER","MID","SPLITEND","SPLITSTART","RANGESTART","RANGEEND","START","END","INPUTSELECTOR_ICONSSELECTOR_FONT","INPUTSELECTOR_ICONSSELECTOR_SVG","replaceAll","INPUTSELECTOR_SVG_PARTS","split","map","selector","join","INPUTSELECTOR","msie","browser","supportEventDelegation","extend","on","find","trigger","end","off","Selectable","init","element","options","multiple","dragToSelect","selectableClass","that","fn","call","_marquee","_lastActive","addClass","relatedTarget","userEvents","UserEvents","allowSelection","filter","tap","_tap","bind","touchAction","_hold","_start","_move","_end","_select","events","name","inputSelectors","holdToDrag","noop","ignoreOverlapped","addIdToRanges","toggleable","_isElement","target","idx","elements","length","result","e","selected","ctrlKey","event","metaKey","shiftKey","selectedClass","whichCode","which","buttonCode","button","closest","_allowSelection","originalEvent","hasClass","add","_lastRange","compareElements","selectRange","_firstSelectee","_notify","_unselect","value","clear","_downTarget","_activated","_isActivated","currentElement","cancel","useAllItems","_items","sender","capture","appendTo","document","body","css","left","x","client","top","y","width","height","_selectElement","position","startLocation","location","initialDelta","_invalidateSelectables","preventDefault","rangeSelectedAttr","attr","uid","guid","remove","removeClass","i","_currentlyActive","related","toSelect","items","eq","collision","_collidesWithActiveElement","push","marqueeRect","activeElementRect","activeElements","elemRect","getBoundingClientRect","leftRight","isRtl","tempRect","right","bottom","overlaps","val","selectElement","each","selectedRanges","_","elem","rangeId","mapLocation","selectedSingleItems","toArray","preventNotify","isPrevented","aria","args","removeAttr","_activeElement","is","_allowPreventDefault","allowPaste","resetTouchEvents","start","tmp","continuousItems","inArray","destroy","RangeSelectable","ns","cellSelectorValid","widget","touch","_mouseEnter","TOUCHEND","_mouseLeave","resetOnStart","cellSelector","reverse","range","cell","currentTarget","preventFlagUpdate","mid","tables","lastCell","last","firstCell","first","clearVariables","clearStartEnd","selectFrom","startIdx","index","selectTo","endIdx","invert","_useStart","_useEnd","change","_clearFlags","currentDate","calendar","toDateObject","toCompare","elementPosition","getOffset","_outerWidth","_outerHeight","firstRect","secondRect","parseOptions","selectable","selectableMode","mode","asLowerString","toLowerCase","indexOf","single","plugin","jQuery"],"mappings":"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","file":"kendo.selectable.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.userevents.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.userevents'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendoselectable = global.kendoselectable || {}, global.kendoselectable.js = factory()));\n})(this, (function () {\n    let __meta__ = {\n        id: \"selectable\",\n        name: \"Selectable\",\n        category: \"framework\",\n        depends: [ \"core\", \"userevents\" ],\n        advanced: true\n    };\n\n    (function($, undefined$1) {\n        let kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            support = kendo.support,\n            abs = Math.abs,\n            ARIASELECTED = \"aria-selected\",\n            SELECTED = \"k-selected\",\n            ACTIVE = \"k-selecting\",\n            SELECTABLE = \"k-selectable\",\n            CHANGE = \"change\",\n            CHANGING = \"changing\",\n            NS = \".kendoSelectable\",\n            UNSELECT = \"unselect\",\n            UNSELECTING = \"k-unselecting\",\n            HOVER = \"k-hover\",\n            MID = \"k-range-mid\",\n            SPLITEND = \"k-range-split-end\",\n            SPLITSTART = \"k-range-split-start\",\n            RANGESTART = \"k-range-start\",\n            RANGEEND = \"k-range-end\",\n            START = \"start\",\n            END = \"end\",\n            NONE = \"none\",\n            MOUSEENTER = \"mouseenter\",\n            MOUSELEAVE = \"mouseleave\",\n            TOUCHSTART = \"touchstart\",\n            TOUCHMOVE = \"touchmove\",\n            TOUCHEND = \"touchend\",\n            INPUTSELECTOR_ICONSSELECTOR_FONT = \"span.k-icon.k-i-caret-alt-down,span.k-icon.k-i-caret-alt-up,.k-icon.k-i-caret-alt-down,.k-icon.k-i-caret-alt-right,.k-icon.k-i-caret-alt-left\",\n            INPUTSELECTOR_ICONSSELECTOR_SVG = INPUTSELECTOR_ICONSSELECTOR_FONT.replaceAll('k-i', 'k-svg-i'),\n            INPUTSELECTOR_SVG_PARTS = INPUTSELECTOR_ICONSSELECTOR_SVG.split(\",\").map((selector) => selector + \" *\").join(\",\"),\n            INPUTSELECTOR = `input,a,textarea,.k-multiselect-wrap,select,button,${INPUTSELECTOR_ICONSSELECTOR_FONT},${INPUTSELECTOR_ICONSSELECTOR_SVG},${INPUTSELECTOR_SVG_PARTS},.k-button>span,.k-button>span *,.k-button>img,label.k-checkbox-label.k-no-text,span.k-numeric-wrap,.k-focusable`,\n            msie = kendo.support.browser.msie,\n            supportEventDelegation = false,\n            extend = $.extend;\n\n            (function($) {\n                (function() {\n                    $('<div class=\"parent\"><span></span></div>')\n                    .on(\"click\", \">*\", function() {\n                        supportEventDelegation = true;\n                    })\n                    .find(\"span\")\n                    .trigger(\"click\")\n                    .end()\n                    .off();\n                })();\n            })($);\n\n        const Selectable = Widget.extend({\n            init: function(element, options) {\n                let that = this,\n                    multiple,\n                    dragToSelect,\n                    selectableClass;\n\n                Widget.fn.init.call(that, element, options);\n\n                selectableClass = that.selectableClass = that.options.selectableClass || SELECTABLE;\n\n                that._marquee = $(\"<div class='k-marquee'><div class='k-marquee-color'></div></div>\");\n                that._lastActive = null;\n                that.element.addClass(selectableClass);\n\n                that.relatedTarget = that.options.relatedTarget;\n\n                multiple = that.options.multiple;\n                dragToSelect = that.options.dragToSelect;\n\n                that.userEvents = new kendo.UserEvents(that.element, {\n                    global: true,\n                    allowSelection: true,\n                    filter: (!supportEventDelegation ? \".\" + selectableClass + \" \" : \"\") + that.options.filter,\n                    tap: that._tap.bind(that),\n                    touchAction: multiple ? \"none\" : \"pan-x pan-y\"\n                });\n\n                if (multiple) {\n                    if (dragToSelect) {\n                        that.userEvents\n                            .bind(\"hold\", that._hold.bind(that))\n                            .bind(\"start\", that._start.bind(that))\n                            .bind(\"move\", that._move.bind(that))\n                            .bind(\"end\", that._end.bind(that));\n                    }\n                    that.userEvents\n                       .bind(\"select\", that._select.bind(that));\n                }\n            },\n\n            events: [CHANGE, CHANGING, UNSELECT],\n\n            options: {\n                name: \"Selectable\",\n                filter: \">*\",\n                inputSelectors: INPUTSELECTOR,\n                multiple: false,\n                holdToDrag: false,\n                dragToSelect: true,\n                relatedTarget: $.noop,\n                ignoreOverlapped: false,\n                addIdToRanges: false,\n                toggleable: false,\n                selectableClass: \"\"\n            },\n\n            _isElement: function(target) {\n                var elements = this.element;\n                var idx, length = elements.length, result = false;\n\n                target = target[0];\n\n                for (idx = 0; idx < length; idx ++) {\n                    if (elements[idx] === target) {\n                        result = true;\n                        break;\n                    }\n                }\n\n                return result;\n            },\n\n            _tap: function(e) {\n                let target = $(e.target),\n                    that = this,\n                    options = that.options,\n                    ctrlKey = e.event.ctrlKey || e.event.metaKey,\n                    multiple = that.options.multiple,\n                    shiftKey = multiple && e.event.shiftKey,\n                    selectedClass = that.options.selectedClass || SELECTED,\n                    selected,\n                    whichCode = e.event.which,\n                    buttonCode = e.event.button;\n\n                //in case of hierarchy or right-click\n                if (!that._isElement(target.closest(\".\" + that.selectableClass)) || whichCode && whichCode == 3 || buttonCode && buttonCode == 2) {\n                    return;\n                }\n\n                if (!this._allowSelection(e.event.target)) {\n                    return;\n                }\n\n                if (that.trigger(CHANGING, { target: target, originalEvent: e.event })) {\n                    return;\n                }\n\n                selected = target.hasClass(selectedClass);\n\n                target = target.add(that.relatedTarget(target));\n\n                if (!multiple) {\n                    if (selected && ctrlKey) {\n                        that._unselect(target);\n                        that._notify(CHANGE, e);\n                    } else if (!selected) {\n                        that.clear();\n                        that.value(target, e);\n                        that._notify(CHANGE, e);\n                    }\n                } else {\n                    if (shiftKey) {\n                        if (!that._lastRange || !compareElements(that._lastRange, target)) {\n                            that.selectRange(that._firstSelectee(), target, e);\n                            that._notify(CHANGE, e);\n                        }\n                        that._lastRange = target;\n                    } else {\n                        that._lastRange = null;\n                        if (selected && (ctrlKey || options.toggleable)) {\n                            that._unselect(target);\n                            that._notify(CHANGE, e);\n                        } else if (ctrlKey || options.toggleable) {\n                            that.value(target, e);\n                            that._notify(CHANGE, e);\n                        } else if (!selected || that.value().length > 1) {\n                            that.clear();\n                            that.value(target, e);\n                            that._notify(CHANGE, e);\n                        }\n\n                        that._lastActive = that._downTarget = target;\n                    }\n                }\n            },\n\n            _hold: function(e) {\n                if (this.options.holdToDrag) {\n                    // serves as a drag hint to indicate start of selection\n                    this._tap(e);\n                }\n\n                this._activated = true;\n            },\n\n            _isActivated: function() {\n                return this.options.holdToDrag ? this._activated : true;\n            },\n\n            _start: function(e) {\n                let that = this,\n                    target = $(e.target),\n                    selectedClass = that.options.selectedClass || SELECTED,\n                    selected = target.hasClass(selectedClass),\n                    currentElement,\n                    ctrlKey = e.event.ctrlKey || e.event.metaKey;\n\n                if (!that._isActivated() || !this._allowSelection(e.event.target)) {\n                    return;\n                }\n\n                if (that.trigger(CHANGING, { target: target, originalEvent: e.event })) {\n                    that.userEvents.cancel();\n                    return;\n                }\n\n                that._downTarget = target;\n\n                //in case of hierarchy\n                if (!that._isElement(target.closest(\".\" + that.selectableClass))) {\n                    that.userEvents.cancel();\n                    return;\n                }\n\n                if (that.options.useAllItems) {\n                    that._items = that.element.find(that.options.filter);\n                } else {\n                    currentElement = target.closest(that.element);\n                    that._items = currentElement.find(that.options.filter);\n                }\n\n                e.sender.capture();\n\n                that._marquee\n                    .appendTo(document.body)\n                    .css({\n                        left: e.x.client + 1,\n                        top: e.y.client + 1,\n                        width: 0,\n                        height: 0\n                    });\n\n                if (!ctrlKey) {\n                    that.clear();\n                }\n\n                target = target.add(that.relatedTarget(target));\n                if (selected) {\n                    that._selectElement(target, true);\n                    if (ctrlKey) {\n                        target.addClass(UNSELECTING);\n                    }\n                }\n            },\n\n            _move: function(e) {\n                var that = this,\n                    position = {\n                        left: e.x.startLocation > e.x.location ? e.x.location : e.x.startLocation,\n                        top: e.y.startLocation > e.y.location ? e.y.location : e.y.startLocation,\n                        width: abs(e.x.initialDelta),\n                        height: abs(e.y.initialDelta)\n                    };\n\n                if (!that._isActivated()) {\n                    return;\n                }\n\n                that._marquee.css(position);\n\n                that._invalidateSelectables(position, (e.event.ctrlKey || e.event.metaKey));\n\n                e.preventDefault();\n            },\n\n            _end: function(e) {\n                var that = this,\n                rangeSelectedAttr = kendo.attr(\"range-selected\"),\n                uid = kendo.guid();\n\n                if (!that._isActivated()) {\n                    return;\n                }\n\n                that._activated = false;\n\n                that._marquee.remove();\n\n                that._unselect(that.element\n                    .find(that.options.filter + \".\" + UNSELECTING))\n                    .removeClass(UNSELECTING);\n\n\n                var target = that.element.find(that.options.filter + \".\" + ACTIVE);\n                target = target.add(that.relatedTarget(target));\n\n                if (that.options.addIdToRanges) {\n                    for (var i = 0; i < that._currentlyActive.length; i++) {\n                        $(that._currentlyActive[i]).attr(rangeSelectedAttr, uid);\n                    }\n                }\n\n                if (!that._lastRange || !compareElements(that._lastRange, target)) {\n                    that.value(target, e);\n                    that._notify(CHANGE, e);\n                }\n                that._lastRange = target;\n                that._lastActive = that._downTarget;\n                that._items = null;\n            },\n\n            _invalidateSelectables: function(position, ctrlKey) {\n                var idx,\n                    length,\n                    target = this._downTarget[0],\n                    items = this._items,\n                    selectedClass = this.options.selectedClass || SELECTED,\n                    related,\n                    toSelect;\n\n                this._currentlyActive = [];\n\n                for (idx = 0, length = items.length; idx < length; idx ++) {\n                    toSelect = items.eq(idx);\n                    related = toSelect.add(this.relatedTarget(toSelect));\n\n                    if (collision(toSelect, position)) {\n                        if (toSelect.hasClass(selectedClass)) {\n                            if (ctrlKey && target !== toSelect[0]) {\n                                related.removeClass(selectedClass).addClass(UNSELECTING);\n                            }\n                        } else if (!toSelect.hasClass(ACTIVE) && !toSelect.hasClass(UNSELECTING) && !this._collidesWithActiveElement(related, position)) {\n                            related.addClass(ACTIVE);\n                        }\n                        this._currentlyActive.push(related[0]);\n                    } else {\n                        if (toSelect.hasClass(ACTIVE)) {\n                            related.removeClass(ACTIVE);\n                        } else if (ctrlKey && toSelect.hasClass(UNSELECTING)) {\n                            related.removeClass(UNSELECTING).addClass(selectedClass);\n                        }\n                    }\n                }\n            },\n\n            _collidesWithActiveElement: function(element, marqueeRect) {\n                if (!this.options.ignoreOverlapped) {\n                    return false;\n                }\n\n                var activeElements = this._currentlyActive;\n                var elemRect = element[0].getBoundingClientRect();\n                var activeElementRect;\n                var collision = false;\n                var isRtl = kendo.support.isRtl(element);\n                var leftRight = isRtl ? \"right\" : \"left\";\n                var tempRect = {};\n\n                marqueeRect.right = marqueeRect.left + marqueeRect.width;\n                marqueeRect.bottom = marqueeRect.top + marqueeRect.height;\n\n                for (var i = 0; i < activeElements.length; i++) {\n                    activeElementRect = activeElements[i].getBoundingClientRect();\n                    if (overlaps(elemRect, activeElementRect)) {\n                        tempRect[leftRight] = leftRight === \"left\" ? activeElementRect.right : activeElementRect.left;\n                        elemRect = extend({}, elemRect, tempRect);\n                        if (elemRect.left > elemRect.right) {\n                            return true;\n                        }\n                        collision = !overlaps(elemRect, marqueeRect);\n                    }\n                }\n                return collision;\n            },\n\n            value: function(val) {\n                var that = this,\n                    selectElement = that._selectElement.bind(that);\n\n                if (val) {\n                    val.each(function() {\n                        selectElement(this);\n                    });\n\n                    return;\n                }\n\n                return that.element.find(that.options.filter + \".\" + (that.options.selectedClass || SELECTED));\n            },\n\n            selectedRanges: function() {\n                var that = this;\n                var rangeSelectedAttr = kendo.attr(\"range-selected\");\n                var map = {};\n\n                that.element.find(\"[\" + rangeSelectedAttr + \"]\").each(function(_, elem) {\n                    var rangeId = $(elem).attr(rangeSelectedAttr);\n                    var mapLocation = map[rangeId];\n\n                    if (!mapLocation) {\n                        mapLocation = map[rangeId] = [];\n                    }\n\n                    mapLocation.push($(elem));\n                });\n\n                return map;\n            },\n\n            selectedSingleItems: function() {\n                var that = this;\n                var rangeSelectedAttr = kendo.attr(\"range-selected\");\n\n                return that.element.find(that.options.filter + \".\" + (that.options.selectedClass || SELECTED) + \":not([\" + rangeSelectedAttr + \"])\").toArray().map(function(elem) {\n                    return $(elem);\n                });\n            },\n\n            _firstSelectee: function() {\n                var that = this,\n                    selected;\n\n                if (that._lastActive !== null) {\n                    return that._lastActive;\n                }\n\n                selected = that.value();\n                return selected.length > 0 ?\n                        selected[0] :\n                        that.element.find(that.options.filter)[0];\n            },\n\n            _selectElement: function(element, preventNotify) {\n                var toSelect = $(element),\n                    selectedClass = this.options.selectedClass || SELECTED,\n                    isPrevented = !preventNotify && this._notify(\"select\", { element: element });\n\n                toSelect.removeClass(ACTIVE);\n                if (!isPrevented) {\n                     toSelect.addClass(selectedClass);\n\n                    if (this.options.aria) {\n                        toSelect.attr(ARIASELECTED, true);\n                    }\n                }\n            },\n\n            _notify: function(name, args) {\n                args = args || { };\n                return this.trigger(name, args);\n            },\n\n            _unselect: function(element) {\n                if (this.trigger(UNSELECT, { element: element })) {\n                    return;\n                }\n\n                var rangeSelectedAttr = kendo.attr(\"range-selected\");\n\n                element.removeClass(this.options.selectedClass || SELECTED).removeAttr(rangeSelectedAttr);\n\n                if (this.options.aria) {\n                    element.attr(ARIASELECTED, false);\n                }\n\n                return element;\n            },\n\n            _select: function(e) {\n                if (this._allowSelection(e.event.target)) {\n                    if (!msie || (msie && !$(kendo._activeElement()).is(this.options.inputSelectors))) {\n                        if (this._allowPreventDefault(e.event.target)) {\n                            e.preventDefault();\n                        }\n                    }\n                }\n            },\n\n            _allowPreventDefault: function(target) {\n                var disallowedSelectors = \".k-table-td\";\n                // Required for the paste event in the Grid to work in Chrome.\n                return !$(target).is(disallowedSelectors) || !this.options.allowPaste;\n            },\n\n            _allowSelection: function(target) {\n                if ($(target).is(this.options.inputSelectors)) {\n                    this.userEvents.cancel();\n                    this._downTarget = null;\n                    return false;\n                }\n\n                return true;\n            },\n\n            resetTouchEvents: function() {\n                this.userEvents.cancel();\n            },\n\n            clear: function() {\n                var items = this.element.find(this.options.filter + \".\" + (this.options.selectedClass || SELECTED));\n                this._unselect(items);\n            },\n\n            selectRange: function(start, end) {\n                var that = this,\n                    idx,\n                    tmp,\n                    items;\n\n                that.clear();\n\n                if (that.element.length > 1) {\n                    items = that.options.continuousItems();\n                }\n\n                if (!items || !items.length) {\n                    items = that.element.find(that.options.filter);\n                }\n\n                start = $.inArray($(start)[0], items);\n                end = $.inArray($(end)[0], items);\n\n                if (start > end) {\n                    tmp = start;\n                    start = end;\n                    end = tmp;\n                }\n\n                if (!that.options.useAllItems) {\n                    end += that.element.length - 1;\n                }\n\n                for (idx = start; idx <= end; idx ++ ) {\n                    that._selectElement(items[idx], true);\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n\n                that.element.off(NS);\n\n                that.userEvents.destroy();\n\n                that._marquee = that._lastActive = that.element = that.userEvents = null;\n            }\n        });\n\n        const RangeSelectable = Widget.extend({\n            init: function(element, options) {\n                let that = this,\n                ns,\n                cellSelectorValid;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.widget = options.widget;\n                ns = options.ns;\n                cellSelectorValid = options.filter;\n\n                that.userEvents = new kendo.UserEvents(that.element, {\n                    global: true,\n                    allowSelection: true,\n                    filter: that.options.filter,\n                    tap: that._tap.bind(that),\n                    touchAction: NONE\n                });\n\n                if (support.touch) {\n                    element.on(TOUCHSTART + ns, cellSelectorValid, that._mouseEnter.bind(that))\n                        .on(TOUCHEND + ns + \" \" + TOUCHMOVE + ns, cellSelectorValid, that._mouseLeave.bind(that));\n                } else {\n                    element.on(MOUSEENTER + ns, cellSelectorValid, that._mouseEnter.bind(that))\n                        .on(MOUSELEAVE + ns, cellSelectorValid, that._mouseLeave.bind(that));\n                }\n            },\n\n            events: [CHANGE],\n\n            options: {\n                name: \"RangeSelectable\",\n                filter: \">*\",\n                inputSelectors: INPUTSELECTOR,\n                resetOnStart: false,\n                multiple: false,\n                dragToSelect: true,\n                cellSelector: \"*\",\n                ns: \"\",\n                reverse: false,\n                relatedTarget: $.noop\n            },\n\n            destroy: function() {\n                let that = this;\n\n                Widget.fn.destroy.call(that);\n\n                that.userEvents.destroy();\n                that.widget = null;\n\n                that._lastActive = that.element = that.userEvents = that._start = that._end = null;\n            },\n\n            _allowSelection: function(target) {\n                if ($(target).is(this.options.inputSelectors)) {\n                    this.userEvents.cancel();\n                    return false;\n                }\n\n                return true;\n            },\n\n            _mouseEnter: function(e) {\n                let that = this,\n                    cell = $(e.currentTarget),\n                    range;\n\n                cell.addClass(HOVER);\n\n                range = that.widget.selectRange();\n\n                if (that.options.resetOnStart && range.end) {\n                    return;\n                }\n\n                if (range.target === START && that._end) {\n                    that.range(cell, that._end, true, that.options.reverse);\n                }\n\n                if (range.target === END) {\n                    that.range(that._start, cell, true, that.options.reverse);\n                }\n            },\n\n            _mouseLeave: function(e) {\n                $(e.currentTarget).removeClass(HOVER);\n            },\n\n            start: function(element, preventFlagUpdate) {\n                if (element === undefined$1 || element === null) {\n                    return this._start;\n                }\n\n                element.addClass(SELECTED + \" \" + RANGESTART).attr(ARIASELECTED, true);\n\n                if (!preventFlagUpdate) {\n                    this._start = element;\n                }\n            },\n\n            end: function(element, preventFlagUpdate) {\n                if (element === undefined$1 || element === null) {\n                    return this._start;\n                }\n\n                element.addClass(SELECTED + \" \" + RANGEEND).attr(ARIASELECTED, true);\n\n                if (!preventFlagUpdate) {\n                    this._end = element;\n                }\n            },\n\n            mid: function(elements) {\n                let tables = this.element.find(\"table\"),\n                    options = this.options;\n\n                elements.addClass(MID).attr(ARIASELECTED, true);\n                tables.each(function() {\n                    let that = $(this);\n                    let lastCell = that.find(options.cellSelectorValid).last();\n                    let firstCell = that.find(options.cellSelectorValid).first();\n\n                    if (lastCell.hasClass(MID)) {\n                        lastCell.addClass(SPLITEND);\n                    }\n\n                    if (firstCell.hasClass(MID)) {\n                        firstCell.addClass(SPLITSTART);\n                    }\n                });\n            },\n\n            clear: function(clearVariables) {\n                let options = this.options;\n                this.element.find(options.cellSelector)\n                    .removeClass(MID + \" \" + SPLITEND + \" \" + SPLITSTART);\n\n                this.clearStartEnd();\n\n                if (clearVariables) {\n                    this._start = this._end = null;\n                }\n            },\n\n            clearStartEnd: function() {\n                let that = this, options = that.options;\n                that.element.find(options.cellSelector).removeClass(RANGESTART + \" \" + SELECTED + \" \" + RANGEEND).removeAttr(ARIASELECTED);\n            },\n\n            selectFrom: function(start) {\n                let that = this,\n                    options = this.options,\n                    items,\n                    startIdx;\n\n                items = that.element.find(options.cellSelector);\n\n                startIdx = $.inArray($(start)[0], items);\n\n                that.clear();\n                that.start(start);\n\n                items = items.filter(function(index) {\n                    return index > startIdx;\n                });\n                that.mid(items);\n            },\n\n            selectTo: function(end) {\n                let that = this,\n                    options = this.options,\n                    items,\n                    endIdx;\n\n                items = that.element.find(options.cellSelector);\n\n                endIdx = $.inArray($(end)[0], items);\n\n                that.clear();\n\n                items = items.filter(function(index) {\n                    return index < endIdx;\n                });\n                that.mid(items);\n                that.end($(end));\n            },\n\n            range: function(start, end, preventFlagUpdate, invert) {\n                let that = this,\n                    options = this.options,\n                    items,\n                    startIdx,\n                    endIdx;\n\n                if (start === undefined$1) {\n                    return { start: that._start, end: that._end };\n                }\n\n                items = that.element.find(options.cellSelector);\n\n                startIdx = $.inArray($(start)[0], items);\n                endIdx = $.inArray($(end)[0], items);\n\n                if (!start || (start && !start.length)) {\n                    that._useStart = true;\n                }\n\n                that.clear();\n\n                if (start) {\n                    that.start($(start), preventFlagUpdate);\n                }\n\n                items = items.filter(function(index) {\n                   if (endIdx < 0 || (!start && startIdx < 0)) {\n                       return;\n                   }\n\n                    return (index > startIdx && index < endIdx) || options.reverse && (index < startIdx && index > endIdx);\n                });\n\n                that.mid(items);\n\n                if (end) {\n                    that.end($(end), preventFlagUpdate);\n                } else {\n                    that._useEnd = true;\n                }\n\n                if (startIdx > endIdx && invert) {\n                    that.clearStartEnd();\n                    that.start($(end), true);\n                    that.end($(start), true);\n                }\n            },\n\n            change: function() {\n                this.trigger(CHANGE);\n            },\n\n            _clearFlags: function() {\n                this._useStart = this._useEnd = false;\n            },\n\n            _tap: function(e) {\n                let target = $(e.target),\n                    that = this,\n                    range = that.widget.selectRange() || {},\n                    start = range.start,\n                    end = range.end,\n                    currentDate = kendo.calendar.toDateObject($(target).find(\"span\")),\n                    options = that.options,\n                    resetOnStart = options.resetOnStart;\n\n                that._lastActive = target;\n\n                if (!start && !end) {\n                    that.clear(true);\n                    if (range.target === START) {\n                        that.start(target);\n                    }\n\n                    if (range.target === END) {\n                        that.end(target);\n                    }\n\n                    that._clearFlags();\n                    that.trigger(CHANGE);\n                    return;\n                }\n\n                if (!start && end) {\n                    if (range.target === END) {\n                        that.end(target);\n                    } else {\n                        if (+currentDate > +range.end && !options.reverse) {\n                            that.clear(true);\n                            that.start(target);\n                        } else {\n                            that.range(target, that._end, false, true);\n                        }\n                    }\n                    that.trigger(CHANGE);\n                    that._clearFlags();\n                    return;\n                }\n\n                if (start && !end) {\n                    if (range.target === END && !options.reverse && +start > +currentDate) {\n                        that.clear(true);\n\n                        if (resetOnStart) {\n                            that.start(target);\n                        } else {\n                            that.end(target);\n                        }\n                    } else if (range.target === START) {\n                        that.start(target);\n                    } else {\n                        that.range(that._start, target, false, true);\n                    }\n                    that.trigger(CHANGE);\n                    that._clearFlags();\n                    return;\n                }\n\n                if (start && end) {\n                    if (!options.reverse) {\n                        if (+start > +currentDate && range.target === END) {\n                            that.clear(true);\n                            if (resetOnStart) {\n                                that.start(target);\n                                that.end(null);\n                                range.target = START;\n                            } else {\n                                that.start(null);\n                                that.end(target);\n                            }\n                            that.trigger(CHANGE);\n                            return;\n                        }\n\n                        if (+start < +currentDate && range.target === START) {\n                            if (+currentDate > +range.end) {\n                                that.clear(true);\n                                that.start(target);\n                                that.end(null);\n                            } else {\n                                that.range(target, that._end);\n                            }\n                            that.trigger(CHANGE);\n                            return;\n                        }\n\n                        if (range.target === START) {\n                            that.range(target, that._end);\n                        }\n\n                        if (range.target === END) {\n                            that.range(that._start, target);\n                        }\n\n                        that.trigger(CHANGE);\n                        return;\n                    }\n\n                    if (resetOnStart) {\n                        if (range.target === START) {\n                            that.range(target, that._end, false, true);\n                        } else {\n                            that.range(that._start, target, false, true);\n                        }\n                    } else {\n                        if (range.target === START) {\n                            that.start(target);\n                        } else {\n                            that.end(target);\n                        }\n                    }\n\n                    that.trigger(CHANGE);\n                }\n            }\n        });\n\n        Selectable.parseOptions = function(selectable) {\n            var selectableMode = selectable.mode || selectable;\n            var asLowerString = typeof selectableMode === \"string\" && selectableMode.toLowerCase();\n            return {\n                multiple: asLowerString && asLowerString.indexOf(\"multiple\") > -1,\n                cell: asLowerString && asLowerString.indexOf(\"cell\") > -1,\n                range: asLowerString && asLowerString.indexOf(\"range\") > -1,\n                single: asLowerString && asLowerString.indexOf(\"single\") > -1\n            };\n        };\n\n        function compareElements(element, toCompare) {\n\n            if (element.length !== toCompare.length) {\n                return false;\n            }\n\n            for (var i = 0; i < element.length; i++) {\n                if (element[i] !== toCompare[i]) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n\n        function collision(element, position) {\n            if (!element.is(\":visible\")) {\n                return false;\n            }\n\n            var elementPosition = kendo.getOffset(element),\n                right = position.left + position.width,\n                bottom = position.top + position.height;\n\n            elementPosition.right = elementPosition.left + kendo._outerWidth(element);\n            elementPosition.bottom = elementPosition.top + kendo._outerHeight(element);\n\n            return !(elementPosition.left > right ||\n                elementPosition.right < position.left ||\n                elementPosition.top > bottom ||\n                elementPosition.bottom < position.top);\n        }\n\n        function overlaps(firstRect, secondRect) {\n            return !(firstRect.right <= secondRect.left ||\n                firstRect.left >= secondRect.right ||\n                firstRect.bottom <= secondRect.top ||\n                firstRect.top >= secondRect.bottom);\n        }\n\n        kendo.ui.plugin(Selectable);\n        kendo.ui.plugin(RangeSelectable);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}