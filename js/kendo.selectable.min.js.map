{"version":3,"sources":["raw-js/kendo.selectable.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendoselectable","js","this","$","undefined$1","kendo","window","Widget","ui","abs","Math","ARIASELECTED","SELECTED","ACTIVE","SELECTABLE","CHANGE","CHANGING","UNSELECT","UNSELECTING","INPUTSELECTOR_ICONSSELECTOR_FONT","INPUTSELECTOR_ICONSSELECTOR_SVG","replaceAll","INPUTSELECTOR_SVG_PARTS","split","map","selector","join","INPUTSELECTOR","msie","support","browser","supportEventDelegation","extend","on","find","trigger","end","off","Selectable","init","element","options","multiple","dragToSelect","that","fn","call","_marquee","_lastActive","addClass","relatedTarget","userEvents","UserEvents","allowSelection","filter","tap","_tap","bind","touchAction","_hold","_start","_move","_end","_select","events","name","inputSelectors","holdToDrag","noop","ignoreOverlapped","addIdToRanges","toggleable","_isElement","target","idx","elements","length","result","e","selected","ctrlKey","event","metaKey","shiftKey","selectedClass","whichCode","which","buttonCode","button","closest","_allowSelection","originalEvent","hasClass","add","_lastRange","compareElements","selectRange","_firstSelectee","_notify","_unselect","value","clear","_downTarget","_activated","_isActivated","currentElement","cancel","useAllItems","_items","sender","capture","appendTo","document","body","css","left","x","client","top","y","width","height","_selectElement","position","startLocation","location","initialDelta","_invalidateSelectables","preventDefault","rangeSelectedAttr","attr","uid","guid","remove","removeClass","i","_currentlyActive","related","toSelect","items","eq","collision","_collidesWithActiveElement","push","marqueeRect","activeElementRect","activeElements","elemRect","getBoundingClientRect","leftRight","isRtl","tempRect","right","bottom","overlaps","val","selectElement","each","selectedRanges","_","elem","rangeId","mapLocation","selectedSingleItems","toArray","preventNotify","isPrevented","aria","args","removeAttr","_activeElement","is","_allowPreventDefault","resetTouchEvents","start","tmp","continuousItems","inArray","destroy","toCompare","elementPosition","getOffset","_outerWidth","_outerHeight","firstRect","secondRect","parseOptions","selectable","selectableMode","mode","asLowerString","toLowerCase","indexOf","cell","plugin","jQuery"],"mappings":"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","file":"kendo.selectable.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.userevents.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.userevents'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendoselectable = global.kendoselectable || {}, global.kendoselectable.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"selectable\",\n        name: \"Selectable\",\n        category: \"framework\",\n        depends: [ \"core\", \"userevents\" ],\n        advanced: true\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            abs = Math.abs,\n            ARIASELECTED = \"aria-selected\",\n            SELECTED = \"k-selected\",\n            ACTIVE = \"k-selecting\",\n            SELECTABLE = \"k-selectable\",\n            CHANGE = \"change\",\n            CHANGING = \"changing\",\n            NS = \".kendoSelectable\",\n            UNSELECT = \"unselect\",\n            UNSELECTING = \"k-unselecting\",\n            INPUTSELECTOR_ICONSSELECTOR_FONT = \"span.k-icon.k-i-caret-alt-down,span.k-icon.k-i-caret-alt-up,.k-icon.k-i-caret-alt-down,.k-icon.k-i-caret-alt-right,.k-icon.k-i-caret-alt-left\",\n            INPUTSELECTOR_ICONSSELECTOR_SVG = INPUTSELECTOR_ICONSSELECTOR_FONT.replaceAll('k-i', 'k-svg-i'),\n            INPUTSELECTOR_SVG_PARTS = INPUTSELECTOR_ICONSSELECTOR_SVG.split(\",\").map((selector) => selector + \" *\").join(\",\"),\n            INPUTSELECTOR = `input,a,textarea,.k-multiselect-wrap,select,button,${INPUTSELECTOR_ICONSSELECTOR_FONT},${INPUTSELECTOR_ICONSSELECTOR_SVG},${INPUTSELECTOR_SVG_PARTS},.k-button>span,.k-button>span *,.k-button>img,label.k-checkbox-label.k-no-text,span.k-numeric-wrap,.k-focusable`,\n            msie = kendo.support.browser.msie,\n            supportEventDelegation = false,\n            extend = $.extend;\n\n            (function($) {\n                (function() {\n                    $('<div class=\"parent\"><span></span></div>')\n                    .on(\"click\", \">*\", function() {\n                        supportEventDelegation = true;\n                    })\n                    .find(\"span\")\n                    .trigger(\"click\")\n                    .end()\n                    .off();\n                })();\n            })($);\n\n        var Selectable = Widget.extend({\n            init: function(element, options) {\n                var that = this,\n                    multiple,\n                    dragToSelect;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._marquee = $(\"<div class='k-marquee'><div class='k-marquee-color'></div></div>\");\n                that._lastActive = null;\n                that.element.addClass(SELECTABLE);\n\n                that.relatedTarget = that.options.relatedTarget;\n\n                multiple = that.options.multiple;\n                dragToSelect = that.options.dragToSelect;\n\n                that.userEvents = new kendo.UserEvents(that.element, {\n                    global: true,\n                    allowSelection: true,\n                    filter: (!supportEventDelegation ? \".\" + SELECTABLE + \" \" : \"\") + that.options.filter,\n                    tap: that._tap.bind(that),\n                    touchAction: multiple ? \"none\" : \"pan-x pan-y\"\n                });\n\n                if (multiple) {\n                    if (dragToSelect) {\n                        that.userEvents\n                            .bind(\"hold\", that._hold.bind(that))\n                            .bind(\"start\", that._start.bind(that))\n                            .bind(\"move\", that._move.bind(that))\n                            .bind(\"end\", that._end.bind(that));\n                    }\n                    that.userEvents\n                       .bind(\"select\", that._select.bind(that));\n                }\n            },\n\n            events: [CHANGE, CHANGING, UNSELECT],\n\n            options: {\n                name: \"Selectable\",\n                filter: \">*\",\n                inputSelectors: INPUTSELECTOR,\n                multiple: false,\n                holdToDrag: false,\n                dragToSelect: true,\n                relatedTarget: $.noop,\n                ignoreOverlapped: false,\n                addIdToRanges: false,\n                toggleable: false,\n            },\n\n            _isElement: function(target) {\n                var elements = this.element;\n                var idx, length = elements.length, result = false;\n\n                target = target[0];\n\n                for (idx = 0; idx < length; idx ++) {\n                    if (elements[idx] === target) {\n                        result = true;\n                        break;\n                    }\n                }\n\n                return result;\n            },\n\n            _tap: function(e) {\n                var target = $(e.target),\n                    that = this,\n                    options = that.options,\n                    ctrlKey = e.event.ctrlKey || e.event.metaKey,\n                    multiple = that.options.multiple,\n                    shiftKey = multiple && e.event.shiftKey,\n                    selectedClass = that.options.selectedClass || SELECTED,\n                    selected,\n                    whichCode = e.event.which,\n                    buttonCode = e.event.button;\n\n                //in case of hierarchy or right-click\n                if (!that._isElement(target.closest(\".\" + SELECTABLE)) || whichCode && whichCode == 3 || buttonCode && buttonCode == 2) {\n                    return;\n                }\n\n                if (!this._allowSelection(e.event.target)) {\n                    return;\n                }\n\n                if (that.trigger(CHANGING, { target: target, originalEvent: e.event })) {\n                    return;\n                }\n\n                selected = target.hasClass(selectedClass);\n\n                target = target.add(that.relatedTarget(target));\n\n                if (!multiple) {\n                    if (selected && ctrlKey) {\n                        that._unselect(target);\n                        that._notify(CHANGE, e);\n                    } else if (!selected) {\n                        that.clear();\n                        that.value(target, e);\n                        that._notify(CHANGE, e);\n                    }\n                } else {\n                    if (shiftKey) {\n                        if (!that._lastRange || !compareElements(that._lastRange, target)) {\n                            that.selectRange(that._firstSelectee(), target, e);\n                            that._notify(CHANGE, e);\n                        }\n                        that._lastRange = target;\n                    } else {\n                        that._lastRange = null;\n                        if (selected && (ctrlKey || options.toggleable)) {\n                            that._unselect(target);\n                            that._notify(CHANGE, e);\n                        } else if (ctrlKey || options.toggleable) {\n                            that.value(target, e);\n                            that._notify(CHANGE, e);\n                        } else if (!selected || that.value().length > 1) {\n                            that.clear();\n                            that.value(target, e);\n                            that._notify(CHANGE, e);\n                        }\n\n                        that._lastActive = that._downTarget = target;\n                    }\n                }\n            },\n\n            _hold: function(e) {\n                if (this.options.holdToDrag) {\n                    // serves as a drag hint to indicate start of selection\n                    this._tap(e);\n                }\n\n                this._activated = true;\n            },\n\n            _isActivated: function() {\n                return this.options.holdToDrag ? this._activated : true;\n            },\n\n            _start: function(e) {\n                var that = this,\n                    target = $(e.target),\n                    selectedClass = that.options.selectedClass || SELECTED,\n                    selected = target.hasClass(selectedClass),\n                    currentElement,\n                    ctrlKey = e.event.ctrlKey || e.event.metaKey;\n\n                if (!that._isActivated() || !this._allowSelection(e.event.target)) {\n                    return;\n                }\n\n                if (that.trigger(CHANGING, { target: target, originalEvent: e.event })) {\n                    that.userEvents.cancel();\n                    return;\n                }\n\n                that._downTarget = target;\n\n                //in case of hierarchy\n                if (!that._isElement(target.closest(\".\" + SELECTABLE))) {\n                    that.userEvents.cancel();\n                    return;\n                }\n\n                if (that.options.useAllItems) {\n                    that._items = that.element.find(that.options.filter);\n                } else {\n                    currentElement = target.closest(that.element);\n                    that._items = currentElement.find(that.options.filter);\n                }\n\n                e.sender.capture();\n\n                that._marquee\n                    .appendTo(document.body)\n                    .css({\n                        left: e.x.client + 1,\n                        top: e.y.client + 1,\n                        width: 0,\n                        height: 0\n                    });\n\n                if (!ctrlKey) {\n                    that.clear();\n                }\n\n                target = target.add(that.relatedTarget(target));\n                if (selected) {\n                    that._selectElement(target, true);\n                    if (ctrlKey) {\n                        target.addClass(UNSELECTING);\n                    }\n                }\n            },\n\n            _move: function(e) {\n                var that = this,\n                    position = {\n                        left: e.x.startLocation > e.x.location ? e.x.location : e.x.startLocation,\n                        top: e.y.startLocation > e.y.location ? e.y.location : e.y.startLocation,\n                        width: abs(e.x.initialDelta),\n                        height: abs(e.y.initialDelta)\n                    };\n\n                if (!that._isActivated()) {\n                    return;\n                }\n\n                that._marquee.css(position);\n\n                that._invalidateSelectables(position, (e.event.ctrlKey || e.event.metaKey));\n\n                e.preventDefault();\n            },\n\n            _end: function(e) {\n                var that = this,\n                rangeSelectedAttr = kendo.attr(\"range-selected\"),\n                uid = kendo.guid();\n\n                if (!that._isActivated()) {\n                    return;\n                }\n\n                that._activated = false;\n\n                that._marquee.remove();\n\n                that._unselect(that.element\n                    .find(that.options.filter + \".\" + UNSELECTING))\n                    .removeClass(UNSELECTING);\n\n\n                var target = that.element.find(that.options.filter + \".\" + ACTIVE);\n                target = target.add(that.relatedTarget(target));\n\n                if (that.options.addIdToRanges) {\n                    for (var i = 0; i < that._currentlyActive.length; i++) {\n                        $(that._currentlyActive[i]).attr(rangeSelectedAttr, uid);\n                    }\n                }\n\n                if (!that._lastRange || !compareElements(that._lastRange, target)) {\n                    that.value(target, e);\n                    that._notify(CHANGE, e);\n                }\n                that._lastRange = target;\n                that._lastActive = that._downTarget;\n                that._items = null;\n            },\n\n            _invalidateSelectables: function(position, ctrlKey) {\n                var idx,\n                    length,\n                    target = this._downTarget[0],\n                    items = this._items,\n                    selectedClass = this.options.selectedClass || SELECTED,\n                    related,\n                    toSelect;\n\n                this._currentlyActive = [];\n\n                for (idx = 0, length = items.length; idx < length; idx ++) {\n                    toSelect = items.eq(idx);\n                    related = toSelect.add(this.relatedTarget(toSelect));\n\n                    if (collision(toSelect, position)) {\n                        if (toSelect.hasClass(selectedClass)) {\n                            if (ctrlKey && target !== toSelect[0]) {\n                                related.removeClass(selectedClass).addClass(UNSELECTING);\n                            }\n                        } else if (!toSelect.hasClass(ACTIVE) && !toSelect.hasClass(UNSELECTING) && !this._collidesWithActiveElement(related, position)) {\n                            related.addClass(ACTIVE);\n                        }\n                        this._currentlyActive.push(related[0]);\n                    } else {\n                        if (toSelect.hasClass(ACTIVE)) {\n                            related.removeClass(ACTIVE);\n                        } else if (ctrlKey && toSelect.hasClass(UNSELECTING)) {\n                            related.removeClass(UNSELECTING).addClass(selectedClass);\n                        }\n                    }\n                }\n            },\n\n            _collidesWithActiveElement: function(element, marqueeRect) {\n                if (!this.options.ignoreOverlapped) {\n                    return false;\n                }\n\n                var activeElements = this._currentlyActive;\n                var elemRect = element[0].getBoundingClientRect();\n                var activeElementRect;\n                var collision = false;\n                var isRtl = kendo.support.isRtl(element);\n                var leftRight = isRtl ? \"right\" : \"left\";\n                var tempRect = {};\n\n                marqueeRect.right = marqueeRect.left + marqueeRect.width;\n                marqueeRect.bottom = marqueeRect.top + marqueeRect.height;\n\n                for (var i = 0; i < activeElements.length; i++) {\n                    activeElementRect = activeElements[i].getBoundingClientRect();\n                    if (overlaps(elemRect, activeElementRect)) {\n                        tempRect[leftRight] = leftRight === \"left\" ? activeElementRect.right : activeElementRect.left;\n                        elemRect = extend({}, elemRect, tempRect);\n                        if (elemRect.left > elemRect.right) {\n                            return true;\n                        }\n                        collision = !overlaps(elemRect, marqueeRect);\n                    }\n                }\n                return collision;\n            },\n\n            value: function(val) {\n                var that = this,\n                    selectElement = that._selectElement.bind(that);\n\n                if (val) {\n                    val.each(function() {\n                        selectElement(this);\n                    });\n\n                    return;\n                }\n\n                return that.element.find(that.options.filter + \".\" + (that.options.selectedClass || SELECTED));\n            },\n\n            selectedRanges: function() {\n                var that = this;\n                var rangeSelectedAttr = kendo.attr(\"range-selected\");\n                var map = {};\n\n                that.element.find(\"[\" + rangeSelectedAttr + \"]\").each(function(_, elem) {\n                    var rangeId = $(elem).attr(rangeSelectedAttr);\n                    var mapLocation = map[rangeId];\n\n                    if (!mapLocation) {\n                        mapLocation = map[rangeId] = [];\n                    }\n\n                    mapLocation.push($(elem));\n                });\n\n                return map;\n            },\n\n            selectedSingleItems: function() {\n                var that = this;\n                var rangeSelectedAttr = kendo.attr(\"range-selected\");\n\n                return that.element.find(that.options.filter + \".\" + (that.options.selectedClass || SELECTED) + \":not([\" + rangeSelectedAttr + \"])\").toArray().map(function(elem) {\n                    return $(elem);\n                });\n            },\n\n            _firstSelectee: function() {\n                var that = this,\n                    selected;\n\n                if (that._lastActive !== null) {\n                    return that._lastActive;\n                }\n\n                selected = that.value();\n                return selected.length > 0 ?\n                        selected[0] :\n                        that.element.find(that.options.filter)[0];\n            },\n\n            _selectElement: function(element, preventNotify) {\n                var toSelect = $(element),\n                    selectedClass = this.options.selectedClass || SELECTED,\n                    isPrevented = !preventNotify && this._notify(\"select\", { element: element });\n\n                toSelect.removeClass(ACTIVE);\n                if (!isPrevented) {\n                     toSelect.addClass(selectedClass);\n\n                    if (this.options.aria) {\n                        toSelect.attr(ARIASELECTED, true);\n                    }\n                }\n            },\n\n            _notify: function(name, args) {\n                args = args || { };\n                return this.trigger(name, args);\n            },\n\n            _unselect: function(element) {\n                if (this.trigger(UNSELECT, { element: element })) {\n                    return;\n                }\n\n                var rangeSelectedAttr = kendo.attr(\"range-selected\");\n\n                element.removeClass(this.options.selectedClass || SELECTED).removeAttr(rangeSelectedAttr);\n\n                if (this.options.aria) {\n                    element.attr(ARIASELECTED, false);\n                }\n\n                return element;\n            },\n\n            _select: function(e) {\n                if (this._allowSelection(e.event.target)) {\n                    if (!msie || (msie && !$(kendo._activeElement()).is(this.options.inputSelectors))) {\n                        if (this._allowPreventDefault(e.event.target)) {\n                            e.preventDefault();\n                        }\n                    }\n                }\n            },\n\n            _allowPreventDefault: function(target) {\n                var disallowedSelectors = \".k-table-td\";\n                // Required for the paste event in the Grid to work in Chrome.\n                return !$(target).is(disallowedSelectors);\n            },\n\n            _allowSelection: function(target) {\n                if ($(target).is(this.options.inputSelectors)) {\n                    this.userEvents.cancel();\n                    this._downTarget = null;\n                    return false;\n                }\n\n                return true;\n            },\n\n            resetTouchEvents: function() {\n                this.userEvents.cancel();\n            },\n\n            clear: function() {\n                var items = this.element.find(this.options.filter + \".\" + (this.options.selectedClass || SELECTED));\n                this._unselect(items);\n            },\n\n            selectRange: function(start, end) {\n                var that = this,\n                    idx,\n                    tmp,\n                    items;\n\n                that.clear();\n\n                if (that.element.length > 1) {\n                    items = that.options.continuousItems();\n                }\n\n                if (!items || !items.length) {\n                    items = that.element.find(that.options.filter);\n                }\n\n                start = $.inArray($(start)[0], items);\n                end = $.inArray($(end)[0], items);\n\n                if (start > end) {\n                    tmp = start;\n                    start = end;\n                    end = tmp;\n                }\n\n                if (!that.options.useAllItems) {\n                    end += that.element.length - 1;\n                }\n\n                for (idx = start; idx <= end; idx ++ ) {\n                    that._selectElement(items[idx], true);\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n\n                that.element.off(NS);\n\n                that.userEvents.destroy();\n\n                that._marquee = that._lastActive = that.element = that.userEvents = null;\n            }\n        });\n\n        Selectable.parseOptions = function(selectable) {\n            var selectableMode = selectable.mode || selectable;\n            var asLowerString = typeof selectableMode === \"string\" && selectableMode.toLowerCase();\n            return {\n                multiple: asLowerString && asLowerString.indexOf(\"multiple\") > -1,\n                cell: asLowerString && asLowerString.indexOf(\"cell\") > -1\n            };\n        };\n\n        function compareElements(element, toCompare) {\n\n            if (element.length !== toCompare.length) {\n                return false;\n            }\n\n            for (var i = 0; i < element.length; i++) {\n                if (element[i] !== toCompare[i]) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n\n        function collision(element, position) {\n            if (!element.is(\":visible\")) {\n                return false;\n            }\n\n            var elementPosition = kendo.getOffset(element),\n                right = position.left + position.width,\n                bottom = position.top + position.height;\n\n            elementPosition.right = elementPosition.left + kendo._outerWidth(element);\n            elementPosition.bottom = elementPosition.top + kendo._outerHeight(element);\n\n            return !(elementPosition.left > right ||\n                elementPosition.right < position.left ||\n                elementPosition.top > bottom ||\n                elementPosition.bottom < position.top);\n        }\n\n        function overlaps(firstRect, secondRect) {\n            return !(firstRect.right <= secondRect.left ||\n                firstRect.left >= secondRect.right ||\n                firstRect.bottom <= secondRect.top ||\n                firstRect.top >= secondRect.bottom);\n        }\n\n        kendo.ui.plugin(Selectable);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}