{"version":3,"file":"kendo.buttongroup.min.js","names":["factory","define","amd","$","kendo","ui","Widget","ToggleButton","Button","keys","NS","KBUTTON","SELECTED","DISABLED","SELECT","ARIA_DISABLED","DOT","NONE","SINGLE","MULTIPLE","FOCUS","ButtonGroup","window","jQuery","extend","init","element","options","that","this","fn","call","wrapper","selectedIndices","_buttons","_renderItems","items","addClass","KWIDGET","attr","_enable","enable","enabled","forEach","b","selection","select","index","_attachEvents","events","name","preventKeyNav","size","rounded","fillMode","themeColor","badge","item","value","badgeEl","button","isNaN","find","getKendoToggleButton","getKendoButton","validValue","_badge","text","htmlEncode","destroy","empty","remove","current","off","each","i","el","component","toggleClass","focused","hasClass","is","removeAttr","trigger","nodeType","length","idx","toggle","_toggleIndex","_resetIndexes","_addButton","selected","btn","bind","_select","on","_keyDown","e","buttonGroup","focusableItems","focusedElement","currentIndex","isRtl","support","keyCode","LEFT","RIGHT","eq","preventDefault","groupOptions","children","buttons","image","disabled","attrValue","icon","push","encoded","url","html","attributes","appendTo","indices","target","indexOf","splice","plugin"],"sources":["kendo.buttongroup.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.togglebutton', 'kendo.button'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"buttongroup\",\n        name: \"ButtonGroup\",\n        category: \"web\",\n        description: \"The Kendo ButtonGroup widget is a linear set of grouped buttons.\",\n        depends: [ \"core\", \"togglebutton\", \"button\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo;\n        var ui = kendo.ui;\n        var Widget = ui.Widget;\n        var ToggleButton = ui.ToggleButton;\n        var Button = ui.Button;\n        var keys = kendo.keys;\n        var NS = \".kendoButtonGroup\";\n        var KWIDGET = \"k-widget\";\n        var KBUTTONGROUP = \"k-button-group\";\n        var KBUTTON = \"k-button\";\n        var SELECTED = \"k-selected\";\n        var DISABLED = \"k-disabled\";\n        var KFOCUS = \"k-focus\";\n        var SELECT = \"select\";\n        var KEYDOWN = \"keydown\";\n        var ARIA_DISABLED = \"aria-disabled\";\n        var EMPTY = \" \";\n        var DOT = \".\";\n        var NONE = \"none\";\n        var SINGLE = \"single\";\n        var MULTIPLE = \"multiple\";\n        var TOGGLE = \"toggle\";\n        var FOCUS = \"focus\";\n\n        var ButtonGroup = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.wrapper = that.element;\n\n                that.selectedIndices = [];\n\n                that._buttons = that._renderItems(that.options.items);\n\n                that.element\n                    .addClass(KWIDGET + EMPTY + KBUTTONGROUP)\n                    .attr(\"role\", \"group\");\n\n                that._enable = true;\n\n                if (!that.options.enable || !that.options.enabled) {\n                    that._enable = false;\n                    that.element\n                            .attr(ARIA_DISABLED, true)\n                            .addClass(DISABLED);\n\n                    that._buttons.forEach(function (b) {\n                        b.enable(false);\n                    });\n                }\n\n                if (that.options.selection !== NONE) {\n                    that.select(that.options.index);\n                }\n\n                that._attachEvents();\n            },\n\n            events: [\n                SELECT\n            ],\n\n            options: {\n                name: \"ButtonGroup\",\n                selection: SINGLE,\n                index: -1,\n                enable: true,\n                enabled: true,\n                preventKeyNav: false,\n                size: \"medium\",\n                rounded: \"medium\",\n                fillMode: \"solid\",\n                themeColor: \"base\"\n            },\n\n            badge: function(item, value) {\n                var that = this,\n                    element = that.element,\n                    button = !isNaN(item) ? that._buttons[item] : element.find(item).getKendoToggleButton() || element.find(item).getKendoButton(),\n                    validValue = value || value === 0,\n                    badge, badgeEl;\n\n                if (!button) {\n                    return;\n                }\n\n                badge = button.badge;\n\n                if (!badge && validValue) {\n                    button._badge({ text: kendo.htmlEncode(value) });\n                    return kendo.htmlEncode(value);\n                }\n\n                if (validValue) {\n                    badge.text(kendo.htmlEncode(value));\n                } else if (value === false) {\n                    button.badge = null;\n                    badgeEl = badge.element;\n                    badge.destroy();\n                    badgeEl.empty().remove();\n                    return;\n                }\n\n                return badge ? badge.text() : null;\n            },\n\n            current: function() {\n                return this.element.find(DOT + SELECTED);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.element.off(NS);\n\n                that.element.find(DOT + KBUTTON).each(function(i, el) {\n                    var component = $(el).getKendoToggleButton() || $(el).getKendoButton();\n\n                    if (component) {\n                        component.destroy();\n                    }\n                });\n\n                Widget.fn.destroy.call(that);\n            },\n\n            enable: function(enable) {\n                if (typeof enable == \"undefined\") {\n                    enable = true;\n                }\n\n                this.element\n                        .attr(ARIA_DISABLED, !enable)\n                        .toggleClass(DISABLED, !enable);\n\n                this._buttons.forEach(function (b) {\n                    var focused = b.element.hasClass(KFOCUS) || b.element.is(\":focus\");\n\n                    b.enable(enable);\n\n                    if (focused) {\n                        b.element.removeAttr(\"disabled\").addClass(\"k-focus\").trigger(\"focus\");\n                    }\n                });\n\n                this._enable = this.options.enable = enable;\n            },\n\n            select: function(el) {\n                var that = this,\n                    button,\n                    index = -1;\n\n                if (this.options.selection === NONE || el === undefined$1 || el === -1) {\n                    return;\n                }\n\n                if (typeof el === \"number\") {\n                    index = el;\n                } else if (el.nodeType) {\n                    el = $(el);\n                    index = el.index();\n                } else {\n                    index = el.index();\n                }\n\n                button = that._buttons[index];\n\n                if (!button) {\n                    return;\n                }\n\n                if (that.options.selection === MULTIPLE) {\n                    if (el.length > 1) {\n                        el.each(function (i, element) {\n                            var idx = $(element).index();\n\n                            that._buttons[idx].toggle();\n                            that._toggleIndex(idx);\n                        });\n                    } else {\n                        that._buttons[index].toggle();\n                        that._toggleIndex(index);\n                    }\n                } else {\n                    that._resetIndexes(index);\n                }\n            },\n\n            _addButton: function(el, options) {\n                if (this.options.selection === NONE) {\n                    delete options.selected;\n\n                    return new Button(el, options);\n                } else {\n                    var btn = new ToggleButton(el, options);\n\n                    btn.bind(TOGGLE, this._select.bind(this, el));\n\n                    return btn;\n                }\n            },\n\n            _attachEvents: function() {\n                if (!this.options.preventKeyNav) {\n                    this.element.on(KEYDOWN + NS, this._keyDown.bind(this));\n                }\n            },\n\n            _keyDown: function(e) {\n                var that = this,\n                    buttonGroup = $(that.element),\n                    focusableItems = buttonGroup.find(DOT + KBUTTON),\n                    focusedElement = buttonGroup.find(\":focus\"),\n                    currentIndex = focusableItems.index(focusedElement),\n                    isRtl = kendo.support.isRtl(that.element),\n                    itemToFocus;\n\n                if ((e.keyCode === keys.LEFT && !isRtl) || (e.keyCode === keys.RIGHT && isRtl)) {\n                    itemToFocus = currentIndex === 0 ? focusableItems.eq(focusableItems.length - 1) : $(focusableItems[currentIndex - 1]);\n                    itemToFocus.trigger(FOCUS);\n                    e.preventDefault();\n                } else if ((e.keyCode === keys.LEFT && isRtl) || (e.keyCode === keys.RIGHT && !isRtl)) {\n                    itemToFocus = currentIndex + 1 === focusableItems.length ? focusableItems.eq(0) : $(focusableItems[currentIndex + 1]);\n                    itemToFocus.trigger(FOCUS);\n                    e.preventDefault();\n                }\n            },\n\n            _renderItems: function(items) {\n                var that = this,\n                    groupOptions = that.options,\n                    children = that.element.children(),\n                    buttons = [];\n\n                if (children.length > 0) {\n                    children.each(function(index) {\n                        var el = $(this),\n                            image = el.find(\"img\").addClass(\"k-image\"),\n                            disabled = el.is(\"[disabled]\") || el.hasClass(DISABLED),\n                            options = {\n                                badge: kendo.attrValue(el, \"badge\"),\n                                icon: !image[0] ? kendo.attrValue(el, \"icon\") : null,\n                                disabled: disabled,\n                                selected: !disabled ? el.is(DOT + SELECTED) : false,\n                                size: groupOptions.size,\n                                rounded: groupOptions.rounded,\n                                fillMode: groupOptions.fillMode,\n                                themeColor: groupOptions.themeColor\n                            };\n\n                        buttons.push(that._addButton(el, options));\n\n                        if (options.selected) {\n                            that.selectedIndices.push(index);\n                        }\n                    });\n                }\n\n                if (!items) {\n                    return buttons;\n                }\n\n                items.forEach(function(item, index) {\n                    var text = item.text ? item.encoded === false ? item.text : kendo.htmlEncode(item.text) : \"\",\n                        el = item.url ? $(\"<a href=\" + item.url + \">\") : $(\"<button>\");\n\n                    el.html(text);\n\n                    if (item.attributes) {\n                        el.attr(item.attributes);\n                    }\n\n                    item = $.extend({}, item, {\n                        size: groupOptions.size,\n                        rounded: groupOptions.rounded,\n                        fillMode: groupOptions.fillMode,\n                        themeColor: groupOptions.themeColor\n                    });\n\n                    el.appendTo(that.element);\n                    buttons.push(that._addButton(el, item));\n\n                    if (item.selected) {\n                        that.selectedIndices.push(index);\n                    }\n                });\n\n                return buttons;\n            },\n\n            _resetIndexes: function(index) {\n                this.selectedIndices = [];\n                this._buttons.forEach(function (b) {\n                    b.toggle(false);\n                });\n\n                this._buttons[index].toggle(true);\n                this.selectedIndices.push(index);\n            },\n\n            _select: function(button) {\n                var selection = this.options.selection,\n                    index = button.index();\n\n                if (!this._enable || button.is(DOT + DISABLED)) {\n                    return;\n                }\n\n                if (selection === MULTIPLE) {\n                    this._toggleIndex(index);\n                } else if (selection === SINGLE) {\n                    this._resetIndexes(index);\n                }\n\n                this.trigger(SELECT, { indices: this.selectedIndices, target: button });\n            },\n\n            _toggleIndex: function(index) {\n                if (this.selectedIndices.indexOf(index) === -1) {\n                    this.selectedIndices.push(index);\n                } else {\n                    this.selectedIndices.splice(this.selectedIndices.indexOf(index), 1);\n                }\n            }\n        });\n\n        ui.plugin(ButtonGroup);\n    })(window.kendo.jQuery);\n\n}));\n"]}