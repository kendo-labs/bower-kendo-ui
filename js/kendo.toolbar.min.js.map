{"version":3,"sources":["raw-js/kendo.toolbar.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendotoolbar","js","this","$","undefined$1","kendo","window","Widget","ui","isFunction","keys","outerWidth","_outerWidth","ns","TOOLBAR","KBUTTON","BUTTON_GROUP","SPLIT_BUTTON","MENU_BUTTON","SPACER_CLASS","STATE_SELECTED","STATE_HIDDEN","FORCE_HIDDEN","GROUP_START","GROUP_END","MENU_LINK","MENU_ITEM","OVERFLOW_ANCHOR","TEMPLATE_ITEM","TOOLBAR_TOOL","MENU_LINK_TOGGLE","DROPDOWNLIST","INPUT_BUTTON","KFOCUS","TABINDEX_MINUS_1","ARIA_CHECKED","ARIA_LABEL","CHANGE","CLICK","TOGGLE","OPEN","CLOSE","FOCUS","KEYDOWN","SPACER","ROLE","SEPARATOR","OVERFLOW","TABINDEX","INPUT","SELECT","GROUP","DATA_UID","DATA_ROLE_SELECTOR","DATA_TOGGLE_SELECTOR","DATA_ROLE_BUTTONMENU","KENDO_FOCUSABLE","OVERFLOW_OPEN","OVERFLOW_CLOSE","OVERFLOW_NEVER","OVERFLOW_AUTO","OVERFLOW_ALWAYS","KENDO_UID_ATTR","attr","NOTHING","DASH","EMPTY","DOT","COMMA","ID","UID","K_DROP_DOWN_BUTTON","K_SPLIT_BUTTON","K_TOGGLE_BUTTON","K_BUTTON_GROUP","toolbar","WIDGET_TYPES","button","splitButton","dropDownButton","buttonGroup","popupButton","open","TOOLBAR_TOOLS_CLASSES","Button","ToggleButton","SplitButton","DropDownButton","ButtonGroup","ColorPicker","Switch","SAFE_COMPONENTS","POPUP_BUTTON_TEMPLATE","icon","ToolBar","extend","init","element","options","fn","call","_isRtl","support","isRtl","uid","guid","wrapper","addClass","resizable","_resizable","tools","length","items","_extendToolsOptions","_items","_attachEvents","_tabIndex","_applyCssClasses","_shrink","innerWidth","overflowAnchor","appendTo","_toggleOverflowAnchor","notify","events","name","navigateOnTab","evaluateTemplates","size","destroy","that","unbindResize","_resizeHandler","overflowMenu","find","each","i","el","popup","popupWrapper","chooser","getKendoButton","remove","children","add","_add","resize","enable","candidate","focused","_getUid","item","_getItem","component","hasClass","is","removeAttr","trigger","buttonsPopupItem","widgetInstance","closest","menuItem","getSelectedFromGroup","groupName","filter","hide","elements","parentGroupEl","templateEl","toolbarEl","parent","data","_groupVisibleButtons","addBack","_resetTabIndex","_getAllItems","first","siblings","show","removeClass","toggle","checked","parentGroup","group","_toggleIndex","index","toggleClass","toggleTools","conditions","focusable","not","elm","tool","widget","condition","toToggle","processed","_processOptions","template","overflowTemplate","type","_addTemplate","_addCustomWidget","_addDefaultTool","_addSpacer","_addSeparator","insertBefore","_addAttributes","attributes","classes","hidden","align","class","id","overflow","result","overflowComponent","_addMenuItem","componentOptions","indexOf","wrap","op","_addToolbarTool","menuitem","selected","showIcon","imageUrl","showText","text","encoded","append","last","prepend","togglable","menuButtons","forEach","buttons","click","bind","e","_onMenuItemSelect","_addPopupButton","widgetElement","popupComponent","kendoPopup","anchor","on","preventDefault","commandOn","target","value","close","separator","overflowSeparator","spacer","inputsInTemplate","html","popupRef","hasButtons","primary","themeColor","url","preventKeyNav","_attachWidgetEvents","_resetOpen","extensions","_keydown","_focusIn","_focusOut","_onClick","_onToggle","_onSelect","_onOpen","_onClose","$el","originalEvent","event","_childrenWidth","gap","parseInt","css","childrenWidth","Math","ceil","flatMap","_mapTool","parentMessages","defaultTools","style","visibility","knownUid","uidSelector","buttonsPopups","_getNextElement","direction","itemIndex","parentElement","focusableItem","visibleBtns","_hideItem","eq","menu","list","_showMenuItem","_hideMenuItem","keyCode","templateItem","isOverflowAnchor","ESC","stopPropagation","_keyDeactivateTemplate","ENTER","_keyActivateTemplate","altKey","DOWN","SPACEBAR","_keyOpenOverflow","HOME","_keyFocusFirst","END","_keyFocusLast","RIGHT","LEFT","_keyFocusNext","innerFocusable","innerWidget","visible","width","next","_mapAttributes","toolOptions","messages","property","title","command","dialog","toggleCondition","_mapComponent","componentMessages","componentPlaceholder","placeholder","dataSource","default","Object","JSON","stringify","key","ev","sender","map","Array","isArray","t","isPlainObject","deepExtend","_menuItemSelect","shouldSelect","twin","replace","current","select","setTimeout","menuEl","overflowItem","_processInner","parentUid","rootUid","every","b","selection","enabled","_renderOverflow","horizontalDirection","kendoButton","fillMode","ContextMenu","showOn","origin","position","alignToAnchor","uploadWrapper","input","one","files","off","toFocus","onResize","_resize","containerWidth","popupBtnElements","_stretch","commandElement","visibleCommands","activeElement","_showItem","itemOuterWidth","hiddenCommands","focusableItems","firstFocusable","Item","Class","OverflowButton","TemplateItem","ToolBarButton","registerComponent","cssProperties","registerPrefix","plugin","jQuery"],"mappings":"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","file":"kendo.toolbar.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.splitbutton.js'), require('kendo.dropdownbutton.js'), require('kendo.buttongroup.js'), require('kendo.menu.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.splitbutton', 'kendo.dropdownbutton', 'kendo.buttongroup', 'kendo.menu', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendotoolbar = global.kendotoolbar || {}, global.kendotoolbar.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"toolbar\",\n        name: \"ToolBar\",\n        category: \"web\",\n        description: \"The ToolBar widget displays one or more command buttons divided into groups.\",\n        depends: [ \"core\", \"splitbutton\", \"dropdownbutton\", \"buttongroup\", \"menu\", \"icons\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            isFunction = kendo.isFunction,\n            keys = kendo.keys,\n            outerWidth = kendo._outerWidth,\n            ns = \".kendoToolBar\",\n            TOOLBAR = \"toolbar\",\n            KTOOLBAR = \"k-toolbar\",\n            KBUTTON = \"k-button\",\n            BUTTON_GROUP = \"k-button-group\",\n            SPLIT_BUTTON = \"k-split-button\",\n            MENU_BUTTON = \"k-menu-button\",\n            POPUP_BUTTON = \"k-popup-button\",\n            KSEPARATOR = \"k-separator\",\n            SPACER_CLASS = \"k-spacer\",\n            UPLOAD_BUTTON = \"k-upload-button\",\n            POPUP = \"k-popup\",\n            RESIZABLE_TOOLBAR = \"k-toolbar-resizable\",\n            STATE_SELECTED = \"k-selected\",\n            STATE_DISABLED = \"k-disabled\",\n            STATE_HIDDEN = \"k-hidden\",\n            FORCE_HIDDEN = \"k-force-hidden\",\n            GROUP_START = \"k-group-start\",\n            GROUP_END = \"k-group-end\",\n            MENU_LINK = \"k-menu-link\",\n            MENU_ITEM = \"k-menu-item\",\n            OVERFLOW_ANCHOR = \"k-toolbar-overflow-button\",\n            TEMPLATE_ITEM = \"k-toolbar-item\",\n            TOOLBAR_TOOL = \"k-toolbar-tool\",\n            MENU_LINK_TOGGLE = \"k-menu-link-toggle\",\n            DROPDOWNLIST = \"k-dropdownlist\",\n            INPUT_BUTTON = \"k-input-button\",\n            MENU_POPUP = \"k-menu-popup\",\n            KFOCUS = \"k-focus\",\n            SINGLE = \"single\",\n            MULTIPLE = \"multiple\",\n            NONE = \"none\",\n            TABINDEX_MINUS_1 = \"[tabindex=-1]\",\n\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_CHECKED = \"aria-checked\",\n            ARIA_LABEL = \"aria-label\",\n\n            CHANGE = \"change\",\n            CLICK = \"click\",\n            TOGGLE = \"toggle\",\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            FOCUS = \"focus\",\n            FOCUSIN = \"focusin\",\n            FOCUSOUT = \"focusout\",\n            KEYDOWN = \"keydown\",\n\n            SPACER = \"spacer\",\n            PRIMARY = \"primary\",\n            ROLE = \"role\",\n            SEPARATOR = \"separator\",\n            OVERFLOW = \"overflow\",\n            TABINDEX = \"tabindex\",\n            INPUT = \"input\",\n            SELECT = \"select\",\n            HIDDEN = \"hidden\",\n            GROUP = \"group\",\n            DATA_UID = \"data-uid\",\n            DATA_PARENTUID = \"data-parentuid\",\n            DATA_ROLE_SELECTOR = \"[data-role]\",\n            DATA_TOGGLE_SELECTOR = \"[data-toggle]\",\n            DATA_ROLE_BUTTONMENU = \"[data-role=buttonmenu]\",\n\n            KENDO_FOCUSABLE = \":kendoFocusable\",\n\n            OVERFLOW_OPEN = \"overflowOpen\",\n            OVERFLOW_CLOSE = \"overflowClose\",\n            OVERFLOW_NEVER = \"never\",\n            OVERFLOW_AUTO = \"auto\",\n            OVERFLOW_ALWAYS = \"always\",\n\n            KENDO_UID_ATTR = kendo.attr(\"uid\"),\n\n            NOTHING = \"\",\n            DASH = \"_\",\n            EMPTY = \" \",\n            DOT = \".\",\n            COMMA = \",\",\n            ID = \"id\",\n            UID = \"uid\",\n            NBSP = \"&nbsp;\",\n\n            K_DROP_DOWN_BUTTON = \"kendoDropDownButton\",\n            K_SPLIT_BUTTON = \"kendoSplitButton\",\n            K_TOGGLE_BUTTON = \"kendoToggleButton\",\n            K_BUTTON_GROUP = \"kendoButtonGroup\";\n\n            kendo.toolbar = {};\n\n        var WIDGET_TYPES = {\n            button: \"Button\",\n            splitButton: \"SplitButton\",\n            dropDownButton: \"DropDownButton\",\n            buttonGroup: \"ButtonGroup\",\n            popupButton: \"Button\",\n            open: \"Button\"\n        };\n\n        var TOOLBAR_TOOLS_CLASSES = {\n            Button: \"k-toolbar-button\",\n            ToggleButton: \"k-toolbar-toggle-button\",\n            SplitButton: \"k-toolbar-split-button\",\n            DropDownButton: \"k-toolbar-menu-button\",\n            ButtonGroup: \"k-toolbar-button-group\",\n            ColorPicker: \"k-toolbar-color-picker\",\n            Switch: \"k-toolbar-switch\"\n        };\n\n        var SAFE_COMPONENTS = [ \"Button\", \"SplitButton\", \"DropDownButton\", \"ButtonGroup\", \"Switch\", \"ColorPicker\" ];\n\n        var POPUP_BUTTON_TEMPLATE = `<button class=\"k-popup-button\"><span class=\"k-button-icon k-icon\"></span><span class=\"k-button-text\">${kendo.ui.icon(\"caret-alt-down\")}</span></button>`;\n        var TEMPLATE_WRAPPER = \"<div class='k-toolbar-item' aria-keyshortcuts='Enter'></div>\";\n        var CUSTOM_WIDGET_WRAP = \"<span class='k-toolbar-tool k-toolbar-item' tabindex='0'>\";\n        var SEPARATOR_OVERFLOW_EL = \"<li role='separator' class='k-separator k-menu-separator k-hidden'></li>\";\n        var SEPARATOR_EL = '<div role=\"separator\">&nbsp;</div>';\n        var SPACER_EL = '<div>&nbsp;</div>';\n\n        var ToolBar = Widget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, options);\n\n                options = this.options;\n\n                this._isRtl = kendo.support.isRtl(element);\n                this.uid = kendo.guid();\n\n                element = this.wrapper = this.element;\n                element.attr(KENDO_UID_ATTR, this.uid);\n                element.addClass(KTOOLBAR);\n                element.attr(ROLE, TOOLBAR);\n\n                if (options.resizable) {\n                    this._resizable();\n                }\n\n                if (options.tools && options.tools.length > 0) {\n                    options.items = this._extendToolsOptions();\n                }\n\n                if (options.items && options.items.length) {\n                    this._items();\n                }\n\n                this._attachEvents();\n                this._tabIndex();\n                this._applyCssClasses();\n\n                if (options.resizable) {\n                    this._shrink(this.element.innerWidth());\n                    this.overflowAnchor.appendTo(this.wrapper);\n                    this._toggleOverflowAnchor();\n                }\n\n                kendo.notify(this);\n            },\n\n            events: [\n                CLICK,\n                TOGGLE,\n                OPEN,\n                CLOSE,\n                OVERFLOW_OPEN,\n                OVERFLOW_CLOSE,\n                CHANGE\n            ],\n\n            options: {\n                name: \"ToolBar\",\n                items: [],\n                resizable: true,\n                navigateOnTab: false,\n                evaluateTemplates: false,\n                size: \"medium\"\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that.options.resizable) {\n                    kendo.unbindResize(that._resizeHandler);\n                    that.overflowMenu.destroy();\n                }\n\n                that.element.find(DOT + POPUP_BUTTON).each((i, el) => {\n                    var button = $(el).getKendoButton(),\n                        popup, popupWrapper, chooser;\n\n                    if (button) {\n                        chooser = button.chooser;\n                        popup = button.popup;\n                        popupWrapper = popup.wrapper;\n\n                        chooser.destroy();\n                        popup.destroy();\n                        popupWrapper.remove();\n                    }\n                });\n\n                kendo.destroy(that.element.children());\n\n                Widget.fn.destroy.call(that);\n            },\n\n            add: function(options) {\n                this._add(options);\n\n                if (this.options.resizable) {\n                    this.resize(true);\n                }\n            },\n\n            enable: function(candidate, enable) {\n                var that = this,\n                    uid = this._getUid(candidate),\n                    item = this._getItem(candidate, uid),\n                    component = item.component,\n                    buttonPopup, children, focused, wrapper;\n\n                if (typeof enable == \"undefined\") {\n                    enable = true;\n                }\n\n                if (item.component) {\n                    wrapper = component.wrapper;\n                    focused = wrapper.hasClass(KFOCUS) || wrapper.is(\":focus\");\n                    component.enable(enable);\n                    wrapper.find(\"[disabled]\").removeAttr(\"disabled\");\n                    wrapper.removeAttr(\"disabled\");\n\n                    if (focused) {\n                        wrapper.addClass(KFOCUS).trigger(FOCUS);\n                    }\n                } else if (item.buttonsPopupItem.length > 0) {\n                    buttonPopup = kendo.widgetInstance(item.buttonsPopupItem.closest(DOT + MENU_POPUP));\n                    buttonPopup.enable(enable, item.buttonsPopupItem);\n                }\n\n                if (this.overflowMenu) {\n                    this.overflowMenu.enable(item.menuItem, enable);\n\n                    children = this.overflowMenu.element\n                        .find(\"[data-parentuid=\" + uid + \"]\");\n\n                    children.each((i, el) => {\n                        that.overflowMenu.enable($(el), enable);\n                    });\n                }\n            },\n\n            getSelectedFromGroup: function(groupName) {\n                return this.element.find(\"[data-group='\" + groupName + \"']\").filter(DOT + STATE_SELECTED);\n            },\n\n            hide: function(candidate) {\n                var that = this,\n                    uid = this._getUid(candidate),\n                    item = that._getItem(candidate, uid),\n                    elements, parentButtonGroup, children, parentGroupEl;\n\n                if (!item) {\n                    return;\n                }\n\n                elements = item.templateEl.add(item.toolbarEl).add(item.buttonsPopupItem).add(item.menuItem);\n\n                elements.addClass(STATE_HIDDEN);\n                elements.addClass(FORCE_HIDDEN);\n\n                if (this.overflowMenu) {\n                    children = this.overflowMenu.element\n                        .find(\"[data-parentuid=\" + uid + \"]\");\n\n                    children.each((i, el) => {\n                        $(el).addClass(FORCE_HIDDEN);\n                        $(el).addClass(STATE_HIDDEN);\n                    });\n                }\n\n                parentGroupEl = item.toolbarEl.parent().closest(DOT + BUTTON_GROUP);\n                parentButtonGroup = parentGroupEl.data(K_BUTTON_GROUP);\n\n                if (parentButtonGroup) {\n                    if (parentGroupEl.children(\":not(.k-hidden)\").length === 0) {\n                        that.hide(parentGroupEl);\n                    } else {\n                        that._groupVisibleButtons(parentGroupEl);\n                    }\n                }\n\n                if (elements.find(\"[tabindex=0]\").addBack(\"[tabindex=0]\").length > 0) {\n                    this._resetTabIndex(that._getAllItems().first());\n                }\n\n                if (this.options.resizable) {\n                    this.resize(true);\n                }\n            },\n\n            remove: function(candidate) {\n                var that = this,\n                    uid = this._getUid(candidate),\n                    item = this._getItem(candidate, uid),\n                    buttonGroup, children;\n\n                if (!item) {\n                    return;\n                }\n\n                if (item.component) {\n                    buttonGroup = item.toolbarEl.closest('[data-role=\"buttongroup\"]');\n                    if (buttonGroup.length > 0 && item.toolbarEl.siblings().length === 0) {\n                        buttonGroup.data(K_BUTTON_GROUP).destroy();\n                        buttonGroup.remove();\n\n                        item.toolbarEl = $(NOTHING);\n                    } else {\n                        item.component.destroy();\n                    }\n                }\n\n                if (item.templateEl.length > 0) {\n                    item.templateEl.remove();\n                } else if (item.toolbarEl.length > 0) {\n                    item.toolbarEl.remove();\n                }\n\n                if (item.buttonsPopupItem.length > 0) {\n                    item.buttonsPopupItem.remove();\n                }\n\n                if (this.overflowMenu) {\n                    this.overflowMenu.remove(item.menuItem);\n\n                    children = this.overflowMenu.element\n                        .find(\"[data-parentuid=\" + uid + \"]\");\n\n                    children.each((i, el) => {\n                        that.overflowMenu.remove($(el));\n                    });\n                }\n\n                if (this.options.resizable) {\n                    this.resize(true);\n                }\n            },\n\n            show: function(candidate) {\n                var that = this,\n                    uid = this._getUid(candidate),\n                    item = this._getItem(candidate, uid),\n                    elements, parentButtonGroup, children, parentGroupEl;\n\n                if (!item) {\n                    return;\n                }\n\n                elements = item.templateEl.add(item.toolbarEl).add(item.buttonsPopupItem);\n                elements.removeClass(FORCE_HIDDEN);\n                elements.removeClass(STATE_HIDDEN);\n\n                item.menuItem.removeClass(FORCE_HIDDEN);\n\n                if (this.overflowMenu) {\n                    children = this.overflowMenu.element\n                        .find(\"[data-parentuid=\" + uid + \"]\");\n\n                    children.each((i, el) => {\n                        $(el).removeClass(FORCE_HIDDEN);\n                    });\n                }\n\n                parentGroupEl = item.toolbarEl.parent().closest(DOT + BUTTON_GROUP);\n                parentButtonGroup = parentGroupEl.data(K_BUTTON_GROUP);\n\n                if (parentButtonGroup) {\n                    if (parentGroupEl.hasClass(\"k-hidden\") && parentGroupEl.children(\":not(.k-hidden)\").length > 0) {\n                        that.show(parentGroupEl);\n                    } else {\n                        that._groupVisibleButtons(parentGroupEl);\n                    }\n                }\n\n                if (this.options.resizable) {\n                    this.resize(true);\n                }\n            },\n\n            toggle: function(candidate, checked) {\n                var item = this._getItem(candidate),\n                    element = item.toolbarEl,\n                    menuItem = item.menuItem,\n                    button, parentGroup, group, groupButtons;\n\n                if (checked === undefined$1) {\n                    checked = true;\n                }\n\n                button = element.data(K_TOGGLE_BUTTON);\n\n                if (!item.component && menuItem.find(DOT + MENU_LINK_TOGGLE).length === 0) {\n                    return;\n                }\n\n                group = element.data(GROUP);\n\n                if (item.component) {\n                    parentGroup = element.closest(DOT + BUTTON_GROUP).data(K_BUTTON_GROUP);\n\n                    if (parentGroup) {\n                        if (element.hasClass(STATE_SELECTED) !== checked) {\n                            parentGroup._toggleIndex(element.index());\n                        }\n                    }\n\n                    button.toggle(checked);\n\n                    if (checked) {\n                        groupButtons = this.element.find(\"[data-group=\" + group + \"]\");\n\n                        groupButtons.each((i, el) => {\n                            if (el !== element[0]) {\n                                $(el).data(K_TOGGLE_BUTTON).toggle(false);\n                            }\n                        });\n                    }\n                }\n\n                if (menuItem) {\n                    menuItem\n                        .attr(ARIA_CHECKED, checked)\n                        .find(DOT + MENU_LINK_TOGGLE)\n                        .toggleClass(STATE_SELECTED, checked);\n\n                    if (checked && this.overflowMenu) {\n                        groupButtons = this.overflowMenu.element.find(\"[data-group=\" + group + \"]\");\n\n                        groupButtons.each((i, el) => {\n                            if (el !== menuItem[0]) {\n                                $(el)\n                                    .attr(ARIA_CHECKED, false)\n                                    .find(DOT + MENU_LINK_TOGGLE)\n                                    .removeClass(STATE_SELECTED);\n                            }\n                        });\n                    }\n                }\n            },\n\n            toggleTools: function(conditions) {\n                var that = this,\n                    tools = that.element.find(DATA_TOGGLE_SELECTOR),\n                    focusable = that.element.find(KENDO_FOCUSABLE).not(TABINDEX_MINUS_1);\n\n                tools.each(function(index, elm) {\n                    var tool = $(elm),\n                        widget = null,\n                        condition = tool.data(TOGGLE),\n                        toToggle = conditions && conditions[condition];\n\n                    if (tool.is(DATA_ROLE_SELECTOR)) {\n                        widget = kendo.widgetInstance(tool);\n                    }\n\n                    if (widget && widget.enable) {\n                        widget.enable(toToggle || false);\n                    } else {\n                        that.enable(tool, toToggle);\n                    }\n                });\n\n                that.element.find(DATA_TOGGLE_SELECTOR + \"[disabled]\").removeAttr(\"disabled\");\n\n                that.element.find(KENDO_FOCUSABLE).not(TABINDEX_MINUS_1).attr(\"tabindex\", -1);\n                focusable.attr(TABINDEX, 0);\n            },\n\n            _add: function(options) {\n                var processed = this._processOptions(options),\n                    template = processed.template,\n                    overflowTemplate = processed.overflowTemplate,\n                    type = WIDGET_TYPES[processed.type],\n                    element;\n\n                if (template || overflowTemplate) {\n                    element = this._addTemplate(processed);\n                } else if (kendo.ui[processed.component]) {\n                    element = this._addCustomWidget(processed);\n                } else if (type) {\n                    element = this._addDefaultTool(type, processed);\n                } else if (processed.type === SPACER) {\n                    this._addSpacer();\n                } else if (processed.type === SEPARATOR) {\n                    this._addSeparator(processed);\n                }\n\n                if (element) {\n                    if (this.overflowAnchor) {\n                        element.insertBefore(this.overflowAnchor);\n                    } else {\n                        element.appendTo(this.element);\n                    }\n\n                    element.find(\"[disabled]\").removeAttr(\"disabled\");\n\n                    if (element.is(\"[disabled]\")) {\n                        element.removeAttr(\"disabled\");\n                    }\n                }\n            },\n\n            _addAttributes: function(options, element) {\n                var attributes = options.attributes,\n                    classes = NOTHING;\n\n                if (!attributes) {\n                    attributes = {};\n                }\n\n                if (options.hidden) {\n                    classes = STATE_HIDDEN + EMPTY + FORCE_HIDDEN;\n                }\n\n                if (options.align) {\n                    classes = classes + \" k-align-\" + options.align;\n                }\n\n                if (attributes) {\n                    if (attributes.class) {\n                        classes = classes + EMPTY + attributes.class;\n                        delete attributes.class;\n                    }\n\n                    element.attr(attributes);\n                }\n\n                element.addClass(classes);\n                element.attr(KENDO_UID_ATTR, options.uid);\n\n                if (options.id) {\n                    element.attr(ID, options.id);\n                }\n                if (options.overflow === OVERFLOW_NEVER) {\n                    element.attr(\"data-overflow\", OVERFLOW_NEVER);\n                }\n            },\n\n            _addCustomWidget: function(options) {\n                var element = $(options.element || \"<input>\"),\n                    widget, result, classes;\n\n                if (options.overflowComponent) {\n                    this._addMenuItem(options.overflowComponent.type, $.extend({}, options, options.overflowComponent));\n                }\n\n                if (options.attributes) {\n                    classes = options.attributes.class;\n                    delete options.attributes[\"class\"];\n                    element.attr(options.attributes);\n                    delete options.attributes[ARIA_LABEL];\n                }\n\n                if (!options.componentOptions) {\n                    options.componentOptions = {};\n                }\n\n                options.componentOptions.size = this.options.size;\n\n                widget = new kendo.ui[options.component](element, options.componentOptions);\n\n                if (SAFE_COMPONENTS.indexOf(options.component) > -1) {\n                    widget.wrapper.addClass(TOOLBAR_TOOL + \" \" + TOOLBAR_TOOLS_CLASSES[options.component]);\n                    result = widget.wrapper;\n                } else {\n                    result = (widget.wrapper || widget.element).wrap(CUSTOM_WIDGET_WRAP).parent();\n                }\n\n                if (options.attributes) {\n                    options.attributes.class = classes;\n                }\n\n                this._addAttributes(options, result);\n\n                return result;\n            },\n\n            _addDefaultTool: function(component, options) {\n                var element, op;\n\n                if (options.overflow !== OVERFLOW_ALWAYS) {\n                    element = this._addToolbarTool(component, $.extend(true, {}, options));\n                }\n\n                if (this.overflowMenu && options.overflow !== OVERFLOW_NEVER) {\n                    if (options.overflowComponent) {\n                        op = $.extend(true, {}, options, options.overflowComponent);\n                        delete op[\"data-command\"];\n                        this._addMenuItem(\"Button\", op);\n                    } else {\n                        this._addMenuItem(component, $.extend(true, {}, options));\n                    }\n                }\n\n                return element;\n            },\n\n            _addMenuItem: function(component, options) {\n                var that = this,\n                    selected = options.selected,\n                    menuitem;\n\n                delete options.selected;\n\n                if (options.id) {\n                    options.id = options.id + DASH + OVERFLOW;\n                }\n                if (options.showIcon === TOOLBAR) {\n                    delete options.imageUrl;\n                    delete options.icon;\n                }\n\n                if (options.showText === TOOLBAR) {\n                    if (!options.attributes) {\n                        options.attributes = {};\n                    }\n\n                    options.attributes[ARIA_LABEL] = options.text;\n\n                    options.text = NOTHING;\n                } else if (options.text === undefined$1 || options.text === NOTHING) {\n                    options.text = NBSP;\n                    options.encoded = false;\n                }\n\n                that.overflowMenu.append(options);\n                menuitem = that.overflowMenu.element.find(DOT + MENU_ITEM).last();\n\n                if (options.icon) {\n                    menuitem.find(DOT + MENU_LINK).prepend(kendo.ui.icon(options.icon));\n                }\n\n                if (component === \"ToggleButton\" || (component === \"Button\" && options.togglable === true)) {\n                    menuitem.find(DOT + MENU_LINK).addClass(MENU_LINK_TOGGLE);\n\n                    if (selected) {\n                        menuitem.find(DOT + MENU_LINK).addClass(STATE_SELECTED);\n                    }\n\n                    if (options.group) {\n                        menuitem.attr(\"data-group\", options.group);\n                    }\n                } else if (options.menuButtons) {\n                    options.menuButtons.forEach((i) => {\n                        i.overflow = options.overflow;\n                        that._addMenuItem(null, i);\n                    });\n                } else if (options.buttons) {\n                    menuitem.remove();\n                    menuitem = null;\n\n                    options.buttons.forEach((i) => {\n                        var attributes = i.attributes;\n                        i.overflow = options.overflow;\n                        i.attributes = $.extend(attributes, options.attributes);\n\n                        that._addMenuItem(\"Button\", i);\n                    });\n                }\n\n                if (component === \"DropDownButton\") {\n                    menuitem.addClass(STATE_DISABLED);\n                    menuitem.attr(ARIA_DISABLED, true);\n                }\n\n                if (menuitem) {\n                    that._addAttributes(options, menuitem);\n\n                    if (options.overflow === OVERFLOW_AUTO) {\n                        menuitem.addClass(STATE_HIDDEN);\n                    }\n\n                    if (options.click || options.toggle) {\n                        that.overflowMenu.bind(SELECT, (e) => {\n                            if (e.item === menuitem[0]) {\n                                this._onMenuItemSelect(e, options.click, options.toggle);\n                            }\n                        });\n                    }\n                }\n\n                return menuitem;\n            },\n\n            _addPopupButton: function(options) {\n                var that = this,\n                    widgetElement = $(POPUP_BUTTON_TEMPLATE),\n                    component = options.popupComponent,\n                    popup, chooser;\n\n                widgetElement.attr(ARIA_LABEL, options.text);\n\n                popup = $(\"<div/>\").appendTo($(\"<body>\")).kendoPopup({\n                    anchor: widgetElement\n                }).data(\"kendoPopup\");\n\n                widgetElement.on(CLICK + \" touchend\", (e) => {\n                    popup.toggle();\n                    e.preventDefault();\n                });\n\n                chooser = new component(popup.element);\n\n                chooser.bind(options.commandOn, (e) => {\n                    that.trigger(CHANGE, { target: widgetElement, value: e.value || e });\n                    popup.close();\n                });\n\n                return { widgetElement, chooser, popup };\n            },\n\n            _addSeparator: function(options) {\n                var separator = $(SEPARATOR_EL),\n                    overflowSeparator = $(SEPARATOR_OVERFLOW_EL);\n\n                separator.addClass(KSEPARATOR);\n                separator.attr(ROLE, SEPARATOR);\n\n                if (this.overflowAnchor) {\n                    separator.insertBefore(this.overflowAnchor);\n                } else {\n                    separator.appendTo(this.element);\n                }\n\n                this._addAttributes(options, separator);\n\n                if (options.id) {\n                    options.id = options.id + DASH + OVERFLOW;\n                }\n\n                this._addAttributes(options, overflowSeparator);\n\n                if (this.overflowMenu) {\n                    this.overflowMenu.element.append(overflowSeparator);\n                }\n            },\n\n            _addSpacer: function() {\n                var spacer = $(SPACER_EL);\n                spacer.addClass(SPACER_CLASS);\n\n                if (this.overflowAnchor) {\n                    spacer.insertBefore(this.overflowAnchor);\n                } else {\n                    spacer.appendTo(this.element);\n                }\n            },\n\n            _addTemplate: function(options) {\n                var template = options.template,\n                    overflowTemplate = options.overflowTemplate,\n                    element, menuitem, inputsInTemplate = $(NOTHING);\n\n                if (overflowTemplate && this.overflowMenu && options.overflow !== OVERFLOW_NEVER) {\n                    overflowTemplate = isFunction(overflowTemplate) ? overflowTemplate(options)[0] : overflowTemplate;\n                    this.overflowMenu.append({});\n                    menuitem = this.overflowMenu.element\n                        .find(DOT + MENU_ITEM)\n                        .last()\n                        .find(DOT + MENU_LINK)\n                        .html(overflowTemplate)\n                        .parent();\n                }\n\n                if (template && options.overflow !== OVERFLOW_ALWAYS) {\n                    if (this.options.evaluateTemplates) {\n                        template = kendo.template(template);\n                    }\n\n                    template = isFunction(template) ? template(options) : template;\n\n                    element = $(TEMPLATE_WRAPPER);\n                    element.html(template);\n\n                    if (menuitem) {\n                        menuitem.addClass(STATE_HIDDEN);\n                    }\n                }\n\n                if (element) {\n                    inputsInTemplate = element.find(INPUT + COMMA + SELECT);\n                    this._addAttributes(options, element);\n                }\n\n                if (menuitem) {\n                    inputsInTemplate.add(menuitem.find(INPUT + COMMA + SELECT));\n                    this._addAttributes(options, menuitem);\n                }\n\n                if (!this.options.navigateOnTab && inputsInTemplate.length > 0) {\n                    element.attr(TABINDEX, 0);\n                    element.addClass(TOOLBAR_TOOL);\n                    inputsInTemplate.attr(TABINDEX, -1);\n                }\n\n                return element;\n            },\n\n            _addToolbarTool: function(component, options) {\n                var widgetElement = $(\"<button>\"),\n                    hasButtons = false,\n                    widget, element, popupRef;\n\n                if (options.primary === true) {\n                    options.themeColor = PRIMARY;\n                }\n                if (options.url) {\n                    widgetElement = $(\"<a href='\" + options.url + \"'>\");\n                }\n                if (options.showIcon === OVERFLOW) {\n                    delete options.imageUrl;\n                    delete options.icon;\n                }\n                if (options.showText !== OVERFLOW) {\n                    widgetElement.text(options.text);\n                } else {\n                    widgetElement.attr(ARIA_LABEL, options.text);\n                }\n\n                if (options.type === \"popupButton\") {\n                    popupRef = this._addPopupButton(options);\n                    widgetElement = popupRef.widgetElement;\n                } else if (component === \"Button\" && options.togglable === true) {\n                    component = \"ToggleButton\";\n                } else if (options.menuButtons) {\n                    options.items = options.menuButtons;\n                    delete options.menuButtons;\n\n                    if (options.attributes && options.attributes.class) {\n                        widgetElement.addClass(options.attributes.class);\n                    }\n\n                    widgetElement.attr(DATA_UID, options.uid);\n                    delete options.uid;\n                } else if (options.buttons) {\n                    widgetElement = $(\"<span></span>\");\n                    hasButtons = true;\n                    options.items = options.buttons;\n                    delete options.buttons;\n\n                    options.preventKeyNav = true;\n\n                    options.items.forEach(i => {\n                        if (i.showIcon === OVERFLOW) {\n                            delete i.imageUrl;\n                            delete i.icon;\n                        }\n\n                        if (i.showText === OVERFLOW) {\n                            if (!i.attributes) {\n                                i.attributes = {};\n                            }\n\n                            i.attributes[ARIA_LABEL] = i.text;\n\n                            delete i.text;\n                        }\n                    });\n                }\n\n                if (options.id) {\n                    widgetElement.attr(ID, options.id);\n                    delete options.id;\n                }\n\n                options.size = this.options.size;\n\n                widget = new kendo.ui[component]($(widgetElement), options);\n                element = widget.wrapper || widget.element;\n                element.addClass(TOOLBAR_TOOLS_CLASSES[component]);\n                this._addAttributes(options, element);\n\n                if (options.url) {\n                    widgetElement.removeAttr(ROLE);\n                }\n\n                if (hasButtons) {\n                    element.find(DOT + KBUTTON).addClass(TOOLBAR_TOOL);\n                    this._groupVisibleButtons(element);\n                } else {\n                    widget.element.addClass(TOOLBAR_TOOL);\n                }\n\n                if (options.type !== \"popupButton\" && options.type !== \"open\") {\n                    this._attachWidgetEvents(widget);\n                } else if (options.type === \"open\") {\n                    widgetElement.addClass(UPLOAD_BUTTON);\n                    this._resetOpen(widgetElement, options.extensions);\n                    element = widgetElement.parent();\n                } else {\n                    widget.chooser = popupRef.chooser;\n                    widget.popup = popupRef.popup;\n                }\n\n                return element;\n            },\n\n            _attachEvents: function() {\n                var that = this;\n\n                that.element.on(KEYDOWN + ns, that._keydown.bind(that))\n                    .on(FOCUSIN + ns, that._focusIn.bind(that))\n                    .on(FOCUSOUT + ns, that._focusOut.bind(that));\n            },\n\n            _attachWidgetEvents: function(widget) {\n                var that = this;\n\n                widget.bind(CLICK, that._onClick.bind(that));\n                widget.bind(TOGGLE, that._onToggle.bind(that));\n                widget.bind(SELECT, that._onSelect.bind(that));\n                widget.bind(OPEN, that._onOpen.bind(that));\n                widget.bind(CLOSE, that._onClose.bind(that));\n\n                widget.wrapper.find(DOT + KBUTTON).each((i, el) => {\n                    var $el = $(el);\n\n                    if ($el.data(\"kendoButton\")) {\n                        $el.data(\"kendoButton\").bind(CLICK, (e) => {\n                            that.trigger(CLICK, { id: e.id, target: e.target, originalEvent: e.originalEvent || e.event });\n                        });\n                    }\n                });\n            },\n\n            _childrenWidth: function() {\n                var gap = parseInt(this.element.css('gap'), 10) || 0;\n                var childrenWidth = gap;\n\n                this.element.children(\":visible:not(\" + DOT + SPACER_CLASS + \")\").each(function() {\n                    childrenWidth += outerWidth($(this), false) + gap;\n                });\n\n                return Math.ceil(childrenWidth);\n            },\n\n            _extendToolsOptions: function() {\n                var options = this.options,\n                    items = options.tools.flatMap((tool) => this._mapTool(tool, options.parentMessages, options.defaultTools));\n\n                this.options.items = items;\n\n                return items;\n            },\n\n            _focusIn: function(e) {\n                var target = $(e.target),\n                    button = target.closest(DOT + KBUTTON);\n\n                if (button.length > 0) {\n                    this._resetTabIndex(button);\n                    button.addClass(KFOCUS);\n                }\n            },\n\n            _focusOut: function(e) {\n                this.wrapper.find(DOT + KBUTTON + DOT + KFOCUS).removeClass(KFOCUS);\n            },\n\n            _getAllItems: function() {\n                return this.wrapper.find(DOT + TOOLBAR_TOOL)\n                    .filter(\":visible\")\n                    .filter((i, el) => {\n                        if (el.style.visibility === HIDDEN) {\n                            return false;\n                        }\n\n                        return true;\n                    });\n            },\n\n            _getItem: function(candidate, knownUid) {\n                var uid = knownUid || this._getUid(candidate),\n                    buttonsPopups = $(DATA_ROLE_BUTTONMENU),\n                    uidSelector, toolbarEl;\n\n                if (!uid) {\n                    return {\n                        toolbarEl: this.element.find(candidate),\n                        templateEl: $(NOTHING),\n                        menuItem: this.overflowMenu ? this.overflowMenu.element.find(candidate) : $(NOTHING),\n                        buttonsPopupItem: $(NOTHING)\n                    };\n                }\n\n                uidSelector = \"[data-uid=\" + uid + \"]\";\n                toolbarEl = this.element.find(uidSelector);\n\n                return {\n                    toolbarEl: toolbarEl,\n                    templateEl: toolbarEl.closest(DOT + TEMPLATE_ITEM + COMMA + DOT + SPLIT_BUTTON),\n                    component: kendo.widgetInstance(toolbarEl),\n                    menuItem: this.overflowMenu ? this.overflowMenu.element.find(uidSelector) : $(NOTHING),\n                    buttonsPopupItem: buttonsPopups.find(uidSelector)\n                };\n            },\n\n            _getNextElement: function(item, direction) {\n                var items = this._getAllItems(),\n                    itemIndex = items.index(item) === -1 ? items.index(item.parentElement) : items.index(item),\n                    focusableItem = items[itemIndex + direction];\n\n                if (!focusableItem) {\n                    if (direction === -1) {\n                        focusableItem = items.last();\n                    } else {\n                        focusableItem = items.first();\n                    }\n                }\n\n                return focusableItem;\n            },\n\n            _getUid: function(candidate) {\n                var element;\n\n                // find toolbar item by jQuery selector\n                element = this.element.find(candidate);\n\n                // if not found find in in the DropDown-/SplitButton popups\n                if (!element.length) {\n                    element = $(DATA_ROLE_BUTTONMENU).find(candidate);\n                }\n\n                // if not, find it in the OverflowMenu\n                if (!element.length && this.overflowMenu) {\n                    element = this.overflowMenu.element.find(candidate);\n                }\n\n                if (!element.length) {\n                    return null;\n                } else {\n                    return element.data(UID) || element.closest(DOT + TOOLBAR_TOOL).data(UID);\n                }\n            },\n\n            _groupVisibleButtons: function(el) {\n                var buttons = el.children(),\n                    visibleBtns;\n\n                buttons.removeClass(GROUP_END).removeClass(GROUP_START);\n                visibleBtns = buttons.filter(\":not('.\" + STATE_HIDDEN + \"')\");\n                visibleBtns.first().addClass(GROUP_START);\n                visibleBtns.last().addClass(GROUP_END);\n            },\n\n            _hideItem: function(item) {\n                var that = this,\n                    widget;\n\n                item.addClass(STATE_HIDDEN);\n\n                if (that.overflowMenu) {\n                    if (item.hasClass(SPLIT_BUTTON) || item.hasClass(MENU_BUTTON)) {\n                        if (item.hasClass(SPLIT_BUTTON)) {\n                            item = item.children().eq(0);\n                            widget = item.data(K_SPLIT_BUTTON);\n                        } else {\n                            widget = item.data(K_DROP_DOWN_BUTTON);\n                        }\n\n                        widget.menu.list.children().each((i, el) => {\n                            that._showMenuItem($(el));\n                        });\n\n                        that._showMenuItem(item);\n                    } else if (item.hasClass(BUTTON_GROUP)) {\n                        item.children().each((i, el) => {\n                            that._showMenuItem($(el));\n                        });\n                    } else {\n                        that._showMenuItem(item);\n                    }\n                }\n            },\n\n            _hideMenuItem: function(item) {\n                this.overflowMenu.element\n                    .find(\">li[data-uid='\" + item.data(UID) + \"']\")\n                    .addClass(STATE_HIDDEN);\n            },\n\n            _items: function() {\n                let options = this.options;\n\n                for (var i = 0; i < options.items.length; i++) {\n                    this._add(options.items[i]);\n                }\n            },\n\n            _keydown: function(e) {\n                var target = $(e.target),\n                    keyCode = e.keyCode,\n                    templateItem = target.closest(DOT + TEMPLATE_ITEM),\n                    isOverflowAnchor = target.is(DOT + OVERFLOW_ANCHOR);\n\n                if (!this.options.navigateOnTab && !target.is(\".k-toolbar-tool\") && keyCode === keys.ESC && templateItem.length > 0) {\n                    e.stopPropagation();\n                    this._keyDeactivateTemplate(templateItem);\n                    return;\n                }\n\n                if (!target.hasClass(TOOLBAR_TOOL)) {\n                    return;\n                }\n\n                if (!this.options.navigateOnTab && keyCode === keys.ENTER && target.hasClass(TEMPLATE_ITEM)) {\n                    this._keyActivateTemplate(target);\n                } else if (isOverflowAnchor && (e.altKey && keyCode === keys.DOWN || keyCode === keys.ENTER || keyCode === keys.SPACEBAR)) {\n                    this._keyOpenOverflow(e, keyCode);\n                } else if (keyCode === keys.HOME) {\n                    this._keyFocusFirst(target, e);\n                } else if (keyCode === keys.END) {\n                    this._keyFocusLast(target, e);\n                } else if (!this.options.navigateOnTab && (keyCode === keys.RIGHT || keyCode === keys.LEFT)) {\n                    this._keyFocusNext(keyCode, e);\n                }\n            },\n\n            _keyActivateTemplate: function(target) {\n                var innerFocusable = target.find(KENDO_FOCUSABLE + \":not('\" + DOT + INPUT_BUTTON + \"')\" + COMMA + DOT + DROPDOWNLIST);\n\n                if (innerFocusable.length > 0) {\n                    target.attr(TABINDEX, -1);\n\n                    innerFocusable.attr(TABINDEX, 0);\n                    innerFocusable.first().trigger(FOCUS);\n                }\n            },\n\n            _keyDeactivateTemplate: function(templateItem) {\n                var innerWidget = templateItem.find(DATA_ROLE_SELECTOR),\n                    innerFocusable = templateItem.find(KENDO_FOCUSABLE + \":not('\" + DOT + INPUT_BUTTON + \"')\" + COMMA + DOT + DROPDOWNLIST),\n                    widgetInstance;\n\n                if (innerWidget.length > 0) {\n                    widgetInstance = kendo.widgetInstance(innerWidget);\n\n                    if (widgetInstance) {\n                        if (widgetInstance.overflowMenu && widgetInstance.overflowMenu.visible()) {\n                            return;\n                        } else {\n                            templateItem.attr(TABINDEX, 0);\n                            templateItem.trigger(FOCUS);\n                            templateItem.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                        }\n                    }\n                }\n\n                if (innerFocusable.length > 0) {\n                    templateItem.attr(TABINDEX, 0);\n                    templateItem.trigger(FOCUS);\n                    innerFocusable.attr(TABINDEX, -1);\n                }\n            },\n\n            _keyFocusFirst: function(target, e) {\n                var items = this._getAllItems();\n\n                if (target.is(DOT + DROPDOWNLIST) || target.is(INPUT)) {\n                    return;\n                }\n\n                this._resetTabIndex(items.first());\n                items.first().trigger(FOCUS);\n                e.preventDefault();\n            },\n\n            _keyFocusLast: function(target, e) {\n                var items = this._getAllItems(),\n                    last;\n\n                if (target.is(DOT + DROPDOWNLIST) || target.is(INPUT)) {\n                    return;\n                }\n\n                last = items.last();\n\n                if (last.width() === 0) {\n                    last = items.eq(items.length - 2);\n                }\n\n                this._resetTabIndex(last);\n                last.trigger(FOCUS);\n                e.preventDefault();\n            },\n\n            _keyFocusNext: function(keyCode, e) {\n                var direction = this._isRtl ? -1 : 1,\n                    next;\n\n                if (keyCode === keys.LEFT) {\n                    direction = -1 * direction;\n                }\n\n                next = $(this._getNextElement(e.target, direction));\n                this._resetTabIndex(next);\n                next.trigger(FOCUS);\n\n                e.preventDefault();\n            },\n\n            _keyOpenOverflow: function(e, keyCode) {\n                if (keyCode === keys.SPACEBAR) {\n                    e.preventDefault();\n                }\n\n                this.overflowMenu.open();\n            },\n\n            _mapAttributes: function(toolOptions, messages) {\n                return {\n                    \"aria-label\": messages[toolOptions.name || toolOptions.property],\n                    \"title\": messages[toolOptions.name || toolOptions.property],\n                    \"data-command\": toolOptions.command,\n                    \"data-options\": toolOptions.options,\n                    \"data-dialog\": toolOptions.dialog,\n                    \"data-property\": toolOptions.property,\n                    \"data-value\": toolOptions.value,\n                    \"data-toggle\": toolOptions.toggleCondition\n                };\n            },\n\n            _mapComponent: function(component, messages) {\n                var that = this,\n                    componentOptions = component.componentOptions,\n                    componentMessages = componentOptions.messages,\n                    componentPlaceholder = componentOptions.placeholder,\n                    attributes = $.extend({}, that._mapAttributes(component, messages), component.attributes),\n                    options;\n\n                if (component.overflowComponent) {\n                    options = component.options || {};\n\n                    if (component.componentOptions.dataSource) {\n                        options.options = component.componentOptions.dataSource;\n                    }\n                    if (component.componentOptions.value) {\n                        options.default = component.componentOptions.value;\n                    }\n\n                    if (Object.keys(options).length > 0) {\n                        component.overflowComponent.options = JSON.stringify(options);\n                    }\n\n                    component.overflowComponent = that._mapTool(component.overflowComponent, messages);\n                }\n\n                if (componentMessages) {\n                    Object.keys(componentMessages).forEach((key) => {\n                        component.componentOptions.messages[key] = messages[componentMessages[key]] || componentMessages[key];\n                    });\n                }\n\n                if (componentPlaceholder) {\n                    component.componentOptions.placeholder = messages[componentPlaceholder] || componentPlaceholder;\n                }\n\n                Object.keys(componentOptions).forEach((key) => {\n                    if (key === \"commandOn\") {\n                        component.componentOptions[componentOptions[key]] = (ev) => {\n                            that.trigger(CHANGE, { target: ev.target || ev.sender.element });\n                        };\n                    }\n                });\n\n                if (componentOptions.dataSource && componentOptions.dataSource.length) {\n                    component.componentOptions.dataSource = componentOptions.dataSource.map(i => {\n                        if (i.name && messages[i.name]) {\n                            i.text = messages[i.name];\n                        }\n\n                        return i;\n                    });\n                }\n\n                component.attributes = attributes;\n\n                return component;\n            },\n\n            _mapTool: function(tool, messages, defaultTools) {\n                var that = this,\n                    isArray = Array.isArray(tool),\n                    isBuiltInTool, toolOptions, attributes;\n\n                if (isArray) {\n                    return {\n                        type: \"buttonGroup\",\n                        buttons: tool.map(t => that._mapTool(t, messages, defaultTools))\n                    };\n                }\n\n                isBuiltInTool = $.isPlainObject(tool) && Object.keys(tool).length === 1 && tool.name;\n                tool = isBuiltInTool ? tool.name : tool;\n                toolOptions = $.isPlainObject(tool) ? tool : $.extend({}, defaultTools[tool]);\n\n                attributes = $.extend({}, that._mapAttributes(toolOptions, messages), toolOptions.attributes);\n\n                kendo.deepExtend(toolOptions, {\n                    text: messages[toolOptions.name || toolOptions.property],\n                    attributes: attributes,\n                });\n\n                if (toolOptions.type === \"component\") {\n                    if (toolOptions.items) {\n                        return toolOptions.items.map(t => that._mapComponent(t, messages));\n                    } else {\n                        return that._mapComponent(toolOptions, messages);\n                    }\n                } else if (toolOptions.type === \"buttonGroup\") {\n                    delete toolOptions.attributes[ARIA_LABEL];\n                    toolOptions.buttons = toolOptions.buttons.map(t => that._mapTool(t, messages, defaultTools));\n                } else if (toolOptions.type === \"splitButton\") {\n                    delete toolOptions.attributes[ARIA_LABEL];\n                    toolOptions.menuButtons = toolOptions.menuButtons.flatMap(t => that._mapTool(t, messages, defaultTools));\n                } else if (toolOptions.type === \"popupButton\" && toolOptions.overflowComponent) {\n                    toolOptions.overflowComponent = that._mapTool(toolOptions.overflowComponent, messages);\n                }\n\n                delete toolOptions.name;\n\n                return toolOptions;\n            },\n\n            _menuItemSelect: function(e) {\n                var item = $(e.item),\n                    id = item.attr(ID),\n                    togglable = item.find(DOT + MENU_LINK_TOGGLE),\n                    groupName = item.data(GROUP),\n                    shouldSelect, twin, group;\n\n                if (id && id.indexOf(DASH + OVERFLOW) > -1) {\n                    id = id.replace(DASH + OVERFLOW, NOTHING);\n                }\n\n                if (togglable.length) {\n                    if (groupName) {\n                        this.overflowMenu.element.find(\"[data-group=\" + groupName + \"]\").each((i, el) => {\n                            var current = $(el);\n\n                            current.attr(ARIA_CHECKED, false);\n                            current.find(DOT + MENU_LINK_TOGGLE).removeClass(STATE_SELECTED);\n                        });\n                    }\n\n                    shouldSelect = groupName ? true : !togglable.hasClass(STATE_SELECTED);\n\n                    togglable.toggleClass(STATE_SELECTED, shouldSelect);\n                    item.attr(ARIA_CHECKED, shouldSelect);\n\n                    twin = this.element.find(\"[data-uid=\" + item.data(UID) + \"]\");\n\n                    if (twin.length) {\n                        if (twin.closest(DOT + BUTTON_GROUP).length) {\n                            group = twin.closest(DOT + BUTTON_GROUP).data(K_BUTTON_GROUP);\n                            group.select(twin);\n                        } else {\n                            if (groupName) {\n                                this.element.find(\"[data-group=\" + groupName + \"]\").each((i, el) => {\n                                    $(el).data(K_TOGGLE_BUTTON).toggle(false);\n                                });\n                            }\n\n                            twin.data(K_TOGGLE_BUTTON).toggle(true);\n                        }\n                    }\n\n                    this.trigger(TOGGLE, {\n                        id: item.attr(ID),\n                        target: item,\n                        checked: shouldSelect\n                    });\n                } else {\n                    this.trigger(CLICK, {\n                        id: id,\n                        target: item,\n                    });\n                }\n            },\n\n            _onClick: function(e) {\n                var el = e.target,\n                    togglable = el.hasClass(\"k-toolbar-toggle-button\"),\n                    group = el.data(GROUP);\n\n                if (!togglable) {\n                    this.trigger(CLICK, { id: e.id, target: e.target, originalEvent: e.originalEvent || e.event });\n                }\n\n                if (group && this.element.find(\"[data-group=\" + group + \"]\").length > 1) {\n                    if (el.hasClass(STATE_SELECTED)) {\n                        e.preventDefault();\n                    }\n                }\n            },\n\n            _onClose: function(e) {\n                if (this.trigger(CLOSE, { widget: e.sender })) {\n                    e.preventDefault();\n                }\n            },\n\n            _onMenuItemSelect: function(e, click, toggle) {\n                var item = $(e.item),\n                    togglable = item.find(DOT + MENU_LINK_TOGGLE).length > 0,\n                    id = item.attr(ID);\n\n                if (id && id.indexOf(DASH + OVERFLOW) > -1) {\n                    id = id.replace(DASH + OVERFLOW, NOTHING);\n                }\n\n                if (click) {\n                    click.bind(this)({\n                        event: e.event,\n                        id: id,\n                        target: item\n                    });\n                }\n\n                if (togglable && toggle) {\n                    setTimeout(() => {\n                        toggle.bind(this)({\n                            event: e.event,\n                            id: id,\n                            target: item,\n                            checked: item.find(DOT + STATE_SELECTED).length > 0\n                        });\n                    });\n                }\n            },\n\n            _onOpen: function(e) {\n                if (this.trigger(OPEN, { widget: e.sender })) {\n                    e.preventDefault();\n                }\n            },\n\n            _onSelect: function(e) {\n                var menuEl = this.overflowMenu ? this.overflowMenu.element : $(NOTHING);\n\n                e.sender.element.children().each((i, el) => {\n                    var current = $(el),\n                        uid = current.data(UID),\n                        selected = current.hasClass(STATE_SELECTED);\n\n                    menuEl\n                        .find(\"[data-uid=\" + uid + \"]\")\n                        .attr(ARIA_CHECKED, selected)\n                        .find(DOT + MENU_LINK_TOGGLE)\n                        .toggleClass(STATE_SELECTED, selected);\n                });\n\n                this.trigger(TOGGLE, {\n                    id: e.target.attr(ID),\n                    target: e.target,\n                    checked: e.target.hasClass(STATE_SELECTED)\n                });\n            },\n\n            _onToggle: function(e) {\n                var that = this,\n                    el = e.target,\n                    group = el.data(GROUP),\n                    overflowItem,\n                    overflowGroup;\n\n                if (that.overflowMenu) {\n                    overflowItem = that.overflowMenu.element.find(\"[data-uid=\" + el.attr(DATA_UID) + \"]\");\n                    overflowGroup = that.overflowMenu.element.find(\"[data-group=\" + group + \"]\");\n\n                    overflowGroup.attr(ARIA_CHECKED, false).find(DOT + MENU_LINK_TOGGLE).removeClass(STATE_SELECTED);\n                    overflowItem.attr(ARIA_CHECKED, true).find(DOT + MENU_LINK_TOGGLE).addClass(STATE_SELECTED);\n                }\n\n                if (group) {\n                    that.element.find(\"[data-group=\" + group + \"]\").each((i, item) => {\n                        if (item !== el[0]) {\n                            $(item).data(K_TOGGLE_BUTTON).toggle(false);\n                        }\n                    });\n                }\n\n                this.trigger(TOGGLE, { id: e.id, target: e.target, checked: e.checked, originalEvent: e.originalEvent || e.event });\n            },\n\n            _processInner(items, parentUid) {\n                var attributes, current;\n\n                for (var i = 0; i < items.length; i++) {\n                    current = items[i];\n                    attributes = current.attributes;\n\n                    if (!attributes) {\n                        items[i].attributes = {};\n                    }\n\n                    items[i].attributes[DATA_UID] = kendo.guid();\n                    items[i].attributes[DATA_PARENTUID] = parentUid;\n\n                    if (current.id) {\n                        items[i].attributes[ID] = items[i].id;\n                    }\n\n                    if (current.hidden) {\n                        if (!items[i].attributes.class) {\n                            items[i].attributes.class = NOTHING;\n                        }\n\n                        items[i].attributes.class += (EMPTY + STATE_HIDDEN + EMPTY + FORCE_HIDDEN);\n                    }\n                }\n\n                return items;\n            },\n\n            _processOptions: function(options) {\n                var template = options.template,\n                    overflowTemplate = options.overflowTemplate,\n                    uid = kendo.guid(),\n                    groupName;\n\n                $.extend(options, {\n                    uid: uid,\n                    rootUid: this.uid\n                });\n\n                if (options.menuButtons) {\n                    options.menuButtons = this._processInner(options.menuButtons, uid);\n                } else if (options.buttons && options.buttons.length) {\n                    options.buttons = this._processInner(options.buttons, uid);\n\n                    if (options.buttons.every(b => b.togglable)) {\n                        groupName = options.buttons[0].group;\n\n                        if (!!groupName && options.buttons.every(b => b.group === groupName)) {\n                            options.selection = SINGLE;\n                        } else {\n                            options.selection = MULTIPLE;\n                        }\n                    } else {\n                        options.selection = NONE;\n                    }\n                }\n\n                if ((template && !overflowTemplate) || options.type === SPACER) {\n                    options.overflow = OVERFLOW_NEVER;\n                } else if (!options.overflow) {\n                    options.overflow = OVERFLOW_AUTO;\n                }\n\n                if (options.enable !== undefined$1) {\n                    options.enabled = options.enable;\n                }\n\n                return options;\n            },\n\n            _renderOverflow: function() {\n                var that = this,\n                    isRtl = that._isRtl,\n                    horizontalDirection = isRtl ? \"left\" : \"right\";\n\n                that.overflowAnchor = $(\"<button class='k-toolbar-overflow-button k-toolbar-tool' title='More tools'>\");\n                that.element.append(that.overflowAnchor);\n                that.overflowAnchor.kendoButton({\n                    icon: \"more-vertical\",\n                    fillMode: \"flat\",\n                    size: that.options.size\n                });\n\n                if (!that.options.navigateOnTab) {\n                    that.overflowAnchor.attr(TABINDEX, -1);\n                }\n\n                that.overflowMenu = new kendo.ui.ContextMenu($(\"<ul>\"), {\n                    size: that.options.size,\n                    showOn: \"click tap\",\n                    origin: \"bottom \" + horizontalDirection,\n                    position: \"top \" + horizontalDirection,\n                    alignToAnchor: true,\n                    target: that.overflowAnchor,\n                    open: function(e) {\n                        if (that.trigger(OVERFLOW_OPEN)) {\n                            e.preventDefault();\n                        }\n                    },\n                    close: function(e) {\n                        if (that.trigger(OVERFLOW_CLOSE)) {\n                            e.preventDefault();\n                        } else {\n                            that._resetTabIndex(that.overflowAnchor);\n                            that.overflowAnchor.trigger(FOCUS);\n                        }\n                    }\n                });\n\n                that.overflowMenu.element.attr(KENDO_UID_ATTR, this.uid);\n\n                setTimeout(() => {\n                    that.overflowMenu.bind(SELECT, that._menuItemSelect.bind(that));\n                });\n            },\n\n            _resetOpen: function(element, extensions) {\n                var that = this,\n                    uploadWrapper,\n                    input;\n\n                element.closest(\".k-upload-button-wrap\").find(\"input\").remove();\n                uploadWrapper = element.wrap(\"<div class='k-upload-button-wrap'></span>\").parent();\n\n                input = $(\"<input type='file' autocomplete='off' accept='\" + extensions + \"'/>\")\n                    .attr(\"aria-hidden\", true)\n                    .one(\"change\", (e) => {\n                        that.trigger(CHANGE, {\n                            target: element,\n                            value: e.target.files[0]\n                        });\n\n                        that._resetOpen(element, extensions);\n                    })\n                    .appendTo(uploadWrapper);\n\n                element.off(KEYDOWN).on(KEYDOWN, (e) => {\n                    if (e.keyCode === kendo.keys.ENTER) {\n                        input.trigger(CLICK);\n                    }\n                });\n            },\n\n            _resetTabIndex: function(toFocus) {\n                if (this.options.navigateOnTab !== true) {\n                    this.wrapper.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                    toFocus.attr(TABINDEX, 0);\n                }\n            },\n\n            _resizable: function() {\n                var that = this,\n                    element = that.element;\n\n                that._renderOverflow();\n                element.addClass(RESIZABLE_TOOLBAR);\n\n                that._resizeHandler = kendo.onResize(function() {\n                    that.resize();\n                });\n            },\n\n            _resize: function(e) {\n                var containerWidth = e.width,\n                    wrapper = this.element,\n                    popupBtnElements = wrapper.find('[data-role=\"splitbutton\"]').add(wrapper.find('[data-role=\"dropdownbutton\"]'));\n\n                if (!this.options.resizable) {\n                    return;\n                }\n\n                this.overflowMenu.close();\n\n                if (popupBtnElements.length > 0) {\n                    popupBtnElements.each((i, el) => {\n                        kendo.widgetInstance($(el)).close();\n                    });\n                }\n\n                this._shrink(containerWidth);\n                this._stretch(containerWidth);\n                this._toggleOverflowAnchor();\n            },\n\n            _shrink: function(containerWidth) {\n                var commandElement,\n                    visibleCommands,\n                    activeElement;\n\n                if (containerWidth < this._childrenWidth()) {\n                    visibleCommands = this.element.children(\":visible:not([data-overflow='never'], .\" + OVERFLOW_ANCHOR + \")\");\n\n                    for (var i = visibleCommands.length - 1; i >= 0; i--) {\n                        commandElement = visibleCommands.eq(i);\n\n                        if (containerWidth > this._childrenWidth()) {\n                            break;\n                        } else {\n                            activeElement = commandElement.find(\"[tabindex=0]\") || commandElement.is(\"[tabindex=0]\") ? commandElement : $(NOTHING);\n\n                            if (activeElement.length > 0) {\n                                activeElement.attr(TABINDEX, -1);\n                                this.element.children(DOT + OVERFLOW_ANCHOR).attr(TABINDEX, 0);\n                            }\n\n                            this._hideItem(commandElement);\n                        }\n                    }\n                }\n            },\n\n            _showItem: function(item, containerWidth) {\n                var that = this,\n                    gap = parseInt(this.element.css('gap'), 10) || 0,\n                    widget;\n\n                item.removeClass(STATE_HIDDEN);\n                var itemOuterWidth = outerWidth(item, true) + gap;\n                item.addClass(STATE_HIDDEN);\n\n                if (item.length && (item.hasClass(SPACER_CLASS) || containerWidth > this._childrenWidth() + itemOuterWidth)) {\n                    item.removeClass(STATE_HIDDEN);\n\n                    if (this.options.navigateOnTab !== true) {\n                        item.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                    } else {\n                        if (item.is(\"[tabindex=-1]\")) {\n                            item.removeAttr(TABINDEX);\n                        }\n                    }\n\n                    if (this.overflowMenu) {\n                        if (item.hasClass(SPLIT_BUTTON) || item.hasClass(MENU_BUTTON)) {\n                            if (item.hasClass(SPLIT_BUTTON)) {\n                                item = item.children().eq(0);\n                                widget = item.data(K_SPLIT_BUTTON);\n                            } else {\n                                widget = item.data(K_DROP_DOWN_BUTTON);\n                            }\n\n                            widget.menu.list.children().each((i, el) => {\n                                that._hideMenuItem($(el));\n                            });\n\n                            that._hideMenuItem(item);\n                        } else if (item.hasClass(BUTTON_GROUP)) {\n                            item.children().each((i, el) => {\n                                that._hideMenuItem($(el));\n                            });\n                        } else {\n                            that._hideMenuItem(item);\n                        }\n                    }\n\n                    return true;\n                }\n\n                return false;\n            },\n\n            _showMenuItem: function(item) {\n                var menuItem = this.overflowMenu.element.find(\">li[data-uid='\" + item.data(UID) + \"']\");\n\n                if (!menuItem.hasClass(FORCE_HIDDEN)) {\n                    menuItem.removeClass(STATE_HIDDEN);\n                }\n            },\n\n            _stretch: function(containerWidth) {\n                var overflowAnchor = this.element.children(DOT + OVERFLOW_ANCHOR),\n                    commandElement,\n                    hiddenCommands;\n\n                if (containerWidth > this._childrenWidth()) {\n                    hiddenCommands = this.element.children(DOT + STATE_HIDDEN + \":not(\" + DOT + FORCE_HIDDEN + \")\");\n\n                    for (var i = 0; i < hiddenCommands.length; i++) {\n                        commandElement = hiddenCommands.eq(i);\n\n                        if (containerWidth < this._childrenWidth() || !this._showItem(commandElement, containerWidth)) {\n                            break;\n                        }\n                    }\n                }\n\n                if (!this.options.navigateOnTab && overflowAnchor.is(\"[tabindex=0]\")) {\n                    overflowAnchor.attr(TABINDEX, -1);\n                    this._resetTabIndex(this._getAllItems().first());\n                }\n            },\n\n            _tabIndex: function() {\n                var focusableItems = this.wrapper.find(KENDO_FOCUSABLE + \":not('\" + TABINDEX_MINUS_1 + \"')\"),\n                    firstFocusable = focusableItems.first();\n\n                if (this.options.navigateOnTab !== true) {\n                    focusableItems.attr(TABINDEX, -1);\n                    firstFocusable.attr(TABINDEX, 0);\n                } else {\n                    this.wrapper.find(\".k-toolbar-item.k-toolbar-tool\").removeAttr(TABINDEX);\n                }\n            },\n\n            _toggleOverflowAnchor: function() {\n                var hasVisibleChildren = false;\n\n                hasVisibleChildren = this.overflowMenu.element.children(\":not(.\" + STATE_HIDDEN + \", .\" + POPUP + \")\").length > 0;\n\n                if (hasVisibleChildren) {\n                    this.overflowAnchor.removeClass(STATE_HIDDEN);\n                } else {\n                    this.overflowAnchor.addClass(STATE_HIDDEN);\n                }\n            }\n        });\n\n        kendo.toolbar = {\n            Item: kendo.Class,\n            OverflowButton: kendo.Class,\n            TemplateItem: kendo.Class,\n            ToolBarButton: kendo.Class,\n            registerComponent: () => null\n        };\n\n        kendo.cssProperties.registerPrefix(\"ToolBar\", \"k-toolbar-\");\n\n        kendo.ui.plugin(ToolBar);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}