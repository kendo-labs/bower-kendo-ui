{"version":3,"sources":["raw-js/kendo.toolbar.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendotoolbar","js","this","$","undefined$1","kendo","window","Widget","ui","isFunction","keys","outerWidth","_outerWidth","ns","TOOLBAR","KBUTTON","BUTTON_GROUP","SPLIT_BUTTON","MENU_BUTTON","SPACER_CLASS","STATE_SELECTED","STATE_HIDDEN","FORCE_HIDDEN","GROUP_START","GROUP_END","MENU_LINK","MENU_ITEM","OVERFLOW_ANCHOR","TEMPLATE_ITEM","MENU_LINK_TOGGLE","DROPDOWNLIST","INPUT_BUTTON","KFOCUS","TABINDEX_MINUS_1","TOOLBAR_TOOL","ARIA_CHECKED","ARIA_LABEL","CHANGE","CLICK","TOGGLE","OPEN","CLOSE","FOCUS","KEYDOWN","SPACER","ROLE","ITEM_REF","SEPARATOR","OVERFLOW","TABINDEX","INPUT","SELECT","GROUP","DATA_UID","DATA_ROLE_SELECTOR","DATA_TOGGLE_SELECTOR","DATA_ROLE_BUTTONMENU","ITEM_REF_SELECTOR","KENDO_FOCUSABLE","OVERFLOW_OPEN","OVERFLOW_CLOSE","OVERFLOW_NEVER","OVERFLOW_AUTO","OVERFLOW_ALWAYS","KENDO_UID_ATTR","attr","NOTHING","DASH","EMPTY","DOT","COMMA","ID","UID","K_DROP_DOWN_BUTTON","K_SPLIT_BUTTON","K_TOGGLE_BUTTON","K_BUTTON_GROUP","toolbar","WIDGET_TYPES","button","splitButton","dropDownButton","buttonGroup","popupButton","open","TOOLBAR_TOOLS_CLASSES","Button","ToggleButton","SplitButton","DropDownButton","ButtonGroup","ColorPicker","Switch","SAFE_COMPONENTS","POPUP_BUTTON_TEMPLATE","icon","ToolBar","extend","init","element","options","fn","call","_isRtl","support","isRtl","uid","guid","wrapper","addClass","resizable","_resizable","tools","length","items","_extendToolsOptions","_items","_attachEvents","_tabIndex","_applyCssClasses","_shrink","innerWidth","overflowAnchor","appendTo","_toggleOverflowAnchor","notify","events","name","navigateOnTab","evaluateTemplates","size","fillMode","destroy","that","unbindResize","_resizeHandler","overflowMenu","find","each","i","el","popup","popupWrapper","chooser","getKendoButton","remove","children","add","_add","resize","enable","candidate","focused","_getUid","item","_getItem","component","hasClass","is","removeAttr","trigger","buttonsPopupItem","widgetInstance","closest","menuItem","getSelectedFromGroup","groupName","filter","hide","elements","parentGroupEl","templateEl","toolbarEl","parent","data","_groupVisibleButtons","addBack","_resetTabIndex","_getAllItems","first","siblings","show","removeClass","toggle","checked","parentGroup","group","_toggleIndex","index","toggleClass","toggleTools","conditions","focusable","not","elm","tool","widget","condition","toToggle","processed","_processOptions","template","overflowTemplate","type","_addTemplate","_addCustomWidget","_addDefaultTool","_addSpacer","_addSeparator","insertBefore","_addAttributes","attributes","classes","hidden","align","class","id","overflow","forEach","groupClass","result","overflowComponent","_addMenuItem","componentOptions","indexOf","wrap","op","_addToolbarTool","menuitem","selected","showIcon","imageUrl","showText","text","encoded","append","last","prepend","togglable","menuButtons","buttons","click","bind","e","_onMenuItemSelect","_addPopupButton","widgetElement","popupComponent","kendoPopup","anchor","on","preventDefault","commandOn","target","value","close","separator","overflowSeparator","spacer","inputsInTemplate","html","popupRef","hasButtons","primary","themeColor","url","preventKeyNav","_attachWidgetEvents","_resetOpen","extensions","_keydown","_focusIn","_focusOut","_onClick","_onToggle","_onSelect","_onOpen","_onClose","$el","originalEvent","event","_childrenWidth","gap","parseInt","css","childrenWidth","Math","ceil","flatMap","_mapTool","parentMessages","defaultTools","style","visibility","knownUid","uidSelector","buttonsPopups","_getNextElement","direction","itemIndex","parentElement","focusableItem","visibleBtns","_hideItem","eq","menu","list","_showMenuItem","_hideMenuItem","keyCode","templateItem","isOverflowAnchor","ESC","stopPropagation","_keyDeactivateTemplate","ENTER","_keyActivateTemplate","altKey","DOWN","SPACEBAR","_keyOpenOverflow","HOME","_keyFocusFirst","END","_keyFocusLast","RIGHT","LEFT","_keyFocusNext","innerFocusable","pagerTool","innerWidget","visible","width","next","_mapAttributes","toolOptions","messages","property","title","command","dialog","toggleCondition","_mapComponent","componentMessages","componentPlaceholder","placeholder","dataSource","default","Object","JSON","stringify","key","ev","sender","map","isBuiltInTool","originalTool","isArray","Array","isPlainObjectTool","isPlainObject","toolKeysCount","t","deepExtend","_menuItemSelect","shouldSelect","twin","replace","current","select","setTimeout","menuEl","overflowItem","_processInner","parentUid","rootUid","some","b","every","selection","enabled","_renderOverflow","horizontalDirection","kendoButton","ContextMenu","showOn","origin","position","alignToAnchor","uploadWrapper","input","one","files","off","toFocus","onResize","_resize","containerWidth","popupBtnElements","_stretch","commandElement","visibleCommands","activeElement","_showItem","itemOuterWidth","hiddenCommands","focusableItems","firstFocusable","Item","Class","OverflowButton","TemplateItem","ToolBarButton","registerComponent","cssProperties","registerPrefix","registerValues","prop","values","plugin","jQuery","kendo$1","__meta__","category","description","depends","defineProperty"],"mappings":"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","file":"kendo.toolbar.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.splitbutton.js'), require('kendo.dropdownbutton.js'), require('kendo.buttongroup.js'), require('kendo.menu.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.splitbutton', 'kendo.dropdownbutton', 'kendo.buttongroup', 'kendo.menu', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendotoolbar = global.kendotoolbar || {}, global.kendotoolbar.js = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"toolbar\",\n        name: \"ToolBar\",\n        category: \"web\",\n        description: \"The ToolBar widget displays one or more command buttons divided into groups.\",\n        depends: [ \"core\", \"splitbutton\", \"dropdownbutton\", \"buttongroup\", \"menu\", \"icons\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            isFunction = kendo.isFunction,\n            keys = kendo.keys,\n            outerWidth = kendo._outerWidth,\n            ns = \".kendoToolBar\",\n            TOOLBAR = \"toolbar\",\n            KTOOLBAR = \"k-toolbar\",\n            KBUTTON = \"k-button\",\n            BUTTON_GROUP = \"k-button-group\",\n            SPLIT_BUTTON = \"k-split-button\",\n            MENU_BUTTON = \"k-menu-button\",\n            POPUP_BUTTON = \"k-popup-button\",\n            KSEPARATOR = \"k-separator\",\n            SPACER_CLASS = \"k-spacer\",\n            UPLOAD_BUTTON = \"k-upload-button\",\n            POPUP = \"k-popup\",\n            RESIZABLE_TOOLBAR = \"k-toolbar-resizable\",\n            STATE_SELECTED = \"k-selected\",\n            STATE_DISABLED = \"k-disabled\",\n            STATE_HIDDEN = \"k-hidden\",\n            FORCE_HIDDEN = \"k-force-hidden\",\n            GROUP_START = \"k-group-start\",\n            GROUP_END = \"k-group-end\",\n            MENU_LINK = \"k-menu-link\",\n            MENU_ITEM = \"k-menu-item\",\n            OVERFLOW_ANCHOR = \"k-toolbar-overflow-button\",\n            TEMPLATE_ITEM = \"k-toolbar-item\",\n            MENU_LINK_TOGGLE = \"k-menu-link-toggle\",\n            DROPDOWNLIST = \"k-dropdownlist\",\n            INPUT_BUTTON = \"k-input-button\",\n            MENU_POPUP = \"k-menu-popup\",\n            KFOCUS = \"k-focus\",\n            SINGLE = \"single\",\n            MULTIPLE = \"multiple\",\n            NONE = \"none\",\n            TABINDEX_MINUS_1 = \"[tabindex=-1]\",\n            TOOLBAR_TOOL = \"toolbar-tool\",\n\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_CHECKED = \"aria-checked\",\n            ARIA_LABEL = \"aria-label\",\n\n            CHANGE = \"change\",\n            CLICK = \"click\",\n            TOGGLE = \"toggle\",\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            FOCUS = \"focus\",\n            FOCUSIN = \"focusin\",\n            FOCUSOUT = \"focusout\",\n            KEYDOWN = \"keydown\",\n\n            SPACER = \"spacer\",\n            PRIMARY = \"primary\",\n            ROLE = \"role\",\n            ITEM_REF = \"ref-\",\n            SEPARATOR = \"separator\",\n            OVERFLOW = \"overflow\",\n            TABINDEX = \"tabindex\",\n            INPUT = \"input\",\n            SELECT = \"select\",\n            HIDDEN = \"hidden\",\n            GROUP = \"group\",\n            DATA_UID = \"data-uid\",\n            DATA_PARENTUID = \"data-parentuid\",\n            DATA_ROLE_SELECTOR = \"[data-role]\",\n            DATA_TOGGLE_SELECTOR = \"[data-toggle]\",\n            DATA_ROLE_BUTTONMENU = \"[data-role=buttonmenu]\",\n            ITEM_REF_SELECTOR = \"[ref-toolbar-tool]\",\n            KENDO_FOCUSABLE = \":kendoFocusable:not([class*='pager'])\",\n\n            OVERFLOW_OPEN = \"overflowOpen\",\n            OVERFLOW_CLOSE = \"overflowClose\",\n            OVERFLOW_NEVER = \"never\",\n            OVERFLOW_AUTO = \"auto\",\n            OVERFLOW_ALWAYS = \"always\",\n\n            KENDO_UID_ATTR = kendo.attr(\"uid\"),\n\n            NOTHING = \"\",\n            DASH = \"_\",\n            EMPTY = \" \",\n            DOT = \".\",\n            COMMA = \",\",\n            ID = \"id\",\n            UID = \"uid\",\n            NBSP = \"&nbsp;\",\n\n            K_DROP_DOWN_BUTTON = \"kendoDropDownButton\",\n            K_SPLIT_BUTTON = \"kendoSplitButton\",\n            K_TOGGLE_BUTTON = \"kendoToggleButton\",\n            K_BUTTON_GROUP = \"kendoButtonGroup\";\n\n            kendo.toolbar = {};\n\n        var WIDGET_TYPES = {\n            button: \"Button\",\n            splitButton: \"SplitButton\",\n            dropDownButton: \"DropDownButton\",\n            buttonGroup: \"ButtonGroup\",\n            popupButton: \"Button\",\n            open: \"Button\"\n        };\n\n        var TOOLBAR_TOOLS_CLASSES = {\n            Button: \"k-toolbar-button\",\n            ToggleButton: \"k-toolbar-toggle-button\",\n            SplitButton: \"k-toolbar-split-button\",\n            DropDownButton: \"k-toolbar-menu-button\",\n            ButtonGroup: \"k-toolbar-button-group\",\n            ColorPicker: \"k-toolbar-color-picker\",\n            Switch: \"k-toolbar-switch\"\n        };\n\n        var SAFE_COMPONENTS = [ \"Button\", \"SplitButton\", \"DropDownButton\", \"ButtonGroup\", \"Switch\", \"ColorPicker\" ];\n\n        var POPUP_BUTTON_TEMPLATE = `<button class=\"k-popup-button\"><span class=\"k-button-icon k-icon\"></span><span class=\"k-button-text\">${kendo.ui.icon(\"caret-alt-down\")}</span></button>`;\n        var TEMPLATE_WRAPPER = \"<div class='k-toolbar-item' aria-keyshortcuts='Enter'></div>\";\n        var CUSTOM_WIDGET_WRAP = \"<span class='k-toolbar-item' tabindex='0' ref-toolbar-tool >\";\n        var SEPARATOR_OVERFLOW_EL = \"<li role='separator' class='k-separator k-menu-separator k-hidden'></li>\";\n        var SEPARATOR_EL = '<div role=\"separator\">&nbsp;</div>';\n        var SPACER_EL = '<div>&nbsp;</div>';\n\n        var ToolBar = Widget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, options);\n\n                options = this.options;\n\n                this._isRtl = kendo.support.isRtl(element);\n                this.uid = kendo.guid();\n\n                element = this.wrapper = this.element;\n                element.attr(KENDO_UID_ATTR, this.uid);\n                element.addClass(KTOOLBAR);\n                element.attr(ROLE, TOOLBAR);\n\n                if (options.resizable) {\n                    this._resizable();\n                }\n\n                if (options.tools && options.tools.length > 0) {\n                    options.items = this._extendToolsOptions();\n                }\n\n                if (options.items && options.items.length) {\n                    this._items();\n                }\n\n                this._attachEvents();\n                this._tabIndex();\n                this._applyCssClasses();\n\n                if (options.resizable) {\n                    this._shrink(this.element.innerWidth());\n                    this.overflowAnchor.appendTo(this.wrapper);\n                    this._toggleOverflowAnchor();\n                }\n\n                kendo.notify(this);\n            },\n\n            events: [\n                CLICK,\n                TOGGLE,\n                OPEN,\n                CLOSE,\n                OVERFLOW_OPEN,\n                OVERFLOW_CLOSE,\n                CHANGE\n            ],\n\n            options: {\n                name: \"ToolBar\",\n                items: [],\n                resizable: true,\n                navigateOnTab: false,\n                evaluateTemplates: false,\n                size: \"medium\",\n                fillMode: \"solid\"\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that.options.resizable) {\n                    kendo.unbindResize(that._resizeHandler);\n                    that.overflowMenu.destroy();\n                }\n\n                that.element.find(DOT + POPUP_BUTTON).each((i, el) => {\n                    var button = $(el).getKendoButton(),\n                        popup, popupWrapper, chooser;\n\n                    if (button) {\n                        chooser = button.chooser;\n                        popup = button.popup;\n                        popupWrapper = popup.wrapper;\n\n                        chooser.destroy();\n                        popup.destroy();\n                        popupWrapper.remove();\n                    }\n                });\n\n                kendo.destroy(that.element.children());\n\n                Widget.fn.destroy.call(that);\n            },\n\n            add: function(options) {\n                this._add(options);\n\n                if (this.options.resizable) {\n                    this.resize(true);\n                }\n            },\n\n            enable: function(candidate, enable) {\n                var that = this,\n                    uid = this._getUid(candidate),\n                    item = this._getItem(candidate, uid),\n                    component = item.component,\n                    buttonPopup, children, focused, wrapper;\n\n                if (typeof enable == \"undefined\") {\n                    enable = true;\n                }\n\n                if (item.component) {\n                    wrapper = component.wrapper;\n                    focused = wrapper.hasClass(KFOCUS) || wrapper.is(\":focus\");\n                    component.enable(enable);\n                    wrapper.find(\"[disabled]\").removeAttr(\"disabled\");\n                    wrapper.removeAttr(\"disabled\");\n\n                    if (focused) {\n                        wrapper.addClass(KFOCUS).trigger(FOCUS);\n                    }\n                } else if (item.buttonsPopupItem.length > 0) {\n                    buttonPopup = kendo.widgetInstance(item.buttonsPopupItem.closest(DOT + MENU_POPUP));\n                    buttonPopup.enable(enable, item.buttonsPopupItem);\n                }\n\n                if (this.overflowMenu) {\n                    this.overflowMenu.enable(item.menuItem, enable);\n\n                    children = this.overflowMenu.element\n                        .find(\"[data-parentuid=\" + uid + \"]\");\n\n                    children.each((i, el) => {\n                        that.overflowMenu.enable($(el), enable);\n                    });\n                }\n            },\n\n            getSelectedFromGroup: function(groupName) {\n                return this.element.find(\"[data-group='\" + groupName + \"']\").filter(DOT + STATE_SELECTED);\n            },\n\n            hide: function(candidate) {\n                var that = this,\n                    uid = this._getUid(candidate),\n                    item = that._getItem(candidate, uid),\n                    elements, parentButtonGroup, children, parentGroupEl;\n\n                if (!item) {\n                    return;\n                }\n\n                elements = item.templateEl.add(item.toolbarEl).add(item.buttonsPopupItem).add(item.menuItem);\n\n                elements.addClass(STATE_HIDDEN);\n                elements.addClass(FORCE_HIDDEN);\n\n                if (this.overflowMenu) {\n                    children = this.overflowMenu.element\n                        .find(\"[data-parentuid=\" + uid + \"]\");\n\n                    children.each((i, el) => {\n                        $(el).addClass(FORCE_HIDDEN);\n                        $(el).addClass(STATE_HIDDEN);\n                    });\n                }\n\n                parentGroupEl = item.toolbarEl.parent().closest(DOT + BUTTON_GROUP);\n                parentButtonGroup = parentGroupEl.data(K_BUTTON_GROUP);\n\n                if (parentButtonGroup) {\n                    if (parentGroupEl.children(\":not(.k-hidden)\").length === 0) {\n                        that.hide(parentGroupEl);\n                    } else {\n                        that._groupVisibleButtons(parentGroupEl);\n                    }\n                }\n\n                if (elements.find(\"[tabindex=0]\").addBack(\"[tabindex=0]\").length > 0) {\n                    this._resetTabIndex(that._getAllItems().first());\n                }\n\n                if (this.options.resizable) {\n                    this.resize(true);\n                }\n            },\n\n            remove: function(candidate) {\n                var that = this,\n                    uid = this._getUid(candidate),\n                    item = this._getItem(candidate, uid),\n                    buttonGroup, children;\n\n                if (!item) {\n                    return;\n                }\n\n                if (item.component) {\n                    buttonGroup = item.toolbarEl.closest('[data-role=\"buttongroup\"]');\n                    if (buttonGroup.length > 0 && item.toolbarEl.siblings().length === 0) {\n                        buttonGroup.data(K_BUTTON_GROUP).destroy();\n                        buttonGroup.remove();\n\n                        item.toolbarEl = $(NOTHING);\n                    } else {\n                        item.component.destroy();\n                    }\n                }\n\n                if (item.templateEl.length > 0) {\n                    item.templateEl.remove();\n                } else if (item.toolbarEl.length > 0) {\n                    item.toolbarEl.remove();\n                }\n\n                if (item.buttonsPopupItem.length > 0) {\n                    item.buttonsPopupItem.remove();\n                }\n\n                if (this.overflowMenu) {\n                    this.overflowMenu.remove(item.menuItem);\n\n                    children = this.overflowMenu.element\n                        .find(\"[data-parentuid=\" + uid + \"]\");\n\n                    children.each((i, el) => {\n                        that.overflowMenu.remove($(el));\n                    });\n                }\n\n                if (this.options.resizable) {\n                    this.resize(true);\n                }\n            },\n\n            show: function(candidate) {\n                var that = this,\n                    uid = this._getUid(candidate),\n                    item = this._getItem(candidate, uid),\n                    elements, parentButtonGroup, children, parentGroupEl;\n\n                if (!item) {\n                    return;\n                }\n\n                elements = item.templateEl.add(item.toolbarEl).add(item.buttonsPopupItem);\n                elements.removeClass(FORCE_HIDDEN);\n                elements.removeClass(STATE_HIDDEN);\n\n                item.menuItem.removeClass(FORCE_HIDDEN);\n\n                if (this.overflowMenu) {\n                    children = this.overflowMenu.element\n                        .find(\"[data-parentuid=\" + uid + \"]\");\n\n                    children.each((i, el) => {\n                        $(el).removeClass(FORCE_HIDDEN);\n                    });\n                }\n\n                parentGroupEl = item.toolbarEl.parent().closest(DOT + BUTTON_GROUP);\n                parentButtonGroup = parentGroupEl.data(K_BUTTON_GROUP);\n\n                if (parentButtonGroup) {\n                    if (parentGroupEl.hasClass(\"k-hidden\") && parentGroupEl.children(\":not(.k-hidden)\").length > 0) {\n                        that.show(parentGroupEl);\n                    } else {\n                        that._groupVisibleButtons(parentGroupEl);\n                    }\n                }\n\n                if (this.options.resizable) {\n                    this.resize(true);\n                }\n            },\n\n            toggle: function(candidate, checked) {\n                var item = this._getItem(candidate),\n                    element = item.toolbarEl,\n                    menuItem = item.menuItem,\n                    button, parentGroup, group, groupButtons;\n\n                if (checked === undefined$1) {\n                    checked = true;\n                }\n\n                button = element.data(K_TOGGLE_BUTTON);\n\n                if (!item.component && menuItem.find(DOT + MENU_LINK_TOGGLE).length === 0) {\n                    return;\n                }\n\n                group = element.data(GROUP);\n\n                if (item.component) {\n                    parentGroup = element.closest(DOT + BUTTON_GROUP).data(K_BUTTON_GROUP);\n\n                    if (parentGroup) {\n                        if (element.hasClass(STATE_SELECTED) !== checked) {\n                            parentGroup._toggleIndex(element.index());\n                        }\n                    }\n\n                    button.toggle(checked);\n\n                    if (checked) {\n                        groupButtons = this.element.find(\"[data-group=\" + group + \"]\");\n\n                        groupButtons.each((i, el) => {\n                            if (el !== element[0]) {\n                                $(el).data(K_TOGGLE_BUTTON).toggle(false);\n                            }\n                        });\n                    }\n                }\n\n                if (menuItem) {\n                    menuItem\n                        .attr(ARIA_CHECKED, checked)\n                        .find(DOT + MENU_LINK_TOGGLE)\n                        .toggleClass(STATE_SELECTED, checked);\n\n                    if (checked && this.overflowMenu) {\n                        groupButtons = this.overflowMenu.element.find(\"[data-group=\" + group + \"]\");\n\n                        groupButtons.each((i, el) => {\n                            if (el !== menuItem[0]) {\n                                $(el)\n                                    .attr(ARIA_CHECKED, false)\n                                    .find(DOT + MENU_LINK_TOGGLE)\n                                    .removeClass(STATE_SELECTED);\n                            }\n                        });\n                    }\n                }\n            },\n\n            toggleTools: function(conditions) {\n                var that = this,\n                    tools = that.element.find(DATA_TOGGLE_SELECTOR),\n                    focusable = that.element.find(KENDO_FOCUSABLE).not(TABINDEX_MINUS_1);\n\n                tools.each(function(index, elm) {\n                    var tool = $(elm),\n                        widget = null,\n                        condition = tool.data(TOGGLE),\n                        toToggle = conditions && conditions[condition];\n\n                    if (tool.is(DATA_ROLE_SELECTOR)) {\n                        widget = kendo.widgetInstance(tool);\n                    }\n\n                    if (widget && widget.enable) {\n                        widget.enable(toToggle || false);\n                    } else {\n                        that.enable(tool, toToggle);\n                    }\n                });\n\n                that.element.find(DATA_TOGGLE_SELECTOR + \"[disabled]\").removeAttr(\"disabled\");\n\n                that.element.find(KENDO_FOCUSABLE).not(TABINDEX_MINUS_1).attr(\"tabindex\", -1);\n                focusable.attr(TABINDEX, 0);\n            },\n\n            _add: function(options) {\n                var processed = this._processOptions(options),\n                    template = processed.template,\n                    overflowTemplate = processed.overflowTemplate,\n                    type = WIDGET_TYPES[processed.type],\n                    element;\n\n                if (template || overflowTemplate) {\n                    element = this._addTemplate(processed);\n                } else if (kendo.ui[processed.component]) {\n                    element = this._addCustomWidget(processed);\n                } else if (type) {\n                    element = this._addDefaultTool(type, processed);\n                } else if (processed.type === SPACER) {\n                    this._addSpacer();\n                } else if (processed.type === SEPARATOR) {\n                    this._addSeparator(processed);\n                }\n\n                if (element) {\n                    if (this.overflowAnchor) {\n                        element.insertBefore(this.overflowAnchor);\n                    } else {\n                        element.appendTo(this.element);\n                    }\n\n                    element.find(\"[disabled]\").removeAttr(\"disabled\");\n\n                    if (element.is(\"[disabled]\")) {\n                        element.removeAttr(\"disabled\");\n                    }\n                }\n            },\n\n            _addAttributes: function(options, element) {\n                var attributes = options.attributes,\n                    classes = NOTHING;\n\n                if (!attributes) {\n                    attributes = {};\n                }\n\n                if (options.hidden) {\n                    classes = STATE_HIDDEN + EMPTY + FORCE_HIDDEN;\n                }\n\n                if (options.align) {\n                    classes = classes + \" k-align-\" + options.align;\n                }\n\n                if (attributes) {\n                    if (attributes.class) {\n                        classes = classes + EMPTY + attributes.class;\n                        delete attributes.class;\n                    }\n\n                    element.attr(attributes);\n                }\n\n                element.addClass(classes);\n                element.attr(KENDO_UID_ATTR, options.uid);\n\n                if (options.id) {\n                    element.attr(ID, options.id);\n                }\n                if (options.overflow === OVERFLOW_NEVER) {\n                    element.attr(\"data-overflow\", OVERFLOW_NEVER);\n                }\n\n                if (options.items) {\n                    options.items.forEach(item => {\n                        if (item && item.groupClass && !element.hasClass(item.groupClass)) {\n                            element.addClass(item.groupClass);\n                        }\n                    });\n                }\n            },\n\n            _addCustomWidget: function(options) {\n                var element = $(options.element || \"<input>\"),\n                    widget, result, classes;\n\n                if (options.overflowComponent) {\n                    this._addMenuItem(options.overflowComponent.type, $.extend({}, options, options.overflowComponent));\n                }\n\n                if (options.attributes) {\n                    classes = options.attributes.class;\n                    delete options.attributes[\"class\"];\n                    element.attr(options.attributes);\n                    delete options.attributes[ARIA_LABEL];\n                }\n\n                if (!options.componentOptions) {\n                    options.componentOptions = {};\n                }\n\n                options.componentOptions.size = this.options.size;\n\n                widget = new kendo.ui[options.component](element, options.componentOptions);\n\n                if (SAFE_COMPONENTS.indexOf(options.component) > -1) {\n                    widget.wrapper.addClass(TOOLBAR_TOOLS_CLASSES[options.component]).attr(ITEM_REF + TOOLBAR_TOOL, '');\n                    result = widget.wrapper;\n                } else {\n                    result = (widget.wrapper || widget.element).wrap(CUSTOM_WIDGET_WRAP).parent();\n                }\n\n                if (options.attributes) {\n                    options.attributes.class = classes;\n                }\n\n                this._addAttributes(options, result);\n\n                return result;\n            },\n\n            _addDefaultTool: function(component, options) {\n                var element, op;\n\n                if (options.overflow !== OVERFLOW_ALWAYS) {\n                    element = this._addToolbarTool(component, $.extend(true, {}, options));\n                }\n\n                if (this.overflowMenu && options.overflow !== OVERFLOW_NEVER) {\n                    if (options.overflowComponent) {\n                        op = $.extend(true, {}, options, options.overflowComponent);\n                        delete op[\"data-command\"];\n                        this._addMenuItem(\"Button\", op);\n                    } else {\n                        this._addMenuItem(component, $.extend(true, {}, options));\n                    }\n                }\n\n                return element;\n            },\n\n            _addMenuItem: function(component, options) {\n                var that = this,\n                    selected = options.selected,\n                    menuitem;\n\n                delete options.selected;\n\n                if (options.id) {\n                    options.id = options.id + DASH + OVERFLOW;\n                }\n                if (options.showIcon === TOOLBAR) {\n                    delete options.imageUrl;\n                    delete options.icon;\n                }\n\n                if (options.showText === TOOLBAR) {\n                    if (!options.attributes) {\n                        options.attributes = {};\n                    }\n\n                    options.attributes[ARIA_LABEL] = options.text;\n\n                    options.text = NOTHING;\n                } else if (options.text === undefined$1 || options.text === NOTHING) {\n                    options.text = NBSP;\n                    options.encoded = false;\n                }\n\n                that.overflowMenu.append(options);\n                menuitem = that.overflowMenu.element.find(DOT + MENU_ITEM).last();\n\n                if (options.icon) {\n                    menuitem.find(DOT + MENU_LINK).prepend(kendo.ui.icon(options.icon));\n                }\n\n                if (component === \"ToggleButton\" || (component === \"Button\" && options.togglable === true)) {\n                    menuitem.find(DOT + MENU_LINK).addClass(MENU_LINK_TOGGLE);\n\n                    if (selected) {\n                        menuitem.find(DOT + MENU_LINK).addClass(STATE_SELECTED);\n                    }\n\n                    if (options.group) {\n                        menuitem.attr(\"data-group\", options.group);\n                    }\n                } else if (options.menuButtons) {\n                    options.menuButtons.forEach((i) => {\n                        i.overflow = options.overflow;\n                        that._addMenuItem(null, i);\n                    });\n                } else if (options.buttons) {\n                    menuitem.remove();\n                    menuitem = null;\n\n                    options.buttons.forEach((i) => {\n                        var attributes = i.attributes;\n                        i.overflow = options.overflow;\n                        i.attributes = $.extend(attributes, options.attributes);\n\n                        that._addMenuItem(\"Button\", i);\n                    });\n                }\n\n                if (component === \"DropDownButton\") {\n                    menuitem.addClass(STATE_DISABLED);\n                    menuitem.attr(ARIA_DISABLED, true);\n                }\n\n                if (menuitem) {\n                    that._addAttributes(options, menuitem);\n\n                    if (options.overflow === OVERFLOW_AUTO) {\n                        menuitem.addClass(STATE_HIDDEN);\n                    }\n\n                    if (options.click || options.toggle) {\n                        that.overflowMenu.bind(SELECT, (e) => {\n                            if (e.item === menuitem[0]) {\n                                this._onMenuItemSelect(e, options.click, options.toggle);\n                            }\n                        });\n                    }\n                }\n\n                return menuitem;\n            },\n\n            _addPopupButton: function(options) {\n                var that = this,\n                    widgetElement = $(POPUP_BUTTON_TEMPLATE),\n                    component = options.popupComponent,\n                    popup, chooser;\n\n                widgetElement.attr(ARIA_LABEL, options.text);\n\n                popup = $(\"<div/>\").appendTo($(\"<body>\")).kendoPopup({\n                    anchor: widgetElement\n                }).data(\"kendoPopup\");\n\n                widgetElement.on(CLICK + \" touchend\", (e) => {\n                    popup.toggle();\n                    e.preventDefault();\n                });\n\n                chooser = new component(popup.element);\n\n                chooser.bind(options.commandOn, (e) => {\n                    that.trigger(CHANGE, { target: widgetElement, value: e.value || e });\n                    popup.close();\n                });\n\n                return { widgetElement, chooser, popup };\n            },\n\n            _addSeparator: function(options) {\n                var separator = $(SEPARATOR_EL),\n                    overflowSeparator = $(SEPARATOR_OVERFLOW_EL);\n\n                separator.addClass(KSEPARATOR);\n                separator.attr(ROLE, SEPARATOR);\n\n                if (this.overflowAnchor) {\n                    separator.insertBefore(this.overflowAnchor);\n                } else {\n                    separator.appendTo(this.element);\n                }\n\n                this._addAttributes(options, separator);\n\n                if (options.id) {\n                    options.id = options.id + DASH + OVERFLOW;\n                }\n\n                this._addAttributes(options, overflowSeparator);\n\n                if (this.overflowMenu) {\n                    this.overflowMenu.element.append(overflowSeparator);\n                }\n            },\n\n            _addSpacer: function() {\n                var spacer = $(SPACER_EL);\n                spacer.addClass(SPACER_CLASS);\n\n                if (this.overflowAnchor) {\n                    spacer.insertBefore(this.overflowAnchor);\n                } else {\n                    spacer.appendTo(this.element);\n                }\n            },\n\n            _addTemplate: function(options) {\n                var template = options.template,\n                    overflowTemplate = options.overflowTemplate,\n                    element, menuitem, inputsInTemplate = $(NOTHING);\n\n                if (overflowTemplate && this.overflowMenu && options.overflow !== OVERFLOW_NEVER) {\n                    overflowTemplate = isFunction(overflowTemplate) ? overflowTemplate(options)[0] : overflowTemplate;\n                    this.overflowMenu.append({});\n                    menuitem = this.overflowMenu.element\n                        .find(DOT + MENU_ITEM)\n                        .last()\n                        .find(DOT + MENU_LINK)\n                        .html(overflowTemplate)\n                        .parent();\n                }\n\n                if (template && options.overflow !== OVERFLOW_ALWAYS) {\n                    if (this.options.evaluateTemplates) {\n                        template = kendo.template(template);\n                    }\n\n                    template = isFunction(template) ? template(options) : template;\n\n                    element = $(TEMPLATE_WRAPPER);\n                    element.html(template);\n\n                    if (menuitem) {\n                        menuitem.addClass(STATE_HIDDEN);\n                    }\n                }\n\n                if (element) {\n                    inputsInTemplate = element.find(INPUT + COMMA + SELECT);\n                    this._addAttributes(options, element);\n                }\n\n                if (menuitem) {\n                    inputsInTemplate.add(menuitem.find(INPUT + COMMA + SELECT));\n                    this._addAttributes(options, menuitem);\n                }\n\n                if (!this.options.navigateOnTab && inputsInTemplate.length > 0) {\n                    element.attr(TABINDEX, 0);\n                    element.attr(ITEM_REF + TOOLBAR_TOOL, '');\n                    inputsInTemplate.attr(TABINDEX, -1);\n                }\n\n                return element;\n            },\n\n            _addToolbarTool: function(component, options) {\n                var widgetElement = $(\"<button>\"),\n                    hasButtons = false,\n                    widget, element, popupRef;\n\n                if (options.primary === true) {\n                    options.themeColor = PRIMARY;\n                }\n                if (options.url) {\n                    widgetElement = $(\"<a href='\" + options.url + \"'>\");\n                }\n                if (options.showIcon === OVERFLOW) {\n                    delete options.imageUrl;\n                    delete options.icon;\n                }\n                if (options.showText !== OVERFLOW) {\n                    widgetElement.text(options.text);\n                } else {\n                    widgetElement.attr(ARIA_LABEL, options.text);\n                }\n\n                if (options.type === \"popupButton\") {\n                    popupRef = this._addPopupButton(options);\n                    widgetElement = popupRef.widgetElement;\n                } else if (component === \"Button\" && options.togglable === true) {\n                    component = \"ToggleButton\";\n                } else if (options.menuButtons) {\n                    options.items = options.menuButtons;\n                    delete options.menuButtons;\n\n                    if (options.attributes && options.attributes.class) {\n                        widgetElement.addClass(options.attributes.class);\n                    }\n\n                    widgetElement.attr(DATA_UID, options.uid);\n                    delete options.uid;\n                } else if (options.buttons) {\n                    widgetElement = $(\"<span></span>\");\n                    hasButtons = true;\n                    options.items = options.buttons;\n                    delete options.buttons;\n\n                    options.preventKeyNav = true;\n\n                    options.items.forEach(i => {\n                        if (i.showIcon === OVERFLOW) {\n                            delete i.imageUrl;\n                            delete i.icon;\n                        }\n\n                        if (i.showText === OVERFLOW) {\n                            if (!i.attributes) {\n                                i.attributes = {};\n                            }\n\n                            i.attributes[ARIA_LABEL] = i.text;\n\n                            delete i.text;\n                        }\n                    });\n                }\n\n                if (options.id) {\n                    widgetElement.attr(ID, options.id);\n                    delete options.id;\n                }\n\n                // Remove the name property. Otherwise the default component name will be overriden.\n                // This will cause us to init an element with data-role=${name} instead of the correct data-role of the component.\n                if (options.name) {\n                    delete options.name;\n                }\n\n                options.size = this.options.size;\n\n                widget = new kendo.ui[component]($(widgetElement), options);\n                element = widget.wrapper || widget.element;\n                element.addClass(TOOLBAR_TOOLS_CLASSES[component]);\n                this._addAttributes(options, element);\n\n                if (options.url) {\n                    widgetElement.removeAttr(ROLE);\n                }\n\n                if (hasButtons) {\n                    element.find(DOT + KBUTTON).attr(ITEM_REF + TOOLBAR_TOOL, '');\n                    this._groupVisibleButtons(element);\n                } else {\n                    widget.element.attr(ITEM_REF + TOOLBAR_TOOL, '');\n                }\n\n                if (options.type !== \"popupButton\" && options.type !== \"open\") {\n                    this._attachWidgetEvents(widget);\n                } else if (options.type === \"open\") {\n                    widgetElement.addClass(UPLOAD_BUTTON);\n                    this._resetOpen(widgetElement, options.extensions);\n                    element = widgetElement.parent();\n                } else {\n                    widget.chooser = popupRef.chooser;\n                    widget.popup = popupRef.popup;\n                }\n\n                return element;\n            },\n\n            _attachEvents: function() {\n                var that = this;\n\n                that.element.on(KEYDOWN + ns, that._keydown.bind(that))\n                    .on(FOCUSIN + ns, that._focusIn.bind(that))\n                    .on(FOCUSOUT + ns, that._focusOut.bind(that));\n            },\n\n            _attachWidgetEvents: function(widget) {\n                var that = this;\n\n                widget.bind(CLICK, that._onClick.bind(that));\n                widget.bind(TOGGLE, that._onToggle.bind(that));\n                widget.bind(SELECT, that._onSelect.bind(that));\n                widget.bind(OPEN, that._onOpen.bind(that));\n                widget.bind(CLOSE, that._onClose.bind(that));\n\n                widget.wrapper.find(DOT + KBUTTON).each((i, el) => {\n                    var $el = $(el);\n\n                    if ($el.data(\"kendoButton\")) {\n                        $el.data(\"kendoButton\").bind(CLICK, (e) => {\n                            that.trigger(CLICK, { id: e.id, target: e.target, originalEvent: e.originalEvent || e.event });\n                        });\n                    }\n                });\n            },\n\n            _childrenWidth: function() {\n                var gap = parseInt(this.element.css('gap'), 10) || 0;\n                var childrenWidth = gap;\n\n                this.element.children(\":visible:not(\" + DOT + SPACER_CLASS + \")\").each(function() {\n                    childrenWidth += outerWidth($(this), false) + gap;\n                });\n\n                return Math.ceil(childrenWidth);\n            },\n\n            _extendToolsOptions: function() {\n                var options = this.options,\n                    items = options.tools.flatMap((tool) => this._mapTool(tool, options.parentMessages, options.defaultTools));\n\n                this.options.items = items;\n\n                return items;\n            },\n\n            _focusIn: function(e) {\n                var target = $(e.target),\n                    button = target.closest(DOT + KBUTTON);\n\n                if (button.length > 0) {\n                    this._resetTabIndex(button);\n                    button.addClass(KFOCUS);\n                }\n            },\n\n            _focusOut: function(e) {\n                this.wrapper.find(DOT + KBUTTON + DOT + KFOCUS).removeClass(KFOCUS);\n            },\n\n            _getAllItems: function() {\n                return this.wrapper.find(ITEM_REF_SELECTOR)\n                    .filter(\":visible\")\n                    .filter((i, el) => {\n                        if (el.style.visibility === HIDDEN) {\n                            return false;\n                        }\n\n                        return true;\n                    });\n            },\n\n            _getItem: function(candidate, knownUid) {\n                var uid = knownUid || this._getUid(candidate),\n                    buttonsPopups = $(DATA_ROLE_BUTTONMENU),\n                    uidSelector, toolbarEl;\n\n                if (!uid) {\n                    return {\n                        toolbarEl: this.element.find(candidate),\n                        templateEl: $(NOTHING),\n                        menuItem: this.overflowMenu ? this.overflowMenu.element.find(candidate) : $(NOTHING),\n                        buttonsPopupItem: $(NOTHING)\n                    };\n                }\n\n                uidSelector = \"[data-uid=\" + uid + \"]\";\n                toolbarEl = this.element.find(uidSelector);\n\n                return {\n                    toolbarEl: toolbarEl,\n                    templateEl: toolbarEl.closest(DOT + TEMPLATE_ITEM + COMMA + DOT + SPLIT_BUTTON),\n                    component: kendo.widgetInstance(toolbarEl),\n                    menuItem: this.overflowMenu ? this.overflowMenu.element.find(uidSelector) : $(NOTHING),\n                    buttonsPopupItem: buttonsPopups.find(uidSelector)\n                };\n            },\n\n            _getNextElement: function(item, direction) {\n                var items = this._getAllItems(),\n                    itemIndex = items.index(item) === -1 ? items.index(item.parentElement) : items.index(item),\n                    focusableItem = items[itemIndex + direction];\n\n                if (!focusableItem) {\n                    if (direction === -1) {\n                        focusableItem = items.last();\n                    } else {\n                        focusableItem = items.first();\n                    }\n                }\n\n                return focusableItem;\n            },\n\n            _getUid: function(candidate) {\n                var element;\n\n                // find toolbar item by jQuery selector\n                element = this.element.find(candidate);\n\n                // if not found find in in the DropDown-/SplitButton popups\n                if (!element.length) {\n                    element = $(DATA_ROLE_BUTTONMENU).find(candidate);\n                }\n\n                // if not, find it in the OverflowMenu\n                if (!element.length && this.overflowMenu) {\n                    element = this.overflowMenu.element.find(candidate);\n                }\n\n                if (!element.length) {\n                    return null;\n                } else {\n                    return element.data(UID) || element.closest(ITEM_REF_SELECTOR).data(UID);\n                }\n            },\n\n            _groupVisibleButtons: function(el) {\n                var buttons = el.children(),\n                    visibleBtns;\n\n                buttons.removeClass(GROUP_END).removeClass(GROUP_START);\n                visibleBtns = buttons.filter(\":not('.\" + STATE_HIDDEN + \"')\");\n                visibleBtns.first().addClass(GROUP_START);\n                visibleBtns.last().addClass(GROUP_END);\n            },\n\n            _hideItem: function(item) {\n                var that = this,\n                    widget;\n\n                item.addClass(STATE_HIDDEN);\n\n                if (that.overflowMenu) {\n                    if (item.hasClass(SPLIT_BUTTON) || item.hasClass(MENU_BUTTON)) {\n                        if (item.hasClass(SPLIT_BUTTON)) {\n                            item = item.children().eq(0);\n                            widget = item.data(K_SPLIT_BUTTON);\n                        } else {\n                            widget = item.data(K_DROP_DOWN_BUTTON);\n                        }\n\n                        widget.menu.list.children().each((i, el) => {\n                            that._showMenuItem($(el));\n                        });\n\n                        that._showMenuItem(item);\n                    } else if (item.hasClass(BUTTON_GROUP)) {\n                        item.children().each((i, el) => {\n                            that._showMenuItem($(el));\n                        });\n                    } else {\n                        that._showMenuItem(item);\n                    }\n                }\n            },\n\n            _hideMenuItem: function(item) {\n                this.overflowMenu.element\n                    .find(\">li[data-uid='\" + item.data(UID) + \"']\")\n                    .addClass(STATE_HIDDEN);\n            },\n\n            _items: function() {\n                let options = this.options;\n\n                for (var i = 0; i < options.items.length; i++) {\n                    this._add(options.items[i]);\n                }\n            },\n\n            _keydown: function(e) {\n                var target = $(e.target),\n                    keyCode = e.keyCode,\n                    templateItem = target.closest(DOT + TEMPLATE_ITEM),\n                    isOverflowAnchor = target.is(DOT + OVERFLOW_ANCHOR);\n\n                if (!this.options.navigateOnTab && !target.is(ITEM_REF_SELECTOR) && keyCode === keys.ESC && templateItem.length > 0) {\n                    e.stopPropagation();\n                    this._keyDeactivateTemplate(templateItem);\n                    return;\n                }\n\n                if (!target.is(ITEM_REF_SELECTOR)) {\n                    return;\n                }\n\n                if (!this.options.navigateOnTab && keyCode === keys.ENTER && target.hasClass(TEMPLATE_ITEM)) {\n                    this._keyActivateTemplate(target);\n                } else if (isOverflowAnchor && (e.altKey && keyCode === keys.DOWN || keyCode === keys.SPACEBAR)) {\n                    this._keyOpenOverflow(e, keyCode);\n                } else if (keyCode === keys.HOME) {\n                    this._keyFocusFirst(target, e);\n                } else if (keyCode === keys.END) {\n                    this._keyFocusLast(target, e);\n                } else if (!this.options.navigateOnTab && (keyCode === keys.RIGHT || keyCode === keys.LEFT)) {\n                    this._keyFocusNext(keyCode, e);\n                }\n            },\n\n            _keyActivateTemplate: function(target) {\n                var innerFocusable = target.find(KENDO_FOCUSABLE + \":not('\" + DOT + INPUT_BUTTON + \"')\" + COMMA + DOT + DROPDOWNLIST);\n                const pagerTool = target.find('.k-pager');\n\n                if (pagerTool.length > 0) {\n                    pagerTool.trigger(FOCUS);\n                } else if (innerFocusable.length > 0) {\n                    target.attr(TABINDEX, -1);\n\n                    innerFocusable.attr(TABINDEX, 0);\n                    innerFocusable.first().trigger(FOCUS);\n                }\n            },\n\n            _keyDeactivateTemplate: function(templateItem) {\n                var innerWidget = templateItem.find(DATA_ROLE_SELECTOR),\n                    innerFocusable = templateItem.find(KENDO_FOCUSABLE + \":not('\" + DOT + INPUT_BUTTON + \"')\" + COMMA + DOT + DROPDOWNLIST),\n                    widgetInstance;\n\n                if (innerWidget.length > 0) {\n                    widgetInstance = kendo.widgetInstance(innerWidget);\n\n                    if (widgetInstance) {\n                        if (widgetInstance.overflowMenu && widgetInstance.overflowMenu.visible()) {\n                            return;\n                        } else {\n                            templateItem.attr(TABINDEX, 0);\n                            templateItem.trigger(FOCUS);\n                            templateItem.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                        }\n                    }\n                }\n\n                if (innerFocusable.length > 0) {\n                    templateItem.attr(TABINDEX, 0);\n                    templateItem.trigger(FOCUS);\n                    innerFocusable.attr(TABINDEX, -1);\n                }\n            },\n\n            _keyFocusFirst: function(target, e) {\n                var items = this._getAllItems();\n\n                if (target.is(DOT + DROPDOWNLIST) || target.is(INPUT)) {\n                    return;\n                }\n\n                this._resetTabIndex(items.first());\n                items.first().trigger(FOCUS);\n                e.preventDefault();\n            },\n\n            _keyFocusLast: function(target, e) {\n                var items = this._getAllItems(),\n                    last;\n\n                if (target.is(DOT + DROPDOWNLIST) || target.is(INPUT)) {\n                    return;\n                }\n\n                last = items.last();\n\n                if (last.width() === 0) {\n                    last = items.eq(items.length - 2);\n                }\n\n                this._resetTabIndex(last);\n                last.trigger(FOCUS);\n                e.preventDefault();\n            },\n\n            _keyFocusNext: function(keyCode, e) {\n                var direction = this._isRtl ? -1 : 1,\n                    next;\n\n                if (keyCode === keys.LEFT) {\n                    direction = -1 * direction;\n                }\n\n                next = $(this._getNextElement(e.target, direction));\n                this._resetTabIndex(next);\n                next.trigger(FOCUS);\n\n                e.preventDefault();\n            },\n\n            _keyOpenOverflow: function(e, keyCode) {\n                if (keyCode === keys.SPACEBAR) {\n                    e.preventDefault();\n                }\n\n                this.overflowMenu.open();\n            },\n\n            _mapAttributes: function(toolOptions, messages) {\n                return {\n                    \"aria-label\": messages[toolOptions.name || toolOptions.property],\n                    \"title\": messages[toolOptions.name || toolOptions.property],\n                    \"data-command\": toolOptions.command,\n                    \"data-options\": toolOptions.options,\n                    \"data-dialog\": toolOptions.dialog,\n                    \"data-property\": toolOptions.property,\n                    \"data-value\": toolOptions.value,\n                    \"data-toggle\": toolOptions.toggleCondition\n                };\n            },\n\n            _mapComponent: function(component, messages) {\n                var that = this,\n                    componentOptions = component.componentOptions,\n                    componentMessages = componentOptions.messages,\n                    componentPlaceholder = componentOptions.placeholder,\n                    attributes = $.extend({}, that._mapAttributes(component, messages), component.attributes),\n                    options;\n\n                if (component.overflowComponent) {\n                    options = component.options || {};\n\n                    if (component.componentOptions.dataSource) {\n                        options.options = component.componentOptions.dataSource;\n                    }\n                    if (component.componentOptions.value) {\n                        options.default = component.componentOptions.value;\n                    }\n\n                    if (Object.keys(options).length > 0) {\n                        component.overflowComponent.options = JSON.stringify(options);\n                    }\n\n                    component.overflowComponent = that._mapTool(component.overflowComponent, messages);\n                }\n\n                if (componentMessages) {\n                    Object.keys(componentMessages).forEach((key) => {\n                        component.componentOptions.messages[key] = messages[componentMessages[key]] || componentMessages[key];\n                    });\n                }\n\n                if (componentPlaceholder) {\n                    component.componentOptions.placeholder = messages[componentPlaceholder] || componentPlaceholder;\n                }\n\n                Object.keys(componentOptions).forEach((key) => {\n                    if (key === \"commandOn\") {\n                        component.componentOptions[componentOptions[key]] = (ev) => {\n                            that.trigger(CHANGE, { target: ev.target || ev.sender.element });\n                        };\n                    }\n                });\n\n                if (componentOptions.dataSource && componentOptions.dataSource.length) {\n                    component.componentOptions.dataSource = componentOptions.dataSource.map(i => {\n                        if (i.name && messages[i.name]) {\n                            i.text = messages[i.name];\n                        }\n\n                        return i;\n                    });\n                }\n\n                component.attributes = attributes;\n\n                return component;\n            },\n\n            _mapTool: function(tool, messages, defaultTools) {\n                let that = this,\n                    isArray = Array.isArray(tool),\n                    isPlainObjectTool = $.isPlainObject(tool),\n                    toolKeysCount = isPlainObjectTool && Object.keys(tool).length,\n                    isBuiltInTool, toolOptions, attributes, originalTool;\n\n                if (isArray) {\n                    return {\n                        type: \"buttonGroup\",\n                        buttons: tool.map(t => that._mapTool(t, messages, defaultTools))\n                    };\n                }\n\n                isBuiltInTool = isPlainObjectTool && (toolKeysCount === 1 || toolKeysCount === 2) && tool.name;\n                originalTool = isBuiltInTool ? tool : {};\n                tool = isBuiltInTool ? tool.name : tool;\n                toolOptions = $.isPlainObject(tool) ? tool : $.extend({}, defaultTools[tool]);\n\n                attributes = $.extend({}, that._mapAttributes(toolOptions, messages), toolOptions.attributes);\n\n                kendo.deepExtend(toolOptions, {\n                    text: originalTool.text || messages[toolOptions.name || toolOptions.property],\n                    attributes: attributes,\n                });\n\n                if (toolOptions.type === \"component\") {\n                    if (toolOptions.items) {\n                        return toolOptions.items.map(t => that._mapComponent(t, messages));\n                    } else {\n                        return that._mapComponent(toolOptions, messages);\n                    }\n                } else if (toolOptions.type === \"buttonGroup\") {\n                    delete toolOptions.attributes[ARIA_LABEL];\n                    toolOptions.buttons = toolOptions.buttons.map(t => that._mapTool(t, messages, defaultTools));\n                } else if (toolOptions.type === \"splitButton\") {\n                    delete toolOptions.attributes[ARIA_LABEL];\n                    toolOptions.menuButtons = toolOptions.menuButtons.flatMap(t => that._mapTool(t, messages, defaultTools));\n                } else if (toolOptions.type === \"popupButton\" && toolOptions.overflowComponent) {\n                    toolOptions.overflowComponent = that._mapTool(toolOptions.overflowComponent, messages);\n                }\n\n                delete toolOptions.name;\n\n                return toolOptions;\n            },\n\n            _menuItemSelect: function(e) {\n                var item = $(e.item),\n                    id = item.attr(ID),\n                    togglable = item.find(DOT + MENU_LINK_TOGGLE),\n                    groupName = item.data(GROUP),\n                    shouldSelect, twin, group;\n\n                if (id && id.indexOf(DASH + OVERFLOW) > -1) {\n                    id = id.replace(DASH + OVERFLOW, NOTHING);\n                }\n\n                if (togglable.length) {\n                    if (groupName) {\n                        this.overflowMenu.element.find(\"[data-group=\" + groupName + \"]\").each((i, el) => {\n                            var current = $(el);\n\n                            current.attr(ARIA_CHECKED, false);\n                            current.find(DOT + MENU_LINK_TOGGLE).removeClass(STATE_SELECTED);\n                        });\n                    }\n\n                    shouldSelect = groupName ? true : !togglable.hasClass(STATE_SELECTED);\n\n                    togglable.toggleClass(STATE_SELECTED, shouldSelect);\n                    item.attr(ARIA_CHECKED, shouldSelect);\n\n                    twin = this.element.find(\"[data-uid=\" + item.data(UID) + \"]\");\n\n                    if (twin.length) {\n                        if (twin.closest(DOT + BUTTON_GROUP).length) {\n                            group = twin.closest(DOT + BUTTON_GROUP).data(K_BUTTON_GROUP);\n                            group.select(twin);\n                        } else {\n                            if (groupName) {\n                                this.element.find(\"[data-group=\" + groupName + \"]\").each((i, el) => {\n                                    $(el).data(K_TOGGLE_BUTTON).toggle(false);\n                                });\n                            }\n\n                            twin.data(K_TOGGLE_BUTTON).toggle(true);\n                        }\n                    }\n\n                    this.trigger(TOGGLE, {\n                        id: item.attr(ID),\n                        target: item,\n                        checked: shouldSelect\n                    });\n                } else {\n                    this.trigger(CLICK, {\n                        id: id,\n                        target: item,\n                    });\n                }\n            },\n\n            _onClick: function(e) {\n                var el = e.target,\n                    togglable = el.hasClass(\"k-toolbar-toggle-button\"),\n                    group = el.data(GROUP);\n\n                if (!togglable) {\n                    this.trigger(CLICK, { id: e.id, target: e.target, originalEvent: e.originalEvent || e.event });\n                }\n\n                if (group && this.element.find(\"[data-group=\" + group + \"]\").length > 1) {\n                    if (el.hasClass(STATE_SELECTED)) {\n                        e.preventDefault();\n                    }\n                }\n            },\n\n            _onClose: function(e) {\n                if (this.trigger(CLOSE, { widget: e.sender })) {\n                    e.preventDefault();\n                }\n            },\n\n            _onMenuItemSelect: function(e, click, toggle) {\n                var item = $(e.item),\n                    togglable = item.find(DOT + MENU_LINK_TOGGLE).length > 0,\n                    id = item.attr(ID);\n\n                if (id && id.indexOf(DASH + OVERFLOW) > -1) {\n                    id = id.replace(DASH + OVERFLOW, NOTHING);\n                }\n\n                if (click) {\n                    click.bind(this)({\n                        event: e.event,\n                        id: id,\n                        target: item\n                    });\n                }\n\n                if (togglable && toggle) {\n                    setTimeout(() => {\n                        toggle.bind(this)({\n                            event: e.event,\n                            id: id,\n                            target: item,\n                            checked: item.find(DOT + STATE_SELECTED).length > 0\n                        });\n                    });\n                }\n            },\n\n            _onOpen: function(e) {\n                if (this.trigger(OPEN, { widget: e.sender })) {\n                    e.preventDefault();\n                }\n            },\n\n            _onSelect: function(e) {\n                var menuEl = this.overflowMenu ? this.overflowMenu.element : $(NOTHING);\n\n                e.sender.element.children().each((i, el) => {\n                    var current = $(el),\n                        uid = current.data(UID),\n                        selected = current.hasClass(STATE_SELECTED);\n\n                    menuEl\n                        .find(\"[data-uid=\" + uid + \"]\")\n                        .attr(ARIA_CHECKED, selected)\n                        .find(DOT + MENU_LINK_TOGGLE)\n                        .toggleClass(STATE_SELECTED, selected);\n                });\n\n                this.trigger(TOGGLE, {\n                    id: e.target.attr(ID),\n                    target: e.target,\n                    checked: e.target.hasClass(STATE_SELECTED)\n                });\n            },\n\n            _onToggle: function(e) {\n                var that = this,\n                    el = e.target,\n                    group = el.data(GROUP),\n                    overflowItem,\n                    overflowGroup;\n\n                if (that.overflowMenu) {\n                    overflowItem = that.overflowMenu.element.find(\"[data-uid=\" + el.attr(DATA_UID) + \"]\");\n                    overflowGroup = that.overflowMenu.element.find(\"[data-group=\" + group + \"]\");\n\n                    overflowGroup.attr(ARIA_CHECKED, false).find(DOT + MENU_LINK_TOGGLE).removeClass(STATE_SELECTED);\n                    overflowItem.attr(ARIA_CHECKED, true).find(DOT + MENU_LINK_TOGGLE).addClass(STATE_SELECTED);\n                }\n\n                if (group) {\n                    that.element.find(\"[data-group=\" + group + \"]\").each((i, item) => {\n                        if (item !== el[0]) {\n                            $(item).data(K_TOGGLE_BUTTON).toggle(false);\n                        }\n                    });\n                }\n\n                this.trigger(TOGGLE, { id: e.id, target: e.target, checked: e.checked, originalEvent: e.originalEvent || e.event });\n            },\n\n            _processInner(items, parentUid) {\n                var attributes, current;\n\n                for (var i = 0; i < items.length; i++) {\n                    current = items[i];\n                    attributes = current.attributes;\n\n                    if (!attributes) {\n                        items[i].attributes = {};\n                    }\n\n                    items[i].attributes[DATA_UID] = kendo.guid();\n                    items[i].attributes[DATA_PARENTUID] = parentUid;\n\n                    if (current.id) {\n                        items[i].attributes[ID] = items[i].id;\n                    }\n\n                    if (current.hidden) {\n                        if (!items[i].attributes.class) {\n                            items[i].attributes.class = NOTHING;\n                        }\n\n                        items[i].attributes.class += (EMPTY + STATE_HIDDEN + EMPTY + FORCE_HIDDEN);\n                    }\n                }\n\n                return items;\n            },\n\n            _processOptions: function(options) {\n                let that = this,\n                    template = options.template,\n                    overflowTemplate = options.overflowTemplate,\n                    uid = kendo.guid(),\n                    groupName;\n\n                $.extend(options, {\n                    uid: uid,\n                    fillMode: options.fillMode ? options.fillMode : that.options.fillMode,\n                    rootUid: this.uid\n                });\n\n                if (options.menuButtons) {\n                    options.menuButtons = this._processInner(options.menuButtons, uid);\n                } else if (options.buttons && options.buttons.length) {\n                    options.buttons = this._processInner(options.buttons, uid);\n\n                    if (options.buttons.some(b => b.togglable)) {\n                        groupName = options.buttons[0].group;\n\n                        if (!!groupName && options.buttons.every(b => b.group === groupName)) {\n                            options.selection = SINGLE;\n                        } else {\n                            options.selection = MULTIPLE;\n                        }\n                    } else {\n                        options.selection = NONE;\n                    }\n                }\n\n                if ((template && !overflowTemplate) || options.type === SPACER) {\n                    options.overflow = OVERFLOW_NEVER;\n                } else if (!options.overflow) {\n                    options.overflow = OVERFLOW_AUTO;\n                }\n\n                if (options.enable !== undefined$1) {\n                    options.enabled = options.enable;\n                }\n\n                return options;\n            },\n\n            _renderOverflow: function() {\n                var that = this,\n                    isRtl = that._isRtl,\n                    horizontalDirection = isRtl ? \"left\" : \"right\";\n\n                that.overflowAnchor = $(\"<button class='k-toolbar-overflow-button' title='More tools'>\");\n                that.overflowAnchor.attr(ITEM_REF + TOOLBAR_TOOL, '');\n                that.element.append(that.overflowAnchor);\n                that.overflowAnchor.kendoButton({\n                    icon: \"more-vertical\",\n                    fillMode: \"flat\",\n                    size: that.options.size\n                });\n\n                if (!that.options.navigateOnTab) {\n                    that.overflowAnchor.attr(TABINDEX, -1);\n                }\n\n                that.overflowMenu = new kendo.ui.ContextMenu($(\"<ul>\"), {\n                    size: that.options.size,\n                    showOn: \"click tap\",\n                    origin: \"bottom \" + horizontalDirection,\n                    position: \"top \" + horizontalDirection,\n                    alignToAnchor: true,\n                    target: that.overflowAnchor,\n                    open: function(e) {\n                        if (that.trigger(OVERFLOW_OPEN)) {\n                            e.preventDefault();\n                        }\n                    },\n                    close: function(e) {\n                        if (that.trigger(OVERFLOW_CLOSE)) {\n                            e.preventDefault();\n                        } else {\n                            that._resetTabIndex(that.overflowAnchor);\n                            that.overflowAnchor.trigger(FOCUS);\n                        }\n                    }\n                });\n\n                that.overflowMenu.element.attr(KENDO_UID_ATTR, this.uid);\n\n                setTimeout(() => {\n                    that.overflowMenu.bind(SELECT, that._menuItemSelect.bind(that));\n                });\n            },\n\n            _resetOpen: function(element, extensions) {\n                var that = this,\n                    uploadWrapper,\n                    input;\n\n                element.closest(\".k-upload-button-wrap\").find(\"input\").remove();\n                uploadWrapper = element.wrap(\"<div class='k-upload-button-wrap'></span>\").parent();\n\n                input = $(\"<input type='file' autocomplete='off' accept='\" + extensions + \"'/>\")\n                    .attr(\"aria-hidden\", true)\n                    .one(\"change\", (e) => {\n                        that.trigger(CHANGE, {\n                            target: element,\n                            value: e.target.files[0]\n                        });\n\n                        that._resetOpen(element, extensions);\n                    })\n                    .appendTo(uploadWrapper);\n\n                element.off(KEYDOWN).on(KEYDOWN, (e) => {\n                    if (e.keyCode === kendo.keys.ENTER) {\n                        input.trigger(CLICK);\n                    }\n                });\n            },\n\n            _resetTabIndex: function(toFocus) {\n                if (this.options.navigateOnTab !== true) {\n                    this.wrapper.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                    toFocus.attr(TABINDEX, 0);\n                }\n            },\n\n            _resizable: function() {\n                var that = this,\n                    element = that.element;\n\n                that._renderOverflow();\n                element.addClass(RESIZABLE_TOOLBAR);\n\n                that._resizeHandler = kendo.onResize(function() {\n                    that.resize();\n                });\n            },\n\n            _resize: function(e) {\n                var containerWidth = e.width,\n                    wrapper = this.element,\n                    popupBtnElements = wrapper.find('[data-role=\"splitbutton\"]').add(wrapper.find('[data-role=\"dropdownbutton\"]'));\n\n                if (!this.options.resizable) {\n                    return;\n                }\n\n                this.overflowMenu.close();\n\n                if (popupBtnElements.length > 0) {\n                    popupBtnElements.each((i, el) => {\n                        kendo.widgetInstance($(el)).close();\n                    });\n                }\n\n                this._shrink(containerWidth);\n                this._stretch(containerWidth);\n                this._toggleOverflowAnchor();\n            },\n\n            _shrink: function(containerWidth) {\n                var commandElement,\n                    visibleCommands,\n                    activeElement;\n\n                if (containerWidth < this._childrenWidth()) {\n                    visibleCommands = this.element.children(\":visible:not([data-overflow='never'], .\" + OVERFLOW_ANCHOR + \")\");\n\n                    for (var i = visibleCommands.length - 1; i >= 0; i--) {\n                        commandElement = visibleCommands.eq(i);\n\n                        if (containerWidth > this._childrenWidth()) {\n                            break;\n                        } else {\n                            activeElement = commandElement.find(\"[tabindex=0]\") || commandElement.is(\"[tabindex=0]\") ? commandElement : $(NOTHING);\n\n                            if (activeElement.length > 0) {\n                                activeElement.attr(TABINDEX, -1);\n                                this.element.children(DOT + OVERFLOW_ANCHOR).attr(TABINDEX, 0);\n                            }\n\n                            this._hideItem(commandElement);\n                        }\n                    }\n                }\n            },\n\n            _showItem: function(item, containerWidth) {\n                var that = this,\n                    gap = parseInt(this.element.css('gap'), 10) || 0,\n                    widget;\n\n                item.removeClass(STATE_HIDDEN);\n                var itemOuterWidth = outerWidth(item, true) + gap;\n                item.addClass(STATE_HIDDEN);\n\n                if (item.length && (item.hasClass(SPACER_CLASS) || containerWidth > this._childrenWidth() + itemOuterWidth)) {\n                    item.removeClass(STATE_HIDDEN);\n\n                    if (this.options.navigateOnTab !== true) {\n                        item.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                    } else {\n                        if (item.is(\"[tabindex=-1]\")) {\n                            item.removeAttr(TABINDEX);\n                        }\n                    }\n\n                    if (this.overflowMenu) {\n                        if (item.hasClass(SPLIT_BUTTON) || item.hasClass(MENU_BUTTON)) {\n                            if (item.hasClass(SPLIT_BUTTON)) {\n                                item = item.children().eq(0);\n                                widget = item.data(K_SPLIT_BUTTON);\n                            } else {\n                                widget = item.data(K_DROP_DOWN_BUTTON);\n                            }\n\n                            widget.menu.list.children().each((i, el) => {\n                                that._hideMenuItem($(el));\n                            });\n\n                            that._hideMenuItem(item);\n                        } else if (item.hasClass(BUTTON_GROUP)) {\n                            item.children().each((i, el) => {\n                                that._hideMenuItem($(el));\n                            });\n                        } else {\n                            that._hideMenuItem(item);\n                        }\n                    }\n\n                    return true;\n                }\n\n                return false;\n            },\n\n            _showMenuItem: function(item) {\n                var menuItem = this.overflowMenu.element.find(\">li[data-uid='\" + item.data(UID) + \"']\");\n\n                if (!menuItem.hasClass(FORCE_HIDDEN)) {\n                    menuItem.removeClass(STATE_HIDDEN);\n                }\n            },\n\n            _stretch: function(containerWidth) {\n                var overflowAnchor = this.element.children(DOT + OVERFLOW_ANCHOR),\n                    commandElement,\n                    hiddenCommands;\n\n                if (containerWidth > this._childrenWidth()) {\n                    hiddenCommands = this.element.children(DOT + STATE_HIDDEN + \":not(\" + DOT + FORCE_HIDDEN + \")\");\n\n                    for (var i = 0; i < hiddenCommands.length; i++) {\n                        commandElement = hiddenCommands.eq(i);\n\n                        if (containerWidth < this._childrenWidth() || !this._showItem(commandElement, containerWidth)) {\n                            break;\n                        }\n                    }\n                }\n\n                if (!this.options.navigateOnTab && overflowAnchor.is(\"[tabindex=0]\")) {\n                    overflowAnchor.attr(TABINDEX, -1);\n                    this._resetTabIndex(this._getAllItems().first());\n                }\n            },\n\n            _tabIndex: function() {\n                var focusableItems = this.wrapper.find(KENDO_FOCUSABLE + \":not('\" + TABINDEX_MINUS_1 + \"')\"),\n                    firstFocusable = focusableItems.first();\n\n                if (this.options.navigateOnTab !== true) {\n                    focusableItems.attr(TABINDEX, -1);\n                    firstFocusable.attr(TABINDEX, 0);\n                } else {\n                    this.wrapper.find(\".k-toolbar-item\").removeAttr(TABINDEX);\n                }\n            },\n\n            _toggleOverflowAnchor: function() {\n                var hasVisibleChildren = false;\n\n                hasVisibleChildren = this.overflowMenu.element.children(\":not(.\" + STATE_HIDDEN + \", .\" + POPUP + \")\").length > 0;\n\n                if (hasVisibleChildren) {\n                    this.overflowAnchor.removeClass(STATE_HIDDEN);\n                } else {\n                    this.overflowAnchor.addClass(STATE_HIDDEN);\n                }\n            }\n        });\n\n        kendo.toolbar = {\n            Item: kendo.Class,\n            OverflowButton: kendo.Class,\n            TemplateItem: kendo.Class,\n            ToolBarButton: kendo.Class,\n            registerComponent: () => null\n        };\n\n        kendo.cssProperties.registerPrefix(\"ToolBar\", \"k-toolbar-\");\n\n        kendo.cssProperties.registerValues(\"ToolBar\", [{\n            prop: \"fillMode\",\n            values: ['solid', 'flat']\n        }]);\n\n        kendo.ui.plugin(ToolBar);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports[\"default\"] = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}