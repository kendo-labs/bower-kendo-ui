{"version":3,"sources":["raw-js/kendo.splitbutton.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendosplitbutton","js","this","$","kendo","window","Widget","ui","NS","extend","html","outerWidth","_outerWidth","keys","ID","ARIA_DISABLED","ARIA_LABEL","ARIA_EXPANDED","DISABLED","DISABLEDSTATE","FOCUSSTATE","CLICK","OPEN","CLOSE","FOCUS","cssClasses","SplitButton","init","element","options","that","enabled","prop","fn","call","_wrapper","_renderButtons","_renderMenu","_enable","_aria","_attachEvents","notify","_applyCssClasses","name","items","rounded","size","fillMode","themeColor","icon","popup","arrowIcon","messages","labelSuffix","events","wrapperId","attr","guid","wrapper","wrap","parent","arrowButton","appendTo","addClass","_getAppearanceClasses","_clearCssClasses","removeClass","widgetName","__proto__","cssProperties","getValidClass","widget","propName","value","_mainButton","_arrowButton","type","click","renderButton","text","imageUrl","iconClass","menu","list","length","kendoButtonMenu","mainButton","toggleTarget","menuOpen","menuOpenHandler","bind","menuClose","menuCloseHandler","menuClick","_click","data","ev","computedWidth","trigger","target","preventDefault","sender","adjustPopupWidth","on","_keydown","_focus","_blur","closest","id","originalEvent","close","is","keyCode","ENTER","SPACEBAR","focus","enable","soft","add","toggleClass","removeAttr","menuItem","hide","show","open","_popup","setOptions","destroy","off","registerPrefix","registerValues","values","roundedValues","concat","plugin","jQuery","kendo$1","__meta__","category","description","depends","Object","defineProperty"],"mappings":"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","file":"kendo.splitbutton.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.html.button.js'), require('kendo.button.menu.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.html.button', 'kendo.button.menu'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendosplitbutton = global.kendosplitbutton || {}, global.kendosplitbutton.js = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"splitbutton\",\n        name: \"SplitButton\",\n        category: \"web\",\n        description: \"The SplitButton allows the user to execute a default action which is bound to a Button or to choose a predefined action from a drop-down list.\",\n        depends: [\"button.menu\", \"html.button\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            NS = \".kendoSplitButton\",\n            ui = kendo.ui,\n            extend = $.extend,\n            html = kendo.html,\n            outerWidth = kendo._outerWidth,\n            keys = kendo.keys,\n\n            DOT = \".\",\n            ID = \"id\",\n\n            ARIA_HASPOPUP = \"aria-haspopup\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_CONTROLS = \"aria-controls\",\n            ARIA_LABEL = \"aria-label\",\n            ARIA_EXPANDED = \"aria-expanded\",\n\n            DISABLED = \"disabled\",\n            DISABLEDSTATE = \"k-disabled\",\n            FOCUSSTATE = \"k-focus\",\n\n            CLICK = \"click\",\n            KEYDOWN = \"keydown\",\n            OPEN = \"open\",\n            CLOSE = \"close\",\n\n            FOCUS = \"focus\",\n            BLUR = \"blur\";\n\n        var cssClasses = {\n            widget: \"k-split-button k-button-group\"\n        };\n\n        var SplitButton = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                options = options || {};\n                options.enabled = options.enabled !== false && !$(element).prop(DISABLED);\n                Widget.fn.init.call(that, element, options);\n\n                that._wrapper();\n                that._renderButtons();\n                that._renderMenu();\n\n                that._enable(that.options.enabled);\n\n                that._aria();\n\n                that._attachEvents();\n\n                kendo.notify(that);\n\n                that._applyCssClasses();\n            },\n\n            options: {\n                name: \"SplitButton\",\n                enabled: true,\n                items: [],\n                rounded: \"medium\",\n                size: \"medium\",\n                fillMode: \"solid\",\n                themeColor: \"base\",\n                icon: null,\n                popup: null,\n                arrowIcon: \"caret-alt-down\",\n                messages: {\n                    labelSuffix: \"splitbutton\"\n                }\n            },\n\n            events: [\n                CLICK,\n                OPEN,\n                CLOSE\n            ],\n\n            _wrapper: function() {\n                var that = this,\n                    id = that.element.attr(ID) || kendo.guid(),\n                    wrapperId = id + \"_wrapper\";\n\n                that.wrapper = that.element\n                    .wrap(\"<div id=\\\"\" + wrapperId + \"\\\" class=\\\"\" + cssClasses.widget + \"\\\"></div>\")\n                    .parent(\".k-split-button\");\n\n                that.arrowButton = $(\"<button tabindex=\\\"-1\\\" aria-label=\\\"arrow-button\\\" class=\\\"k-split-button-arrow\\\"></button>\").appendTo(that.wrapper);\n            },\n\n            _applyCssClasses: function() {\n                var that = this;\n\n                that.wrapper.addClass(that._getAppearanceClasses());\n            },\n\n            _clearCssClasses: function() {\n                var that = this;\n\n                that.wrapper.removeClass(that._getAppearanceClasses());\n            },\n\n            _getAppearanceClasses: function() {\n                var that = this,\n                    widgetName = that.__proto__.options.name,\n                    roundedClass = kendo.cssProperties.getValidClass({\n                        widget: widgetName,\n                        propName: \"rounded\",\n                        value: that.options.rounded\n                    });\n\n                return roundedClass;\n            },\n\n            _renderButtons: function() {\n                var that = this;\n\n                that._mainButton();\n                that._arrowButton();\n            },\n\n            _mainButton: function() {\n                var that = this,\n                    options = extend({}, that.options, {\n                        type: that.element.attr(\"type\") || \"button\"\n                    });\n\n                delete options.click;\n\n                html.renderButton(that.element, options);\n            },\n\n            _arrowButton: function() {\n                var that = this,\n                    options = extend({}, that.options, {\n                        type: \"button\",\n                        icon: that.options.arrowIcon,\n                    });\n\n                delete options.text;\n                delete options.imageUrl;\n                delete options.click;\n                delete options.iconClass;\n\n                html.renderButton(that.arrowButton, options);\n            },\n\n            _aria: function() {\n                var that = this,\n                    element = that.element,\n                    menu = that.menu;\n\n                element.attr(ARIA_HASPOPUP, menu ? \"menu\" : null);\n                element.attr(ARIA_EXPANDED, menu ? false : null);\n                element.attr(ARIA_CONTROLS, menu ? menu.list.attr(ID) : null);\n\n                if (!element.attr(ARIA_LABEL)) {\n                    element.attr(ARIA_LABEL, element.text() + \" \" + that.options.messages.labelSuffix);\n                }\n            },\n\n            _renderMenu: function() {\n                var that = this,\n                    options = extend({}, that.options),\n                    menu = $(\"<div></div>\");\n\n                delete options.click;\n                delete options.name;\n\n                if (!options.items.length) {\n                    return;\n                }\n\n                that.menu = menu.appendTo(that.wrapper).kendoButtonMenu(extend({\n                    mainButton: that.element,\n                    toggleTarget: that.arrowButton,\n                    menuOpen: that.menuOpenHandler.bind(that),\n                    menuClose: that.menuCloseHandler.bind(that),\n                    menuClick: that._click.bind(that)\n                }, options)).data(\"kendoButtonMenu\");\n            },\n\n            menuOpenHandler: function(ev) {\n                var that = this,\n                    computedWidth = outerWidth(that.wrapper);\n\n                var isDefaultPrevented = that.trigger(OPEN, { target: that.element });\n                if (isDefaultPrevented) {\n                    ev.preventDefault();\n                    return;\n                }\n\n                ev.sender.adjustPopupWidth(computedWidth);\n                that.element.attr(ARIA_EXPANDED, true);\n            },\n\n            menuCloseHandler: function(ev) {\n                var that = this,\n                    isDefaultPrevented = that.trigger(CLOSE, { target: that.element });\n\n                if (isDefaultPrevented) {\n                    ev.preventDefault();\n                    return;\n                }\n\n                that.element.attr(ARIA_EXPANDED, false);\n                that.element.trigger(FOCUS);\n            },\n\n            _attachEvents: function() {\n                var that = this;\n\n                that.element.on(CLICK + NS, that._click.bind(that));\n                that.element.on(KEYDOWN + NS, that._keydown.bind(that));\n                that.element.on(FOCUS + NS, that._focus.bind(that));\n                that.element.on(BLUR + NS, that._blur.bind(that));\n            },\n\n            _focus: function() {\n                this.wrapper.addClass(FOCUSSTATE);\n            },\n\n            _blur: function() {\n                this.wrapper.removeClass(FOCUSSTATE);\n            },\n\n            _click: function(ev) {\n                var that = this,\n                    target = $(ev.target).closest(\".k-button\"),\n                    id = target.attr(ID),\n                    originalEvent = ev;\n\n                if (ev.type === \"menu-click\") {\n                    id = ev.id;\n                    target = ev.target;\n                    originalEvent = ev.originalEvent;\n                }\n\n                that.menu.close();\n\n                that.trigger(CLICK, { id: id, target: target, originalEvent: originalEvent });\n            },\n\n            _keydown: function(ev) {\n                var that = this;\n\n                if (that.element.is(DOT + DISABLEDSTATE) && (ev.keyCode === keys.ENTER || ev.keyCode === keys.SPACEBAR)) {\n                    ev.preventDefault();\n                }\n            },\n\n            focus: function() {\n                var that = this;\n                that.element.trigger(FOCUS);\n            },\n\n            _enable: function(enable, soft) {\n                this.element.add(this.arrowButton)\n                    .toggleClass(DISABLEDSTATE, !enable);\n\n                if (enable) {\n                    this.element.removeAttr(ARIA_DISABLED);\n                } else {\n                    this.element.attr(ARIA_DISABLED, !enable);\n                }\n\n                if (!soft) {\n                    this.element.attr(DISABLED, !enable);\n                }\n\n                this.arrowButton.attr(DISABLED, !enable);\n            },\n\n            enable: function(enable, menuItem, soft) {\n                var that = this;\n\n                if (enable === undefined$1) {\n                    enable = true;\n                }\n\n                if (menuItem && menuItem.length) {\n                    that.menu.enable(enable, menuItem);\n                    return;\n                }\n\n                that.options.enabled = enable;\n\n                that._enable(enable, soft);\n                that.menu.enable(enable);\n            },\n\n            hide: function(menuItem) {\n                var that = this;\n\n                if (menuItem && menuItem.length) {\n                    that.menu.hide(menuItem);\n                }\n            },\n\n            show: function(menuItem) {\n                var that = this;\n\n                if (menuItem && menuItem.length) {\n                    that.menu.show(menuItem);\n                }\n            },\n\n            open: function() {\n                this.menu._popup.open();\n            },\n\n            close: function() {\n                this.menu._popup.close();\n            },\n\n            items: function() {\n                return this.menu.items();\n            },\n\n            setOptions: function(options) {\n                var that = this;\n\n                Widget.fn.setOptions.call(that, options);\n\n                if (options.popup || options.items || options.size) {\n                    that.menu.destroy();\n                    that._renderMenu();\n                }\n\n                that._renderButtons();\n\n                that._aria();\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that.menu) {\n                    that.menu.destroy();\n                }\n\n                that.element.off(NS);\n\n                Widget.fn.destroy.call(that);\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"SplitButton\", \"k-splitbutton-\");\n\n        kendo.cssProperties.registerValues(\"SplitButton\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([[\"full\", \"full\"]])\n        }]);\n\n        ui.plugin(SplitButton);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports[\"default\"] = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}