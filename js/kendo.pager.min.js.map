{"version":3,"sources":["raw-js/kendo.pager.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendopager","js","this","$","undefined$1","kendo","window","ui","Widget","keys","encode","mediaQuery","support","htmlEncode","template","FIRST","LAST","PREV","NEXT","FIRST_CONST","LAST_CONST","PREV_CONST","NEXT_CONST","FOCUSABLE","CHANGE","NS","CLICK","MAX_VALUE","Number","isRtl","button","options","idx","text","ns","numeric","size","title","tabindex","navigatable","selectOption","selected","icon","className","wrapClassName","id","iconTemplate","update","element","page","disabled","find","parent","attr","toggleClass","first","prev","Math","max","next","totalPages","min","last","Pager","extend","init","that","buttonSize","dropDownClasses","fn","call","_createDataSource","linkTemplate","selectTemplate","numericSelectItemTemplate","_refreshHandler","refresh","bind","dataSource","downEvent","applyEventMap","guid","_numericWrap","length","empty","getValidCssClass","_id","_template","previousNext","appendTo","append","messages","previous","_numericSelect","numbersSelectLabel","list","total","navigatalbe","format","pageButtonLabel","input","of","on","_keydown","pageSizes","pageItems","map","toLowerCase","allPages","itemsPerPage","html","join","end","val","pageSize","DropDownList","show","pageSizeDropDownLabel","kendoDropDownList","_change","_refreshClick","info","_click","_numericSelectChange","addClass","autoBind","_resizeHandler","resize","_navigatable","_responsive","notify","destroy","off","unbind","events","name","ARIATemplate","buttonCount","responsive","display","morePages","setDataSource","fetch","_aria","role","_adaptiveStep","step","hide","availableWidth","_toggleButtons","_toggleRefresh","_togglePagerInfo","_toggleInputSizesLabel","_togglePageSizesLabel","_togglePageSizesDropDown","_togglePageInputs","_calculateNeededWidth","sumWidth","gap","parseInt","css","children","each","pagerInfo","hasClass","removeClass","is","width","_resize","_lastWidth","i","refreshContainer","infoBox","inputElements","labels","eq","add","label","picker","data","DataSource","create","outerWidth","e","reminder","start","selectHtml","collapsedTotal","_collapsedTotal","_isGroupPaged","groupsTotal","action","endless","filter","_restoreFocus","_excludeChildrenFromTab","_updateAria","_outerWidth","activeElement","_activeElement","contains","_focusSelected","trigger","_focusMore","_restoreTabIndexes","keyCode","ENTER","isNaN","preventDefault","read","value","currentTarget","_pageSize","_take","_skip","_ariaTemplate","_tabindex","_keyDown","target","allFocusable","focusedIndex","handled","ESC","HOME","END","LEFT","RIGHT","PAGEDOWN","PAGEUP","TAB","index","shiftKey","stopPropagation","blur","ceil","plugin","jQuery"],"mappings":"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","file":"kendo.pager.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.data.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.data', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendopager = global.kendopager || {}, global.kendopager.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"pager\",\n        name: \"Pager\",\n        category: \"framework\",\n        depends: [ \"data\", \"icons\" ],\n        advanced: true\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            keys = kendo.keys,\n            mediaQuery = kendo.mediaQuery,\n            support = kendo.support,\n            encode = kendo.htmlEncode,\n            template = kendo.template,\n            FIRST = \"caret-alt-to-left\",\n            LAST = \"caret-alt-to-right\",\n            PREV = \"caret-alt-left\",\n            NEXT = \"caret-alt-right\",\n            FIRST_CONST = \"caret-alt-to-left\",\n            LAST_CONST = \"caret-alt-to-right\",\n            PREV_CONST = \"caret-alt-left\",\n            NEXT_CONST = \"caret-alt-right\",\n            FOCUSABLE = \":kendoFocusable:not([tabindex='-1'])\",\n            CHANGE = \"change\",\n            NS = \".kendoPager\",\n            CLICK = \"click\",\n            KEYDOWN = \"keydown\",\n            DISABLED = \"disabled\",\n            MOUSEDOWN = \"down\",\n            MAX_VALUE = Number.MAX_VALUE,\n            isRtl = false,\n            iconTemplate = ({ text, wrapClassName, className, size }) => `<button role=\"button\" title=\"${text}\" aria-label=\"${text}\" class=\"k-pager-nav k-button k-button-flat k-button-flat-base k-icon-button ${wrapClassName} ${size}\">${kendo.ui.icon($('<span class=\"k-button-icon\"></span>'),className)}</button>`;\n\n        function button(options) {\n            return options.template( {\n                idx: options.idx,\n                text: options.text,\n                ns: kendo.ns,\n                numeric: options.numeric,\n                size: options.size,\n                title: options.title || \"\",\n                tabindex: options.navigatable ? 0 : -1,\n                navigatable: options.navigatable\n            });\n        }\n\n        function selectOption(template, idx, text, selected) {\n            return template( {\n                idx: idx,\n                text: text || idx,\n                selected: selected || false\n            });\n        }\n\n        function icon(className, text, wrapClassName, id, size) {\n            return iconTemplate({\n                className: className,\n                text: text,\n                wrapClassName: wrapClassName || \"\",\n                id: id || \"\",\n                size: size\n            });\n        }\n\n        function update(element, className, page, disabled) {\n           element.find(`[class*=\"-i-${className}\"]`)\n                  .parent()\n                  .attr(kendo.attr(\"page\"), page)\n                  .attr(\"tabindex\", disabled ? -1 : 0)\n                  .attr(\"aria-disabled\", disabled)\n                  .toggleClass(\"k-disabled\", disabled);\n        }\n\n        function first(element, page) {\n            update(element, FIRST, 1, page <= 1);\n        }\n\n        function prev(element, page) {\n            update(element, PREV, Math.max(1, page - 1), page <= 1);\n        }\n\n        function next(element, page, totalPages) {\n            update(element, NEXT, Math.min(totalPages, page + 1), page >= totalPages);\n        }\n\n        function last(element, page, totalPages) {\n            update(element, LAST, totalPages, page >= totalPages);\n        }\n\n        var Pager = Widget.extend( {\n            init: function(element, options) {\n                var that = this, page, totalPages;\n                var buttonSize = \"\";\n                var dropDownClasses = \"\";\n\n                Widget.fn.init.call(that, element, options);\n\n                options = that.options;\n                that._createDataSource(options);\n                that.linkTemplate = kendo.template(that.options.linkTemplate);\n                that.selectTemplate = kendo.template(that.options.selectTemplate);\n                that.numericSelectItemTemplate = kendo.template(that.options.numericSelectItemTemplate);\n\n                page = that.page();\n                totalPages = that.totalPages();\n\n                that._refreshHandler = that.refresh.bind(that);\n\n                that.dataSource.bind(CHANGE, that._refreshHandler);\n                that.downEvent = kendo.applyEventMap(MOUSEDOWN, kendo.guid());\n\n                isRtl = kendo.support.isRtl(element);\n                that._numericWrap = that.element.find(\".k-pager-numbers-wrap\");\n\n                if (isRtl) {\n                    FIRST = LAST_CONST;\n                    LAST = FIRST_CONST;\n                    PREV = NEXT_CONST;\n                    NEXT = PREV_CONST;\n                    if (that._numericWrap.length) {\n                        that._numericWrap.empty();\n                    }\n                } else {\n                    FIRST = FIRST_CONST;\n                    LAST = LAST_CONST;\n                    PREV = PREV_CONST;\n                    NEXT = NEXT_CONST;\n                }\n\n                if (options.size) {\n                    buttonSize = kendo.getValidCssClass(\"k-button-\", \"size\", options.size);\n                    dropDownClasses = \"k-rounded-md \" + kendo.getValidCssClass(\"k-picker-\", \"size\", options.size);\n                }\n\n                if (options.navigatable) {\n                    that._id = that.element.attr(\"id\") || kendo.guid();\n                }\n                that._template();\n\n                if (options.previousNext || options.numeric) {\n\n                    if (that._numericWrap.length === 0) {\n                        that._numericWrap = $(\"<div class='k-pager-numbers-wrap' />\").appendTo(that.element);\n                    }\n                }\n\n\n                if (options.previousNext) {\n                    if (!that._numericWrap.find(\"[class*='-i-\" + FIRST + \"']\").length) {\n                        that._numericWrap.append(icon(FIRST, options.messages.first, \"k-pager-first\", that._id, buttonSize));\n\n                        first(that._numericWrap, page, totalPages);\n                    }\n\n                    if (!that._numericWrap.find(\"[class*='-i-\" + PREV + \"']\").length) {\n                        that._numericWrap.append(icon(PREV, options.messages.previous, null, that._id, buttonSize));\n\n                        prev(that._numericWrap, page, totalPages);\n                    }\n                }\n\n                if (options.numeric) {\n                    if (!that._numericSelect) {\n                        that._numericSelect = that._numericWrap.find(\".k-dropdown\");\n\n                        if (that._numericSelect.length === 0) {\n                           that._numericSelect = $(\"<select aria-label='\" + that.options.messages.numbersSelectLabel + \"' class='k-dropdown k-picker k-picker-solid k-dropdown-list \" + dropDownClasses + \"' />\").appendTo(that._numericWrap);\n                        }\n                    }\n\n                    if (!that.list) {\n                        that.list = that._numericWrap.find(\".k-pager-numbers\");\n\n                        if (that.list.length === 0) {\n                           that.list = $('<div class=\"k-pager-numbers\" />').appendTo(that._numericWrap);\n                        }\n                    }\n\n                    if (options.dataSource && !options.dataSource.total()) {\n                        that._numericSelect.empty().append(\"<option value='0' />\");\n                        that.list.empty().append(that.selectTemplate({ text: 0, tabindex: options.navigatalbe ? 0 : -1, navigatable: options.navigatable, title: kendo.format(options.messages.pageButtonLabel, 0) }));\n                    }\n                }\n\n                if (options.input) {\n                    if (!that.element.find(\".k-pager-input\").length) {\n                       that.element.append('<span class=\"k-pager-input k-label\">' +\n                            encode(options.messages.page) +\n                           '<span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input class=\"k-input-inner\" /></span>' +\n                           encode(kendo.format(options.messages.of, totalPages)) +\n                           '</span>');\n                    }\n\n                    that.element.on(KEYDOWN + NS, \".k-pager-input input\", that._keydown.bind(that));\n                }\n\n                if (options.previousNext) {\n                    if (!that._numericWrap.find(\"[class*='-i-\" + NEXT + \"']\").length) {\n                        that._numericWrap.append(icon(NEXT, options.messages.next, null, that._id, buttonSize));\n\n                        next(that._numericWrap, page, totalPages);\n                    }\n\n                    if (!that._numericWrap.find(\"[class*='-i-\" + LAST + \"']\").length) {\n                        that._numericWrap.append(icon(LAST, options.messages.last, \"k-pager-last\", that._id, buttonSize));\n\n                        last(that._numericWrap, page, totalPages);\n                    }\n                }\n\n                if (options.pageSizes) {\n                    if (!that.element.find(\".k-pager-sizes\").length) {\n                        var pageSizes = options.pageSizes.length ? options.pageSizes : [\"all\", 5, 10, 20];\n                        var pageItems = $.map(pageSizes, function(size) {\n                            if (size.toLowerCase && size.toLowerCase() === \"all\") {\n                                return \"<option value='all'>\" + encode(options.messages.allPages) + \"</option>\";\n                            }\n\n                            return \"<option>\" + size + \"</option>\";\n                        });\n\n                        $('<span class=\"k-pager-sizes\"><select></select><span>' + encode(options.messages.itemsPerPage) + \"</span></span>\")\n                            .appendTo(that.element)\n                            .find(\"select\").html(pageItems.join(\"\")).end()\n                            .appendTo(that.element);\n                    }\n\n                    that.element.find(\".k-pager-sizes select\").val(that.pageSize());\n\n                    if (kendo.ui.DropDownList) {\n                       that.element.find(\".k-pager-sizes select\").show().attr(\"aria-label\", options.messages.pageSizeDropDownLabel).kendoDropDownList({ size: options.size });\n                    }\n\n                    that.element.on(CHANGE + NS, \".k-pager-sizes select\", that._change.bind(that));\n                }\n\n                if (options.refresh) {\n                    if (!that.element.find(\".k-pager-refresh\").length) {\n                        that.element.append('<button role=\"button\" href=\"#\" class=\"k-pager-refresh k-button ' + buttonSize + ' k-button-flat k-button-flat-base k-icon-button\" title=\"' + options.messages.refresh +\n                            '\" aria-label=\"' + options.messages.refresh + '\">' + kendo.ui.icon(\"arrow-rotate-cw\") + '</button>');\n                    }\n\n                    that.element.on(CLICK + NS, \".k-pager-refresh\", that._refreshClick.bind(that));\n                }\n\n                if (options.info) {\n                    if (!that.element.find(\".k-pager-info\").length) {\n                        that.element.append('<span class=\"k-pager-info k-label\" />');\n                    }\n                }\n\n                that.element\n                    .on(CLICK + NS , \"button\", that._click.bind(that))\n                    .on(CHANGE + NS , \"select.k-dropdown\", that._numericSelectChange.bind(that))\n                    .addClass(\"k-pager\");\n\n                if (options.size) {\n                    that.element.addClass(kendo.getValidCssClass(\"k-pager-\", \"size\", options.size));\n                }\n\n                if (options.autoBind) {\n                    that.refresh();\n                }\n\n                that._resizeHandler = that.resize.bind(that, true);\n                $(window).on(\"resize\" + NS, that._resizeHandler);\n\n                that._navigatable();\n                that._responsive();\n\n                kendo.notify(that);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n\n                that.element.off(NS);\n                that.dataSource.unbind(CHANGE, that._refreshHandler);\n                that._refreshHandler = null;\n                $(window).off(\"resize\" + NS, this._resizeHandler);\n\n                kendo.destroy(that.element);\n                that.element = that.list = null;\n            },\n\n            events: [\n                CHANGE\n            ],\n\n            options: {\n                name: \"Pager\",\n                ARIATemplate: ({ page, totalPages }) => `Page navigation, page ${page} of ${totalPages}`,\n                selectTemplate: ({ text, title, tabindex, size }) => `<button role=\"button\" aria-current=\"page\" tabindex=\"${tabindex}\" aria-label=\"${title}\" class=\"k-button ${size} k-button-flat k-button-flat-primary k-selected\"><span class=\"k-button-text\">${encode(text)}</span></button>`,\n                linkTemplate: ({ ns, idx, text, title, tabindex, size }) => `<button class=\"k-button ${size} k-button-flat k-button-flat-primary\" tabindex=\"${tabindex}\" href=\"#\" data-${ns}page=\"${idx}\" ${title !== \"\" ? `title=\"${title}\"` : ''}><span class=\"k-button-text\">${encode(text)}</span></button>`,\n                numericSelectItemTemplate: ({ idx, selected, text }) => `<option value=\"${idx}\" ${selected ? 'selected=\"selected\"' : '' }>${encode(text)}</option>`,\n                buttonCount: 10,\n                autoBind: true,\n                numeric: true,\n                info: true,\n                input: false,\n                previousNext: true,\n                pageSizes: false,\n                refresh: false,\n                responsive: true,\n                navigatable: false,\n                size: \"medium\",\n                messages: {\n                    allPages: \"All\",\n                    display: \"{0} - {1} of {2} items\",\n                    empty: \"No items to display\",\n                    page: \"Page\",\n                    of: \"of {0}\",\n                    itemsPerPage: \"items per page\",\n                    pageButtonLabel: \"Page {0}\",\n                    pageSizeDropDownLabel: \"Page sizes drop down\",\n                    numbersSelectLabel: \"Page select\",\n                    first: \"Go to the first page\",\n                    previous: \"Go to the previous page\",\n                    next: \"Go to the next page\",\n                    last: \"Go to the last page\",\n                    refresh: \"Refresh\",\n                    morePages: \"More pages\"\n                }\n            },\n\n            setDataSource: function(dataSource) {\n                var that = this;\n\n                that.dataSource.unbind(CHANGE, that._refreshHandler);\n                that.dataSource = that.options.dataSource = dataSource;\n                dataSource.bind(CHANGE, that._refreshHandler);\n\n                if (that.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n\n            _aria: function() {\n                this.element.attr({\n                    \"role\": \"application\",\n                    \"aria-roledescription\": \"pager\",\n                    \"aria-keyshortcuts\": \"Enter ArrowRight ArrowLeft\"\n                });\n            },\n\n            _adaptiveStep: function(step, hide, availableWidth) {\n                var that = this;\n                switch (step) {\n                    case 0:\n                        return that._toggleButtons(hide, availableWidth);\n                    case 1:\n                        return that._toggleRefresh(hide, availableWidth);\n                    case 2:\n                        return that._togglePagerInfo(hide, availableWidth);\n                    case 3:\n                        return that._toggleInputSizesLabel(hide, availableWidth);\n                    case 4:\n                        return that._togglePageSizesLabel(hide, availableWidth);\n                    case 5:\n                        return that._togglePageSizesDropDown(hide, availableWidth);\n                    case 6:\n                        return that._togglePageInputs(hide, availableWidth);\n                    default:\n                     break;\n                  }\n            },\n\n            _calculateNeededWidth: function() {\n                var sumWidth = 0;\n                var gap = parseInt(this.element.css(\"gap\"));\n                this.element.children().each(function() {\n                    const element = $(this);\n                    const pagerInfo = element.hasClass(\"k-pager-info\");\n                    if (pagerInfo) {\n                        element.removeClass(\"k-pager-info k-label\");\n                    }\n                    sumWidth += element.is(\":visible\") ? element.width() : 0;\n                    sumWidth += gap;\n                    if (pagerInfo) {\n                        element.addClass(\"k-pager-info k-label\");\n                    }\n                });\n                return sumWidth;\n            },\n\n            _resize: function(size) {\n                var that = this;\n                that._responsive(size);\n                if (!that.element.is(\":visible\") || !that._lastWidth || !that.options.responsive) {\n                    return;\n                }\n\n                if (that._lastWidth < size.width) {\n                    for (let i = 6; i >= 0; i--) {\n                        const availableWidth = that._calculateNeededWidth();\n                        if (size.width < availableWidth) {\n                            break;\n                        }\n                        const shouldBreak = that._adaptiveStep(i, false, size.width - availableWidth);\n                        if (shouldBreak) {\n                            break;\n                        }\n                    }\n                } else if (that._lastWidth > size.width) {\n                    for (let i = 0; i < 7; i++) {\n                        if (size.width > that._calculateNeededWidth()) {\n                            break;\n                        }\n                        that._adaptiveStep(i, true);\n                    }\n                }\n\n                that._lastWidth = size.width;\n            },\n\n            _toggleButtons: function(hide, availableWidth) {\n                if (!this._numericWrap || !this.list || !this._numericSelect) {\n                    return;\n                }\n\n                if (hide) {\n                    this._numericSelect.show();\n                    this.list.hide();\n                } else if (availableWidth && ((this.list.width() - this._numericSelect.width()) < availableWidth)) {\n                    this._numericSelect.hide();\n                    this.list.show();\n                }\n            },\n\n            _toggleRefresh: function(hide, availableWidth) {\n                if (!this.options.refresh) {\n                    return;\n                }\n                const refreshContainer = this.element.find(\".k-pager-refresh\");\n\n                if (hide) {\n                    refreshContainer.hide();\n                } else if (availableWidth && (refreshContainer.width() < availableWidth)) {\n                    refreshContainer.show();\n                } else {\n                    return true;\n                }\n            },\n\n            _togglePagerInfo: function(hide, availableWidth) {\n                if (!this.options.info) {\n                    return;\n                }\n                const infoBox = this.element.find(\".k-pager-info\");\n                if (hide) {\n                    infoBox.hide();\n                } else if (availableWidth && (infoBox.width() < availableWidth)) {\n                    infoBox.show();\n                } else if (!infoBox.is(\":visible\")) {\n                    return true;\n                }\n            },\n\n            _toggleInputSizesLabel: function(hide, availableWidth) {\n                if (!this.options.input) {\n                    return;\n                }\n                const inputElements = this.element.find(\".k-pager-input\").children();\n                const labels = inputElements.eq(0).add(inputElements.eq(2));\n\n                if (hide) {\n                    labels.hide();\n                } else if (availableWidth && ((inputElements.eq(0).width() + inputElements.eq(2).width()) < availableWidth)) {\n                    labels.show();\n                } else {\n                    return true;\n                }\n            },\n\n\n            _togglePageSizesLabel: function(hide, availableWidth) {\n                if (!this.options.pageSizes) {\n                    return;\n                }\n                const label = this.element.find(\".k-pager-sizes\").children().eq(1);\n\n                if (hide) {\n                    label.hide();\n                } else if (availableWidth && (label.width() < availableWidth)) {\n                    label.show();\n                } else {\n                    return true;\n                }\n            },\n\n            _togglePageSizesDropDown: function(hide, availableWidth) {\n                if (!this.options.pageSizes) {\n                    return;\n                }\n\n                const picker = this.element.find(\".k-pager-sizes .k-picker\");\n\n                if (hide) {\n                    picker.hide();\n                } else if (availableWidth && (picker.width() < availableWidth)) {\n                    picker.show();\n                } else {\n                    return true;\n                }\n            },\n\n\n            _togglePageInputs: function(hide, availableWidth) {\n                var options = this.options;\n\n                if (!options.input || !this._numericSelect) {\n                    return;\n                }\n\n                if (hide) {\n                    this._numericSelect.hide();\n                } else if (availableWidth && (this._numericSelect.width() < availableWidth) && !this.list.is(\":visible\")) {\n                    this._numericSelect.show();\n                } else {\n                    return true;\n                }\n            },\n\n            _createDataSource: function(options) {\n                this.dataSource = kendo.data.DataSource.create(options.dataSource);\n            },\n\n            _responsive: function(size) {\n                var that = this;\n                var options = that.options;\n                var width;\n                var info;\n\n                if (options.responsive) {\n                    width = that.element.outerWidth();\n\n                    if (size && size.width > 0) {\n                        width = size.width;\n                    }\n\n                    info = that.element.find(\".k-pager-info\");\n\n                    if (width <= 480) {\n                        info.hide();\n                        that.element.find(\".k-pager-sizes\").children().hide();\n                        if (options.numeric) {\n                            that._numericSelect.show();\n                            that.list.hide();\n                        }\n                    } else {\n                        if (width <= 600) {\n                            info.hide();\n                            if (options.numeric) {\n                                that._numericSelect.show();\n                                that.list.hide();\n                            }\n                        } else if (options.numeric) {\n                            that._numericSelect.hide();\n                            that.list.show();\n                        }\n                    }\n                } else if (that._numericSelect) {\n                    that._numericSelect.hide();\n                }\n            },\n\n            refresh: function(e) {\n                var that = this,\n                    idx,\n                    end,\n                    start = 1,\n                    reminder,\n                    page = that.page(),\n                    html = \"\",\n                    selectHtml = \"\",\n                    options = that.options,\n                    pageSize = that.pageSize(),\n                    collapsedTotal = that._collapsedTotal(),\n                    total = that.dataSource._isGroupPaged() ? that.dataSource.groupsTotal(true) : that.dataSource.total(),\n                    totalPages = that.totalPages(),\n                    linkTemplate = that.linkTemplate,\n                    navigatable = options.navigatable,\n                    numericSelectItemTemplate = that.numericSelectItemTemplate,\n                    buttonSize = options.size ? kendo.getValidCssClass(\"k-button-\", \"size\", options.size) : \"\",\n                    buttonCount = options.buttonCount;\n\n                if (e && e.action == \"itemchange\") {\n                    return;\n                }\n\n                if (options.numeric) {\n\n                    if (page > buttonCount) {\n                        reminder = (page % buttonCount);\n                        start = (reminder === 0) ? (page - buttonCount) + 1 : (page - reminder) + 1;\n                    }\n\n                    end = Math.min((start + buttonCount) - 1, totalPages);\n\n                    if (start > 1) {\n                        html += button({\n                            template: linkTemplate,\n                            navigatable: navigatable,\n                            size: buttonSize,\n                            idx: start - 1,\n                            text: \"...\",\n                            numeric: false,\n                            title: options.messages.morePages\n                        });\n                        selectHtml += selectOption(numericSelectItemTemplate, start - 1, options.messages.morePages);\n                    }\n\n                    for (idx = start; idx <= end; idx++) {\n                        html += button({\n                            template: idx == page ? that.selectTemplate : linkTemplate,\n                            navigatable: navigatable,\n                            idx: idx,\n                            text: idx,\n                            size: buttonSize,\n                            numeric: true,\n                            title: kendo.format(options.messages.pageButtonLabel, idx)\n                        });\n                        selectHtml += selectOption(numericSelectItemTemplate, idx, idx, idx == page);\n                    }\n\n                    if (end < totalPages) {\n                        html += button({\n                            template: linkTemplate,\n                            navigatable: navigatable,\n                            idx: idx,\n                            size: buttonSize,\n                            text: \"...\",\n                            numeric: numericSelectItemTemplate,\n                            title: options.messages.morePages\n                        });\n                        selectHtml += selectOption(numericSelectItemTemplate, idx, options.messages.morePages);\n                    }\n\n                    if (html === \"\") {\n                        html = that.selectTemplate({ text: 0, size: buttonSize, tabindex: navigatable ? 0 : -1, navigatable: navigatable, title: kendo.format(options.messages.pageButtonLabel, 0) });\n                        selectHtml = $(\"<option value='0' />\");\n                    }\n\n                    that.list.html(html);\n                    that._numericSelect.html(selectHtml);\n                }\n\n                if (options.info) {\n                    if (total > 0) {\n                        html = kendo.format(options.messages.display,\n                            that.dataSource.options.endless ? 1 : Math.min((page - 1) * (that.dataSource.pageSize() || 0) + 1, collapsedTotal), // first item in the page\n                            Math.min(page * pageSize, collapsedTotal), // last item in the page\n                        total);\n                    } else {\n                        html = options.messages.empty;\n                    }\n\n                    that.element.find(\".k-pager-info\").html(html);\n                }\n\n                if (options.input) {\n                    that.element\n                        .find(\".k-pager-input\")\n                        .html('<span>' + encode(that.options.messages.page) + '</span>' +\n                            '<span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input class=\"k-input-inner\" aria-label=\"' + that.options.messages.page + \" \" + page + '\"></span>' +\n                            '<span>' + encode(kendo.format(options.messages.of, totalPages)) + '</span>')\n                        .find(\"input\")\n                        .val(page)\n                        .attr(DISABLED, total < 1)\n                        .attr(\"aria-disabled\", total < 1)\n                        .toggleClass(\"k-disabled\", total < 1);\n                }\n\n                if (options.previousNext) {\n                    first(that.element, page, totalPages);\n\n                    prev(that.element, page, totalPages);\n\n                    next(that.element, page, totalPages);\n\n                    last(that.element, page, totalPages);\n                }\n\n                if (options.pageSizes) {\n                    var hasAll = that.element.find(\".k-pager-sizes option[value='all']\").length > 0;\n                    var selectAll = hasAll && (pageSize === this.dataSource.total() || pageSize == MAX_VALUE);\n                    var text = pageSize;\n                    if (selectAll) {\n                        pageSize = \"all\";\n                        text = options.messages.allPages;\n                    }\n\n                    that.element\n                        .find(\".k-pager-sizes select\")\n                        .val(pageSize)\n                        .filter(\"[\" + kendo.attr(\"role\") + \"=dropdownlist]\")\n                        .kendoDropDownList(\"value\", pageSize)\n                        .kendoDropDownList(\"text\", text); // handles custom values\n                }\n\n                that._restoreFocus(start, end, totalPages);\n                that._excludeChildrenFromTab();\n                that._updateAria();\n\n                if (totalPages) {\n                    that._lastWidth = kendo._outerWidth(that.element) + 12;\n                    that.resize(true);\n                } else if (that._lastWidth) {\n                  that._lastWidth = kendo._outerWidth(that.element);\n                }\n            },\n\n            _excludeChildrenFromTab: function() {\n                var activeElement = kendo._activeElement();\n                if (this.options.navigatable && (activeElement === this.element[0] || !$.contains(this.element[0], activeElement))) {\n                    this.element.find(FOCUSABLE).attr(\"tabindex\", -1);\n                }\n            },\n\n            _restoreFocus: function(start, end, totalPages) {\n                var that = this;\n\n                if (!that.options.navigatable) {\n                    return;\n                }\n\n                if (that._focusSelected) {\n                    that.element.find(\".k-selected\").trigger(\"focus\");\n                    that._focusSelected = null;\n                }\n\n                if (that._focusMore !== null) {\n                    if (end < totalPages && that._focusMore) {\n                        that.list.find(\"li\").last().find(\"a\").trigger(\"focus\");\n                    }\n                    if (!that._focusMore && start > 1) {\n                        that.list.find(\"li\").first().find(\"a\").trigger(\"focus\");\n                    }\n                    that._focusMore = null;\n                }\n            },\n\n            _restoreTabIndexes: function() {\n                this.element\n                    .find(\"[tabindex='-1']:not(.k-disabled)\")\n                    .attr(\"tabindex\", 0);\n            },\n\n            _collapsedTotal: function() {\n                return this.dataSource.total();\n            },\n\n            _keydown: function(e) {\n                if (e.keyCode === kendo.keys.ENTER) {\n                    var input = this.element.find(\".k-pager-input\").find(\"input\"),\n                        page = parseInt(input.val(), 10);\n\n                    if (isNaN(page) || page < 1 || page > this.totalPages()) {\n                        page = this.page();\n                    }\n\n                    input.val(page);\n\n                    this.page(page);\n                }\n            },\n\n            _refreshClick: function(e) {\n                e.preventDefault();\n\n                this.dataSource.read();\n            },\n\n            _change: function(e) {\n                var value = e.currentTarget.value;\n                var pageSize = parseInt(value, 10);\n                var dataSource = this.dataSource;\n\n                if (!isNaN(pageSize)) {\n                    dataSource.pageSize(pageSize);\n                } else if ((value + \"\").toLowerCase() == \"all\") {\n                    dataSource._pageSize = undefined$1;\n                    dataSource._take = undefined$1;\n                    dataSource._skip = 0;\n                    dataSource.fetch();\n                }\n            },\n\n            _template: function() {\n                this._ariaTemplate = template(this.options.ARIATemplate).bind(this);\n            },\n\n            _updateAria: function() {\n                if (!this.options.navigatable) {\n                    return;\n                }\n                this.element.attr(\"aria-label\", this._ariaTemplate({ page: this.page(), totalPages: this.totalPages() }));\n            },\n\n            _navigatable: function() {\n                var that = this;\n                var options = that.options;\n\n                if (!options.navigatable) {\n                    return;\n                }\n\n                that._aria();\n                that.element.attr(\"id\", that._id);\n                that._template();\n                that._updateAria();\n\n                that._tabindex(that.element);\n\n                that.element.on(\"keydown\" + NS, that, that._keyDown.bind(that));\n                that.element.on(\"focusout\" + NS, function() { that.element.removeClass(\"k-focus\"); });\n                that.element.on(\"focusin\" + NS, function(e) {\n                    that.element.addClass(\"k-focus\");\n\n                    if (e.target === that.element[0]) {\n                        that.element.find(FOCUSABLE).attr(\"tabindex\", -1);\n                    } else {\n                        that.element.removeClass(\"k-focus\");\n                    }\n                });\n            },\n\n            _keyDown: function(e) {\n                var that = this;\n                var target = $(e.target);\n                var allFocusable;\n                var handled = false;\n                var focusedIndex;\n\n                if (target[0] === that.element[0] && e.keyCode == keys.ENTER) {\n                    that._restoreTabIndexes();\n                    that.element.find(FOCUSABLE).first().trigger(\"focus\");\n                    handled = true;\n                }\n\n                if (target[0] !== that.element[0] && e.keyCode == keys.ESC) {\n                    that.element.trigger(\"focus\");\n                    handled = true;\n                }\n\n                if (target[0] === that.element[0] && e.keyCode == keys.HOME) {\n                    that.page(1);\n                    handled = true;\n                }\n\n                if (target[0] === that.element[0] && e.keyCode == keys.END) {\n                    that.page(that.totalPages());\n                    handled = true;\n                }\n\n                if (target[0] === that.element[0] && (e.keyCode == (isRtl ? keys.LEFT : keys.RIGHT) || e.keyCode == keys.PAGEDOWN)) {\n                    that.page(that.page() + 1);\n                    handled = true;\n                }\n\n                if (target[0] === that.element[0] && (e.keyCode == (isRtl ? keys.RIGHT : keys.LEFT) || e.keyCode == keys.PAGEUP)) {\n                    that.page((that.page() - 1) || 1);\n                    handled = true;\n                }\n\n                if (target[0] !== that.element[0] && e.keyCode == keys.TAB) {\n                    allFocusable = that.element.find(FOCUSABLE);\n                    focusedIndex = allFocusable.index(target);\n\n                    if (e.shiftKey) {\n                        if (focusedIndex - 1 < 0) {\n                            allFocusable.last().trigger(\"focus\");\n                        } else {\n                            allFocusable.eq(focusedIndex - 1).trigger(\"focus\");\n                        }\n                    } else {\n                        if (focusedIndex + 1 < allFocusable.length) {\n                            allFocusable.eq(focusedIndex + 1 ).trigger(\"focus\");\n                        } else {\n                            allFocusable.first().trigger(\"focus\");\n                        }\n                    }\n\n                    handled = true;\n                }\n\n                if (handled) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n            },\n\n            _numericSelectChange: function(e) {\n                var target = e.currentTarget;\n                var value = target.value;\n                var page = parseInt(value, 10);\n\n                target.blur();\n\n                this.page(page);\n            },\n\n            _click: function(e) {\n                var target = $(e.currentTarget);\n\n                e.preventDefault();\n\n                if (this.options.navigatable) {\n                    if (target.attr(\"title\") == this.options.messages.morePages) {\n                        this._focusMore = target.parent().index();\n                    } else if (!target.hasClass(\"k-pager-refresh\") && !target.hasClass(\"k-pager-nav\")) {\n                        this._focusSelected = true;\n                    }\n                }\n\n                if (!target.is(\".k-disabled\")) {\n                    this.page(parseInt(target.attr(kendo.attr(\"page\")), 10));\n                }\n            },\n\n            totalPages: function() {\n                return Math.ceil((this.dataSource.total() || 0) / (this.pageSize() || 1));\n            },\n\n            pageSize: function() {\n                return this.dataSource.pageSize() || this.dataSource.total();\n            },\n\n            page: function(page) {\n                if (page) {\n                    if (this.trigger(\"pageChange\", { index: page })) {\n                       return;\n                    }\n\n                    this.dataSource.page(page);\n\n                    this.trigger(CHANGE, { index: page });\n                } else {\n                    if (this.dataSource.total() > 0) {\n                        return this.dataSource.page();\n                    } else {\n                        return 0;\n                    }\n                }\n            },\n        });\n\n        ui.plugin(Pager);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}