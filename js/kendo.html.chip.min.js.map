{"version":3,"sources":["raw-js/kendo.html.chip.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendohtml","chip","js","this","$","kendo","window","HTMLBase","html","HTMLChip","extend","init","element","options","fn","call","_wrapper","name","size","rounded","fillMode","themeColor","attr","icon","iconClass","iconAttr","removable","removableAttr","removeIcon","removeIconClass","content","text","actions","stylingOptions","that","label","wrapper","wrap","parent","_addClasses","prepend","ui","avatarClass","addClass","visible","selected","enabled","length","_actions","actionsWrapper","appendTo","i","action","append","renderChip","isPlainObject","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","concat","jQuery","kendo$1","__meta__","id","category","description","depends","features","Object","defineProperty","value"],"mappings":"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","file":"kendo.html.chip.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.html.base.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.html.base', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendohtml = global.kendohtml || {}, global.kendohtml.chip = global.kendohtml.chip || {}, global.kendohtml.chip.js = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"html.chip\",\n        name: \"Html.Chip\",\n        category: \"web\",\n        description: \"HTML rendering utility for Kendo UI for jQuery.\",\n        depends: [ \"html.base\", \"icons\" ],\n        features: []\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            HTMLBase = kendo.html.HTMLBase;\n\n        var renderChip = function(element, options) {\n            if (!element || $.isPlainObject(element)) {\n                options = element;\n                element = $(\"<span></span>\");\n            }\n\n            return (new HTMLChip(element, options)).html();\n        };\n\n        var HTMLChip = HTMLBase.extend({\n            init: function(element, options) {\n                var that = this;\n                HTMLBase.fn.init.call(that, element, options);\n                that._wrapper();\n            },\n            options: {\n                name: \"HTMLChip\",\n                size: \"medium\",\n                rounded: \"medium\",\n                fillMode: \"solid\",\n                themeColor: \"base\",\n                attr: {},\n                icon: \"\",\n                iconClass: \"\",\n                iconAttr: {},\n                removable: false,\n                removableAttr: {},\n                removeIcon: \"x-circle\",\n                removeIconClass: \"\",\n                content: \"\",\n                text: \"\",\n                actions: [],\n                stylingOptions: [ \"size\", \"rounded\", \"fillMode\", \"themeColor\" ]\n            },\n            _wrapper: function() {\n                var that = this,\n                    options = that.options;\n\n                options.text = options.text || options.label;\n                that.wrapper = that.element.wrap(\"<div class='k-chip'></div>\").parent().attr(options.attr);\n                that._addClasses();\n\n                if (options.icon) {\n                    that.wrapper.prepend($(kendo.ui.icon({ icon: options.icon, size: \"small\", iconClass: `k-chip-icon${options.iconClass ? ` ${options.iconClass}` : '' }` })).attr(options.iconAttr));\n                } else if (options.iconClass) {\n                    that.wrapper.prepend($(\"<span class='\" + options.iconClass + \"'></span>\").attr(options.iconAttr));\n                } else if (options.avatarClass) {\n                    that.wrapper.prepend($(\"<span class='k-chip-avatar k-avatar k-avatar-md k-avatar-solid k-avatar-solid-primary k-rounded-full \" + options.avatarClass + \"'></span>\").attr(options.iconAttr));\n                }\n\n                that.element.addClass(\"k-chip-content\");\n                if (options.text) {\n                    that.element.html('<span class=\"k-chip-label\">' + options.text + '</span>');\n                }\n\n                if (options.visible === false) {\n                    that.wrapper.addClass(\"k-hidden\");\n                }\n\n                if (options.selected === true) {\n                    that.wrapper.addClass(\"k-selected\");\n                }\n\n                if (options.enabled === false) {\n                    that.wrapper.addClass(\"k-disabled\");\n                }\n\n                if ((options.actions && options.actions.length > 0) || options.removable) {\n                    that._actions();\n                }\n\n\n            },\n            _actions: function() {\n                var that = this,\n                    options = that.options;\n\n                that.actionsWrapper = $(\"<span class='k-chip-actions'></span>\");\n                that.actionsWrapper.appendTo(that.wrapper);\n\n                if (options.actions && options.actions.length > 0) {\n                    for (var i = 0; i < options.actions.length; i++) {\n                        var action = options.actions[i];\n                        that.actionsWrapper.append($(`<span class='k-chip-action ${action.iconClass ? action.iconClass : ''}'>${kendo.ui.icon({ icon: action.icon, size: \"small\" })}</span>`).attr(action.attr ? action.attr : {}));\n                    }\n                }\n\n                if (options.removable) {\n                    that.actionsWrapper.append($(`<span class='k-chip-action k-chip-remove-action'>${kendo.ui.icon({ icon: options.removeIcon, size: \"small\" })}</span>`).attr(options.removableAttr));\n                }\n            }\n        });\n\n        $.extend(kendo.html, {\n            renderChip: renderChip,\n            HTMLChip: HTMLChip\n        });\n\n        kendo.cssProperties.registerPrefix(\"HTMLChip\", \"k-chip-\");\n\n        kendo.cssProperties.registerValues(\"HTMLChip\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports[\"default\"] = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}