{"version":3,"sources":["raw-js/kendo.tabstrip.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendotabstrip","js","this","$","undefined$1","kendo","window","ui","keys","map","each","trim","extend","isFunction","outerWidth","template","_outerWidth","outerHeight","_outerHeight","Widget","excludedNodesRegExp","NS","HREF","PREV","NEXT","SHOW","LINK","LINK_TEXT","LAST","CLICK","IMAGE","FIRST","SELECT","ACTIVATE","CONTENT","CONTENTURL","MOUSEENTER","CONTENTLOAD","DISABLEDSTATE","ACTIVESTATE","FOCUSEDSTATE","HOVERSTATE","NAVIGATABLEITEMS","KEYBOARDNAVIGATABLEITEMS","HOVERABLEITEMS","ARIA_HIDDEN","ARIA_CONTROLS","ARIA_DISABLED","ARIA_SELECTED","ARIA_LABELLEDBY","templates","content","data","contentAttributes","item","textWrapper","tag","contentUrl","textAttributes","image","sprite","text","icon","iconPosition","itemWrapper","wrapperCssClass","group","active","imageUrl","spriteCssClass","empty","itemActionsWrapperTemplate","itemActionTemplate","iconClass","attributes","html","renderButton","attr","themeColor","fillMode","rendering","result","index","enabled","push","length","join","url","sanitizeLink","encoded","htmlEncode","updateTabClasses","tabs","children","addClass","filter","prop","parent","is","contents","nodeName","match","nodeType","nodeValue","wrapAll","updateFirstLast","tabGroup","removeClass","scrollButtonHtml","buttonClass","ajaxXhr","ajaxSettings","xhr","TabStrip","init","element","options","value","that","fn","call","_animations","_contentUrls","contentUrls","_wrapper","_isRtl","support","isRtl","wrapper","_updateClasses","_dataSource","_tabindex","dataSource","fetch","_removeAdditionalWrapperClasses","_tabSizes","_tabPosition","_scrollable","_tabAlignment","_sortable","_processContentUrls","_attachEvents","_initialActivate","notify","_showWatermarkOverlay","events","name","dataEncodedField","dataTextField","dataContentField","dataImageUrlField","dataUrlField","dataSpriteCssClass","dataContentUrlField","dataIconField","dataIconPositionField","tabPosition","tabAlignment","size","tabTemplate","animation","open","effects","duration","close","closable","collapsible","navigatable","applyMinHeight","scrollable","distance","scrollButtonsPosition","scrollButtons","sortable","setDataSource","setOptions","on","_keyDownProxy","off","activateTab","find","animationSettings","hasCloseAnimation","neighbours","oldTab","itemIndex","reverse","hide","kendoRemoveClass","contentAnimators","inRequest","abort","_current","trigger","_scrollableModeActive","_scrollTabsToItem","visibleContents","contentHolder","contentElement","closest","tabsHeight","parseInt","css","kendoStop","kendoAnimate","isAjaxContent","showContentElement","removeAttr","resize","complete","oldMinHeight","showContent","ajaxRequest","kendoAddClass","link","ajaxOptions","type","cache","dataType","error","status","success","destroy","e","ajax","append","tab","inserted","_create","idx","tabWrapper","before","_updateContentElements","isNaN","contentElements","kineticScrollNeeded","id","i","len","eq","scrollContainer","touch","deactivateTab","isHidden","_refreshHandler","unbind","_scrollPrevButton","remove","_scrollNextButton","disable","_toggleDisabled","enable","state","insertAfter","referenceTab","prev","referenceContent","fromIndex","newTabsCreated","after","_moveUrlItem","insertBefore","next","items","refresh","getter","view","action","model","actions","Array","from","indexOf","field","get","reload","elements","_removeUrlItem","select","arguments","hasClass","_initTabActions","tabOptions","tabElement","closeButtonAttributes","_handleClose","actionsWrapperTemplate","forEach","actionTemplate","bind","currentTarget","_active","setTimeout","_endItem","_appendUrlItem","_itemClick","_toggleScrollButtons","_toggleHover","_keydown","_resize","_click","prevent","isAnchor","href","collapse","oldFocusedTab","_focused","charAt","ObservableArray","toJSON","isPlainObject","isArray","renderedTabItem","renderItem","tabstripContent","renderContent","applyStylesFromKendoAttributes","test","parentNode","className","getAttribute","add","candidate","preventFocus","focused","DataSource","create","_elementId","elementId","wrapperId","guid","tabStripID","_getItem","selectedItems","childNodes","_item","endItem","target","document","activeElement","browser","msie","setActive","j","focus","preventDefault","key","keyCode","current","rtl","isHorizontal","DOWN","UP","RIGHT","LEFT","ENTER","SPACEBAR","HOME","END","to","splice","_getChildrenWidth","width","Math","floor","_getChildrenHeight","height","scrollButtonsVisibility","isVisible","wrapperOffset","tabGroupScroll","scrollPrevButton","scrollNextButton","_scrollableAllowed","offsetWidth","offsetHeight","scrollWidth","scrollHeight","condition","enableScroll","_removeScrollableClasses","_nowScrollingTabs","mouseDown","mouseUp","isRtlScrollDirection","edge","nextIcon","scrollLeft","scrollRight","prepend","_scrollTabsByDelta","itemPosition","currentScrollOffset","scrollTop","itemSize","itemOffset","position","left","first","top","tabGroupSize","mozilla","webkit","version","animationProps","finish","animate","delta","scrOffset","jQuery","fx","axis","Sortable","holdToDrag","allowTouchActions","container","hint","el","change","_sortChange","start","reference","newIndex","oldIndex","appendTo","toggleClass","ul","disableNextButton","abs","disablePrevButton","activeItem","activeTab","wrap","prependTo","display","isInitialUpdate","tabId","contentId","setAttribute","currentContent","mobile","Scroller","touchScroller","tabStrip","templateOptions","itemActions","plugin","kendo$1","__meta__","category","description","depends","features","Object","defineProperty"],"mappings":";;;;;;;;;;;;;;;CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,oBAAAC,OAAAF,EAAAC,QAAAE,QAAA,iBAAAA,QAAA,kBAAAA,QAAA,wBAAAA,QAAA,sBACA,mBAAAC,QAAAA,OAAAC,IAAAD,OAAA,CAAA,UAAA,iBAAA,kBAAA,wBAAA,sBAAAJ,GACAA,IAAAD,EAAA,oBAAAO,WAAAA,WAAAP,GAAAQ,MAAAC,cAAAT,EAAAS,eAAA,CAAA,EAAAT,EAAAS,cAAAC,GAAA,CAAA,GACA,CAJA,CAIAC,MAAA,SAAAT,IAeA,SAAAU,EAAAC,GACA,IAAAC,EAAAC,OAAAD,MACAE,EAAAF,EAAAE,GACAC,EAAAH,EAAAG,KACAC,EAAAN,EAAAM,IACAC,EAAAP,EAAAO,KACAC,EAAAN,EAAAM,KACAC,EAAAT,EAAAS,OACAC,EAAAR,EAAAQ,WAEAC,GADAT,EAAAU,SACAV,EAAAW,aACAC,EAAAZ,EAAAa,aACAC,EAAAZ,EAAAY,OACAC,EAAA,aACAC,EAAA,iBAEAC,EAAA,OACAC,EAAA,OACAC,EAAA,OACAC,EAAA,OACAC,EAAA,SACAC,EAAA,cACAC,EAAA,SACAC,EAAA,QAGAC,EAAA,UACAC,EAAA,UACAC,EAAA,SACAC,EAAA,WACAC,EAAA,qBACAC,EAAA,aACAC,EAAA,aAEAC,EAAA,cACAC,EAAA,aACAC,EAAA,WACAC,EAAA,UACAC,EAAA,UACAC,EAAA,gCAAAJ,EAAA,IACAK,EAAA,0BACAC,EAAA,uBAAAF,EAAA,SAAAH,EAAA,IAEAM,EAAA,cACAC,EAAA,gBACAC,EAAA,gBACAC,EAAA,gBAEAC,EAAA,kBAEAC,EAAA,CACAC,QAAAC,GACA,mCAAAA,EAAAC,kBAAAD,mBAAAA,EAAAD,QAAAC,EAAAE,cACAC,YAAA,EAAAC,MAAAF,OAAAG,aAAAC,iBAAAC,QAAAC,SAAAC,UACA,IAAAL,EAAAF,aAAA5B,MAAA+B,EAAAH,MAAAI,EAAAJ,MAAAK,EAAAL,KAAAM,EAAAN,MACAA,EAAAQ,MAAA,WAAAR,EAAAS,aAAA1D,EAAAE,GAAAuD,KAAA,CAAAA,KAAAR,EAAAQ,OAAA,IACA,gBAAAnC,MAAAkC,EAAAP,aACAA,EAAAQ,MAAA,UAAAR,EAAAS,aAAA1D,EAAAE,GAAAuD,KAAA,CAAAA,KAAAR,EAAAQ,OAAA,IACA,KAAAN,EAAAF,MACAA,KAAAF,GAAAF,EAAAc,YAAAZ,EAAA,GAAAA,EAAAG,YAAAH,MACAY,YAAA,CAAAZ,EAAAE,IACA,cAAAF,EAAAa,gBAAAb,EAAAc,MAAAd,EAAAE,qBAAAF,EAAAE,KAAAa,OAAA,uBAAA,MACAb,EACA,QACAK,MAAA,EAAAS,cAAA,oCAAAA,QACAR,OAAA,EAAAS,oBAAA,yBAAAA,aACAC,MAAA,IAAA,GACAC,2BAAA,IAAA,uCACAC,mBAAA,EAAAV,OAAAW,YAAAC,gBAAArE,EAAAsE,KAAAC,aAAAzE,EAAA,uCAAA0E,KAAAH,GAAA,CAAA,GAAA,CAAAZ,OAAAW,YAAAK,WAAA,OAAAC,SAAA,UAGAC,EAAA,CACAf,gBAAA,SAAAC,EAAAZ,GACA,IAAA2B,EAAA,CAAA,SAAA,mBACAC,EAAA5B,EAAA4B,MAcA,OAZA,IAAA5B,EAAA6B,SACAF,EAAAG,KAAA,cAGA,IAAAF,GACAD,EAAAG,KAAA,WAGAF,GAAAhB,EAAAmB,OAAA,GACAJ,EAAAG,KAAA,UAGAH,EAAAK,KAAA,IACA,EACA5B,eAAA,SAAAJ,GACA,OAAAA,EAAAiC,IAAA,UAAAlF,EAAAmF,aAAAlC,EAAAiC,KAAA,IAAA,EACA,EACA1B,KAAA,SAAAP,GACA,OAAA,IAAAA,EAAAmC,QAAAnC,EAAAO,KAAAxD,EAAAqF,WAAApC,EAAAO,KACA,EACAL,IAAA,SAAAF,GACA,OAAAA,EAAAiC,IAAA,IAAA,MACA,EACAlC,kBAAA,SAAAF,GACA,OAAA,IAAAA,EAAAgB,OAAA,IAAA9D,EAAAwE,KAAA,6CAAA,EACA,EACA1B,QAAA,SAAAG,GACA,OAAAA,EAAAH,QAAAG,EAAAH,QAAAG,EAAAG,WAAA,GAAA,QACA,EACAA,WAAA,SAAAH,GACA,OAAAA,EAAAG,WAAApD,EAAAwE,KAAA,eAAA,KAAAvB,EAAAG,WAAA,IAAA,EACA,GAGA,SAAAkC,EAAAC,GACAA,EAAAC,SAhGA,OAiGAC,SAAAhE,GAEA8D,EAAAC,SAAA,KACAC,SAAApE,GACAmE,SArGA,OAsGAC,SAAAhE,GAEA8D,EAAAG,OAAA,gBACAD,SAAAxD,GACAuC,KAAA9B,EAAA,QACAiD,KAAA,YAAA,GAEAJ,EAAAG,OAAA,0BACAF,SAAA,KACAE,OAAA,UACAE,SACAH,SAAAvD,GAEAqD,EAAAf,KAAA,OAAA,OAEAe,EAAAlF,MAAA,WACA,IAAA4C,EAAAnD,EAAAD,MACAoD,EAAAuB,KAAA7B,EAAAM,EAAA4C,GAAA,IAAA3D,IAEAe,EAAAuC,SAAA,IAAAnE,GAAA2D,QACA/B,EACA6C,WACAJ,QAAA,WAAA,QAAA7F,KAAAkG,SAAAC,MAAAjF,IAAA,GAAAlB,KAAAoG,WAAA3F,EAAAT,KAAAqG,WAAA,IACAC,QAAA,kCAAA9E,EAAA,OACA8E,QAAA,kCAAA7E,EAAA,MAEA,GAEA,CAEA,SAAA8E,EAAAC,GACA,MAAAd,EAAAc,EAAAb,SAAA,2BAEAD,EAAAG,OAAA,8BAAAY,YAAA5E,GACA6D,EAAAG,OAAA,4BAAAY,YAAA/E,GACAgE,EAAAG,OAAA,gBAAAD,SAAA/D,GACA6D,EAAAP,OAAA,GACAO,EAAAG,OAAA,eAAAD,SAAAlE,EAEA,CAEA,SAAAgF,EAAAC,EAAApC,GACA,MAAA,+HAAAoC,wBAAAxG,EAAAE,GAAAuD,KAAA,CAAAA,KAAAW,EAAAA,UAAA,0BACA,CAEA,SAAAqC,IACA,OAAA3G,EAAA4G,aAAAC,KACA,CAEA,IAAAC,EAAA9F,EAAAP,OAAA,CACAsG,KAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAApH,KAEAiB,EAAAoG,GAAAL,KAAAM,KAAAF,EAAAH,EAAAC,GAEAE,EAAAG,YAAAH,EAAAF,SAEAA,EAAAE,EAAAF,QAEAE,EAAAI,aAAAN,EAAAO,aAAA,GAEAL,EAAAM,WACAN,EAAAO,OAAAxH,EAAAyH,QAAAC,MAAAT,EAAAU,SAEAV,EAAAW,iBACAX,EAAAY,cAEAZ,EAAAa,UAAAb,EAAAZ,UACAY,EAAAZ,SAAA7B,KAAA,OAAA,WAEAuC,EAAAgB,YACAd,EAAAc,WAAAC,QAGAf,EAAAgB,kCAEAhB,EAAAiB,YACAjB,EAAAkB,eACAlB,EAAAmB,cACAnB,EAAAoB,gBACApB,EAAAqB,YACArB,EAAAsB,sBACAtB,EAAAuB,gBAEAvB,EAAAF,QAAAC,QACAA,EAAAC,EAAAF,QAAAC,OAGAC,EAAAwB,mBACAxB,EAAAD,MAAAA,GACAhH,EAAA0I,OAAAzB,GAEAA,EAAA0B,uBACA1B,EAAA0B,sBAAA1B,EAAAH,QAAA,GAEA,EAEA8B,OAAA,CACAjH,EACAC,EACAR,EAjMA,QAmMAY,EACA,SACA,cACA,aAGA+E,QAAA,CACA8B,KAAA,WACAC,iBAAA,GACAC,cAAA,GACAC,iBAAA,GACAC,kBAAA,GACAC,aAAA,GACAC,mBAAA,GACAC,oBAAA,GACAC,cAAA,OACAC,sBAAA,eACAC,YAAA,MACAC,aAAA,QACAC,KAAA,SACAC,YAAA,KACAC,UAAA,CACAC,KAAA,CACAC,QAAA,yBACAC,SAAA,KAEAC,MAAA,CACAD,SAAA,MAGAE,UAAA,EACAC,aAAA,EACAC,aAAA,EACA5C,aAAA,EACA6C,gBAAA,EACAC,WAAA,CACAC,SArNA,IAsNAC,sBAAA,QACAC,cAAA,QAEAC,UAAA,GAGAC,cAAA,SAAA1C,GACA,IAAAd,EAAApH,KAEAoH,EAAAF,QAAAgB,WAAAA,EACAd,EAAAY,cACAZ,EAAAc,WAAAC,OACA,EAEA0C,WAAA,SAAA3D,GACA,IAAAE,EAAApH,KACA8J,EAAA1C,EAAAF,QAAA4C,UAEA1C,EAAAG,YAAAL,GAEAA,EAAAO,cACAL,EAAAI,aAAAN,EAAAO,aAGAP,EAAA4C,UAAApJ,GAAA,EAAAoJ,EAAA5C,EAAA4C,WAEA5C,EAAAmD,YACAjD,EAAAZ,SAAAsE,GAAA,UAAA3J,EAAAiG,EAAA2D,eAEA3D,EAAAZ,SAAAwE,IAAA,UAAA7J,EAAAiG,EAAA2D,eAGA9J,EAAAoG,GAAAwD,WAAAvD,KAAAF,EAAAF,EACA,EAEA+D,YAAA,SAAA7H,GACA,IAAApD,KAAAwG,SAAAb,SAAA,oBAAAR,OAAA,CAEA/B,EAAApD,KAAAwG,SAAA0E,KAAA9H,GAEA,IAAAgE,EAAApH,KACAmL,EAAA/D,EAAAF,QAAA4C,UACAA,EAAAqB,EAAApB,KACAG,EAAAxJ,EAAA,CAAA,EAAAyK,EAAAjB,OACAkB,EAAAlB,GAAA,YAAAA,EACAmB,EAAAjI,EAAA2C,SAAAJ,WACA2F,EAAAD,EAAAxF,OAAA,IAAAxD,GACAkJ,EAAAF,EAAArG,MAAA5B,GAGA8G,EAAAxJ,EAAA0K,EAAAlB,EAAAxJ,EAAA,CAAA8K,SAAA,GAAA1B,GAAA,CAAA2B,MAAA,IAEAtL,EAAAyJ,KAAAE,EAAAE,UACAsB,EAAAI,iBAAArJ,EAAA,CAAA4H,SAAAC,EAAAD,WACA7G,EAAAsI,iBAAAnJ,EAAA,CAAA0H,SAAAC,EAAAD,aAEAqB,EAAA7E,YAAApE,GACAe,EAAAqD,YAAAlE,IAIA,IAAAoJ,EAAAvE,EAAAuE,iBAOA,GALAvE,EAAAwE,YACAxE,EAAAN,IAAA+E,QACAzE,EAAAwE,WAAA,GAGA,IAAAD,EAAAxG,OAYA,OAXAiC,EAAAZ,SAAA0E,KAAA,IAAA7I,GAEAe,EAAAwC,SAAAvD,GACA+E,EAAA0E,SAAA1I,GAAA,GAEAgE,EAAA2E,QAAA,UAEA3E,EAAA4E,uBACA5E,EAAA6E,kBAAA7I,IAGA,EAGA,IAAA8I,EAAAP,EAAA9F,OAAA,IAAAxD,GACA8J,EAAA/E,EAAA+E,cAAAZ,GACAa,EAAAD,EAAAE,QAAA,uBAMA,GAJAjF,EAAAkF,WAAAvL,EAAAqG,EAAAZ,UACA+F,SAAAnF,EAAAU,QAAA0E,IAAA,oBAAA,IACAD,SAAAnF,EAAAU,QAAA0E,IAAA,uBAAA,IAEA,IAAAL,EAAAhH,OAMA,OALA+G,EACAzF,YAAApE,GACAsC,KAAAhC,GAAA,GACA8J,WAAA,GAAA,GACAC,aAAAxC,IACA,EAGA9G,EAAAuB,KAAA,kBAAA,GAEA,IAAAgI,KAAAvJ,EAAAuC,SAAA,IAAAnE,GAAA0B,KAAAjB,KAAAmF,EAAAI,aAAA+D,KAAAY,EAAAnG,GA7UA,UA8UA4G,EAAA,WACAtB,EAAA3G,KAAA7B,GAAA,GACAM,EAAAuB,KAAA7B,GAAA,GACAsE,EAAAZ,SAAA7B,KAAA,wBAAAvB,EAAAuB,KAAA,OAEAyC,EAAA0E,SAAA1I,GAAA,GAEAgJ,EACAxG,SAAAvD,GACAwK,WAAAlK,GACA8J,WAAA,GAAA,GACAC,aAAAhM,EAAA,CAAAsG,KAAA,WACAI,EAAA2E,QAAAxK,EAAA,CAAA6B,KAAAA,EAAA,GAAAgJ,eAAAD,EAAA,KACAhM,EAAA2M,OAAAX,EACA,GAAArC,EAAA,CACAiD,SAAA,WAEA3F,EAAAH,QAAAuF,IAAA,aAAAQ,GACA5J,EAAAyJ,WAAA,kBAEAzF,EAAA2E,QAAAhK,EAAA,CAAAqB,KAAAA,EAAA,GAAAgJ,eAAAD,EAAA,KACAhM,EAAA2M,OAAAX,EACA,IAEA,EACAc,EAAA,WACAN,GAIAvJ,EAAAyJ,WAAA,kBACAzF,EAAA8F,YAAA9J,EAAA+I,GAAA,WACA/I,EAAAuB,KAAA,kBAAA,GACAiI,IACAxF,EAAA2E,QAAA,SACA,MARAa,IACAxF,EAAA2E,QAAA,WAUA3E,EAAA4E,uBACA5E,EAAA6E,kBAAA7I,EAGA,EAGA4J,EAAA5F,EAAAH,QAAAuF,IAAA,cA2BA,OAzBApF,EAAAF,QAAAoD,gBACAlD,EAAAH,QAAAuF,IAAA,aAAApF,EAAAH,QAAAlG,eAGAmL,EAAAzF,YAAApE,GACA+E,EAAAZ,SAAA0E,KAAA,IAAA7I,GAEAlC,EAAAyJ,KAAAE,EAAAE,SACA5G,EAAA+J,cAAA9K,EAAA,CAAA4H,SAAAH,EAAAG,WAEA7G,EAAAwC,SAAAvD,GAGA6J,EAAAvH,KAAAhC,GAAA,GAEAuJ,EAAA/G,OACA+G,EACAO,WAAA,GAAA,GACAC,aAAAhM,EAAA,CACAqM,SAAAE,GACA/C,IAEA+C,KAGA,CA3IA,CA4IA,EAEAC,YAAA,SAAAjG,EAAAhE,EAAA8J,EAAA1H,GACA4B,EAAAjH,KAAAwG,SAAA0E,KAAAjE,GAEA,IAAAG,EAAApH,KACAoN,EAAAnG,EAAAiE,KAAA,IAAA1J,GAGA6D,EAAAA,GAAA+H,EAAAlK,KAAAjB,IAAAmF,EAAAI,aAAAP,EAAAjC,UAAAoI,EAAAzI,KAAAvD,GACAgG,EAAAwE,WAAA,EAEA,IAAAyB,EAAA,CACAC,KAAA,MACAC,OAAA,EACAlI,IAAAA,EACAmI,SAAA,OACAtK,KAVA,CAAA,EAWA4D,IAAAF,EAEA6G,MAAA,SAAA3G,EAAA4G,GACAtG,EAAA2E,QAAA,QAAA,CAAAjF,IAAAA,EAAA4G,OAAAA,KACA1N,KAAA+M,UAEA,EAEAA,SAAA,SAAAjG,GACAM,EAAAwE,WAAA,CACA,EAEA+B,QAAA,SAAAzK,GACA,IACA/C,EAAAyN,QAAA3K,GACAA,EAAAwB,KAAAvB,EACA,CAAA,MAAA2K,GACA7N,KAAAyN,MAAAzN,KAAA8G,IAAA,QACA,CAEAiG,GACAA,EAAAzF,KAAAF,EAAAnE,GAGAmE,EAAA2E,QAAA5J,EAAA,CAAAiB,KAAA6D,EAAA,GAAAmF,eAAAnJ,EAAA,IACA,GAGA,iBAAAoC,IACAgI,EAAApN,EAAAS,QAAA,EAAA,CAAA,EAAA2M,EAAAhI,GAEA1E,EAAA0M,EAAAhI,OACAgI,EAAAhI,IAAAgI,EAAAhI,OAGA1E,EAAA0M,EAAAnK,QACAmK,EAAAnK,KAAAmK,EAAAnK,SAIAkE,EAAAN,IAAA7G,EAAA6N,KAAAT,EACA,EAEAU,OAAA,SAAAC,GACA,IAAA5G,EAAApH,KACAiO,EAAA7G,EAAA8G,QAAAF,GAgBA,OAdAxN,EAAAyN,EAAAvI,MAAA,SAAAyI,GACA,IAAAlI,EAAAgI,EAAAhI,SAAAkI,GACA/G,EAAAZ,SAAAuH,OAAA/N,MACA,UAAAoH,EAAAF,QAAAwC,YACAtC,EAAAgH,WAAAC,OAAApI,GAEAmB,EAAAU,QAAAiG,OAAA9H,EAEA,IAEAM,EAAAa,EAAAZ,UACAY,EAAAkH,yBACAlH,EAAA0F,QAAA,GAEA1F,CACA,EAEAgF,eAAA,SAAAb,GACA,GAAAgD,MAAAhD,EAAA,GACA,OAAArL,EAGA,IAAAsO,EAAAxO,KAAAwO,iBAAAxO,KAAAwO,gBAAA,KAAArO,EAAAsO,oBAAAzO,KAAAwO,gBAAAxO,KAAA2L,iBACA+C,EAAAzO,EAAAD,KAAAwG,SAAAb,WAAA4F,IAAA5G,KAAA/B,GAEA,GAAA4L,EACA,IAAA,IAAAG,EAAA,EAAAC,EAAAJ,EAAArJ,OAAAwJ,EAAAC,EAAAD,IACA,GAAAH,EAAAK,GAAAF,GAAAtC,QAAA,uBAAA,GAAAqC,IAAAA,EACA,OAAAF,EAAAG,GAKA,OAAAzO,CACA,EAEAiM,cAAA,SAAAZ,GACA,IAAAa,EAAAnM,EAAAD,KAAAoM,eAAAb,IACAuD,EAAA1C,EAAAzG,SAAA,wBAEA,OAAAxF,EAAAyH,QAAAmH,OAAAD,EAAA,GAAAA,EAAA1C,CACA,EAEA4C,cAAA,SAAA5L,GACA,IAAAgE,EAAApH,KACAmL,EAAA/D,EAAAF,QAAA4C,UACAA,EAAAqB,EAAApB,KACAG,EAAAxJ,EAAA,CAAA,EAAAyK,EAAAjB,OACAkB,EAAAlB,GAAA,YAAAA,EACA9G,EAAAgE,EAAAZ,SAAA0E,KAAA9H,GAEA8G,EAAAxJ,EAAA0K,EAAAlB,EAAAxJ,EAAA,CAAA8K,SAAA,GAAA1B,GAAA,CAAA2B,MAAA,IAEAtL,EAAAyJ,KAAAE,EAAAE,SACA5G,EAAAsI,iBAAArJ,EAAA,CAAA4H,SAAAH,EAAAG,WAEA7G,EAAAqD,YAAApE,GAGAe,EAAAuB,KAAA7B,GAAA,GACAsE,EAAAZ,SAAAqG,WAAA,yBAEAzF,EAAAuE,iBACA9F,OAAA,IAAAxD,GACAoK,WAAA,GAAA,GACAC,aAAAxC,GACAzD,YAAApE,GACAsC,KAAAhC,GAAA,EACA,EAEAyF,gCAAA,WACApI,KAEA8H,QAAArB,YAAA,6CAFAzG,KAGAwG,SAAAC,YAAA,0HACA,EAEAmH,QAAA,WACA,IAAAxG,EAAApH,KACA,MAAAiP,EAAA7H,EAAAF,QAAAqD,YAAA,WAAAnD,EAAAF,QAAAqD,WAAAG,cACAzJ,EAAAoG,GAAAuG,QAAAtG,KAAAF,GAEAA,EAAA8H,iBACA9H,EAAAc,WAAAiH,OAAA,SAAA/H,EAAA8H,iBAGA9H,EAAAF,QAAAqD,YAAA0E,GACA7H,EAAAZ,SAAA2I,OAAA,SAAAhO,GAGAiG,EAAAgB,kCAEAhB,EAAAU,QAAAkD,IAAA7J,GACAiG,EAAAZ,SAAAwE,IAAA7J,GAEAiG,EAAA4E,wBAAAiD,IACA7H,EAAAgI,kBAAApE,MAAAqE,SACAjI,EAAAkI,kBAAAtE,MAAAqE,UAGAlP,EAAAyN,QAAAxG,EAAAU,QACA,EAEAyH,QAAA,SAAAtI,GAGA,OAFAjH,KAAAwP,gBAAAvI,GAAA,GAEAjH,IACA,EAEAyP,OAAA,SAAAxI,EAAAyI,GAGA,OAFA1P,KAAAwP,gBAAAvI,GAAA,IAAAyI,GAEA1P,IACA,EAEA2P,YAAA,SAAA3B,EAAA4B,GAEAA,EADA3P,EAAA+N,GAAAhI,GAAA/F,EAAA2P,IACA5P,KAAAwG,SAAA0E,KAAA0E,GAAAC,OAEA7P,KAAAwG,SAAA0E,KAAA0E,GAGA,IAAAxI,EAAApH,KACAiO,EAAA7G,EAAA8G,QAAAF,GACA8B,EAAA1I,EAAAH,QAAAiE,KAAA,QAAA0E,EAAAjL,KAAA/B,GAAA,MAgBA,OAdApC,EAAAyN,EAAAvI,MAAA,SAAAyI,GACA,IAAAlI,EAAAgI,EAAAhI,SAAAkI,GACA4B,EAAA9B,EAAA+B,eAAA5I,EAAAI,aAAArC,QAAA8I,EAAAvI,KAAAP,OAAAgJ,GAAAlO,EAAAgG,GAAAjB,QAAA,EAEA4K,EAAAK,MAAAjQ,MACA8P,EAAAG,MAAAhK,GAEAmB,EAAA8I,aAAAH,EAAA9P,EAAAD,MAAAgF,QACA,IAEAuB,EAAAa,EAAAZ,UACAY,EAAAkH,uBAAAL,EAAA+B,gBACA5I,EAAA0F,QAAA,GAEA1F,CACA,EAEA+I,aAAA,SAAAnC,EAAA4B,GAEAA,EADA3P,EAAA+N,GAAAhI,GAAA/F,EAAA2P,IACA5P,KAAAwG,SAAA0E,KAAA0E,GAAAQ,OAEApQ,KAAAwG,SAAA0E,KAAA0E,GAGA,IAAAxI,EAAApH,KACAiO,EAAA7G,EAAA8G,QAAAF,GACA8B,EAAA1I,EAAAH,QAAAiE,KAAA,QAAA0E,EAAAjL,KAAA/B,GAAA,MAgBA,OAdApC,EAAAyN,EAAAvI,MAAA,SAAAyI,GACA,IAAAlI,EAAAgI,EAAAhI,SAAAkI,GACA4B,EAAA9B,EAAA+B,eAAA5I,EAAAI,aAAArC,QAAA8I,EAAAvI,KAAAP,OAAAgJ,GAAAlO,EAAAgG,GAAAjB,QAAA,EAEA4K,EAAAvB,OAAArO,MACA8P,EAAAzB,OAAApI,GAEAmB,EAAA8I,aAAAH,EAAA9P,EAAAD,MAAAgF,QACA,IAEAuB,EAAAa,EAAAZ,UACAY,EAAAkH,uBAAAL,EAAA+B,gBACA5I,EAAA0F,QAAA,GAEA1F,CACA,EAEAiJ,MAAA,WACA,OAAArQ,KAAAwG,SAAA,GAAAb,QACA,EAEA2K,QAAA,SAAAzC,GACA,IAWAM,EAEAH,EAGA7I,EAhBAiC,EAAApH,KACAkH,EAAAE,EAAAF,QACA3B,EAAApF,EAAAoQ,OAAArJ,EAAA+B,kBACAtF,EAAAxD,EAAAoQ,OAAArJ,EAAAgC,eACAjG,EAAA9C,EAAAoQ,OAAArJ,EAAAiC,kBACA5F,EAAApD,EAAAoQ,OAAArJ,EAAAqC,qBACA9F,EAAAtD,EAAAoQ,OAAArJ,EAAAkC,mBACA/D,EAAAlF,EAAAoQ,OAAArJ,EAAAmC,cACA3F,EAAAvD,EAAAoQ,OAAArJ,EAAAoC,oBACA1F,EAAAzD,EAAAoQ,OAAArJ,EAAAsC,eACA3F,EAAA1D,EAAAoQ,OAAArJ,EAAAuC,uBAEA/D,EAAA,GAGA8K,EAAApJ,EAAAc,WAAAsI,OAWA,KAPA3C,EAAAA,GAAA,CAAA,GACA4C,SAGAD,EAAA3C,EAAAwC,OAGAlC,EAAA,EAAAhJ,EAAAqL,EAAArL,OAAAgJ,EAAAhJ,EAAAgJ,IAAA,CAkCA,GAjCAH,EAAA,CACArK,KAAAA,EAAA6M,EAAArC,KAGAjH,EAAA2C,cACAmE,EAAA0C,MAAAF,EAAArC,GACAH,EAAAnN,SAAAqG,EAAA2C,aAGA3C,EAAA+B,mBACA+E,EAAAzI,QAAAA,EAAAiL,EAAArC,KAGAjH,EAAAiC,mBACA6E,EAAA/K,QAAAA,EAAAuN,EAAArC,KAGAjH,EAAAqC,sBACAyE,EAAAzK,WAAAA,EAAAiN,EAAArC,KAGAjH,EAAAmC,eACA2E,EAAA3I,IAAAA,EAAAmL,EAAArC,KAGAjH,EAAAkC,oBACA4E,EAAA9J,SAAAT,EAAA+M,EAAArC,KAGAjH,EAAAoC,qBACA0E,EAAA7J,eAAAT,EAAA8M,EAAArC,KAGAqC,EAAArC,GAAAwC,QAAA,CACA,MAAAA,EAAA,iBAAAH,EAAArC,GAAAwC,QAAAC,MAAAC,KAAAL,EAAArC,GAAAwC,SAAAH,EAAArC,GAAAwC,QACA3C,EAAA2C,QAAAA,CACA,CAEA/M,EAAA4M,EAAArC,MACAH,EAAApK,KAAAA,EAAA4M,EAAArC,IACAH,EAAAnK,aAAAA,EAAA2M,EAAArC,KAAA,UAGAH,EAAA/I,QAAAuL,EAAArC,GAAAlJ,QACA+I,EAAA7D,SAAAqG,EAAArC,GAAAhE,UAAAjD,EAAAiD,SAEAzE,EAAAyI,GAAAH,CACA,CAEA,GAAA,OAAAH,EAAA4C,OACA5C,EAAA7I,MAAAoC,EAAAZ,SAAAb,WAAAR,OACAiC,EAAA+I,aAAAzK,EAAA0B,EAAAZ,SAAAb,WAAAkJ,GAAAhB,EAAA7I,QAEAoC,EAAA2G,OAAArI,QAEA,GAAA,UAAAmI,EAAA4C,OACA,IAAAtC,EAAA,EAAAA,EAAAqC,EAAArL,OAAAgJ,IACA/G,EAAAiI,OAAAxB,EAAA7I,WAEA,cAAA6I,EAAA4C,QACAtC,EAAA/G,EAAAc,WAAAsI,OAAAM,QAAAN,EAAA,IACA3C,EAAAkD,QAAA7J,EAAAgC,eACA9B,EAAAZ,SAAAb,WAAAkJ,GAAAV,GAAAjD,KAAA,WAAAvH,KAAA6M,EAAA,GAAAQ,IAAAnD,EAAAkD,QAGAlD,EAAAkD,QAAA7J,EAAAmC,eACAjC,EAAAI,aAAA2G,GAAAqC,EAAA,GAAAQ,IAAAnD,EAAAkD,UAGA3J,EAAA2E,QAAA,eACA3E,EAAAiI,OAAA,MACAjI,EAAAI,aAAA,GACAJ,EAAA2G,OAAArI,GACA0B,EAAA2E,QAAA,aAEA,EAEAkF,OAAA,SAAAhK,GACAA,EAAAjH,KAAAwG,SAAA0E,KAAAjE,GACA,IAAAG,EAAApH,KACAyH,EAAAL,EAAAI,aAYA,OAVAP,EAAAzG,MAAA,WACA,IAAA4C,EAAAnD,EAAAD,MACAuD,EAAAH,EAAA8H,KAAA,IAAA1J,GAAA0B,KAAAjB,IAAAwF,EAAArE,EAAA4B,SACA/B,EAAAmE,EAAA+E,cAAA/I,EAAA4B,SAEAzB,GACA6D,EAAA8F,YAAA9J,EAAAH,EAAA,KAAAM,EAEA,IAEA6D,CACA,EAEAiI,OAAA,SAAA6B,GACA,IAEAjL,EAFAmB,EAAApH,KACAsN,SAAA4D,EA0BA,MAvBA,WAAA5D,EACA4D,EAAA9J,EAAAZ,SAAA0E,KAAAgG,GACA,WAAA5D,IACA4D,EAAA9J,EAAAZ,SAAAb,WAAAkJ,GAAAqC,IAGAjL,EAAAiL,EAAA3Q,KAAA,WACA,IAAA4N,EAAAlO,EAAAD,MAAAgF,QACA/B,EAAAmE,EAAAgF,eAAA+B,GAKA,OAHAhO,EAAAyN,QAAA3K,GACAmE,EAAA+J,eAAAhD,GAEAlL,CACA,IAEAiO,EAAA7B,SACApJ,EAAA7B,QACA6B,EAAAoJ,SAEAjI,EAAAkH,yBACAlH,EAAA0F,QAAA,GAEA1F,CACA,EAEAgK,OAAA,SAAAnK,GACA,IAAAG,EAAApH,KAEA,OAAA,IAAAqR,UAAAlM,OACAiC,EAAAZ,SAAAb,SAAA,MAAAtD,IAGAkM,MAAAtH,KACAA,EAAAG,EAAAZ,SAAAb,WAAAqL,IAAA/J,IAGAA,EAAAG,EAAAZ,SAAA0E,KAAAjE,GACAhH,EAAAgH,GAAAzG,MAAA,SAAAwE,EAAA5B,IACAA,EAAAnD,EAAAmD,IACAkO,SAAAjP,IAAA+E,EAAA2E,QAAAjK,EAAA,CAAAsB,KAAAA,EAAA,GAAAgJ,eAAAhF,EAAA+E,cAAA/I,EAAA4B,SAAA,OACAoC,EAAA6D,YAAA7H,GACAgE,EAAAZ,SAAA7B,KAAA,wBAAAvB,EAAAuB,KAAA,OAEA,IAEAyC,EACA,EAEAD,MAAA,SAAAA,GACA,IAAAC,EAAApH,KAEA,GAAAmH,IAAAjH,EASA,OAAAkH,EAAAgK,SAAAzN,OARAwD,GAAAC,EAAAD,SACAC,EAAAZ,SAAAb,WAAAnF,MAAA,WACAL,EAAAM,KAAAR,EAAAD,MAAA2D,SAAAwD,GACAC,EAAAgK,OAAApR,KAEA,GAKA,EAEAuR,gBAAA,SAAAvD,EAAAwD,GACA,MAAApK,EAAApH,KACAyR,EAAAxR,EAAA+N,GACA,IAAA2C,EAAA,GAEAe,EAAA,CAAA9N,KAAA,IAAAY,WAAA,CAAA,oBAAA,GAAAiM,OAAArJ,EAAAuK,cAUA,GARAH,EAAAb,UACAA,EAAAC,MAAAC,KAAAW,EAAAb,UAGAa,EAAArH,UACAwG,EAAAzL,KAAAwM,GAGAf,GAAAxL,OAAA,CACA,MAAAyM,EAAA3R,EAAA+C,EAAAqB,8BAEAsM,EAAAkB,SAAApB,IACA,MAAAqB,EAAA7R,EAAA+C,EAAAsB,mBAAAmM,IACAmB,EAAA7D,OAAA+D,GACAnR,EAAA8P,GAAAA,SACAqB,EAAAC,KAAApQ,EAAA8O,EAAAA,OAAAsB,KAAA3K,GACA,IAGAqK,EAAA1D,OAAA6D,EACA,CAEA,OAAAH,EAAA,EACA,EAEAE,aAAA,SAAA9D,GACA,MAAAzG,EAAApH,KAGAgO,EAFA/N,EAAA4N,EAAAmE,eAEA3F,QAAA,WAEA2B,EAAAsD,SAAAjP,KAEA2L,EAAA6B,OAAA1K,OAAA,EACAiC,EAAA6D,YAAA+C,EAAA6B,QAEAzI,EAAA6D,YAAA+C,EAAAoC,SAIAhJ,EAAAiI,OAAArB,EACA,EAEAxF,cAAA,WACA,MAAApB,EAAApH,KAEA,IAAA2J,EAAAvC,EAAAF,QAAAyC,aAEAvC,EAAA4E,wBACArC,EAAA,SAGAvC,EAAAZ,SAAAZ,SAAA,oBAAA+D,EAEA,EAEAsI,QAAA,WACA,IAAA7K,EAAApH,KACAkS,YAAA,WACA,IAAA9O,EAAAgE,EAAAZ,SAAAb,WAAAE,OAAA,IAAAxD,IAEAe,EAAAA,EAAA,GAAAA,EAAAgE,EAAA+K,SAAA,UACA,IACA/K,EAAA0E,SAAA1I,EAEA,GAAA,IACA,EAEAmE,YAAA,SAAAL,GACAA,GAAA,cAAAA,IAAAA,EAAA4C,YACA5C,EAAA4C,UAAA,CAAAC,KAAA,CAAAC,QAAA,CAAA,GAAAE,MAAA,CAAAF,QAAA,CAAA,IAEA,EAEAoI,eAAA,SAAA/M,GACArF,KAAAwH,aAAAtC,KAAAG,EACA,EAEAsD,cAAA,WACA,IAAAvB,EAAApH,KACAkH,EAAAE,EAAAF,QAEAE,EAAAZ,SACAsE,GAAAnJ,EAAAR,EAAA,uBAAA,GACA2J,GAAAnJ,EAAAR,EAAA,MAAAqB,EAAA4E,EAAAiL,WAAAN,KAAA3K,IAEAA,EAAAU,QAAAgD,GAAA,QAAA3J,GAAA,WAAAiG,EAAAZ,SAAAuF,QAAA,QAAA,IAEA7E,EAAAqD,YAAA,WAAArD,EAAAqD,WAAAG,eACAtD,EAAAZ,SAAAuL,KAAA,UAAA,SAAAlE,GACAzG,EAAAkL,sBACA,IAGAlL,EAAAZ,SACAsE,GAAA5I,EAAAf,EAAAe,cAAAf,EAAAuB,EAAA0E,EAAAmL,cACAzH,GAAA,QAAA3J,EAAAiG,EAAA6K,QAAAF,KAAA3K,IACA0D,GAAA,OAAA3J,GAAA,WAAAiG,EAAA0E,SAAA,KAAA,IAEA1E,EAAA2D,cAAA3D,EAAAoL,SAAAT,KAAA3K,GAEAF,EAAAmD,aACAjD,EAAAZ,SAAAsE,GAAA,UAAA3J,EAAAiG,EAAA2D,eAGA9K,EAAAG,QAAA0K,GAAA,SAAA3J,EAAAiG,EAAAqL,QAAAV,KAAA3K,GACA,EAEAsL,OAAA,SAAAtP,GACA,IAMAuP,EAAAC,EANAxL,EAAApH,KACAoN,EAAAhK,EAAA8H,KAAA,IAAA1J,GACAqR,EAAAzF,EAAAzI,KAAAvD,GACA0R,EAAA1L,EAAAF,QAAAkD,YACApF,EAAA5B,EAAA4B,QACAmH,EAAA/E,EAAA+E,cAAAnH,GAGA+N,EADA3P,EAAA2C,SAAAJ,WACAE,OAAA,IAAAvD,GAEA,GAAAc,EAAAiJ,QAAA,eAAA,IAAAjF,EAAAU,QAAA,GAAA,CAIA,GAAA1E,EAAA4C,GAAA,IAAA5D,GAAA0Q,EAAA,GAAA,KAAAzQ,IAUA,OATA0Q,EAAAtM,YAAAnE,GACA8E,EAAA4L,SAAA5P,EAEAA,EAAAwC,SAAAtD,GACA8E,EAAA0E,SAAA1I,GAEAgE,EAAA4E,uBACA5E,EAAA6E,kBAAA7I,IAEA,EAMA,GAHAwP,EAAAxF,EAAAlK,KAAAjB,IAAAmF,EAAAI,aAAAxC,IAAA6N,IAAA,KAAAA,EAAAI,OAAAJ,EAAA1N,OAAA,KAAA,GAAA0N,EAAA/B,QAAA,IAAA1J,EAAAH,QAAA,GAAAyH,GAAA,MACAiE,GAAAE,GAAAD,EAEAxL,EAAAZ,SAAAb,SAAA,oBAAAR,OACA,OAAAwN,EAGA,GAAAvL,EAAA2E,QAAAjK,EAAA,CAAAsB,KAAAA,EAAA,GAAAgJ,eAAAD,EAAA,KACA,OAAA,EAGA,IAAA,IAAAwG,EAIA,OAAAG,GAAA1P,EAAA4C,GAAA,IAAA3D,IACA+E,EAAA4H,cAAA5L,IACA,IAGAgE,EAAA6D,YAAA7H,KACAgE,EAAA0E,SAAA1I,GACAuP,GAAA,GAGAA,EAxCA,CAyCA,EAEAzE,QAAA,SAAAF,GACA,IACAtI,EACAO,EACAhD,EAHAmE,EAAApH,KAIAgQ,GAAA,EAkDA,OAhDAhC,EAAAA,aAAA7N,EAAA+C,KAAAgQ,gBAAAlF,EAAAmF,SAAAnF,EAEA/N,EAAAmT,cAAApF,IAAA4C,MAAAyC,QAAArF,IACAA,EAAA4C,MAAAyC,QAAArF,GAAAA,EAAA,CAAAA,GACAgC,GAAA,EAEAtK,EAAAnF,EAAAyN,GAAA,SAAA7G,EAAAgH,GACA/G,EAAAgL,eAAApE,EAAAG,GAAA5K,YAAA,MACA,MAAA+P,EAAAvM,EAAAwM,WAAA,CACAvP,MAAAoD,EAAAZ,SACApD,KAAA1C,EAAAyG,EAAA,CAAAnC,MAAAmJ,MAIA,OADAhH,EAAAgD,SAAAhD,EAAAgD,UAAA/C,EAAAF,QAAAiD,SACAlK,EAAAmH,EAAAmK,gBAAA+B,EAAAnM,GACA,IAEAlB,EAAA1F,EAAAyN,GAAA,SAAA7G,EAAAgH,GACA,GAAA,iBAAAhH,EAAAlE,SAAAkE,EAAA5D,WAAA,CACA,IAAAiQ,EAAAvT,EAAA8G,EAAA0M,cAAA,CACArQ,KAAA1C,EAAAyG,EAAA,CAAAnC,MAAAmJ,OAIA,OADAhO,EAAAuT,+BAAAF,EAAA,CAAA,YACAA,CACA,CACA,MAGA9N,EADA,iBAAAsI,GAAA,KAAAA,EAAA,GACA5G,EAAAH,QAAAiE,KAAA8C,GAEA/N,EAAA+N,GAEA/H,EAAAhG,IACAyF,EAAAlF,MAAA,WACA,GAAA,mBAAAmT,KAAA3T,KAAA4T,WAAAC,WAAA,CACA,IAAA5M,EAAAG,EAAAH,QAAAiE,KAAA,QAAAlL,KAAA8T,aAAAlR,GAAA,MACAK,EAAAgE,CACA,MACAhE,EAAAhD,EAAA,eAAA+B,EAAA,OAGAiE,EAAAA,EAAA8N,IAAA9Q,EACA,IAEAwC,EAAAC,IAGA,CAAAA,KAAAA,EAAAO,SAAAA,EAAA+J,eAAAA,EACA,EAEAlE,SAAA,SAAAkI,EAAAC,GACA,IACAC,EADAlU,KACAgT,SAEA,GAAAgB,IAAA9T,EACA,OAAAgU,EAGAA,GAAAF,GAAAE,EAAA,KAAAF,EAAA,KACAE,GAAA,GAGAA,GACAA,EAAAzN,YAAAnE,GAGA0R,IAAAC,GACAD,EAAApO,SAAAtD,GAhBAtC,KAmBAgT,SAAAgB,CACA,EAEAhM,YAAA,WACA,IAAAZ,EAAApH,KAEAoH,EAAAc,YAAAd,EAAA8H,gBACA9H,EAAAc,WAAAiH,OAAA,SAAA/H,EAAA8H,iBAEA9H,EAAA8H,gBAAA9H,EAAAkJ,QAAAyB,KAAA3K,GAGAA,EAAAc,WAAA/H,EAAA+C,KAAAiR,WAAAC,OAAAhN,EAAAF,QAAAgB,YACA6J,KAAA,SAAA3K,EAAA8H,gBACA,EAEAmF,WAAA,SAAApN,EAAAkH,EAAAH,GACA,IAAAsG,EAAArN,EAAAtC,KAAA,MACA4P,EAAAvU,KAAAiH,QAAAtC,KAAA,MACA6P,EAAArU,EAAAqU,OAEA,IAAAF,GAAAA,EAAAxD,QAAAyD,EAAA,MAAA,EAAA,CACA,IAAAE,GAAAF,GAAAC,GAAA,IAMA,OAJAxG,IACAyG,GAAA,QAGAA,GAAAtG,EAAA,EACA,CAEA,OAAAmG,CACA,EAEAnC,SAAA,SAAA1B,GACA,OAAAzQ,KAAAwG,SAAAb,SAAAnD,GAAAiO,IACA,EAEAiE,SAAA,SAAAjE,GACA,OAAAzQ,KAAAwG,SAAAb,SAAAlD,GAAAgO,IACA,EAEA7H,iBAAA,WACA,IAAAxB,EAAApH,KACA2U,EAAAvN,EAAAZ,SAAAb,SAAA,MAAAtD,GACAY,EAAAmE,EAAA+E,cAAAwI,EAAA3P,SAEA2P,EAAA,IAAA1R,EAAAkC,OAAA,GAAA,IAAAlC,EAAA,GAAA2R,WAAAzP,QACAiC,EAAA6D,YAAA0J,EAAA9F,GAAA,GAEA,EAEAgG,MAAA,SAAAzR,EAAAqN,GACA,IAAAqE,EAOA,OALAA,EADArE,IAAApP,EACA,OAEA,QAGA+B,IAIAA,EAAAA,EAAAqN,MAEA,KACArN,EAAApD,KAAAwG,SAAAb,SAAAlD,GAAAqS,MAGA1R,EAAAkO,SAAAlP,IACAgB,EAAAwC,SAAAtD,IAEAc,EAAAkO,SAAAlP,IAAAgB,EAAAkO,SAAAjP,MACArC,KAAAgT,SAAA5P,GAGAA,GAhBApD,KAAAmS,SAAA2C,EAiBA,EAEAzC,WAAA,SAAAxE,GACA,IACArH,EADAxG,KACAwG,SAAA,GAEA,IAAAqH,EAAAkH,OAAA1I,QAAA,mBAAA,CAIA,GAAA7F,IAAAwO,SAAAC,cAEA,GADA9U,EAAAyH,QAAAsN,QAAAC,KAEA,IAEA3O,EAAA4O,WACA,CAAA,MAAAC,GACA7O,EAAA8O,OACA,MAEA9O,EAAA8O,QAjBAtV,KAqBA0S,OAAAzS,EAAA4N,EAAAmE,iBACAnE,EAAA0H,gBAjBA,CAmBA,EAEA/C,SAAA,SAAA3E,GACA,IAKA4C,EALArJ,EAAApH,KACAwV,EAAA3H,EAAA4H,QACAC,EAAAtO,EAAA0E,WACA6J,EAAAvO,EAAAO,OACAiO,EAAA,aAAAjC,KAAAvM,EAAAF,QAAAwC,aAGA,GAAAmE,EAAAkH,QAAAlH,EAAAmE,eAAA0D,EAAA,CAIA,GAAAF,IAAAlV,EAAAuV,MAAAD,EAEA,GAAAJ,IAAAlV,EAAAwV,IAAAF,EAEA,GAAAJ,IAAAlV,EAAAyV,OAAAH,EACAnF,EAAAkF,EAAAtU,EAAAC,OACA,GAAAkU,IAAAlV,EAAA0V,MAAAJ,EACAnF,EAAAkF,EAAArU,EAAAD,OACA,GAAAmU,GAAAlV,EAAA2V,OAAAT,GAAAlV,EAAA4V,SACA9O,EAAAsL,OAAAgD,GACA7H,EAAA0H,qBACA,IAAAC,GAAAlV,EAAA6V,KAGA,OAFA/O,EAAAsL,OAAAtL,EAAAsN,SAAA,eACA7G,EAAA0H,iBAEA,GAAAC,GAAAlV,EAAA8V,IAGA,OAFAhP,EAAAsL,OAAAtL,EAAAsN,SAAA,cACA7G,EAAA0H,gBAEA,MAhBA9E,EAAApP,OAFAoP,EAAAnP,EAoBAmP,IACArJ,EAAAsL,OAAAtL,EAAAyN,MAAAa,EAAAjF,IACA5C,EAAA0H,iBAzBA,CA2BA,EAEArF,aAAA,SAAAW,EAAAwF,GACArW,KAAAwH,aAAA8O,OAAAD,EAAA,EAAArW,KAAAwH,aAAA8O,OAAAzF,EAAA,GAAA,GACA,EAEAnI,oBAAA,WACA,IAAAtB,EAAApH,KAEAoH,EAAAI,aAAArC,OACAiC,EAAAZ,SAAAb,SAAA,2BACAnF,MAAA,SAAAwE,EAAA5B,GACA,IAAAiC,EAAA+B,EAAAI,aAAAxC,GAEA,iBAAAK,GACApF,EAAAmD,GAAA8H,KAAA,KAAA1J,GAAA0B,KAAAjB,EAAAoD,EAEA,IAEA+B,EAAAI,aAAArC,OAAAiC,EAAAZ,SAAA0E,KAAA,6BAAA/F,MAEA,EAEAgM,eAAA,SAAAnM,GACAhF,KAAAwH,aAAA8O,OAAAtR,EAAA,EACA,EAEAyN,QAAA,WACAzS,KAAAuI,aACA,EAEAgO,kBAAA,SAAAtP,GACA,IAAAuP,EAAA,EAIA,OAHAvP,EAAAtB,WAAAnF,MAAA,WACAgW,GAAA5V,EAAAX,EAAAD,MACA,IACAyW,KAAAC,MAAAF,EACA,EAEAG,mBAAA,SAAA1P,GACA,IAAA2P,EAAA,EAIA,OAHA3P,EAAAtB,WAAAnF,MAAA,WACAoW,GAAA7V,EAAAd,EAAAD,MACA,IACAyW,KAAAC,MAAAE,EACA,EAEArO,YAAA,WACA,MAAAnB,EAAApH,KACAkH,EAAAE,EAAAF,QACAuD,EAAAvD,EAAAqD,WAAAE,sBACAoM,EAAA3P,EAAAqD,WAAAG,cACAkL,EAAA,OAAA1O,EAAAwC,aAAA,UAAAxC,EAAAwC,YACAuF,EAAA,WAAA4H,EACAC,EAAA,YAAAD,EAEA,IAAAE,EACAC,EACAC,EACAC,EAEA,GAAA9P,EAAA+P,qBAAA,CAEA/P,EAAAU,QAAAlC,SAAA,yBAEAmR,EAAAnB,EAAAxO,EAAAU,QAAA,GAAAsP,YAAAhQ,EAAAU,QAAA,GAAAuP,aACAL,EAAApB,EAAAxO,EAAAZ,SAAA,GAAA8Q,YAAAlQ,EAAAZ,SAAA,GAAA+Q,aACA,MAAAC,EAAA5B,EAAAxO,EAAAmP,kBAAAnP,EAAAZ,UAAAY,EAAAZ,SAAA5F,aAAAwG,EAAAuP,mBAAAvP,EAAAZ,UAAAY,EAAAZ,SAAAzF,cACA0W,EAAAT,EAAAD,GAAAS,EAEA,GAAAC,IAAArQ,EAAA4E,uBAAAiD,EACA7H,EAAAZ,SAAAZ,SAAA,2BACAwB,EAAAU,QAAAlC,SAAA,iCAEAwB,EAAA4E,uBAAA,EACA5E,EAAAkL,4BACA,IAAAmF,IAAAX,GAAA1P,EAAA4E,uBAgDA5E,EAAA4E,uBAAAyL,GAAAX,EAOA1P,EAAA4E,uBAAA8K,EAGA1P,EAAAkL,uBAFAlL,EAAAsQ,4BAPAtQ,EAAA4E,uBAAA,EAEA5E,EAAAsQ,2BAEAtQ,EAAAgI,mBAAAhI,EAAAgI,kBAAApE,MAAAqE,SACAjI,EAAAkI,mBAAAlI,EAAAkI,kBAAAtE,MAAAqE,cAtDA,CACAjI,EAAAuQ,mBAAA,EACAvQ,EAAAO,OAAAxH,EAAAyH,QAAAC,MAAAT,EAAAH,SACA,MAAA2Q,EAAAzX,EAAAyH,QAAAmH,MAAA,aAAA,YACA8I,EAAA1X,EAAAyH,QAAAmH,MAAA,WAAA,UACAmG,EAAA/U,EAAAyH,QAAAsN,QACA4C,EAAA1Q,EAAAO,SAAAuN,EAAAC,OAAAD,EAAA6C,KAEAC,EAAApC,EAAA,kBAAA,iBAEAqC,EAAAvR,EAAA,OAHAkP,EAAA,iBAAA,gBAIAsC,EAAAxR,EAAA,OAAAsR,GAEA,OAAAvN,GACA,IAAA,QACArD,EAAAgH,WAAA+J,QAAAF,GACA7Q,EAAAgH,WAAAL,OAAAmK,GACA,MACA,IAAA,QACA9Q,EAAAgH,WAAA+J,QAAAD,GACA9Q,EAAAgH,WAAA+J,QAAAF,GACA,MACA,IAAA,MACA7Q,EAAAgH,WAAAL,OAAAkK,GACA7Q,EAAAgH,WAAAL,OAAAmK,GAIAjB,EAAA7P,EAAAgI,kBAAAhI,EAAAgH,WAAAzI,SAAA,oBACAuR,EAAA9P,EAAAkI,kBAAAlI,EAAAgH,WAAAzI,SAAA,oBAEAsR,EAAAnM,GAAA8M,EAAAzW,GAAA,WACAiG,EAAAuQ,mBAAA,EACAvQ,EAAAgR,mBAAAlR,EAAAqD,WAAAC,UAAAsN,EAAA,GAAA,GACA,IAEAZ,EAAApM,GAAA8M,EAAAzW,GAAA,WACAiG,EAAAuQ,mBAAA,EACAvQ,EAAAgR,mBAAAlR,EAAAqD,WAAAC,UAAAsN,GAAA,EAAA,GACA,IAEAb,EAAAlD,IAAAmD,GAAApM,GAAA+M,EAAA1W,GAAA,WACAiG,EAAAuQ,mBAAA,CACA,IAEAvQ,EAAA4E,uBAAA,EAEA5E,EAAAkL,sBACA,CAYA,CACA,EAEAoF,yBAAA,WACA,MAAAtQ,EAAApH,KACAiP,EAAA,WAAA7H,EAAAF,QAAAqD,WAAAG,cAEAtD,EAAAU,QAAArB,YAAA,yBAEAwI,IACA7H,EAAAU,QAAArB,YAAA,iCACAW,EAAAU,QAAArB,YAAA,+BACAW,EAAAU,QAAArB,YAAA,6BAEAW,EAAAZ,SAAAC,YAAA,2BAEA,EAEA0Q,mBAAA,WACA,IAAAjQ,EAAAlH,KAAAkH,QAKA,OAHAA,EAAAqD,aAAArD,EAAAqD,WAAAC,WACAtD,EAAAqD,WAAA,CAAAC,SA91CA,MAg2CAtD,EAAAqD,aAAAgE,MAAArH,EAAAqD,WAAAC,SACA,EAEAyB,kBAAA,SAAA7I,GACA,IAQAiV,EARAjR,EAAApH,KACAwG,EAAAY,EAAAZ,SACAoP,EAAA,OAAAxO,EAAAF,QAAAwC,aAAA,UAAAtC,EAAAF,QAAAwC,YACA4O,EAAA1C,EAAAzV,EAAA8X,WAAAzR,GAAAA,EAAA+R,YACAC,EAAA5C,EAAAhV,EAAAwC,GAAArC,EAAAqC,GACAqV,EAAA7C,EAAAxO,EAAAO,OAAAvE,EAAAsV,WAAAC,KAAAvV,EAAAsV,WAAAC,KAAAnS,EAAAb,WAAAiT,QAAAF,WAAAC,KAAAvV,EAAAsV,WAAAG,IACAC,EAAAlD,EAAApP,EAAA,GAAA4Q,YAAA5Q,EAAA,GAAA6Q,aACAnC,EAAA/U,EAAAyH,QAAAsN,QAGA9N,EAAAO,QAAAiO,IAAAV,EAAA6D,SAAA7D,EAAA8D,QAAA9D,EAAA+D,SAAA,MACAX,IAAA,GAGAlR,EAAAO,QAAAiO,EACA6C,EAAA,EACAJ,EAAAC,EAAAG,GAAAK,EAAAR,GACAG,EAAAD,EAAAM,IACAT,EAAAC,EAAAG,EAAAD,GAGAF,EAAAQ,EAAAL,EAAAD,EACAH,EAAAI,EAAAD,EAAAM,EACAR,EAAAG,IACAJ,EAAAI,GAIA,IAAAS,EAAAtD,EAAA,CAAAqC,WAAAI,GAAA,CAAAE,UAAAF,GAEA7R,EAAA2S,SAAAC,QAAAF,EAAA,OAAA,UAAA,WACA9R,EAAAkL,sBACA,GACA,EAEA8F,mBAAA,SAAAiB,GACA,MAAAjS,EAAApH,KACAwG,EAAAY,EAAAZ,SACAoP,EAAA,OAAAxO,EAAAF,QAAAwC,aAAA,UAAAtC,EAAAF,QAAAwC,YAEA,IAAA4P,EAAA1D,EAAAzV,EAAA8X,WAAAzR,GAAAA,EAAA+R,YACA,MAAArD,EAAA/U,EAAAyH,QAAAsN,QAEA9N,EAAAO,QAAAiO,IAAAV,EAAA6D,SAAA7D,EAAA8D,QAAA9D,EAAA+D,SAAA,MACAK,IAAA,GAGA,IAAAJ,EAAAtD,EAAA,CAAAqC,WAAAqB,EAAAD,GAAA,CAAAd,UAAAe,EAAAD,GAEA7S,EAAA2S,SAAAC,QAAAF,EAAA,OAAA,UAAA,WACA9R,EAAAuQ,oBAAA4B,OAAAC,GAAAxO,IACA5D,EAAAgR,mBAAAiB,GAEAjS,EAAAkL,sBAEA,GACA,EAEA7J,UAAA,WACA,IAAArB,EAAApH,KACAkH,EAAAE,EAAAF,QACAwR,EAAAxR,EAAAwC,YACAuF,EAAA/H,EAAAqD,YAAA,WAAArD,EAAAqD,WAAAG,cACA+O,EAAA,SAAAf,GAAA,UAAAA,EAAA,IAAA,IAEAtR,EAAAF,QAAAyD,WAIAvD,EAAAuD,SAAA,IAAAxK,EAAAE,GAAAqZ,SAAAtS,EAAAZ,SAAA,CACAX,OAAA,4BACA4T,OACAE,WAAA1K,EACA2K,kBAAA3K,EACA4K,UAAAzS,EAAAgH,WACA0L,KAAAC,GAAA,+CAAArB,iQAGAqB,EAAAtV,qIAIAuV,OAAA5S,EAAA6S,YAAAlI,KAAA3K,GACA8S,MAAArM,GAAAzG,EAAA6D,YAAA4C,EAAAzK,QAGA,EAEA6W,YAAA,SAAApM,GACA,IAAAzG,EAAApH,KACAma,EAAA/S,EAAAZ,SAAAb,WAAAkJ,GAAAhB,EAAAuM,UAEAvM,EAAAwM,SAAAxM,EAAAuM,SACAhT,EAAAuI,YAAA9B,EAAAzK,KAAA+W,GAEA/S,EAAA+I,aAAAtC,EAAAzK,KAAA+W,EAEA,EAEA9R,UAAA,WAIA,IAAAwL,EACA,OAJA7T,KACAkH,QAAA0C,MAIA,IAAA,QACAiK,EAAA,gBACA,MAEA,IAAA,SACAA,EAAA,gBACA,MAEA,IAAA,QACAA,EAAA,gBAdA7T,KAkBA8H,QAAAlC,SAAAiO,EACA,EAEAvL,aAAA,WACA,IAAAlB,EAAApH,KACA0J,EAAAtC,EAAAF,QAAAwC,YAEAtC,EAAAU,QAAAlC,SAAA,cAAA8D,GAEA,UAAAA,GACAtC,EAAAgH,WAAAkM,SAAAlT,EAAAU,SAGA,SAAA4B,GAAA,UAAAA,GACAtC,EAAAZ,SAAA7B,KAn+CA,mBAm+CA,YAGAyC,EAAA0F,QAAA,EACA,EAEAyF,aAAA,SAAA1E,GACA5N,EAAA4N,EAAAmE,eAAAuI,YAAAhY,EAAAsL,EAAAP,MAAApL,EACA,EAEAsN,gBAAA,SAAAvI,EAAAwI,IACAxI,EAAAjH,KAAAwG,SAAA0E,KAAAjE,IACAzG,MAAA,WACAP,EAAAD,MACAua,YAAAnY,GAAAqN,GACA9K,KAAA9B,GAAA4M,EACA,GACA,EAEA6C,qBAAA,WACA,IAAAlL,EAAApH,KACAwa,EAAApT,EAAAZ,SACAyR,EAAAxB,KAAAC,MAAAvW,EAAA8X,WAAAuC,IACAjC,EAAA9B,KAAAC,MAAA8D,EAAAjC,aACA1B,EAAAzP,EAAAF,QAAAqD,WAAAG,cACAkL,EAAA,OAAAxO,EAAAF,QAAAwC,aAAA,UAAAtC,EAAAF,QAAAwC,YAEA,MAAA+Q,GAAA7E,EAAAa,KAAAiE,IAAAzC,GAAAuC,EAAA,GAAAlD,YAAAkD,EAAA,GAAApD,cAAAX,KAAAiE,IAAAnC,GAAAiC,EAAA,GAAAjD,aAAAiD,EAAA,GAAAnD,iBAAA,EACAsD,EAAA,KAAA/E,EAAAqC,EAAAM,GAEA,WAAA1B,GACAzP,EAAAgI,kBAAAmL,YAAA,aAAAI,GACAvT,EAAAkI,kBAAAiL,YAAA,aAAAE,KAEArT,EAAAU,QAAAyS,YAAA,8BAAAI,GACAvT,EAAAU,QAAAyS,YAAA,4BAAAE,GAEA,EAEA1S,eAAA,WACA,IACArC,EAAAkV,EAAAC,EADAzT,EAAApH,KAEA4V,EAAA,aAAAjC,KAAAvM,EAAAF,QAAAwC,aAEAtC,EAAAU,QAAAlC,SAAA,cAEAwB,EAAAZ,WACAY,EAAAZ,SAAAY,EAAAU,QAAAnC,SAAA,MACAyB,EAAAZ,SAAAsU,KAAA,WACA1T,EAAAgH,WAAAhH,EAAAZ,SAAAT,UAGAqB,EAAAZ,SAAA,KACAY,EAAAZ,SAAAvG,EAAA,UAAA8a,UAAA3T,EAAAU,SACAV,EAAAZ,SAAAsU,KAAA,WACA1T,EAAAgH,WAAAhH,EAAAZ,SAAAT,UAGAqB,EAAAgH,WAAAxI,SAAA,4BACAwB,EAAAgH,WAAAxI,SAAAgQ,EAAA,WAAA,YACAxO,EAAAZ,SAAAZ,SAAA,6BAEAF,EAAA0B,EAAAZ,SAAA0E,KAAA,MAAAtF,SAAA,2BAEAT,SAEA0V,GADAD,EAAAlV,EAAAG,OAAA,IAAAxD,GAAA2C,UACA,EAAA4V,EAAA1a,EAEAkH,EAAAZ,SACAP,WACAJ,QAAA,WAAA,OAAA,GAAA7F,KAAAoG,WAAA3F,EAAAT,KAAAqG,UAAA,IACAgJ,UAGAjI,EAAAoH,gBAAApH,EAAAU,QAAAnC,SAAA,sCAEAyB,EAAAoH,gBACA5I,SAAA5D,GACA6M,GAAAgM,GACAjV,SAAAvD,GACAmK,IAAA,CAAAwO,QAAA,UAEAtV,EAAAP,SACAM,EAAAC,GACAkV,EAAAlV,EAAAG,OAAA,IAAAxD,GAAA2C,QAEAoC,EAAAZ,SAAA7B,KAAA,wBAAAe,EAAAmJ,GAAA+L,GAAAjW,KAAA,OACA4B,EAAAa,EAAAZ,UACAY,EAAAkH,wBAAA,GAEA,EAEAA,uBAAA,SAAA2M,GACA,IAAA7T,EAAApH,KACAyH,EAAAL,EAAAI,aACA6I,EAAAjJ,EAAAZ,SAAAb,SAAA,2BACA6I,EAAApH,EAAAU,QAAAnC,SAAA,sCACA0O,EAAAjN,EAAAiN,WAAAtC,KAAA3K,GAEAoH,EAAArJ,QAAAkL,EAAAlL,OAAAqJ,EAAArJ,OACAqJ,EAAAhO,MAAA,SAAA2N,GAEA,IAEA+M,EAFAC,EAAA9G,EAAApU,EAAAD,MAAAmO,GACA/K,EAAAiN,EAAAxK,OAAA,mBAAAsV,GAAA,GAAA,KAAA,IAGA/X,GAAA6X,IAEA7X,EAAAiN,EAAAlC,IAGA/K,IAEAA,EAAAgY,aAAAxY,EAAAuY,GACAD,EAAA9X,EAAAsL,GAAA2F,EAAApU,EAAAmD,GAAA+K,GAAA,GACAnO,KAAAob,aAAArY,EAAAmY,IAIAlb,KAAAob,aAAA,KAAAD,EACA,IAEA9K,EAAA7P,MAAA,SAAA2N,GACA,IAEA+M,EAFAG,EAAA7M,EAAAK,GAAAV,GACAgN,EAAA9G,EAAAgH,EAAAlN,GAIAnO,KAAAob,aAAAxY,EAAAuY,GAEAD,EAAAlb,KAAA0O,GAAA2F,EAAApU,EAAAD,MAAAmO,GAAA,IAEAkN,EAAAlW,QAAAsC,EAAA0G,GAEAlO,EAAA,eAAA+B,EAAA,OAAAsY,SAAAlT,EAAAU,SAAAnD,KAAA,KAAAwW,GAGAE,EAAA1W,KAAA,KAAAwW,GAGAE,EAAA1W,KAAA,OAAA,YACA0W,EAAA1W,KAAA,WAAA,KACA0W,EAAA1W,KAAA5B,EAAAmY,GACAG,EAAAxV,OAAA,SAAAxD,EAAA,KAAAsC,KAAAhC,GAAA,EACA,IAGAyE,EAAAoH,gBAAApH,EAAAuE,iBAAAvE,EAAAU,QAAAnC,SAAA,sCAEAyB,EAAAkF,WAAAvL,EAAAqG,EAAAZ,UACA+F,SAAAnF,EAAAU,QAAA0E,IAAA,oBAAA,IACAD,SAAAnF,EAAAU,QAAA0E,IAAA,uBAAA,IAEArM,EAAAsO,qBAAAtO,EAAAmb,OAAAjb,GAAAkb,WACApb,EAAAqb,cAAApU,EAAAoH,iBACApH,EAAAoH,gBAAApH,EAAAoH,gBAAA7I,SAAA,wBAEA,EAEA+B,SAAA,WACA,IAAAN,EAAApH,KAEAoH,EAAAH,QAAAjB,GAAA,MACAoB,EAAAU,QAAAV,EAAAH,QAAAX,QAAA,WAAAP,SAEAqB,EAAAU,QAAAV,EAAAH,OAEA,IAIAvG,EAAAqG,EAAA,CACAwM,WAAA,SAAArM,GACAA,EAAAxG,EAAA,CAAA+a,SAAA,CAAA,EAAAzX,MAAA,CAAA,GAAAkD,GACA,IAAA9C,EAAApB,EAAAoB,MACAhB,EAAA8D,EAAA9D,KACAsY,EAAAhb,EAAAwG,EAAA,CACAzD,MAAAL,EAAAc,SAAAlB,EAAAS,MAAAW,EACAV,OAAAN,EAAAe,eAAAnB,EAAAU,OAAAU,EACAf,YAAAL,EAAAK,YACAsY,YAAA3Y,EAAAqB,4BACAS,GAEA,OAAA1B,EAAAvC,SACAmC,EAAAc,YAAA4X,EAAAvb,EAAAU,SAAAuC,EAAAvC,SAAAV,CAAAiD,EAAAsN,QAGA1N,EAAAI,KAAAsY,EACA,EAEAjI,cAAA,SAAAvM,GACA,OAAAlE,EAAAC,QAAAvC,EAAAwG,EAAApC,GACA,IAGA3E,EAAAE,GAAAub,OAAA7U,EAEA,CAvtDA,CAutDA3G,OAAAD,MAAAoZ,QACA,IAAAsC,EAAA1b,MAEAZ,EAAAuc,SAxuDA,CACApN,GAAA,WACA1F,KAAA,WACA+S,SAAA,MACAC,YAAA,iFACAC,QAAA,CAAA,OAAA,QAAA,cAAA,YACAC,SAAA,CAAA,CACAxN,GAAA,cACA1F,KAAA,YACAgT,YAAA,wBACAC,QAAA,CAAA,SA+tDA1c,EAAA,QAAAsc,EAEAM,OAAAC,eAAA7c,EAAA,aAAA,CAAA4H,OAAA,GAEA","file":"kendo.tabstrip.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.data.js'), require('kendo.icons.js'), require('kendo.html.button.js'), require('kendo.sortable.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.data', 'kendo.icons', 'kendo.html.button', 'kendo.sortable'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendotabstrip = global.kendotabstrip || {}, global.kendotabstrip.js = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"tabstrip\",\n        name: \"TabStrip\",\n        category: \"web\",\n        description: \"The TabStrip widget displays a collection of tabs with associated tab content.\",\n        depends: [ \"data\", \"icons\", \"html.button\", \"sortable\" ],\n        features: [ {\n            id: \"tabstrip-fx\",\n            name: \"Animation\",\n            description: \"Support for animation\",\n            depends: [ \"fx\" ]\n        } ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            keys = kendo.keys,\n            map = $.map,\n            each = $.each,\n            trim = kendo.trim,\n            extend = $.extend,\n            isFunction = kendo.isFunction,\n            template = kendo.template,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            Widget = ui.Widget,\n            excludedNodesRegExp = /^(a|div)$/i,\n            NS = \".kendoTabStrip\",\n            IMG = \"img\",\n            HREF = \"href\",\n            PREV = \"prev\",\n            NEXT = \"next\",\n            SHOW = \"show\",\n            LINK = \"k-link\",\n            LINK_TEXT = \"k-link-text\",\n            LAST = \"k-last\",\n            CLICK = \"click\",\n            ERROR = \"error\",\n            EMPTY = \":empty\",\n            IMAGE = \"k-image\",\n            FIRST = \"k-first\",\n            SELECT = \"select\",\n            ACTIVATE = \"activate\",\n            CONTENT = \"k-tabstrip-content\",\n            CONTENTURL = \"contentUrl\",\n            MOUSEENTER = \"mouseenter\",\n            MOUSELEAVE = \"mouseleave\",\n            CONTENTLOAD = \"contentLoad\",\n            DISABLEDSTATE = \"k-disabled\",\n            ACTIVESTATE = \"k-active\",\n            FOCUSEDSTATE = \"k-focus\",\n            HOVERSTATE = \"k-hover\",\n            NAVIGATABLEITEMS = \".k-item.k-tabstrip-item:not(.\" + DISABLEDSTATE + \")\",\n            KEYBOARDNAVIGATABLEITEMS = \".k-item.k-tabstrip-item\",\n            HOVERABLEITEMS = \".k-tabstrip-items > \" + NAVIGATABLEITEMS + \":not(.\" + ACTIVESTATE + \")\",\n            DEFAULTDISTANCE = 200,\n            ARIA_HIDDEN = \"aria-hidden\",\n            ARIA_CONTROLS = \"aria-controls\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_SELECTED = \"aria-selected\",\n            ARIA_ORIENTATION = \"aria-orientation\",\n            ARIA_LABELLEDBY = \"aria-labelledby\",\n\n            templates = {\n                content: (data) =>\n                    `<div class='k-tabstrip-content' ${data.contentAttributes(data)} tabindex='0'>${data.content(data.item)}</div>`,\n                textWrapper: ({ tag, item , contentUrl, textAttributes, image, sprite, text }) =>\n                    `<${tag(item)} class='${LINK}' ${contentUrl(item)} ${textAttributes(item)}>` + `${image(item)}${sprite(item)}` +\n                        (item.icon && item.iconPosition === 'before' ? kendo.ui.icon({ icon: item.icon }) : '') +\n                            `<span class='${LINK_TEXT}'>${text(item)}</span>` +\n                        (item.icon && item.iconPosition === 'after' ? kendo.ui.icon({ icon: item.icon }) : '') +\n                    `</${tag(item)}>`,\n                item: (data) => templates.itemWrapper(data,`${data.textWrapper(data)}`),\n                itemWrapper: (data, item) =>\n                    `<li class='${data.wrapperCssClass(data.group, data.item)}' role='tab' ${data.item.active ? \"aria-selected='true'\" : ''}>` +\n                        item +\n                    \"</li>\",\n                image: ({ imageUrl }) => `<img class='k-image' alt='' src='${imageUrl}' />`,\n                sprite: ({ spriteCssClass }) => `<span class='k-sprite ${spriteCssClass}'></span>`,\n                empty: () => \"\",\n                itemActionsWrapperTemplate: () => `<span class=\"k-item-actions\"></span>`,\n                itemActionTemplate: ({ icon, iconClass, attributes }) => kendo.html.renderButton($(\"<button unselectable='on'></button>\").attr(attributes || {}), { icon, iconClass, themeColor: \"base\", fillMode: \"flat\" }),\n            },\n\n            rendering = {\n                wrapperCssClass: function(group, item) {\n                    var result = [\"k-item\", \"k-tabstrip-item\"],\n                        index = item.index;\n\n                    if (item.enabled === false) {\n                        result.push(\"k-disabled\");\n                    }\n\n                    if (index === 0) {\n                        result.push(\"k-first\");\n                    }\n\n                    if (index == group.length - 1) {\n                        result.push(\"k-last\");\n                    }\n\n                    return result.join(\" \");\n                },\n                textAttributes: function(item) {\n                    return item.url ? \" href='\" + kendo.sanitizeLink(item.url) + \"'\" : \"\";\n                },\n                text: function(item) {\n                    return item.encoded === false ? item.text : kendo.htmlEncode(item.text);\n                },\n                tag: function(item) {\n                    return item.url ? \"a\" : \"span\";\n                },\n                contentAttributes: function(content) {\n                    return content.active !== true ? ` ${kendo.attr(\"style-display\")}=\"none\" aria-hidden='true'` : \"\";\n                },\n                content: function(item) {\n                    return item.content ? item.content : item.contentUrl ? \"\" : \"&nbsp;\";\n                },\n                contentUrl: function(item) {\n                    return item.contentUrl ? kendo.attr(\"content-url\") + '=\"' + item.contentUrl + '\"' : \"\";\n                }\n            };\n\n        function updateTabClasses(tabs) {\n            tabs.children(IMG)\n                .addClass(IMAGE);\n\n            tabs.children(\"a\")\n                .addClass(LINK)\n                .children(IMG)\n                .addClass(IMAGE);\n\n            tabs.filter(\"li[disabled]\")\n                .addClass(DISABLEDSTATE)\n                .attr(ARIA_DISABLED, \"true\")\n                .prop(\"disabled\", false);\n\n            tabs.filter(\":not([class*=k-state])\")\n                .children(\"a\")\n                .filter(\":focus\")\n                .parent()\n                .addClass(ACTIVESTATE);\n\n            tabs.attr(\"role\", \"tab\");\n\n            tabs.each(function() {\n                var item = $(this);\n                item.attr(ARIA_SELECTED, item.is(\".\" + ACTIVESTATE));\n\n                if (!item.children(\".\" + LINK).length) {\n                    item\n                        .contents() // exclude groups, real links, templates and empty text nodes\n                        .filter(function() { return (!this.nodeName.match(excludedNodesRegExp) && !(this.nodeType == 3 && !trim(this.nodeValue))); })\n                        .wrapAll(\"<span UNSELECTABLE='on' class='\" + LINK + \"'/>\")\n                        .wrapAll(\"<span UNSELECTABLE='on' class='\" + LINK_TEXT + \"'/>\");\n                }\n            });\n\n        }\n\n        function updateFirstLast(tabGroup) {\n            const tabs = tabGroup.children(\".k-item.k-tabstrip-item\");\n\n            tabs.filter(\".k-first:not(:first-child)\").removeClass(FIRST);\n            tabs.filter(\".k-last:not(:last-child)\").removeClass(LAST);\n            tabs.filter(\":first-child\").addClass(FIRST);\n            if (tabs.length > 1) {\n                tabs.filter(\":last-child\").addClass(LAST);\n            }\n        }\n\n        function scrollButtonHtml(buttonClass, iconClass) {\n            return `<span aria-hidden='true' class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-tabstrip-${buttonClass}' unselectable='on'>${kendo.ui.icon({ icon: iconClass, iconClass: \"k-button-icon\" })}</span>`;\n        }\n\n        function ajaxXhr() {\n            return $.ajaxSettings.xhr();\n        }\n\n        var TabStrip = Widget.extend({\n            init: function(element, options) {\n                var that = this, value;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._animations(that.options);\n\n                options = that.options;\n\n                that._contentUrls = options.contentUrls || [];\n\n                that._wrapper();\n                that._isRtl = kendo.support.isRtl(that.wrapper);\n\n                that._updateClasses();\n                that._dataSource();\n\n                that._tabindex(that.tabGroup);\n                that.tabGroup.attr(\"role\", \"tablist\");\n\n                if (options.dataSource) {\n                    that.dataSource.fetch();\n                }\n\n                that._removeAdditionalWrapperClasses();\n\n                that._tabSizes();\n                that._tabPosition();\n                that._scrollable();\n                that._tabAlignment();\n                that._sortable();\n                that._processContentUrls();\n                that._attachEvents();\n\n                if (that.options.value) {\n                    value = that.options.value;\n                }\n\n                that._initialActivate();\n                that.value(value);\n                kendo.notify(that);\n\n                if (that._showWatermarkOverlay) {\n                    that._showWatermarkOverlay(that.element[0]);\n                }\n            },\n\n            events: [\n                SELECT,\n                ACTIVATE,\n                SHOW,\n                ERROR,\n                CONTENTLOAD,\n                \"change\",\n                \"dataBinding\",\n                \"dataBound\"\n            ],\n\n            options: {\n                name: \"TabStrip\",\n                dataEncodedField: \"\",\n                dataTextField: \"\",\n                dataContentField: \"\",\n                dataImageUrlField: \"\",\n                dataUrlField: \"\",\n                dataSpriteCssClass: \"\",\n                dataContentUrlField: \"\",\n                dataIconField: \"icon\",\n                dataIconPositionField: \"iconPosition\",\n                tabPosition: \"top\",\n                tabAlignment: \"start\",\n                size: \"medium\",\n                tabTemplate: null,\n                animation: {\n                    open: {\n                        effects: \"expand:vertical fadeIn\",\n                        duration: 200\n                    },\n                    close: { // if close animation effects are defined, they will be used instead of open.reverse\n                        duration: 200\n                    }\n                },\n                closable: false,\n                collapsible: false,\n                navigatable: true,\n                contentUrls: false,\n                applyMinHeight: true,\n                scrollable: {\n                    distance: DEFAULTDISTANCE,\n                    scrollButtonsPosition: \"split\",\n                    scrollButtons: \"auto\",\n                },\n                sortable: false\n            },\n\n            setDataSource: function(dataSource) {\n                var that = this;\n\n                that.options.dataSource = dataSource;\n                that._dataSource();\n                that.dataSource.fetch();\n            },\n\n            setOptions: function(options) {\n                var that = this,\n                    animation = that.options.animation;\n\n                that._animations(options);\n\n                if (options.contentUrls) {\n                    that._contentUrls = options.contentUrls;\n                }\n\n                options.animation = extend(true, animation, options.animation);\n\n                if (options.navigatable) {\n                    that.tabGroup.on(\"keydown\" + NS, that._keyDownProxy);\n                } else {\n                    that.tabGroup.off(\"keydown\" + NS, that._keyDownProxy);\n                }\n\n                Widget.fn.setOptions.call(that, options);\n            },\n\n            activateTab: function(item) {\n                if (this.tabGroup.children(\"[data-animating]\").length) { return; }\n\n                item = this.tabGroup.find(item);\n\n                var that = this,\n                    animationSettings = that.options.animation,\n                    animation = animationSettings.open,\n                    close = extend({}, animationSettings.close),\n                    hasCloseAnimation = close && \"effects\" in close,\n                    neighbours = item.parent().children(),\n                    oldTab = neighbours.filter(\".\" + ACTIVESTATE),\n                    itemIndex = neighbours.index(item),\n                    isAnimationEnabled = animation && \"duration\" in animation && \"effects\" in animation;\n\n                close = extend( hasCloseAnimation ? close : extend({ reverse: true }, animation), { hide: true });\n                // deactivate previously active tab\n                if (kendo.size(animation.effects)) {\n                    oldTab.kendoRemoveClass(ACTIVESTATE, { duration: close.duration });\n                    item.kendoRemoveClass(HOVERSTATE, { duration: close.duration });\n                } else {\n                    oldTab.removeClass(ACTIVESTATE);\n                    item.removeClass(HOVERSTATE);\n                }\n\n                // handle content elements\n                var contentAnimators = that.contentAnimators;\n\n                if (that.inRequest) {\n                    that.xhr.abort();\n                    that.inRequest = false;\n                }\n\n                if (contentAnimators.length === 0) {\n                    that.tabGroup.find(\".\" + ACTIVESTATE);\n\n                    item.addClass(ACTIVESTATE);\n                    that._current(item, true);\n\n                    that.trigger(\"change\");\n\n                    if (that._scrollableModeActive) {\n                        that._scrollTabsToItem(item);\n                    }\n\n                    return false;\n                }\n\n                var visibleContents = contentAnimators.filter(\".\" + ACTIVESTATE),\n                    contentHolder = that.contentHolder(itemIndex),\n                    contentElement = contentHolder.closest(\".k-tabstrip-content\");\n\n                that.tabsHeight = outerHeight(that.tabGroup) +\n                                  parseInt(that.wrapper.css(\"border-top-width\"), 10) +\n                                  parseInt(that.wrapper.css(\"border-bottom-width\"), 10);\n\n                if (contentHolder.length === 0) {\n                    visibleContents\n                        .removeClass( ACTIVESTATE )\n                        .attr(ARIA_HIDDEN, true)\n                        .kendoStop(true, true)\n                        .kendoAnimate( close );\n                    return false;\n                }\n\n                item.attr(\"data-animating\", true);\n\n                var isAjaxContent = (item.children(\".\" + LINK).data(CONTENTURL) || that._contentUrls[itemIndex] || false) && contentHolder.is(EMPTY),\n                    showContentElement = function() {\n                        oldTab.attr(ARIA_SELECTED, false);\n                        item.attr(ARIA_SELECTED, true);\n                        that.tabGroup.attr(\"aria-activedescendant\", item.attr(\"id\"));\n\n                        that._current(item, true);\n\n                        contentElement\n                            .addClass(ACTIVESTATE)\n                            .removeAttr(ARIA_HIDDEN)\n                            .kendoStop(true, true)\n                            .kendoAnimate( extend({ init: function() {\n                                that.trigger(SHOW, { item: item[0], contentElement: contentHolder[0] });\n                                kendo.resize(contentHolder);\n                            } }, animation, {\n                                complete: function() {\n                                    // See https://github.com/telerik/kendo-ui-core/issues/6660\n                                    that.element.css('min-height', oldMinHeight);\n                                    item.removeAttr(\"data-animating\");\n\n                                    that.trigger(ACTIVATE, { item: item[0], contentElement: contentHolder[0] });\n                                    kendo.resize(contentHolder);\n                                }\n                            } ) );\n                    },\n                    showContent = function() {\n                        if (!isAjaxContent) {\n                            showContentElement();\n                            that.trigger(\"change\");\n                        } else {\n                            item.removeAttr(\"data-animating\");\n                            that.ajaxRequest(item, contentHolder, function() {\n                                item.attr(\"data-animating\", true);\n                                showContentElement();\n                                that.trigger(\"change\");\n                            });\n                        }\n\n                        if (that._scrollableModeActive) {\n                            that._scrollTabsToItem(item);\n                        }\n\n                    };\n\n                // See https://github.com/telerik/kendo-ui-core/issues/6660\n                var oldMinHeight = that.element.css('min-height');\n\n                if (that.options.applyMinHeight) {\n                    that.element.css('min-height', that.element.outerHeight());\n                }\n\n                visibleContents.removeClass(ACTIVESTATE);\n                that.tabGroup.find(\".\" + ACTIVESTATE);\n\n                if (kendo.size(animation.effects)) {\n                    item.kendoAddClass(ACTIVESTATE, { duration: animation.duration });\n                } else {\n                    item.addClass(ACTIVESTATE);\n                }\n\n                visibleContents.attr(ARIA_HIDDEN, true);\n\n                if (visibleContents.length) {\n                    visibleContents\n                        .kendoStop(true, true)\n                        .kendoAnimate(extend( {\n                            complete: showContent\n                       }, close ));\n                } else {\n                    showContent();\n                }\n\n                return true;\n            },\n\n            ajaxRequest: function(element, content, complete, url) {\n                element = this.tabGroup.find(element);\n\n                var that = this,\n                    link = element.find(\".\" + LINK),\n                    data = {};\n\n                url = url || link.data(CONTENTURL) || that._contentUrls[element.index()] || link.attr(HREF);\n                that.inRequest = true;\n\n                var ajaxOptions = {\n                    type: \"GET\",\n                    cache: false,\n                    url: url,\n                    dataType: \"html\",\n                    data: data,\n                    xhr: ajaxXhr,\n\n                    error: function(xhr, status) {\n                        if (that.trigger(\"error\", { xhr: xhr, status: status })) {\n                            this.complete();\n                        }\n                    },\n\n                    complete: function(xhr) {\n                        that.inRequest = false;\n                    },\n\n                    success: function(data) {\n                        try {\n                            kendo.destroy(content);\n                            content.html(data);\n                        } catch (e) {\n                            this.error(this.xhr, \"error\");\n                        }\n\n                        if (complete) {\n                            complete.call(that, content);\n                        }\n\n                        that.trigger(CONTENTLOAD, { item: element[0], contentElement: content[0] });\n                    }\n                };\n\n                if (typeof url === \"object\") {\n                    ajaxOptions = $.extend(true, {}, ajaxOptions, url);\n\n                    if (isFunction(ajaxOptions.url)) {\n                        ajaxOptions.url = ajaxOptions.url();\n                    }\n\n                    if (isFunction(ajaxOptions.data)) {\n                        ajaxOptions.data = ajaxOptions.data();\n                    }\n                }\n\n                that.xhr = $.ajax(ajaxOptions);\n            },\n\n            append: function(tab) {\n                var that = this,\n                    inserted = that._create(tab);\n\n                each(inserted.tabs, function(idx) {\n                    var contents = inserted.contents[idx];\n                    that.tabGroup.append(this);\n                    if (that.options.tabPosition == \"bottom\") {\n                        that.tabWrapper.before(contents);\n                    } else {\n                        that.wrapper.append(contents);\n                    }\n                });\n\n                updateFirstLast(that.tabGroup);\n                that._updateContentElements();\n                that.resize(true);\n\n                return that;\n            },\n\n            contentElement: function(itemIndex) {\n                if (isNaN(itemIndex - 0)) {\n                    return undefined$1;\n                }\n\n                var contentElements = this.contentElements && this.contentElements[0] && !kendo.kineticScrollNeeded ? this.contentElements : this.contentAnimators;\n                var id = $(this.tabGroup.children()[itemIndex]).attr(ARIA_CONTROLS);\n\n                if (contentElements) {\n                    for (var i = 0, len = contentElements.length; i < len; i++) {\n                        if (contentElements.eq(i).closest(\".k-tabstrip-content\")[0].id == id) {\n                            return contentElements[i];\n                        }\n                    }\n                }\n\n                return undefined$1;\n            },\n\n            contentHolder: function(itemIndex) {\n                var contentElement = $(this.contentElement(itemIndex)),\n                    scrollContainer = contentElement.children(\".km-scroll-container\");\n\n                return kendo.support.touch && scrollContainer[0] ? scrollContainer : contentElement;\n            },\n\n            deactivateTab: function(item) {\n                var that = this,\n                    animationSettings = that.options.animation,\n                    animation = animationSettings.open,\n                    close = extend({}, animationSettings.close),\n                    hasCloseAnimation = close && \"effects\" in close;\n                item = that.tabGroup.find(item);\n\n                close = extend( hasCloseAnimation ? close : extend({ reverse: true }, animation), { hide: true });\n\n                if (kendo.size(animation.effects)) {\n                    item.kendoRemoveClass(ACTIVESTATE, { duration: animation.duration });\n                } else {\n                    item.removeClass(ACTIVESTATE);\n                }\n\n                item.attr(ARIA_SELECTED, false);\n                that.tabGroup.removeAttr(\"aria-activedescendant\");\n\n                that.contentAnimators\n                        .filter(\".\" + ACTIVESTATE)\n                        .kendoStop(true, true)\n                        .kendoAnimate( close )\n                        .removeClass(ACTIVESTATE)\n                        .attr(ARIA_HIDDEN, true);\n            },\n\n            _removeAdditionalWrapperClasses: function() {\n                const that = this;\n\n                that.wrapper.removeClass(\"k-tabstrip-sm k-tabstrip-md k-tabstrip-lg\");\n                that.tabGroup.removeClass(\"k-tabstrip-items-start k-tabstrip-items-center k-tabstrip-items-end k-tabstrip-items-justify k-tabstrip-items-stretched\");\n            },\n\n            destroy: function() {\n                var that = this;\n                const isHidden = that.options.scrollable && that.options.scrollable.scrollButtons === \"hidden\";\n                Widget.fn.destroy.call(that);\n\n                if (that._refreshHandler) {\n                    that.dataSource.unbind(\"change\", that._refreshHandler);\n                }\n\n                if (that.options.scrollable && isHidden) {\n                    that.tabGroup.unbind(\"scroll\" + NS);\n                }\n\n                that._removeAdditionalWrapperClasses();\n\n                that.wrapper.off(NS);\n                that.tabGroup.off(NS);\n\n                if (that._scrollableModeActive && !isHidden) {\n                    that._scrollPrevButton.off().remove();\n                    that._scrollNextButton.off().remove();\n                }\n\n                kendo.destroy(that.wrapper);\n            },\n\n            disable: function(element) {\n                this._toggleDisabled(element, false);\n\n                return this;\n            },\n\n            enable: function(element, state) {\n                this._toggleDisabled(element, state !== false);\n\n                return this;\n            },\n\n            insertAfter: function(tab, referenceTab) {\n                if ($(tab).is($(referenceTab))) {\n                    referenceTab = this.tabGroup.find(referenceTab).prev();\n                } else {\n                    referenceTab = this.tabGroup.find(referenceTab);\n                }\n\n                var that = this,\n                    inserted = that._create(tab),\n                    referenceContent = that.element.find(\"[id='\" + referenceTab.attr(ARIA_CONTROLS) + \"']\");\n\n                each(inserted.tabs, function(idx) {\n                    var contents = inserted.contents[idx];\n                    var fromIndex = inserted.newTabsCreated ? that._contentUrls.length - (inserted.tabs.length - idx) : $(contents).index() - 1;\n\n                    referenceTab.after(this);\n                    referenceContent.after(contents);\n\n                    that._moveUrlItem(fromIndex, $(this).index());\n                });\n\n                updateFirstLast(that.tabGroup);\n                that._updateContentElements(inserted.newTabsCreated);\n                that.resize(true);\n\n                return that;\n            },\n\n            insertBefore: function(tab, referenceTab) {\n                if ($(tab).is($(referenceTab))) {\n                    referenceTab = this.tabGroup.find(referenceTab).next();\n                } else {\n                    referenceTab = this.tabGroup.find(referenceTab);\n                }\n\n                var that = this,\n                    inserted = that._create(tab),\n                    referenceContent = that.element.find(\"[id='\" + referenceTab.attr(ARIA_CONTROLS) + \"']\");\n\n                each(inserted.tabs, function(idx) {\n                    var contents = inserted.contents[idx];\n                    var fromIndex = inserted.newTabsCreated ? that._contentUrls.length - (inserted.tabs.length - idx) : $(contents).index() - 1;\n\n                    referenceTab.before(this);\n                    referenceContent.before(contents);\n\n                    that._moveUrlItem(fromIndex, $(this).index());\n                });\n\n                updateFirstLast(that.tabGroup);\n                that._updateContentElements(inserted.newTabsCreated);\n                that.resize(true);\n\n                return that;\n            },\n\n            items: function() {\n                return this.tabGroup[0].children;\n            },\n\n            refresh: function(e) {\n                var that = this,\n                    options = that.options,\n                    encoded = kendo.getter(options.dataEncodedField),\n                    text = kendo.getter(options.dataTextField),\n                    content = kendo.getter(options.dataContentField),\n                    contentUrl = kendo.getter(options.dataContentUrlField),\n                    image = kendo.getter(options.dataImageUrlField),\n                    url = kendo.getter(options.dataUrlField),\n                    sprite = kendo.getter(options.dataSpriteCssClass),\n                    icon = kendo.getter(options.dataIconField),\n                    iconPosition = kendo.getter(options.dataIconPositionField),\n                    idx,\n                    tabs = [],\n                    tab,\n                    action,\n                    view = that.dataSource.view(),\n                    length;\n\n\n                e = e || {};\n                action = e.action;\n\n                if (action) {\n                   view = e.items;\n                }\n\n                for (idx = 0, length = view.length; idx < length; idx ++) {\n                    tab = {\n                        text: text(view[idx])\n                    };\n\n                    if (options.tabTemplate) {\n                        tab.model = view[idx];\n                        tab.template = options.tabTemplate;\n                    }\n\n                    if (options.dataEncodedField) {\n                        tab.encoded = encoded(view[idx]);\n                    }\n\n                    if (options.dataContentField) {\n                        tab.content = content(view[idx]);\n                    }\n\n                    if (options.dataContentUrlField) {\n                        tab.contentUrl = contentUrl(view[idx]);\n                    }\n\n                    if (options.dataUrlField) {\n                        tab.url = url(view[idx]);\n                    }\n\n                    if (options.dataImageUrlField) {\n                        tab.imageUrl = image(view[idx]);\n                    }\n\n                    if (options.dataSpriteCssClass) {\n                        tab.spriteCssClass = sprite(view[idx]);\n                    }\n\n                    if (view[idx].actions) {\n                        const actions = typeof view[idx].actions === 'object' ? Array.from(view[idx].actions) : view[idx].actions;\n                        tab.actions = actions;\n                    }\n\n                    if (icon(view[idx])) {\n                        tab.icon = icon(view[idx]);\n                        tab.iconPosition = iconPosition(view[idx]) ?? 'before';\n                    }\n\n                    tab.enabled = view[idx].enabled;\n                    tab.closable = view[idx].closable ?? options.closable;\n\n                    tabs[idx] = tab;\n                }\n\n                if (e.action == \"add\") {\n                    if (e.index < that.tabGroup.children().length) {\n                        that.insertBefore(tabs, that.tabGroup.children().eq(e.index));\n                    } else {\n                        that.append(tabs);\n                    }\n                } else if (e.action == \"remove\") {\n                    for (idx = 0; idx < view.length; idx++) {\n                       that.remove(e.index);\n                    }\n                } else if (e.action == \"itemchange\") {\n                    idx = that.dataSource.view().indexOf(view[0]);\n                    if (e.field === options.dataTextField) {\n                        that.tabGroup.children().eq(idx).find(\".k-link\").text(view[0].get(e.field));\n                    }\n\n                    if (e.field === options.dataUrlField) {\n                        that._contentUrls[idx] = view[0].get(e.field);\n                    }\n                } else {\n                    that.trigger(\"dataBinding\");\n                    that.remove(\"li\");\n                    that._contentUrls = [];\n                    that.append(tabs);\n                    that.trigger(\"dataBound\");\n                }\n            },\n\n            reload: function(element) {\n                element = this.tabGroup.find(element);\n                var that = this;\n                var contentUrls = that._contentUrls;\n\n                element.each(function() {\n                    var item = $(this),\n                        contentUrl = item.find(\".\" + LINK).data(CONTENTURL) || contentUrls[item.index()],\n                        content = that.contentHolder(item.index());\n\n                    if (contentUrl) {\n                        that.ajaxRequest(item, content, null, contentUrl);\n                    }\n                });\n\n                return that;\n            },\n\n            remove: function(elements) {\n                var that = this;\n                var type = typeof elements;\n                var contents;\n\n                if (type === \"string\") {\n                    elements = that.tabGroup.find(elements);\n                } else if (type === \"number\") {\n                    elements = that.tabGroup.children().eq(elements);\n                }\n\n                contents = elements.map(function() {\n                    var idx = $(this).index();\n                    var content = that.contentElement(idx);\n\n                    kendo.destroy(content);\n                    that._removeUrlItem(idx);\n\n                    return content;\n                });\n\n                elements.remove();\n                contents.empty();\n                contents.remove();\n\n                that._updateContentElements();\n                that.resize(true);\n\n                return that;\n            },\n\n            select: function(element) {\n                var that = this;\n\n                if (arguments.length === 0) {\n                    return that.tabGroup.children(\"li.\" + ACTIVESTATE);\n                }\n\n                if (!isNaN(element)) {\n                    element = that.tabGroup.children().get(element);\n                }\n\n                element = that.tabGroup.find(element);\n                $(element).each(function(index, item) {\n                    item = $(item);\n                    if (!item.hasClass(ACTIVESTATE) && !that.trigger(SELECT, { item: item[0], contentElement: that.contentHolder(item.index())[0] })) {\n                        that.activateTab(item);\n                        that.tabGroup.attr(\"aria-activedescendant\", item.attr(\"id\"));\n                    }\n                });\n\n                return that;\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value !== undefined$1) {\n                    if (value != that.value()) {\n                       that.tabGroup.children().each(function() {\n                            if (kendo.trim($(this).text()) == value) {\n                                that.select(this);\n                            }\n                       });\n                    }\n                } else {\n                    return that.select().text();\n                }\n            },\n\n            _initTabActions: function(tab, tabOptions) {\n                const that = this;\n                const tabElement = $(tab);\n                let actions = [];\n\n                let closeButtonAttributes = { icon: \"x\", attributes: { \"ref-close-button\": true }, action: that._handleClose };\n\n                if (tabOptions.actions) {\n                    actions = Array.from(tabOptions.actions);\n                }\n\n                if (tabOptions.closable) {\n                    actions.push(closeButtonAttributes);\n                }\n\n                if (actions?.length) {\n                    const actionsWrapperTemplate = $(templates.itemActionsWrapperTemplate());\n\n                    actions.forEach(action => {\n                        const actionTemplate = $(templates.itemActionTemplate(action));\n                        actionsWrapperTemplate.append(actionTemplate);\n                        if (isFunction(action?.action)) {\n                            actionTemplate.bind(CLICK, action.action.bind(that));\n                        }\n                    });\n\n                    tabElement.append(actionsWrapperTemplate);\n                }\n\n                return tabElement[0];\n            },\n\n            _handleClose: function(e) {\n                const that = this;\n                const target = $(e.currentTarget);\n\n                const tab = target.closest('.k-item');\n\n                if (tab.hasClass(ACTIVESTATE)) {\n\n                    if (tab.prev().length > 0) {\n                        that.activateTab(tab.prev());\n                    } else {\n                        that.activateTab(tab.next());\n                    }\n                }\n\n                that.remove(tab);\n            },\n\n            _tabAlignment: function() {\n                const that = this;\n\n                let tabAlignment = that.options.tabAlignment;\n\n                if (that._scrollableModeActive) {\n                    tabAlignment = 'start';\n                }\n\n                that.tabGroup.addClass(\"k-tabstrip-items-\" + tabAlignment);\n\n            },\n\n            _active: function() {\n                var that = this;\n                setTimeout(function() {\n                    var item = that.tabGroup.children().filter(\".\" + ACTIVESTATE);\n\n                    item = item[0] ? item : that._endItem(\"first\");\n                    if (item[0]) {\n                        that._current(item);\n                    }\n                }, 100);\n            },\n\n            _animations: function(options) {\n                if (options && (\"animation\" in options) && !options.animation) {\n                    options.animation = { open: { effects: {} }, close: { effects: {} } }; // No animation\n                }\n            },\n\n            _appendUrlItem: function(url) {\n                this._contentUrls.push(url);\n            },\n\n            _attachEvents: function() {\n                var that = this,\n                    options = that.options;\n\n                that.tabGroup\n                    .on(CLICK + NS, \".k-disabled .k-link\", false)\n                    .on(CLICK + NS, \" > \" + NAVIGATABLEITEMS, that._itemClick.bind(that));\n\n                that.wrapper.on(\"focus\" + NS, function() { that.tabGroup.trigger(\"focus\"); });\n\n                if (options.scrollable && options.scrollable.scrollButtons === \"hidden\") {\n                    that.tabGroup.bind(\"scroll\", function(e) {\n                        that._toggleScrollButtons();\n                    });\n                }\n\n                that.tabGroup\n                    .on(MOUSEENTER + NS + \" \" + MOUSELEAVE + NS, HOVERABLEITEMS, that._toggleHover)\n                    .on(\"focus\" + NS, that._active.bind(that))\n                    .on(\"blur\" + NS, function() { that._current(null); });\n\n                that._keyDownProxy = that._keydown.bind(that);\n\n                if (options.navigatable) {\n                    that.tabGroup.on(\"keydown\" + NS, that._keyDownProxy);\n                }\n\n                $(window).on('resize' + NS, that._resize.bind(that));\n            },\n\n            _click: function(item) {\n                var that = this,\n                    link = item.find(\".\" + LINK),\n                    href = link.attr(HREF),\n                    collapse = that.options.collapsible,\n                    index = item.index(),\n                    contentHolder = that.contentHolder(index),\n                    prevent, isAnchor,\n                    neighbours = item.parent().children(),\n                    oldFocusedTab = neighbours.filter(\".\" + FOCUSEDSTATE);\n\n                if (item.closest(\".k-tabstrip\")[0] != that.wrapper[0]) {\n                    return;\n                }\n\n                if (item.is(\".\" + DISABLEDSTATE + (!collapse ? \",.\" + ACTIVESTATE : \"\"))) {\n                    oldFocusedTab.removeClass(FOCUSEDSTATE);\n                    that._focused = item;\n\n                    item.addClass(FOCUSEDSTATE);\n                    that._current(item);\n\n                    if (that._scrollableModeActive) {\n                        that._scrollTabsToItem(item);\n                    }\n                    return true;\n                }\n\n                isAnchor = link.data(CONTENTURL) || that._contentUrls[index] || (href && (href.charAt(href.length - 1) == \"#\" || href.indexOf(\"#\" + that.element[0].id + \"-\") != -1));\n                prevent = !href || isAnchor;\n\n                if (that.tabGroup.children(\"[data-animating]\").length) {\n                    return prevent;\n                }\n\n                if (that.trigger(SELECT, { item: item[0], contentElement: contentHolder[0] })) {\n                    return true;\n                }\n\n                if (prevent === false) {\n                    return;\n                }\n\n                if (collapse && item.is(\".\" + ACTIVESTATE)) {\n                    that.deactivateTab(item);\n                    return true;\n                }\n\n                if (that.activateTab(item)) {\n                    that._current(item);\n                    prevent = true;\n                }\n\n                return prevent;\n            },\n\n            _create: function(tab) {\n                var that = this,\n                tabs,\n                contents,\n                content,\n                newTabsCreated = false;\n\n                tab = tab instanceof kendo.data.ObservableArray ? tab.toJSON() : tab;\n\n                if ($.isPlainObject(tab) || Array.isArray(tab)) {\n                    tab = Array.isArray(tab) ? tab : [tab];\n                    newTabsCreated = true;\n\n                    tabs = map(tab, function(value, idx) {\n                        that._appendUrlItem(tab[idx].contentUrl || null);\n                        const renderedTabItem = TabStrip.renderItem({\n                            group: that.tabGroup,\n                            item: extend(value, { index: idx })\n                        });\n\n                        value.closable = value.closable ?? that.options.closable;\n                        return $(that._initTabActions(renderedTabItem, value));\n                    });\n\n                    contents = map( tab, function(value, idx) {\n                                if (typeof value.content == \"string\" || value.contentUrl) {\n                                    let tabstripContent = $(TabStrip.renderContent({\n                                        item: extend(value, { index: idx })\n                                    }));\n\n                                    kendo.applyStylesFromKendoAttributes(tabstripContent, [\"display\"]);\n                                    return tabstripContent;\n                                }\n                            });\n                } else {\n                    if (typeof tab == \"string\" && tab[0] != \"<\") {\n                        tabs = that.element.find(tab);\n                    } else {\n                        tabs = $(tab);\n                    }\n                    contents = $();\n                    tabs.each(function() {\n                        if (/k-tabstrip-items/.test(this.parentNode.className)) {\n                            var element = that.element.find(\"[id='\" + this.getAttribute(ARIA_CONTROLS) + \"']\");\n                            content = element;\n                        } else {\n                            content = $(\"<div class='\" + CONTENT + \"'/>\");\n                        }\n\n                        contents = contents.add(content);\n                    });\n\n                    updateTabClasses(tabs);\n                }\n\n                return { tabs: tabs, contents: contents, newTabsCreated: newTabsCreated };\n            },\n\n            _current: function(candidate, preventFocus) {\n                var that = this,\n                    focused = that._focused;\n\n                if (candidate === undefined$1) {\n                    return focused;\n                }\n\n                if (focused && candidate && focused[0] === candidate[0]) {\n                    focused = false;\n                }\n\n                if (focused) {\n                    focused.removeClass(FOCUSEDSTATE);\n                }\n\n                if (candidate && !preventFocus) {\n                    candidate.addClass(FOCUSEDSTATE);\n                }\n\n                that._focused = candidate;\n            },\n\n            _dataSource: function() {\n                var that = this;\n\n                if (that.dataSource && that._refreshHandler) {\n                    that.dataSource.unbind(\"change\", that._refreshHandler);\n                } else {\n                    that._refreshHandler = that.refresh.bind(that);\n                }\n\n                that.dataSource = kendo.data.DataSource.create(that.options.dataSource)\n                                    .bind(\"change\", that._refreshHandler);\n            },\n\n            _elementId: function(element, idx, tab) {\n                var elementId = element.attr(\"id\"),\n                    wrapperId = this.element.attr(\"id\"),\n                    guid = kendo.guid();\n\n                if (!elementId || elementId.indexOf(wrapperId + \"-\") > -1) {\n                    var tabStripID = (wrapperId || guid) + \"-\";\n\n                    if (tab) {\n                        tabStripID += \"tab-\";\n                    }\n\n                    return tabStripID + (idx + 1);\n                }\n\n                return elementId;\n            },\n\n            _endItem: function(action) {\n                return this.tabGroup.children(NAVIGATABLEITEMS)[action]();\n            },\n\n            _getItem: function(action) {\n                return this.tabGroup.children(KEYBOARDNAVIGATABLEITEMS)[action]();\n            },\n\n            _initialActivate: function() {\n                var that = this,\n                    selectedItems = that.tabGroup.children(\"li.\" + ACTIVESTATE),\n                    content = that.contentHolder(selectedItems.index());\n\n                if (selectedItems[0] && content.length > 0 && content[0].childNodes.length === 0) {\n                    that.activateTab(selectedItems.eq(0));\n                }\n            },\n\n            _item: function(item, action) {\n                var endItem;\n                if (action === PREV) {\n                    endItem = \"last\";\n                } else {\n                    endItem = \"first\";\n                }\n\n                if (!item) {\n                    return this._endItem(endItem);\n                }\n\n                item = item[action]();\n\n                if (!item[0]) {\n                    item = this.tabGroup.children(KEYBOARDNAVIGATABLEITEMS)[endItem]();\n                }\n\n                if (item.hasClass(DISABLEDSTATE)) {\n                    item.addClass(FOCUSEDSTATE);\n                }\n                if (item.hasClass(DISABLEDSTATE) || item.hasClass(ACTIVESTATE)) {\n                    this._focused = item;\n                }\n\n                return item;\n            },\n\n            _itemClick: function(e) {\n                var that = this,\n                    tabGroup = that.tabGroup[0];\n\n                if (e.target.closest('.k-item-actions')) {\n                    return;\n                }\n\n                if (tabGroup !== document.activeElement) {\n                    var msie = kendo.support.browser.msie;\n                    if (msie) {\n                        try {\n                            // does not scroll to the active element\n                            tabGroup.setActive();\n                        } catch (j) {\n                            tabGroup.focus();\n                        }\n                    } else {\n                        tabGroup.focus();\n                    }\n                }\n\n                if (that._click($(e.currentTarget))) {\n                    e.preventDefault();\n                }\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    key = e.keyCode,\n                    current = that._current(),\n                    rtl = that._isRtl,\n                    isHorizontal = /top|bottom/.test(that.options.tabPosition),\n                    action;\n\n                if (e.target != e.currentTarget || !current) {\n                    return;\n                }\n\n                if (key === keys.DOWN && !isHorizontal) {\n                    action = NEXT;\n                } else if (key === keys.UP && !isHorizontal) {\n                    action = PREV;\n                } else if (key === keys.RIGHT && isHorizontal) {\n                    action = rtl ? PREV : NEXT;\n                } else if (key === keys.LEFT && isHorizontal) {\n                    action = rtl ? NEXT : PREV;\n                } else if (key == keys.ENTER || key == keys.SPACEBAR) {\n                    that._click(current);\n                    e.preventDefault();\n                } else if (key == keys.HOME) {\n                    that._click(that._getItem(\"first\"));\n                    e.preventDefault();\n                    return;\n                } else if (key == keys.END) {\n                    that._click(that._getItem(\"last\"));\n                    e.preventDefault();\n                    return;\n                }\n\n                if (action) {\n                    that._click(that._item(current, action));\n                    e.preventDefault();\n                }\n            },\n\n            _moveUrlItem: function(from, to) {\n                this._contentUrls.splice(to, 0, this._contentUrls.splice(from, 1)[0]);\n            },\n\n            _processContentUrls: function() {\n                var that = this;\n\n                if (that._contentUrls.length) {\n                    that.tabGroup.children(\".k-item.k-tabstrip-item\")\n                        .each(function(index, item) {\n                            var url = that._contentUrls[index];\n\n                            if (typeof url === 'string') {\n                                $(item).find(\">.\" + LINK).data(CONTENTURL, url);\n                            }\n                        });\n                } else {\n                    that._contentUrls.length = that.tabGroup.find(\"li.k-item.k-tabstrip-item\").length;\n                }\n            },\n\n            _removeUrlItem: function(index) {\n                this._contentUrls.splice(index, 1);\n            },\n\n            _resize: function() {\n                this._scrollable();\n            },\n\n            _getChildrenWidth: function(element) {\n                let width = 0;\n                element.children().each(function() {\n                    width += outerWidth($(this));\n                });\n                return Math.floor(width);\n            },\n\n            _getChildrenHeight: function(element) {\n                let height = 0;\n                element.children().each(function() {\n                    height += outerHeight($(this));\n                });\n                return Math.floor(height);\n            },\n\n            _scrollable: function() {\n                const that = this,\n                    options = that.options,\n                    scrollButtonsPosition = options.scrollable.scrollButtonsPosition,\n                    scrollButtonsVisibility = options.scrollable.scrollButtons,\n                    isHorizontal = options.tabPosition == \"top\" || options.tabPosition == \"bottom\",\n                    isHidden = scrollButtonsVisibility === \"hidden\",\n                    isVisible = scrollButtonsVisibility === \"visible\";\n\n                let wrapperOffset,\n                tabGroupScroll,\n                    scrollPrevButton,\n                    scrollNextButton;\n\n                if (that._scrollableAllowed()) {\n\n                    that.wrapper.addClass(\"k-tabstrip-scrollable\");\n\n                    wrapperOffset = isHorizontal ? that.wrapper[0].offsetWidth : that.wrapper[0].offsetHeight;\n                    tabGroupScroll = isHorizontal ? that.tabGroup[0].scrollWidth : that.tabGroup[0].scrollHeight;\n                    const condition = isHorizontal ? (that._getChildrenWidth(that.tabGroup) > that.tabGroup.outerWidth()) : (that._getChildrenHeight(that.tabGroup) > that.tabGroup.outerHeight());\n                    const enableScroll = (tabGroupScroll > wrapperOffset) || condition;\n\n                    if (enableScroll && !that._scrollableModeActive && isHidden) {\n                        that.tabGroup.addClass(\"k-tabstrip-items-scroll\");\n                        that.wrapper.addClass(\"k-tabstrip-scrollable-overlay\");\n\n                        that._scrollableModeActive = true;\n                        that._toggleScrollButtons();\n                    } else if ((enableScroll || isVisible) && !that._scrollableModeActive) {\n                        that._nowScrollingTabs = false;\n                        that._isRtl = kendo.support.isRtl(that.element);\n                        const mouseDown = kendo.support.touch ? \"touchstart\" : \"mousedown\";\n                        const mouseUp = kendo.support.touch ? \"touchend\" : \"mouseup\";\n                        const browser = kendo.support.browser;\n                        const isRtlScrollDirection = that._isRtl && !browser.msie && !browser.edge;\n                        const prevIcon = isHorizontal ? \"caret-alt-left\" : \"caret-alt-up\";\n                        const nextIcon = isHorizontal ? \"caret-alt-right\" : \"caret-alt-down\";\n\n                        const scrollLeft = scrollButtonHtml(\"prev\", prevIcon);\n                        const scrollRight = scrollButtonHtml(\"next\", nextIcon);\n\n                        switch (scrollButtonsPosition) {\n                            case 'split':\n                                that.tabWrapper.prepend(scrollLeft);\n                                that.tabWrapper.append(scrollRight);\n                                break;\n                            case 'start':\n                                that.tabWrapper.prepend(scrollRight);\n                                that.tabWrapper.prepend(scrollLeft);\n                                break;\n                            case 'end':\n                                that.tabWrapper.append(scrollLeft);\n                                that.tabWrapper.append(scrollRight);\n                                break;\n                        }\n\n                        scrollPrevButton = that._scrollPrevButton = that.tabWrapper.children(\".k-tabstrip-prev\");\n                        scrollNextButton = that._scrollNextButton = that.tabWrapper.children(\".k-tabstrip-next\");\n\n                        scrollPrevButton.on(mouseDown + NS, function() {\n                            that._nowScrollingTabs = true;\n                            that._scrollTabsByDelta(options.scrollable.distance * (isRtlScrollDirection ? 1 : -1));\n                        });\n\n                        scrollNextButton.on(mouseDown + NS, function() {\n                            that._nowScrollingTabs = true;\n                            that._scrollTabsByDelta(options.scrollable.distance * (isRtlScrollDirection ? -1 : 1));\n                        });\n\n                        scrollPrevButton.add(scrollNextButton).on(mouseUp + NS, function() {\n                            that._nowScrollingTabs = false;\n                        });\n\n                        that._scrollableModeActive = true;\n\n                        that._toggleScrollButtons();\n                    } else if (that._scrollableModeActive && !enableScroll && !isVisible) {\n                        that._scrollableModeActive = false;\n\n                       that._removeScrollableClasses();\n\n                       that._scrollPrevButton && that._scrollPrevButton.off().remove();\n                       that._scrollNextButton && that._scrollNextButton.off().remove();\n                    } else if (!that._scrollableModeActive && !isVisible) {\n                        that._removeScrollableClasses();\n                    } else {\n                        that._toggleScrollButtons();\n                    }\n                }\n            },\n\n            _removeScrollableClasses: function() {\n                const that = this;\n                const isHidden = that.options.scrollable.scrollButtons === \"hidden\";\n\n                that.wrapper.removeClass(\"k-tabstrip-scrollable\");\n\n                if (isHidden) {\n                    that.wrapper.removeClass(\"k-tabstrip-scrollable-overlay\");\n                    that.wrapper.removeClass(\"k-tabstrip-scrollable-start\");\n                    that.wrapper.removeClass(\"k-tabstrip-scrollable-end\");\n\n                    that.tabGroup.removeClass(\"k-tabstrip-items-scroll\");\n                }\n            },\n\n            _scrollableAllowed: function() {\n                var options = this.options;\n\n                if (options.scrollable && !options.scrollable.distance) {\n                    options.scrollable = { distance: DEFAULTDISTANCE };\n                }\n                return options.scrollable && !isNaN(options.scrollable.distance);\n            },\n\n            _scrollTabsToItem: function(item) {\n                var that = this,\n                    tabGroup = that.tabGroup,\n                    isHorizontal = that.options.tabPosition == \"top\" || that.options.tabPosition == \"bottom\",\n                    currentScrollOffset = isHorizontal ? kendo.scrollLeft(tabGroup) : tabGroup.scrollTop(),\n                    itemSize = isHorizontal ? outerWidth(item) : outerHeight(item),\n                    itemOffset = isHorizontal ? (that._isRtl ? item.position().left : item.position().left - tabGroup.children().first().position().left) : item.position().top,\n                    tabGroupSize = isHorizontal ? tabGroup[0].offsetWidth : tabGroup[0].offsetHeight,\n                    browser = kendo.support.browser,\n                    itemPosition;\n\n                if (that._isRtl && isHorizontal && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                    currentScrollOffset = currentScrollOffset * -1;\n                }\n\n                if (that._isRtl && isHorizontal) {\n                    if (itemOffset < 0) {\n                        itemPosition = currentScrollOffset + itemOffset - (tabGroupSize - currentScrollOffset);\n                    } else if (itemOffset + itemSize > tabGroupSize) {\n                        itemPosition = currentScrollOffset + itemOffset - itemSize;\n                    }\n                } else {\n                    if (currentScrollOffset + tabGroupSize < itemOffset + itemSize) {\n                        itemPosition = itemOffset + itemSize - tabGroupSize;\n                    } else if (currentScrollOffset > itemOffset) {\n                        itemPosition = itemOffset;\n                    }\n                }\n\n                var animationProps = isHorizontal ? { \"scrollLeft\": itemPosition } : { \"scrollTop\": itemPosition };\n\n                tabGroup.finish().animate(animationProps, \"fast\", \"linear\", function() {\n                    that._toggleScrollButtons();\n                });\n            },\n\n            _scrollTabsByDelta: function(delta) {\n                const that = this;\n                const tabGroup = that.tabGroup;\n                const isHorizontal = that.options.tabPosition == \"top\" || that.options.tabPosition == \"bottom\";\n\n                let scrOffset = isHorizontal ? kendo.scrollLeft(tabGroup) : tabGroup.scrollTop();\n                const browser = kendo.support.browser;\n\n                if (that._isRtl && isHorizontal && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                    scrOffset = scrOffset * -1;\n                }\n\n                var animationProps = isHorizontal ? { \"scrollLeft\": scrOffset + delta } : { \"scrollTop\": scrOffset + delta };\n\n                tabGroup.finish().animate(animationProps, \"fast\", \"linear\", function() {\n                    if (that._nowScrollingTabs && !jQuery.fx.off) {\n                        that._scrollTabsByDelta(delta);\n                    } else {\n                        that._toggleScrollButtons();\n                    }\n                });\n            },\n\n            _sortable: function() {\n                var that = this,\n                options = that.options,\n                position = options.tabPosition,\n                isHidden = options.scrollable && options.scrollable.scrollButtons === \"hidden\",\n                axis = position === 'left' || position === 'right' ? 'y' : 'x';\n\n                if (!that.options.sortable) {\n                    return;\n                }\n\n                that.sortable = new kendo.ui.Sortable(that.tabGroup, {\n                    filter: \"li.k-item.k-tabstrip-item\",\n                    axis,\n                    holdToDrag: isHidden,\n                    allowTouchActions: isHidden,\n                    container: that.tabWrapper,\n                    hint: el => `<div id='hint' class='k-tabstrip k-tabstrip-${position}'>\n                                <div class= 'k-tabstrip-items-wrapper k-hstack'>\n                                    <ul class='k-tabstrip-items k-reset'>\n                                        <li class='k-item k-tabstrip-item k-first k-active'>${el.html()}</li>\n                                    </ul>\n                                </div>\n                            </div>`,\n                    change: that._sortChange.bind(that),\n                    start: e => that.activateTab(e.item)\n                });\n\n            },\n\n            _sortChange: function(e) {\n                var that = this,\n                    reference = that.tabGroup.children().eq(e.newIndex);\n\n                if (e.oldIndex < e.newIndex) {\n                    that.insertAfter(e.item, reference);\n                } else {\n                    that.insertBefore(e.item, reference);\n                }\n            },\n\n            _tabSizes: function() {\n                const that = this;\n                const tabSize = that.options.size;\n\n                let className;\n                switch (tabSize) {\n                    case \"small\":\n                        className = \"k-tabstrip-sm\";\n                        break;\n\n                    case \"medium\":\n                        className = \"k-tabstrip-md\";\n                        break;\n\n                    case \"large\":\n                        className = \"k-tabstrip-lg\";\n                        break;\n                }\n\n                that.wrapper.addClass(className);\n            },\n\n            _tabPosition: function() {\n                var that = this,\n                    tabPosition = that.options.tabPosition;\n\n                that.wrapper.addClass(\"k-tabstrip-\" + tabPosition);\n\n                if (tabPosition == \"bottom\") {\n                    that.tabWrapper.appendTo(that.wrapper);\n                }\n\n                if (tabPosition === \"left\" || tabPosition === \"right\") {\n                    that.tabGroup.attr(ARIA_ORIENTATION, \"vertical\");\n                }\n\n                that.resize(true);\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVERSTATE, e.type == MOUSEENTER);\n            },\n\n            _toggleDisabled: function(element, enable) {\n                element = this.tabGroup.find(element);\n                element.each(function() {\n                    $(this)\n                        .toggleClass(DISABLEDSTATE, !enable)\n                        .attr(ARIA_DISABLED, !enable);\n                });\n            },\n\n            _toggleScrollButtons: function() {\n                var that = this,\n                    ul = that.tabGroup,\n                    scrollLeft = Math.floor(kendo.scrollLeft(ul)),\n                    scrollTop = Math.floor(ul.scrollTop()),\n                    scrollButtonsVisibility = that.options.scrollable.scrollButtons,\n                    isHorizontal = that.options.tabPosition == \"top\" || that.options.tabPosition == \"bottom\";\n\n                    const disableNextButton = (isHorizontal ? Math.abs(scrollLeft - (ul[0].scrollWidth - ul[0].offsetWidth)) : Math.abs(scrollTop - (ul[0].scrollHeight - ul[0].offsetHeight))) <= 1;\n                    const disablePrevButton = (isHorizontal ? scrollLeft : scrollTop) === 0;\n\n                    if (scrollButtonsVisibility !== \"hidden\") {\n                        that._scrollPrevButton.toggleClass('k-disabled', disablePrevButton);\n                        that._scrollNextButton.toggleClass('k-disabled', disableNextButton);\n                    } else {\n                        that.wrapper.toggleClass(\"k-tabstrip-scrollable-start\", disablePrevButton);\n                        that.wrapper.toggleClass(\"k-tabstrip-scrollable-end\", disableNextButton);\n                    }\n            },\n\n            _updateClasses: function() {\n                var that = this,\n                    tabs, activeItem, activeTab;\n                var isHorizontal = /top|bottom/.test(that.options.tabPosition);\n\n                that.wrapper.addClass(\"k-tabstrip\");\n\n                if (!that.tabGroup) {\n                    that.tabGroup = that.wrapper.children(\"ul\");\n                    that.tabGroup.wrap('<div />');\n                    that.tabWrapper = that.tabGroup.parent();\n                }\n\n                if (!that.tabGroup[0]) {\n                    that.tabGroup = $(\"<ul />\").prependTo(that.wrapper);\n                    that.tabGroup.wrap('<div />');\n                    that.tabWrapper = that.tabGroup.parent();\n                }\n\n                that.tabWrapper.addClass('k-tabstrip-items-wrapper');\n                that.tabWrapper.addClass(isHorizontal ? 'k-hstack' : 'k-vstack');\n                that.tabGroup.addClass('k-tabstrip-items k-reset');\n\n                tabs = that.tabGroup.find(\"li\").addClass(\"k-item k-tabstrip-item\");\n\n                if (tabs.length) {\n                    activeItem = tabs.filter(\".\" + ACTIVESTATE).index();\n                    activeTab = activeItem >= 0 ? activeItem : undefined$1;\n\n                    that.tabGroup // Remove empty text nodes\n                        .contents()\n                        .filter(function() { return (this.nodeType == 3 && !trim(this.nodeValue)); })\n                        .remove();\n                }\n\n                that.contentElements = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\");\n\n                that.contentElements\n                    .addClass(CONTENT)\n                    .eq(activeTab)\n                    .addClass(ACTIVESTATE)\n                    .css({ display: \"block\" });\n\n                if (tabs.length) {\n                    updateTabClasses(tabs);\n                    activeItem = tabs.filter(\".\" + ACTIVESTATE).index();\n\n                    that.tabGroup.attr(\"aria-activedescendant\", tabs.eq(activeItem).attr(\"id\"));\n                    updateFirstLast(that.tabGroup);\n                    that._updateContentElements(true);\n                }\n            },\n\n            _updateContentElements: function(isInitialUpdate) {\n                var that = this,\n                    contentUrls = that._contentUrls,\n                    items = that.tabGroup.children(\".k-item.k-tabstrip-item\"),\n                    contentElements = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\"),\n                    _elementId = that._elementId.bind(that);\n\n                if (contentElements.length && (items.length > contentElements.length)) {\n                    contentElements.each(function(idx) {\n                        // Generate an ID for each content element\n                        var contentId = _elementId($(this), idx),\n                            item = items.filter(\"[aria-controls=\" + (contentId || 0) + \"]\")[0],\n                            tabId;\n\n                        if (!item && isInitialUpdate) {\n                            // On initialization of the widget get the tab by its index\n                            item = items[idx];\n                        }\n\n                        if (item) {\n                            // set the tab aria-controls attribute to the content ID\n                            item.setAttribute(ARIA_CONTROLS, contentId);\n                            tabId = item.id = _elementId($(item), idx, true);\n                            this.setAttribute(ARIA_LABELLEDBY, tabId);\n                        }\n\n                        // set the get (possibly existing) ID on the content element\n                        this.setAttribute(\"id\", contentId);\n                    });\n                } else {\n                    items.each(function(idx) {\n                        var currentContent = contentElements.eq(idx),\n                            contentId = _elementId(currentContent, idx),\n                            tabId;\n\n                        // set the tab aria-controls attribute to the content ID\n                        this.setAttribute(ARIA_CONTROLS, contentId);\n\n                        tabId = this.id = _elementId($(this), idx, true);\n\n                        if (!currentContent.length && contentUrls[idx]) {\n                            // Append content element in case contentUrl is used\n                            $(\"<div class='\" + CONTENT + \"'/>\").appendTo(that.wrapper).attr(\"id\", contentId);\n                        } else {\n                            // set the ID on the content element\n                            currentContent.attr(\"id\", contentId);\n                        }\n\n                        currentContent.attr(\"role\", \"tabpanel\");\n                        currentContent.attr(\"tabindex\", \"0\");\n                        currentContent.attr(ARIA_LABELLEDBY, tabId);\n                        currentContent.filter(\":not(.\" + ACTIVESTATE + \")\").attr(ARIA_HIDDEN, true);\n                    });\n                }\n\n                that.contentElements = that.contentAnimators = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\"); // refresh the contents\n\n                that.tabsHeight = outerHeight(that.tabGroup) +\n                                  parseInt(that.wrapper.css(\"border-top-width\"), 10) +\n                                  parseInt(that.wrapper.css(\"border-bottom-width\"), 10);\n\n                if (kendo.kineticScrollNeeded && kendo.mobile.ui.Scroller) {\n                    kendo.touchScroller(that.contentElements);\n                    that.contentElements = that.contentElements.children(\".km-scroll-container\");\n                }\n            },\n\n            _wrapper: function() {\n                var that = this;\n\n                if (that.element.is(\"ul\")) {\n                    that.wrapper = that.element.wrapAll(\"<div />\").parent();\n                } else {\n                    that.wrapper = that.element;\n                }\n            }\n        });\n\n        // client-side rendering\n        extend(TabStrip, {\n            renderItem: function(options) {\n                options = extend({ tabStrip: {}, group: {} }, options);\n                var empty = templates.empty,\n                    item = options.item,\n                    templateOptions = extend(options, {\n                        image: item.imageUrl ? templates.image : empty,\n                        sprite: item.spriteCssClass ? templates.sprite : empty,\n                        textWrapper: templates.textWrapper,\n                        itemActions: templates.itemActionsWrapperTemplate,\n                    }, rendering);\n\n                if (item.template) {\n                    return templates.itemWrapper(templateOptions, kendo.template(item.template)(item.model));\n                }\n\n                return templates.item(templateOptions);\n            },\n\n            renderContent: function(options) {\n                return templates.content(extend(options, rendering));\n            }\n        });\n\n        kendo.ui.plugin(TabStrip);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports[\"default\"] = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}