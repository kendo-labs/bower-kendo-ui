{"version":3,"sources":["raw-js/kendo.tabstrip.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendotabstrip","js","this","$","undefined$1","kendo","window","ui","keys","map","each","trim","extend","isFunction","outerWidth","template","_outerWidth","outerHeight","_outerHeight","Widget","excludedNodesRegExp","excludedNodesRegExp_DOM_DS","NS","HREF","PREV","NEXT","SHOW","LINK","LINK_TEXT","LAST","CLICK","IMAGE","FIRST","SELECT","ACTIVATE","CONTENT","CONTENTURL","MOUSEENTER","CONTENTLOAD","DISABLEDSTATE","ACTIVESTATE","FOCUSEDSTATE","HOVERSTATE","DOM_DATASOURCE_EMPTY","NAVIGATABLEITEMS","KEYBOARDNAVIGATABLEITEMS","HOVERABLEITEMS","ARIA_HIDDEN","ARIA_CONTROLS","ARIA_DISABLED","ARIA_SELECTED","ARIA_LABELLEDBY","templates","content","data","contentAttributes","item","textWrapper","tag","contentUrl","textAttributes","image","sprite","text","icon","iconClass","iconPosition","itemWrapper","wrapperCssClass","group","itemAttributes","active","imageUrl","spriteCssClass","empty","itemActionsWrapperTemplate","itemActionTemplate","element","attributes","resolvedAttributes","toJSON","html","renderButton","attr","themeColor","fillMode","rendering","result","index","classAttributes","class","enabled","push","length","split","forEach","className","includes","join","Object","entries","key","value","htmlEncode","url","sanitizeLink","encoded","updateTabClasses","tabs","options","children","addClass","filter","prop","parent","is","regex","_enableDOMDataSource","contents","nodeName","match","nodeType","nodeValue","wrapAll","updateFirstLast","tabGroup","removeClass","scrollButtonHtml","buttonClass","ajaxXhr","ajaxSettings","xhr","TabStrip","init","that","fn","call","_animations","isPresent","_contentUrls","contentUrls","_wrapper","_isRtl","support","isRtl","wrapper","_updateClasses","_dataSource","_tabindex","dataSource","fetch","_removeAdditionalWrapperClasses","_tabSizes","_tabPosition","_scrollable","_tabAlignment","_sortable","_processContentUrls","_attachEvents","_initialActivate","notify","_updateContentElements","_showWatermarkOverlay","events","name","dataEncodedField","dataTextField","dataContentField","dataImageUrlField","dataUrlField","dataSpriteCssClass","dataContentUrlField","dataIconField","dataIconPositionField","tabPosition","tabAlignment","size","tabTemplate","animation","open","effects","duration","close","closable","collapsible","navigatable","applyMinHeight","scrollable","distance","scrollButtonsPosition","scrollButtons","sortable","setDataSource","setOptions","on","_keyDownProxy","off","activateTab","find","animationSettings","hasCloseAnimation","neighbours","oldTab","itemIndex","reverse","hide","kendoRemoveClass","contentAnimators","inRequest","abort","_current","trigger","_scrollableModeActive","_scrollTabsToItem","visibleContents","contentHolder","contentElement","closest","tabsHeight","parseInt","css","kendoStop","kendoAnimate","isAjaxContent","showContentElement","removeAttr","resize","complete","oldMinHeight","showContent","ajaxRequest","kendoAddClass","link","ajaxOptions","type","cache","dataType","error","status","success","destroy","e","ajax","append","tab","inserted","_create","idx","tabWrapper","before","isNaN","contentElements","kineticScrollNeeded","id","i","len","eq","scrollContainer","touch","deactivateTab","isHidden","_refreshHandler","unbind","_scrollPrevButton","remove","_scrollNextButton","disable","_toggleDisabled","enable","state","insertAfter","referenceTab","prev","referenceContent","fromIndex","newTabsCreated","after","_moveUrlItem","insertBefore","next","items","refresh","getter","view","enableDOMDataSource","_enableDataSourceFromDOM","pristineData","_pristineData","action","model","actions","Array","from","indexOf","field","get","_wrapExistingDOMItems","dataItem","linkContainer","tabText","checkActions","prepend","_initTabActions","hasOwnProperty","hasClass","reload","elements","_removeUrlItem","select","arguments","tabOptions","tabElement","isClosable","closeButtonAttributes","_handleClose","actionsWrapperTemplate","existingActionButtons","isClosableAction","actionTemplate","bind","currentTarget","_active","setTimeout","_endItem","_appendUrlItem","_itemClick","_toggleScrollButtons","_toggleHover","_keydown","_resize","_click","prevent","isAnchor","href","collapse","oldFocusedTab","_focused","charAt","ObservableArray","isPlainObject","isArray","renderedTabItem","renderItem","tabstripContent","renderContent","applyStylesFromKendoAttributes","test","parentNode","getAttribute","add","candidate","preventFocus","focused","_createDataSourceFromDOM","DataSource","create","dataSourceOptions","itemOptions","actionOptions","dataItems","$item","itemData","option","_decorateActions","$action","actionData","_elementId","elementId","wrapperId","guid","tabStripID","_getItem","selectedItems","childNodes","_item","endItem","target","document","activeElement","browser","msie","setActive","j","focus","preventDefault","keyCode","current","rtl","isHorizontal","DOWN","UP","RIGHT","LEFT","ENTER","SPACEBAR","HOME","END","to","splice","_getChildrenWidth","width","Math","floor","_getChildrenHeight","height","scrollButtonsVisibility","isVisible","wrapperOffset","tabGroupScroll","scrollPrevButton","scrollNextButton","_scrollableAllowed","offsetWidth","offsetHeight","scrollWidth","scrollHeight","condition","enableScroll","_removeScrollableClasses","_nowScrollingTabs","mouseDown","mouseUp","isRtlScrollDirection","edge","nextIcon","scrollLeft","scrollRight","_scrollTabsByDelta","itemPosition","currentScrollOffset","scrollTop","itemSize","itemOffset","position","left","first","top","tabGroupSize","mozilla","webkit","version","animationProps","finish","animate","delta","scrOffset","jQuery","fx","axis","Sortable","holdToDrag","allowTouchActions","container","hint","el","change","_sortChange","start","reference","newIndex","oldIndex","appendTo","toggleClass","ul","disableNextButton","abs","disablePrevButton","activeItem","activeTab","wrap","prependTo","display","isInitialUpdate","tabId","contentId","setAttribute","currentContent","_removeEmptyUrls","mobile","Scroller","touchScroller","tabStrip","templateOptions","itemActions","plugin","kendo$1","__meta__","category","description","depends","features","defineProperty"],"mappings":"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","file":"kendo.tabstrip.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.data.js'), require('kendo.icons.js'), require('kendo.html.button.js'), require('kendo.sortable.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.data', 'kendo.icons', 'kendo.html.button', 'kendo.sortable'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendotabstrip = global.kendotabstrip || {}, global.kendotabstrip.js = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"tabstrip\",\n        name: \"TabStrip\",\n        category: \"web\",\n        description: \"The TabStrip widget displays a collection of tabs with associated tab content.\",\n        depends: [ \"data\", \"icons\", \"html.button\", \"sortable\" ],\n        features: [ {\n            id: \"tabstrip-fx\",\n            name: \"Animation\",\n            description: \"Support for animation\",\n            depends: [ \"fx\" ]\n        } ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            keys = kendo.keys,\n            map = $.map,\n            each = $.each,\n            trim = kendo.trim,\n            extend = $.extend,\n            isFunction = kendo.isFunction,\n            template = kendo.template,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            Widget = ui.Widget,\n            excludedNodesRegExp = /^(a|div)$/i,\n            excludedNodesRegExp_DOM_DS = /^(a|div|button)$/i,\n            NS = \".kendoTabStrip\",\n            IMG = \"img\",\n            HREF = \"href\",\n            PREV = \"prev\",\n            NEXT = \"next\",\n            SHOW = \"show\",\n            LINK = \"k-link\",\n            LINK_TEXT = \"k-link-text\",\n            LAST = \"k-last\",\n            CLICK = \"click\",\n            ERROR = \"error\",\n            EMPTY = \":empty\",\n            IMAGE = \"k-image\",\n            FIRST = \"k-first\",\n            SELECT = \"select\",\n            ACTIVATE = \"activate\",\n            CONTENT = \"k-tabstrip-content\",\n            CONTENTURL = \"contentUrl\",\n            MOUSEENTER = \"mouseenter\",\n            MOUSELEAVE = \"mouseleave\",\n            CONTENTLOAD = \"contentLoad\",\n            DISABLEDSTATE = \"k-disabled\",\n            ACTIVESTATE = \"k-active\",\n            FOCUSEDSTATE = \"k-focus\",\n            HOVERSTATE = \"k-hover\",\n            DOM_DATASOURCE_EMPTY = \"EMPTY_URL\",\n            NAVIGATABLEITEMS = \".k-item.k-tabstrip-item:not(.\" + DISABLEDSTATE + \")\",\n            KEYBOARDNAVIGATABLEITEMS = \".k-item.k-tabstrip-item\",\n            HOVERABLEITEMS = \".k-tabstrip-items > \" + NAVIGATABLEITEMS + \":not(.\" + ACTIVESTATE + \")\",\n            DEFAULTDISTANCE = 200,\n            ARIA_HIDDEN = \"aria-hidden\",\n            ARIA_CONTROLS = \"aria-controls\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_SELECTED = \"aria-selected\",\n            ARIA_ORIENTATION = \"aria-orientation\",\n            ARIA_LABELLEDBY = \"aria-labelledby\",\n\n            templates = {\n                content: (data) =>\n                    `<div class='k-tabstrip-content' ${data.contentAttributes(data)} tabindex='0'>${data.content(data.item)}</div>`,\n                textWrapper: ({ tag, item , contentUrl, textAttributes, image, sprite, text }) =>\n                    `<${tag(item)} class='${LINK}' ${contentUrl(item)} ${textAttributes(item)}>` + `${image(item)}${sprite(item)}` +\n                        ((item.icon || item.iconClass) && item.iconPosition === 'before' ? kendo.ui.icon({ icon: item.icon || \"none\", iconClass: item.iconClass }) : '') +\n                            `<span class='${LINK_TEXT}'>${text(item)}</span>` +\n                        ((item.icon || item.iconClass) && item.iconPosition === 'after' ? kendo.ui.icon({ icon: item.icon || \"none\", iconClass: item.iconClass }) : '') +\n                    `</${tag(item)}>`,\n                item: (data) => templates.itemWrapper(data,`${data.textWrapper(data)}`),\n                itemWrapper: (data, item) =>\n                    `<li class='${data.wrapperCssClass(data.group, data.item)}' ${data.itemAttributes(data.item)} role='tab' ${data.item.active ? \"aria-selected='true'\" : ''}>` +\n                        item +\n                    \"</li>\",\n                image: ({ imageUrl }) => `<img class='k-image' alt='' src='${imageUrl}' />`,\n                sprite: ({ spriteCssClass }) => `<span class='k-sprite ${spriteCssClass}'></span>`,\n                empty: () => \"\",\n                itemActionsWrapperTemplate: () => `<span class=\"k-item-actions\"></span>`,\n                itemActionTemplate: ({ element, icon, iconClass, attributes }) => {\n                    let resolvedAttributes = attributes ? (attributes.toJSON ? attributes.toJSON() : attributes) : {};\n                    return kendo.html.renderButton(element || $(\"<button unselectable='on'></button>\").attr(resolvedAttributes), { icon, iconClass, themeColor: \"base\", fillMode: \"flat\" });\n                },\n            },\n\n            rendering = {\n                wrapperCssClass: function(group, item) {\n                    var result = [\"k-item\", \"k-tabstrip-item\"],\n                        index = item.index;\n\n                    const classAttributes = (item.attributes && item.attributes.class) || \"\";\n\n                    if (item.enabled === false) {\n                        result.push(\"k-disabled\");\n                    }\n\n                    if (index === 0) {\n                        result.push(\"k-first\");\n                    }\n\n                    if (index == group.length - 1) {\n                        result.push(\"k-last\");\n                    }\n\n                    classAttributes.split(\" \").forEach(function(className) {\n                        if (className && !result.includes(className)) {\n                            result.push(className);\n                        }\n                    });\n\n                    return result.join(\" \");\n                },\n                itemAttributes: function(item) {\n                    const attributes = item.attributes || {};\n                    return Object.entries(attributes)\n                        .map(([key, value]) => {\n                            if (key === \"class\" || key === \"role\" || key === \"aria-selected\") {\n                                return \"\";\n                            }\n                            return `${key}='${kendo.htmlEncode(value)}'`;\n                        })\n                        .join(\" \");\n                },\n                textAttributes: function(item) {\n                    return item.url ? \" href='\" + kendo.sanitizeLink(item.url) + \"'\" : \"\";\n                },\n                text: function(item) {\n                    return item.encoded === false ? item.text : kendo.htmlEncode(item.text);\n                },\n                tag: function(item) {\n                    return item.url ? \"a\" : \"span\";\n                },\n                contentAttributes: function(content) {\n                    return content.active !== true ? ` ${kendo.attr(\"style-display\")}=\"none\" aria-hidden='true'` : \"\";\n                },\n                content: function(item) {\n                    return item.content ? item.content : item.contentUrl ? \"\" : \"&nbsp;\";\n                },\n                contentUrl: function(item) {\n                    return item.contentUrl ? kendo.attr(\"content-url\") + '=\"' + item.contentUrl + '\"' : \"\";\n                }\n            };\n\n        function updateTabClasses(tabs, options) {\n            tabs.children(IMG)\n                .addClass(IMAGE);\n\n            tabs.children(\"a\")\n                .addClass(LINK)\n                .children(IMG)\n                .addClass(IMAGE);\n\n            tabs.filter(\"li[disabled]\")\n                .addClass(DISABLEDSTATE)\n                .attr(ARIA_DISABLED, \"true\")\n                .prop(\"disabled\", false);\n\n            tabs.filter(\":not([class*=k-state])\")\n                .children(\"a\")\n                .filter(\":focus\")\n                .parent()\n                .addClass(ACTIVESTATE);\n\n            tabs.attr(\"role\", \"tab\");\n\n            tabs.each(function() {\n                var item = $(this);\n                item.attr(ARIA_SELECTED, item.is(\".\" + ACTIVESTATE));\n\n                const regex = options._enableDOMDataSource ? excludedNodesRegExp_DOM_DS : excludedNodesRegExp;\n                if (!item.children(\".\" + LINK).length) {\n                    item\n                        .contents() // exclude groups, real links, templates and empty text nodes\n                        .filter(function() { return (!this.nodeName.match(regex) && !(this.nodeType == 3 && !trim(this.nodeValue))); })\n                        .wrapAll(\"<span UNSELECTABLE='on' class='\" + LINK + \"'/>\")\n                        .wrapAll(\"<span UNSELECTABLE='on' class='\" + LINK_TEXT + \"'/>\");\n                }\n            });\n\n        }\n\n        function updateFirstLast(tabGroup) {\n            const tabs = tabGroup.children(\".k-item.k-tabstrip-item\");\n\n            tabs.filter(\".k-first:not(:first-child)\").removeClass(FIRST);\n            tabs.filter(\".k-last:not(:last-child)\").removeClass(LAST);\n            tabs.filter(\":first-child\").addClass(FIRST);\n            if (tabs.length > 1) {\n                tabs.filter(\":last-child\").addClass(LAST);\n            }\n        }\n\n        function scrollButtonHtml(buttonClass, iconClass) {\n            return `<span aria-hidden='true' class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-tabstrip-${buttonClass}' unselectable='on'>${kendo.ui.icon({ icon: iconClass, iconClass: \"k-button-icon\" })}</span>`;\n        }\n\n        function ajaxXhr() {\n            return $.ajaxSettings.xhr();\n        }\n\n        var TabStrip = Widget.extend({\n            init: function(element, options) {\n                var that = this, value;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._animations(that.options);\n\n                options = that.options;\n\n                if (kendo.isPresent(TabStrip._enableDOMDataSource)) {\n                    options._enableDOMDataSource = TabStrip._enableDOMDataSource;\n                }\n\n                that._contentUrls = options.contentUrls || [];\n\n                that._wrapper();\n                that._isRtl = kendo.support.isRtl(that.wrapper);\n\n                that._updateClasses();\n                that._dataSource();\n\n                that._tabindex(that.tabGroup);\n                that.tabGroup.attr(\"role\", \"tablist\");\n\n                if (options.dataSource || options._enableDOMDataSource) {\n                    that.dataSource.fetch();\n                }\n\n                that._removeAdditionalWrapperClasses();\n\n                that._tabSizes();\n                that._tabPosition();\n                that._scrollable();\n                that._tabAlignment();\n                that._sortable();\n                that._processContentUrls();\n                that._attachEvents();\n\n                if (that.options.value) {\n                    value = that.options.value;\n                }\n\n                that._initialActivate();\n                that.value(value);\n                kendo.notify(that);\n\n\n                if (options._enableDOMDataSource && options.contentUrls) {\n                    that._contentUrls = options.contentUrls.map(function(url) {\n                        return url || DOM_DATASOURCE_EMPTY;\n                    });\n\n                    that._updateContentElements(options._enableDOMDataSource);\n                }\n\n                if (that._showWatermarkOverlay) {\n                    that._showWatermarkOverlay(that.element[0]);\n                }\n            },\n\n            events: [\n                SELECT,\n                ACTIVATE,\n                SHOW,\n                ERROR,\n                CONTENTLOAD,\n                \"change\",\n                \"dataBinding\",\n                \"dataBound\"\n            ],\n\n            options: {\n                name: \"TabStrip\",\n                dataEncodedField: \"\",\n                dataTextField: \"\",\n                dataContentField: \"\",\n                dataImageUrlField: \"\",\n                dataUrlField: \"\",\n                dataSpriteCssClass: \"\",\n                dataContentUrlField: \"\",\n                dataIconField: \"icon\",\n                dataIconPositionField: \"iconPosition\",\n                tabPosition: \"top\",\n                tabAlignment: \"start\",\n                size: \"medium\",\n                tabTemplate: null,\n                animation: {\n                    open: {\n                        effects: \"expand:vertical fadeIn\",\n                        duration: 200\n                    },\n                    close: { // if close animation effects are defined, they will be used instead of open.reverse\n                        duration: 200\n                    }\n                },\n                closable: false,\n                collapsible: false,\n                navigatable: true,\n                contentUrls: false,\n                applyMinHeight: true,\n                scrollable: {\n                    distance: DEFAULTDISTANCE,\n                    scrollButtonsPosition: \"split\",\n                    scrollButtons: \"auto\",\n                },\n                sortable: false,\n                _enableDOMDataSource: false,\n            },\n\n            setDataSource: function(dataSource) {\n                var that = this;\n\n                that.options.dataSource = dataSource;\n                that._dataSource();\n                that.dataSource.fetch();\n            },\n\n            setOptions: function(options) {\n                var that = this,\n                    animation = that.options.animation;\n\n                that._animations(options);\n\n                if (options.contentUrls) {\n                    that._contentUrls = options.contentUrls;\n                }\n\n                options.animation = extend(true, animation, options.animation);\n\n                if (options.navigatable) {\n                    that.tabGroup.on(\"keydown\" + NS, that._keyDownProxy);\n                } else {\n                    that.tabGroup.off(\"keydown\" + NS, that._keyDownProxy);\n                }\n\n                Widget.fn.setOptions.call(that, options);\n            },\n\n            activateTab: function(item) {\n                if (this.tabGroup.children(\"[data-animating]\").length) { return; }\n\n                item = this.tabGroup.find(item);\n\n                var that = this,\n                    animationSettings = that.options.animation,\n                    animation = animationSettings.open,\n                    close = extend({}, animationSettings.close),\n                    hasCloseAnimation = close && \"effects\" in close,\n                    neighbours = item.parent().children(),\n                    oldTab = neighbours.filter(\".\" + ACTIVESTATE),\n                    itemIndex = neighbours.index(item),\n                    isAnimationEnabled = animation && \"duration\" in animation && \"effects\" in animation;\n\n                close = extend( hasCloseAnimation ? close : extend({ reverse: true }, animation), { hide: true });\n                // deactivate previously active tab\n                if (kendo.size(animation.effects)) {\n                    oldTab.kendoRemoveClass(ACTIVESTATE, { duration: close.duration });\n                    item.kendoRemoveClass(HOVERSTATE, { duration: close.duration });\n                } else {\n                    oldTab.removeClass(ACTIVESTATE);\n                    item.removeClass(HOVERSTATE);\n                }\n\n                // handle content elements\n                var contentAnimators = that.contentAnimators;\n\n                if (that.inRequest) {\n                    that.xhr.abort();\n                    that.inRequest = false;\n                }\n\n                if (contentAnimators.length === 0) {\n                    that.tabGroup.find(\".\" + ACTIVESTATE);\n\n                    item.addClass(ACTIVESTATE);\n                    that._current(item, true);\n\n                    that.trigger(\"change\");\n\n                    if (that._scrollableModeActive) {\n                        that._scrollTabsToItem(item);\n                    }\n\n                    return false;\n                }\n\n                var visibleContents = contentAnimators.filter(\".\" + ACTIVESTATE),\n                    contentHolder = that.contentHolder(itemIndex),\n                    contentElement = contentHolder.closest(\".k-tabstrip-content\");\n\n                that.tabsHeight = outerHeight(that.tabGroup) +\n                                  parseInt(that.wrapper.css(\"border-top-width\"), 10) +\n                                  parseInt(that.wrapper.css(\"border-bottom-width\"), 10);\n\n                if (contentHolder.length === 0) {\n                    visibleContents\n                        .removeClass( ACTIVESTATE )\n                        .attr(ARIA_HIDDEN, true)\n                        .kendoStop(true, true)\n                        .kendoAnimate( close );\n                    return false;\n                }\n\n                item.attr(\"data-animating\", true);\n\n                var isAjaxContent = (item.children(\".\" + LINK).data(CONTENTURL) || that._contentUrls[itemIndex] || false) && contentHolder.is(EMPTY),\n                    showContentElement = function() {\n                        oldTab.attr(ARIA_SELECTED, false);\n                        item.attr(ARIA_SELECTED, true);\n                        that.tabGroup.attr(\"aria-activedescendant\", item.attr(\"id\"));\n\n                        that._current(item, true);\n\n                        contentElement\n                            .addClass(ACTIVESTATE)\n                            .removeAttr(ARIA_HIDDEN)\n                            .kendoStop(true, true)\n                            .kendoAnimate( extend({ init: function() {\n                                that.trigger(SHOW, { item: item[0], contentElement: contentHolder[0] });\n                                kendo.resize(contentHolder);\n                            } }, animation, {\n                                complete: function() {\n                                    // See https://github.com/telerik/kendo-ui-core/issues/6660\n                                    that.element.css('min-height', oldMinHeight);\n                                    item.removeAttr(\"data-animating\");\n\n                                    that.trigger(ACTIVATE, { item: item[0], contentElement: contentHolder[0] });\n                                    kendo.resize(contentHolder);\n                                }\n                            } ) );\n                    },\n                    showContent = function() {\n                        if (!isAjaxContent) {\n                            showContentElement();\n                            that.trigger(\"change\");\n                        } else {\n                            item.removeAttr(\"data-animating\");\n                            that.ajaxRequest(item, contentHolder, function() {\n                                item.attr(\"data-animating\", true);\n                                showContentElement();\n                                that.trigger(\"change\");\n                            });\n                        }\n\n                        if (that._scrollableModeActive) {\n                            that._scrollTabsToItem(item);\n                        }\n\n                    };\n\n                // See https://github.com/telerik/kendo-ui-core/issues/6660\n                var oldMinHeight = that.element.css('min-height');\n\n                if (that.options.applyMinHeight) {\n                    that.element.css('min-height', that.element.outerHeight());\n                }\n\n                visibleContents.removeClass(ACTIVESTATE);\n                that.tabGroup.find(\".\" + ACTIVESTATE);\n\n                if (kendo.size(animation.effects)) {\n                    item.kendoAddClass(ACTIVESTATE, { duration: animation.duration });\n                } else {\n                    item.addClass(ACTIVESTATE);\n                }\n\n                visibleContents.attr(ARIA_HIDDEN, true);\n\n                if (visibleContents.length) {\n                    visibleContents\n                        .kendoStop(true, true)\n                        .kendoAnimate(extend( {\n                            complete: showContent\n                       }, close ));\n                } else {\n                    showContent();\n                }\n\n                return true;\n            },\n\n            ajaxRequest: function(element, content, complete, url) {\n                element = this.tabGroup.find(element);\n\n                var that = this,\n                    link = element.find(\".\" + LINK),\n                    data = {};\n\n                url = url || link.data(CONTENTURL) || that._contentUrls[element.index()] || link.attr(HREF);\n                that.inRequest = true;\n\n                var ajaxOptions = {\n                    type: \"GET\",\n                    cache: false,\n                    url: url,\n                    dataType: \"html\",\n                    data: data,\n                    xhr: ajaxXhr,\n\n                    error: function(xhr, status) {\n                        if (that.trigger(\"error\", { xhr: xhr, status: status })) {\n                            this.complete();\n                        }\n                    },\n\n                    complete: function(xhr) {\n                        that.inRequest = false;\n                    },\n\n                    success: function(data) {\n                        try {\n                            kendo.destroy(content);\n                            content.html(data);\n                        } catch (e) {\n                            this.error(this.xhr, \"error\");\n                        }\n\n                        if (complete) {\n                            complete.call(that, content);\n                        }\n\n                        that.trigger(CONTENTLOAD, { item: element[0], contentElement: content[0] });\n                    }\n                };\n\n                if (typeof url === \"object\") {\n                    ajaxOptions = $.extend(true, {}, ajaxOptions, url);\n\n                    if (isFunction(ajaxOptions.url)) {\n                        ajaxOptions.url = ajaxOptions.url();\n                    }\n\n                    if (isFunction(ajaxOptions.data)) {\n                        ajaxOptions.data = ajaxOptions.data();\n                    }\n                }\n\n                that.xhr = $.ajax(ajaxOptions);\n            },\n\n            append: function(tab) {\n                var that = this,\n                    inserted = that._create(tab);\n\n                each(inserted.tabs, function(idx) {\n                    var contents = inserted.contents[idx];\n                    that.tabGroup.append(this);\n                    if (that.options.tabPosition == \"bottom\") {\n                        that.tabWrapper.before(contents);\n                    } else {\n                        that.wrapper.append(contents);\n                    }\n                });\n\n                updateFirstLast(that.tabGroup);\n                that._updateContentElements();\n                that.resize(true);\n\n                return that;\n            },\n\n            contentElement: function(itemIndex) {\n                if (isNaN(itemIndex - 0)) {\n                    return undefined$1;\n                }\n\n                var contentElements = this.contentElements && this.contentElements[0] && !kendo.kineticScrollNeeded ? this.contentElements : this.contentAnimators;\n                var id = $(this.tabGroup.children()[itemIndex]).attr(ARIA_CONTROLS);\n\n                if (contentElements) {\n                    for (var i = 0, len = contentElements.length; i < len; i++) {\n                        if (contentElements.eq(i).closest(\".k-tabstrip-content\")[0].id == id) {\n                            return contentElements[i];\n                        }\n                    }\n                }\n\n                return undefined$1;\n            },\n\n            contentHolder: function(itemIndex) {\n                var contentElement = $(this.contentElement(itemIndex)),\n                    scrollContainer = contentElement.children(\".km-scroll-container\");\n\n                return kendo.support.touch && scrollContainer[0] ? scrollContainer : contentElement;\n            },\n\n            deactivateTab: function(item) {\n                var that = this,\n                    animationSettings = that.options.animation,\n                    animation = animationSettings.open,\n                    close = extend({}, animationSettings.close),\n                    hasCloseAnimation = close && \"effects\" in close;\n                item = that.tabGroup.find(item);\n\n                close = extend( hasCloseAnimation ? close : extend({ reverse: true }, animation), { hide: true });\n\n                if (kendo.size(animation.effects)) {\n                    item.kendoRemoveClass(ACTIVESTATE, { duration: animation.duration });\n                } else {\n                    item.removeClass(ACTIVESTATE);\n                }\n\n                item.attr(ARIA_SELECTED, false);\n                that.tabGroup.removeAttr(\"aria-activedescendant\");\n\n                that.contentAnimators\n                        .filter(\".\" + ACTIVESTATE)\n                        .kendoStop(true, true)\n                        .kendoAnimate( close )\n                        .removeClass(ACTIVESTATE)\n                        .attr(ARIA_HIDDEN, true);\n            },\n\n            _removeAdditionalWrapperClasses: function() {\n                const that = this;\n\n                that.wrapper.removeClass(\"k-tabstrip-sm k-tabstrip-md k-tabstrip-lg\");\n                that.tabGroup.removeClass(\"k-tabstrip-items-start k-tabstrip-items-center k-tabstrip-items-end k-tabstrip-items-justify k-tabstrip-items-stretched\");\n            },\n\n            destroy: function() {\n                var that = this;\n                const isHidden = that.options.scrollable && that.options.scrollable.scrollButtons === \"hidden\";\n                Widget.fn.destroy.call(that);\n\n                if (that._refreshHandler) {\n                    that.dataSource.unbind(\"change\", that._refreshHandler);\n                }\n\n                if (that.options.scrollable && isHidden) {\n                    that.tabGroup.unbind(\"scroll\" + NS);\n                }\n\n                that._removeAdditionalWrapperClasses();\n\n                that.wrapper.off(NS);\n                that.tabGroup.off(NS);\n\n                if (that._scrollableModeActive && !isHidden) {\n                    that._scrollPrevButton.off().remove();\n                    that._scrollNextButton.off().remove();\n                }\n\n                kendo.destroy(that.wrapper);\n            },\n\n            disable: function(element) {\n                this._toggleDisabled(element, false);\n\n                return this;\n            },\n\n            enable: function(element, state) {\n                this._toggleDisabled(element, state !== false);\n\n                return this;\n            },\n\n            insertAfter: function(tab, referenceTab) {\n                if ($(tab).is($(referenceTab))) {\n                    referenceTab = this.tabGroup.find(referenceTab).prev();\n                } else {\n                    referenceTab = this.tabGroup.find(referenceTab);\n                }\n\n                var that = this,\n                    inserted = that._create(tab),\n                    referenceContent = that.element.find(\"[id='\" + referenceTab.attr(ARIA_CONTROLS) + \"']\");\n\n                each(inserted.tabs, function(idx) {\n                    var contents = inserted.contents[idx];\n                    var fromIndex = inserted.newTabsCreated ? that._contentUrls.length - (inserted.tabs.length - idx) : $(contents).index() - 1;\n\n                    referenceTab.after(this);\n                    referenceContent.after(contents);\n\n                    that._moveUrlItem(fromIndex, $(this).index());\n                });\n\n                updateFirstLast(that.tabGroup);\n                that._updateContentElements(inserted.newTabsCreated);\n                that.resize(true);\n\n                return that;\n            },\n\n            insertBefore: function(tab, referenceTab) {\n                if ($(tab).is($(referenceTab))) {\n                    referenceTab = this.tabGroup.find(referenceTab).next();\n                } else {\n                    referenceTab = this.tabGroup.find(referenceTab);\n                }\n\n                var that = this,\n                    inserted = that._create(tab),\n                    referenceContent = that.element.find(\"[id='\" + referenceTab.attr(ARIA_CONTROLS) + \"']\");\n\n                each(inserted.tabs, function(idx) {\n                    var contents = inserted.contents[idx];\n                    var fromIndex = inserted.newTabsCreated ? that._contentUrls.length - (inserted.tabs.length - idx) : $(contents).index() - 1;\n\n                    referenceTab.before(this);\n                    referenceContent.before(contents);\n\n                    that._moveUrlItem(fromIndex, $(this).index());\n                });\n\n                updateFirstLast(that.tabGroup);\n                that._updateContentElements(inserted.newTabsCreated);\n                that.resize(true);\n\n                return that;\n            },\n\n            items: function() {\n                return this.tabGroup[0].children;\n            },\n\n            refresh: function(e) {\n                var that = this,\n                    options = that.options,\n                    encoded = kendo.getter(options.dataEncodedField),\n                    text = kendo.getter(options.dataTextField),\n                    content = kendo.getter(options.dataContentField),\n                    contentUrl = kendo.getter(options.dataContentUrlField),\n                    image = kendo.getter(options.dataImageUrlField),\n                    url = kendo.getter(options.dataUrlField),\n                    sprite = kendo.getter(options.dataSpriteCssClass),\n                    icon = kendo.getter(options.dataIconField),\n                    iconPosition = kendo.getter(options.dataIconPositionField),\n                    idx,\n                    tabs = [],\n                    tab,\n                    action,\n                    view = that.dataSource.view(),\n                    length;\n\n                const enableDOMDataSource = that._enableDataSourceFromDOM;\n                const pristineData = that.dataSource._pristineData;\n\n                e = e || {};\n                action = e.action;\n\n                if (action) {\n                   view = e.items;\n                }\n\n                for (idx = 0, length = view.length; idx < length; idx ++) {\n                    tab = {\n                        text: (view[idx] && view[idx].text) || text(view[idx]),\n                    };\n\n                    if (options.tabTemplate) {\n                        tab.model = view[idx];\n                        tab.template = options.tabTemplate;\n                    }\n\n                    if (options.dataEncodedField) {\n                        tab.encoded = encoded(view[idx]);\n                    }\n\n                    if (options.dataContentField) {\n                        tab.content = content(view[idx]);\n                    }\n\n                    if (options.dataContentUrlField) {\n                        tab.contentUrl = contentUrl(view[idx]);\n                    }\n\n                    if (options.dataUrlField) {\n                        tab.url = url(view[idx]);\n                    }\n\n                    if (options.dataImageUrlField) {\n                        tab.imageUrl = image(view[idx]);\n                    }\n\n                    if (options.dataSpriteCssClass) {\n                        tab.spriteCssClass = sprite(view[idx]);\n                    }\n\n                    if (view[idx].actions) {\n                        const actions = typeof view[idx].actions === 'object' ? Array.from(view[idx].actions) : view[idx].actions;\n                        tab.actions = actions;\n                    }\n\n                    if (icon(view[idx]) || view[idx].iconClass) {\n                        tab.icon = icon(view[idx]);\n                        tab.iconClass = view[idx].iconClass;\n                        tab.iconPosition = iconPosition(view[idx]) ?? 'before';\n                    }\n\n                    tab.enabled = view[idx].enabled;\n                    tab.closable = view[idx].closable ?? options.closable;\n\n                    if (pristineData) {\n                        tab.attributes = pristineData[idx].attributes;\n                    }\n\n                    if (view[idx].content) {\n                        tab.content = view[idx].content;\n                    }\n\n                    tabs[idx] = tab;\n                }\n\n                if (e.action == \"add\") {\n                    if (e.index < that.tabGroup.children().length) {\n                        that.insertBefore(tabs, that.tabGroup.children().eq(e.index));\n                    } else {\n                        that.append(tabs);\n                    }\n                } else if (e.action == \"remove\") {\n                    for (idx = 0; idx < view.length; idx++) {\n                       that.remove(e.index);\n                    }\n                } else if (e.action == \"itemchange\") {\n                    idx = that.dataSource.view().indexOf(view[0]);\n                    if (e.field === options.dataTextField) {\n                        that.tabGroup.children().eq(idx).find(\".k-link\").text(view[0].get(e.field));\n                    }\n\n                    if (e.field === options.dataUrlField) {\n                        that._contentUrls[idx] = view[0].get(e.field);\n                    }\n                } else if (enableDOMDataSource && kendo.isPresent(that.dataSource)) {\n                    that._wrapExistingDOMItems();\n                    that._updateContentElements();\n                    that._enableDataSourceFromDOM = false;\n                } else {\n                    that.trigger(\"dataBinding\");\n                    that.remove(\"li\");\n                    that._contentUrls = [];\n                    that.append(tabs);\n                    that.trigger(\"dataBound\");\n                }\n            },\n\n            _wrapExistingDOMItems: function() {\n               const that = this;\n               const items = that.tabGroup.children(\"li\");\n               const dataSource = that.dataSource;\n               const dataItems = dataSource.view();\n\n               dataItems.forEach((dataItem, index) => {\n                    const item = items.eq(index);\n                    const linkContainer = item.find(\".\" + LINK);\n                    const tabText = linkContainer.find(\".\" + LINK_TEXT);\n                    const checkActions = (kendo.isPresent(dataItem.actions) && dataItem.actions.length) || (dataItem.closable) || (!dataItem.closable && that.options.closable);\n\n                    if (dataItem.contentUrl) {\n                        linkContainer.attr(\"data-content-url\", dataItem.contentUrl);\n                    }\n\n                    if (!that.options.contentUrls) {\n                        that._contentUrls.push(dataItem.contentUrl || DOM_DATASOURCE_EMPTY);\n                    }\n\n                    if (dataItem.icon || dataItem.iconClass) {\n                        if (dataItem.iconPosition === 'before') {\n                            linkContainer.prepend(kendo.ui.icon({ icon: dataItem.icon || \"none\", iconClass: dataItem.iconClass }));\n                        }\n                        if (dataItem.iconPosition === 'after') {\n                            linkContainer.append(kendo.ui.icon({ icon: dataItem.icon || \"none\", iconClass: dataItem.iconClass }));\n                        }\n                    }\n\n                    let template = \"\";\n                    if (dataItem.imageUrl) {\n                        template += templates.image({ imageUrl: dataItem.imageUrl });\n                    }\n\n                    if (dataItem.spriteCssClass) {\n                        template += templates.sprite({ spriteCssClass: dataItem.spriteCssClass });\n                    }\n\n                    linkContainer.prepend(template);\n\n                    if (checkActions) {\n                        that._initTabActions(item, dataItem);\n                    }\n\n                    if (dataItem.text) {\n                        const text = dataItem.encoded ? kendo.htmlEncode(dataItem.text) : dataItem.text;\n                        tabText.text(text);\n                    }\n\n                    if (item.attr(\"data-content\") && !dataItem.contentUrl) {\n                        let tabContent = that.contentElements.eq(index);\n                        tabContent.text(dataItem.content);\n                    }\n\n                    if (dataItem.hasOwnProperty(\"enabled\")) {\n                        dataItem.enabled ? item\n                                            .removeClass(DISABLEDSTATE)\n                                            .attr(ARIA_DISABLED, true)\n                                        : item\n                                           .addClass(DISABLEDSTATE)\n                                           .removeAttr(ARIA_DISABLED, false);\n                    }\n                    else if (item.hasClass(DISABLEDSTATE)) {\n                        item.addClass(DISABLEDSTATE)\n                            .removeAttr(ARIA_DISABLED, false);\n                    }\n               });\n            },\n\n            reload: function(element) {\n                element = this.tabGroup.find(element);\n                var that = this;\n                var contentUrls = that._contentUrls;\n\n                element.each(function() {\n                    var item = $(this),\n                        contentUrl = item.find(\".\" + LINK).data(CONTENTURL) || contentUrls[item.index()],\n                        content = that.contentHolder(item.index());\n\n                    if (contentUrl) {\n                        that.ajaxRequest(item, content, null, contentUrl);\n                    }\n                });\n\n                return that;\n            },\n\n            remove: function(elements) {\n                var that = this;\n                var type = typeof elements;\n                var contents;\n\n                if (type === \"string\") {\n                    elements = that.tabGroup.find(elements);\n                } else if (type === \"number\") {\n                    elements = that.tabGroup.children().eq(elements);\n                }\n\n                contents = elements.map(function() {\n                    var idx = $(this).index();\n                    var content = that.contentElement(idx);\n\n                    kendo.destroy(content);\n                    that._removeUrlItem(idx);\n\n                    return content;\n                });\n\n                elements.remove();\n                contents.empty();\n                contents.remove();\n\n                that._updateContentElements();\n                that.resize(true);\n\n                return that;\n            },\n\n            select: function(element) {\n                var that = this;\n\n                if (arguments.length === 0) {\n                    return that.tabGroup.children(\"li.\" + ACTIVESTATE);\n                }\n\n                if (!isNaN(element)) {\n                    element = that.tabGroup.children().get(element);\n                }\n\n                element = that.tabGroup.find(element);\n                $(element).each(function(index, item) {\n                    item = $(item);\n                    if (!item.hasClass(ACTIVESTATE) && !that.trigger(SELECT, { item: item[0], contentElement: that.contentHolder(item.index())[0] })) {\n                        that.activateTab(item);\n                        that.tabGroup.attr(\"aria-activedescendant\", item.attr(\"id\"));\n                    }\n                });\n\n                return that;\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value !== undefined$1) {\n                    if (value != that.value()) {\n                       that.tabGroup.children().each(function() {\n                            if (kendo.trim($(this).text()) == value) {\n                                that.select(this);\n                            }\n                       });\n                    }\n                } else {\n                    return that.select().text();\n                }\n            },\n\n            _initTabActions: function(tab, tabOptions) {\n                const that = this;\n                const tabElement = $(tab);\n                let actions = [];\n                let isClosable = tabOptions.closable;\n\n                let closeButtonAttributes = { icon: \"x\", attributes: { \"ref-close-button\": true }, action: that._handleClose };\n\n                if (tabOptions.actions) {\n                    actions = Array.from(tabOptions.actions);\n                }\n\n                if (isClosable) {\n                    actions.push(closeButtonAttributes);\n                }\n\n                if (actions?.length) {\n                    const actionsWrapperTemplate = $(templates.itemActionsWrapperTemplate());\n                    const existingActionButtons = tabElement.find(\"button\");\n\n                    actions.forEach((action, index) => {\n                        const isClosableAction = isClosable && index > existingActionButtons.length - 1;\n\n                        if (existingActionButtons.length && !isClosableAction) {\n                            action.element = existingActionButtons.eq(index);\n                        }\n\n                        const actionTemplate = $(templates.itemActionTemplate(action));\n\n                        if (!existingActionButtons.length) {\n                            actionsWrapperTemplate.append(actionTemplate);\n                        }\n\n                        if (isClosableAction && existingActionButtons.length) {\n                            existingActionButtons.parent().append(actionTemplate);\n                        }\n\n                        if (isFunction(action?.action)) {\n                            if (!existingActionButtons.length || isClosableAction) {\n                                actionTemplate.bind(CLICK, action.action.bind(that));\n                            } else {\n                                existingActionButtons.eq(index).bind(CLICK, action.action.bind(that));\n                            }\n                        }\n                    });\n\n                    if (existingActionButtons.length) {\n                        existingActionButtons.wrapAll(actionsWrapperTemplate);\n                    } else {\n                        tabElement.append(actionsWrapperTemplate);\n                    }\n                }\n\n                return tabElement[0];\n            },\n\n            _handleClose: function(e) {\n                const that = this;\n                const target = $(e.currentTarget);\n\n                const tab = target.closest('.k-item');\n\n                if (tab.hasClass(ACTIVESTATE)) {\n\n                    if (tab.prev().length > 0) {\n                        that.activateTab(tab.prev());\n                    } else {\n                        that.activateTab(tab.next());\n                    }\n                }\n\n                that.remove(tab);\n            },\n\n            _tabAlignment: function() {\n                const that = this;\n\n                let tabAlignment = that.options.tabAlignment;\n\n                if (that._scrollableModeActive) {\n                    tabAlignment = 'start';\n                }\n\n                that.tabGroup.addClass(\"k-tabstrip-items-\" + tabAlignment);\n\n            },\n\n            _active: function() {\n                var that = this;\n                setTimeout(function() {\n                    var item = that.tabGroup.children().filter(\".\" + ACTIVESTATE);\n\n                    item = item[0] ? item : that._endItem(\"first\");\n                    if (item[0]) {\n                        that._current(item);\n                    }\n                }, 100);\n            },\n\n            _animations: function(options) {\n                if (options && (\"animation\" in options) && !options.animation) {\n                    options.animation = { open: { effects: {} }, close: { effects: {} } }; // No animation\n                }\n            },\n\n            _appendUrlItem: function(url) {\n                this._contentUrls.push(url);\n            },\n\n            _attachEvents: function() {\n                var that = this,\n                    options = that.options;\n\n                that.tabGroup\n                    .on(CLICK + NS, \".k-disabled .k-link\", false)\n                    .on(CLICK + NS, \" > \" + NAVIGATABLEITEMS, that._itemClick.bind(that));\n\n                that.wrapper.on(\"focus\" + NS, function() { that.tabGroup.trigger(\"focus\"); });\n\n                if (options.scrollable && options.scrollable.scrollButtons === \"hidden\") {\n                    that.tabGroup.bind(\"scroll\", function(e) {\n                        that._toggleScrollButtons();\n                    });\n                }\n\n                that.tabGroup\n                    .on(MOUSEENTER + NS + \" \" + MOUSELEAVE + NS, HOVERABLEITEMS, that._toggleHover)\n                    .on(\"focus\" + NS, that._active.bind(that))\n                    .on(\"blur\" + NS, function() { that._current(null); });\n\n                that._keyDownProxy = that._keydown.bind(that);\n\n                if (options.navigatable) {\n                    that.tabGroup.on(\"keydown\" + NS, that._keyDownProxy);\n                }\n\n                $(window).on('resize' + NS, that._resize.bind(that));\n            },\n\n            _click: function(item) {\n                var that = this,\n                    link = item.find(\".\" + LINK),\n                    href = link.attr(HREF),\n                    collapse = that.options.collapsible,\n                    index = item.index(),\n                    contentHolder = that.contentHolder(index),\n                    prevent, isAnchor,\n                    neighbours = item.parent().children(),\n                    oldFocusedTab = neighbours.filter(\".\" + FOCUSEDSTATE);\n\n                if (item.closest(\".k-tabstrip\")[0] != that.wrapper[0]) {\n                    return;\n                }\n\n                if (item.is(\".\" + DISABLEDSTATE + (!collapse ? \",.\" + ACTIVESTATE : \"\"))) {\n                    oldFocusedTab.removeClass(FOCUSEDSTATE);\n                    that._focused = item;\n\n                    item.addClass(FOCUSEDSTATE);\n                    that._current(item);\n\n                    if (that._scrollableModeActive) {\n                        that._scrollTabsToItem(item);\n                    }\n                    return true;\n                }\n\n                isAnchor = link.data(CONTENTURL) || that._contentUrls[index] || (href && (href.charAt(href.length - 1) == \"#\" || href.indexOf(\"#\" + that.element[0].id + \"-\") != -1));\n                prevent = !href || isAnchor;\n\n                if (that.tabGroup.children(\"[data-animating]\").length) {\n                    return prevent;\n                }\n\n                if (that.trigger(SELECT, { item: item[0], contentElement: contentHolder[0] })) {\n                    return true;\n                }\n\n                if (prevent === false) {\n                    return;\n                }\n\n                if (collapse && item.is(\".\" + ACTIVESTATE)) {\n                    that.deactivateTab(item);\n                    return true;\n                }\n\n                if (that.activateTab(item)) {\n                    that._current(item);\n                    prevent = true;\n                }\n\n                return prevent;\n            },\n\n            _create: function(tab) {\n                var that = this,\n                tabs,\n                contents,\n                content,\n                newTabsCreated = false;\n\n                tab = tab instanceof kendo.data.ObservableArray ? tab.toJSON() : tab;\n\n                if ($.isPlainObject(tab) || Array.isArray(tab)) {\n                    tab = Array.isArray(tab) ? tab : [tab];\n                    newTabsCreated = true;\n\n                    tabs = map(tab, function(value, idx) {\n                        that._appendUrlItem(tab[idx].contentUrl || null);\n                        const renderedTabItem = TabStrip.renderItem({\n                            group: that.tabGroup,\n                            item: extend(value, { index: idx })\n                        });\n\n                        value.closable = value.closable ?? that.options.closable;\n                        return $(that._initTabActions(renderedTabItem, value));\n                    });\n\n                    contents = map( tab, function(value, idx) {\n                                if (typeof value.content == \"string\" || value.contentUrl) {\n                                    let tabstripContent = $(TabStrip.renderContent({\n                                        item: extend(value, { index: idx })\n                                    }));\n\n                                    kendo.applyStylesFromKendoAttributes(tabstripContent, [\"display\"]);\n                                    return tabstripContent;\n                                }\n                            });\n                } else {\n                    if (typeof tab == \"string\" && tab[0] != \"<\") {\n                        tabs = that.element.find(tab);\n                    } else {\n                        tabs = $(tab);\n                    }\n                    contents = $();\n                    tabs.each(function() {\n                        if (/k-tabstrip-items/.test(this.parentNode.className)) {\n                            var element = that.element.find(\"[id='\" + this.getAttribute(ARIA_CONTROLS) + \"']\");\n                            content = element;\n                        } else {\n                            content = $(\"<div class='\" + CONTENT + \"'/>\");\n                        }\n\n                        contents = contents.add(content);\n                    });\n\n                    updateTabClasses(tabs, that.options);\n                }\n\n                return { tabs: tabs, contents: contents, newTabsCreated: newTabsCreated };\n            },\n\n            _current: function(candidate, preventFocus) {\n                var that = this,\n                    focused = that._focused;\n\n                if (candidate === undefined$1) {\n                    return focused;\n                }\n\n                if (focused && candidate && focused[0] === candidate[0]) {\n                    focused = false;\n                }\n\n                if (focused) {\n                    focused.removeClass(FOCUSEDSTATE);\n                }\n\n                if (candidate && !preventFocus) {\n                    candidate.addClass(FOCUSEDSTATE);\n                }\n\n                that._focused = candidate;\n            },\n\n            _dataSource: function() {\n                var that = this;\n\n                if (that.dataSource && that._refreshHandler) {\n                    that.dataSource.unbind(\"change\", that._refreshHandler);\n                } else {\n                    that._refreshHandler = that.refresh.bind(that);\n                }\n                const dataSource = that.options.dataSource || that._createDataSourceFromDOM();\n\n                that.dataSource = kendo.data.DataSource.create(dataSource)\n                                    .bind(\"change\", that._refreshHandler);\n            },\n\n            _createDataSourceFromDOM: function() {\n                const that = this;\n                const dataSourceOptions = [];\n                const enableDOMDataSource = that.options._enableDOMDataSource;\n                const itemOptions = [\n                    \"text\",\n                    \"content\",\n                    \"icon\",\n                    \"iconPosition\",\n                    \"iconClass\",\n                    \"spriteCssClass\",\n                    \"imageUrl\",\n                    \"contentUrl\",\n                    \"encoded\",\n                    \"closable\",\n                    \"actions\",\n                    \"enabled\",\n                ];\n\n                const actionOptions = [\n                    \"icon\",\n                    \"iconClass\",\n                    \"text\",\n                    \"action\"\n                ];\n\n                if (!enableDOMDataSource) {\n                    return that.options.dataSource;\n                }\n\n                const dataItems = that.tabGroup.children(\"li\");\n                const contentElements = that.contentElements;\n\n                that._enableDataSourceFromDOM = dataItems.length > 0;\n                dataItems.each(function(idx, item) {\n                    const $item = $(item);\n                    const actions = $item.find(\"button\");\n                    const itemData = {};\n\n                    itemOptions.forEach(function(option) {\n                        let data = $item.data(option);\n\n                        if (option === \"text\" && !data) {\n                            data = $item\n                                .find(\".k-link-text\")\n                                .text()\n                                .trim();\n                        }\n\n                        if (option === \"content\" && !data) {\n                            const content = $(contentElements[idx]);\n                            if (content.length) {\n                                data = content.html();\n                            }\n                        }\n\n                        if (option === \"closable\" && data === undefined$1) {\n                            data = that.options.closable;\n                        }\n\n                        if (data !== undefined$1) {\n                            itemData[option] = data;\n                        }\n                    });\n\n                    if (itemData.iconPosition === undefined$1) {\n                        itemData.iconPosition = \"before\";\n                    }\n\n                    if (actions.length) {\n                        itemData.actions = [];\n                        that._decorateActions(actions, actionOptions, itemData);\n                    }\n\n                    dataSourceOptions.push(itemData);\n                });\n\n                return dataSourceOptions;\n            },\n\n            _decorateActions: function(actions, actionOptions, itemData) {\n                actions.each(function(idx, action) {\n                      const $action = $(action);\n                      const actionData = {};\n                      actionOptions.forEach(function(option) {\n                          let data = $action.data(option);\n\n                          if (option === \"text\" && !data) {\n                              data = kendo.htmlEncode($action.text().trim());\n                          }\n\n                          if (option === \"action\" && typeof data === \"string\") {\n                              let fn = window[data];\n                              if (typeof fn === \"function\") {\n                                  data = fn;\n                              }\n                          }\n\n                          if (data !== undefined$1) {\n                              actionData[option] = data;\n                          }\n                      }, this);\n                      itemData.actions.push(actionData);\n                });\n            },\n\n            _elementId: function(element, idx, tab) {\n                var elementId = element.attr(\"id\"),\n                    wrapperId = this.element.attr(\"id\"),\n                    guid = kendo.guid();\n\n                if (!elementId || elementId.indexOf(wrapperId + \"-\") > -1) {\n                    var tabStripID = (wrapperId || guid) + \"-\";\n\n                    if (tab) {\n                        tabStripID += \"tab-\";\n                    }\n\n                    return tabStripID + (idx + 1);\n                }\n\n                return elementId;\n            },\n\n            _endItem: function(action) {\n                return this.tabGroup.children(NAVIGATABLEITEMS)[action]();\n            },\n\n            _getItem: function(action) {\n                return this.tabGroup.children(KEYBOARDNAVIGATABLEITEMS)[action]();\n            },\n\n            _initialActivate: function() {\n                var that = this,\n                    selectedItems = that.tabGroup.children(\"li.\" + ACTIVESTATE),\n                    content = that.contentHolder(selectedItems.index());\n\n                if (selectedItems[0] && content.length > 0 && content[0].childNodes.length === 0) {\n                    that.activateTab(selectedItems.eq(0));\n                }\n            },\n\n            _item: function(item, action) {\n                var endItem;\n                if (action === PREV) {\n                    endItem = \"last\";\n                } else {\n                    endItem = \"first\";\n                }\n\n                if (!item) {\n                    return this._endItem(endItem);\n                }\n\n                item = item[action]();\n\n                if (!item[0]) {\n                    item = this.tabGroup.children(KEYBOARDNAVIGATABLEITEMS)[endItem]();\n                }\n\n                if (item.hasClass(DISABLEDSTATE)) {\n                    item.addClass(FOCUSEDSTATE);\n                }\n                if (item.hasClass(DISABLEDSTATE) || item.hasClass(ACTIVESTATE)) {\n                    this._focused = item;\n                }\n\n                return item;\n            },\n\n            _itemClick: function(e) {\n                var that = this,\n                    tabGroup = that.tabGroup[0];\n\n                if (e.target.closest('.k-item-actions')) {\n                    return;\n                }\n\n                if (tabGroup !== document.activeElement) {\n                    var msie = kendo.support.browser.msie;\n                    if (msie) {\n                        try {\n                            // does not scroll to the active element\n                            tabGroup.setActive();\n                        } catch (j) {\n                            tabGroup.focus();\n                        }\n                    } else {\n                        tabGroup.focus();\n                    }\n                }\n\n                if (that._click($(e.currentTarget))) {\n                    e.preventDefault();\n                }\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    key = e.keyCode,\n                    current = that._current(),\n                    rtl = that._isRtl,\n                    isHorizontal = /top|bottom/.test(that.options.tabPosition),\n                    action;\n\n                if (e.target != e.currentTarget || !current) {\n                    return;\n                }\n\n                if (key === keys.DOWN && !isHorizontal) {\n                    action = NEXT;\n                } else if (key === keys.UP && !isHorizontal) {\n                    action = PREV;\n                } else if (key === keys.RIGHT && isHorizontal) {\n                    action = rtl ? PREV : NEXT;\n                } else if (key === keys.LEFT && isHorizontal) {\n                    action = rtl ? NEXT : PREV;\n                } else if (key == keys.ENTER || key == keys.SPACEBAR) {\n                    that._click(current);\n                    e.preventDefault();\n                } else if (key == keys.HOME) {\n                    that._click(that._getItem(\"first\"));\n                    e.preventDefault();\n                    return;\n                } else if (key == keys.END) {\n                    that._click(that._getItem(\"last\"));\n                    e.preventDefault();\n                    return;\n                }\n\n                if (action) {\n                    that._click(that._item(current, action));\n                    e.preventDefault();\n                }\n            },\n\n            _moveUrlItem: function(from, to) {\n                this._contentUrls.splice(to, 0, this._contentUrls.splice(from, 1)[0]);\n            },\n\n            _processContentUrls: function() {\n                var that = this;\n\n                if (that._contentUrls.length) {\n                    that.tabGroup.children(\".k-item.k-tabstrip-item\")\n                        .each(function(index, item) {\n                            var url = that._contentUrls[index];\n\n                            if (typeof url === 'string') {\n                                $(item).find(\">.\" + LINK).data(CONTENTURL, url);\n                            }\n                        });\n                } else {\n                    that._contentUrls.length = that.tabGroup.find(\"li.k-item.k-tabstrip-item\").length;\n                }\n            },\n\n            _removeUrlItem: function(index) {\n                this._contentUrls.splice(index, 1);\n            },\n\n            _resize: function() {\n                this._scrollable();\n            },\n\n            _getChildrenWidth: function(element) {\n                let width = 0;\n                element.children().each(function() {\n                    width += outerWidth($(this));\n                });\n                return Math.floor(width);\n            },\n\n            _getChildrenHeight: function(element) {\n                let height = 0;\n                element.children().each(function() {\n                    height += outerHeight($(this));\n                });\n                return Math.floor(height);\n            },\n\n            _scrollable: function() {\n                const that = this,\n                    options = that.options,\n                    scrollButtonsPosition = options.scrollable.scrollButtonsPosition,\n                    scrollButtonsVisibility = options.scrollable.scrollButtons,\n                    isHorizontal = options.tabPosition == \"top\" || options.tabPosition == \"bottom\",\n                    isHidden = scrollButtonsVisibility === \"hidden\",\n                    isVisible = scrollButtonsVisibility === \"visible\";\n\n                let wrapperOffset,\n                tabGroupScroll,\n                    scrollPrevButton,\n                    scrollNextButton;\n\n                if (that._scrollableAllowed()) {\n\n                    that.wrapper.addClass(\"k-tabstrip-scrollable\");\n\n                    wrapperOffset = isHorizontal ? that.wrapper[0].offsetWidth : that.wrapper[0].offsetHeight;\n                    tabGroupScroll = isHorizontal ? that.tabGroup[0].scrollWidth : that.tabGroup[0].scrollHeight;\n                    const condition = isHorizontal ? (that._getChildrenWidth(that.tabGroup) > that.tabGroup.outerWidth()) : (that._getChildrenHeight(that.tabGroup) > that.tabGroup.outerHeight());\n                    const enableScroll = (tabGroupScroll > wrapperOffset) || condition;\n\n                    if (enableScroll && !that._scrollableModeActive && isHidden) {\n                        that.tabGroup.addClass(\"k-tabstrip-items-scroll\");\n                        that.wrapper.addClass(\"k-tabstrip-scrollable-overlay\");\n\n                        that._scrollableModeActive = true;\n                        that._toggleScrollButtons();\n                    } else if ((enableScroll || isVisible) && !that._scrollableModeActive) {\n                        that._nowScrollingTabs = false;\n                        that._isRtl = kendo.support.isRtl(that.element);\n                        const mouseDown = kendo.support.touch ? \"touchstart\" : \"mousedown\";\n                        const mouseUp = kendo.support.touch ? \"touchend\" : \"mouseup\";\n                        const browser = kendo.support.browser;\n                        const isRtlScrollDirection = that._isRtl && !browser.msie && !browser.edge;\n                        const prevIcon = isHorizontal ? \"caret-alt-left\" : \"caret-alt-up\";\n                        const nextIcon = isHorizontal ? \"caret-alt-right\" : \"caret-alt-down\";\n\n                        const scrollLeft = scrollButtonHtml(\"prev\", prevIcon);\n                        const scrollRight = scrollButtonHtml(\"next\", nextIcon);\n\n                        switch (scrollButtonsPosition) {\n                            case 'split':\n                                that.tabWrapper.prepend(scrollLeft);\n                                that.tabWrapper.append(scrollRight);\n                                break;\n                            case 'start':\n                                that.tabWrapper.prepend(scrollRight);\n                                that.tabWrapper.prepend(scrollLeft);\n                                break;\n                            case 'end':\n                                that.tabWrapper.append(scrollLeft);\n                                that.tabWrapper.append(scrollRight);\n                                break;\n                        }\n\n                        scrollPrevButton = that._scrollPrevButton = that.tabWrapper.children(\".k-tabstrip-prev\");\n                        scrollNextButton = that._scrollNextButton = that.tabWrapper.children(\".k-tabstrip-next\");\n\n                        scrollPrevButton.on(mouseDown + NS, function() {\n                            that._nowScrollingTabs = true;\n                            that._scrollTabsByDelta(options.scrollable.distance * (isRtlScrollDirection ? 1 : -1));\n                        });\n\n                        scrollNextButton.on(mouseDown + NS, function() {\n                            that._nowScrollingTabs = true;\n                            that._scrollTabsByDelta(options.scrollable.distance * (isRtlScrollDirection ? -1 : 1));\n                        });\n\n                        scrollPrevButton.add(scrollNextButton).on(mouseUp + NS, function() {\n                            that._nowScrollingTabs = false;\n                        });\n\n                        that._scrollableModeActive = true;\n\n                        that._toggleScrollButtons();\n                    } else if (that._scrollableModeActive && !enableScroll && !isVisible) {\n                        that._scrollableModeActive = false;\n\n                       that._removeScrollableClasses();\n\n                       that._scrollPrevButton && that._scrollPrevButton.off().remove();\n                       that._scrollNextButton && that._scrollNextButton.off().remove();\n                    } else if (!that._scrollableModeActive && !isVisible) {\n                        that._removeScrollableClasses();\n                    } else {\n                        that._toggleScrollButtons();\n                    }\n                }\n            },\n\n            _removeScrollableClasses: function() {\n                const that = this;\n                const isHidden = that.options.scrollable.scrollButtons === \"hidden\";\n\n                that.wrapper.removeClass(\"k-tabstrip-scrollable\");\n\n                if (isHidden) {\n                    that.wrapper.removeClass(\"k-tabstrip-scrollable-overlay\");\n                    that.wrapper.removeClass(\"k-tabstrip-scrollable-start\");\n                    that.wrapper.removeClass(\"k-tabstrip-scrollable-end\");\n\n                    that.tabGroup.removeClass(\"k-tabstrip-items-scroll\");\n                }\n            },\n\n            _scrollableAllowed: function() {\n                var options = this.options;\n\n                if (options.scrollable && !options.scrollable.distance) {\n                    options.scrollable = { distance: DEFAULTDISTANCE };\n                }\n                return options.scrollable && !isNaN(options.scrollable.distance);\n            },\n\n            _scrollTabsToItem: function(item) {\n                var that = this,\n                    tabGroup = that.tabGroup,\n                    isHorizontal = that.options.tabPosition == \"top\" || that.options.tabPosition == \"bottom\",\n                    currentScrollOffset = isHorizontal ? kendo.scrollLeft(tabGroup) : tabGroup.scrollTop(),\n                    itemSize = isHorizontal ? outerWidth(item) : outerHeight(item),\n                    itemOffset = isHorizontal ? (that._isRtl ? item.position().left : item.position().left - tabGroup.children().first().position().left) : item.position().top,\n                    tabGroupSize = isHorizontal ? tabGroup[0].offsetWidth : tabGroup[0].offsetHeight,\n                    browser = kendo.support.browser,\n                    itemPosition;\n\n                if (that._isRtl && isHorizontal && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                    currentScrollOffset = currentScrollOffset * -1;\n                }\n\n                if (that._isRtl && isHorizontal) {\n                    if (itemOffset < 0) {\n                        itemPosition = currentScrollOffset + itemOffset - (tabGroupSize - currentScrollOffset);\n                    } else if (itemOffset + itemSize > tabGroupSize) {\n                        itemPosition = currentScrollOffset + itemOffset - itemSize;\n                    }\n                } else {\n                    if (currentScrollOffset + tabGroupSize < itemOffset + itemSize) {\n                        itemPosition = itemOffset + itemSize - tabGroupSize;\n                    } else if (currentScrollOffset > itemOffset) {\n                        itemPosition = itemOffset;\n                    }\n                }\n\n                var animationProps = isHorizontal ? { \"scrollLeft\": itemPosition } : { \"scrollTop\": itemPosition };\n\n                tabGroup.finish().animate(animationProps, \"fast\", \"linear\", function() {\n                    that._toggleScrollButtons();\n                });\n            },\n\n            _scrollTabsByDelta: function(delta) {\n                const that = this;\n                const tabGroup = that.tabGroup;\n                const isHorizontal = that.options.tabPosition == \"top\" || that.options.tabPosition == \"bottom\";\n\n                let scrOffset = isHorizontal ? kendo.scrollLeft(tabGroup) : tabGroup.scrollTop();\n                const browser = kendo.support.browser;\n\n                if (that._isRtl && isHorizontal && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                    scrOffset = scrOffset * -1;\n                }\n\n                var animationProps = isHorizontal ? { \"scrollLeft\": scrOffset + delta } : { \"scrollTop\": scrOffset + delta };\n\n                tabGroup.finish().animate(animationProps, \"fast\", \"linear\", function() {\n                    if (that._nowScrollingTabs && !jQuery.fx.off) {\n                        that._scrollTabsByDelta(delta);\n                    } else {\n                        that._toggleScrollButtons();\n                    }\n                });\n            },\n\n            _sortable: function() {\n                var that = this,\n                options = that.options,\n                position = options.tabPosition,\n                isHidden = options.scrollable && options.scrollable.scrollButtons === \"hidden\",\n                axis = position === 'left' || position === 'right' ? 'y' : 'x';\n\n                if (!that.options.sortable) {\n                    return;\n                }\n\n                that.sortable = new kendo.ui.Sortable(that.tabGroup, {\n                    filter: \"li.k-item.k-tabstrip-item\",\n                    axis,\n                    holdToDrag: isHidden,\n                    allowTouchActions: isHidden,\n                    container: that.tabWrapper,\n                    hint: el => `<div id='hint' class='k-tabstrip k-tabstrip-${position}'>\n                                <div class= 'k-tabstrip-items-wrapper k-hstack'>\n                                    <ul class='k-tabstrip-items k-reset'>\n                                        <li class='k-item k-tabstrip-item k-first k-active'>${el.html()}</li>\n                                    </ul>\n                                </div>\n                            </div>`,\n                    change: that._sortChange.bind(that),\n                    start: e => that.activateTab(e.item)\n                });\n\n            },\n\n            _sortChange: function(e) {\n                var that = this,\n                    reference = that.tabGroup.children().eq(e.newIndex);\n\n                if (e.oldIndex < e.newIndex) {\n                    that.insertAfter(e.item, reference);\n                } else {\n                    that.insertBefore(e.item, reference);\n                }\n            },\n\n            _tabSizes: function() {\n                const that = this;\n                const tabSize = that.options.size;\n\n                let className;\n                switch (tabSize) {\n                    case \"small\":\n                        className = \"k-tabstrip-sm\";\n                        break;\n\n                    case \"medium\":\n                        className = \"k-tabstrip-md\";\n                        break;\n\n                    case \"large\":\n                        className = \"k-tabstrip-lg\";\n                        break;\n                }\n\n                that.wrapper.addClass(className);\n            },\n\n            _tabPosition: function() {\n                var that = this,\n                    tabPosition = that.options.tabPosition;\n\n                that.wrapper.addClass(\"k-tabstrip-\" + tabPosition);\n\n                if (tabPosition == \"bottom\") {\n                    that.tabWrapper.appendTo(that.wrapper);\n                }\n\n                if (tabPosition === \"left\" || tabPosition === \"right\") {\n                    that.tabGroup.attr(ARIA_ORIENTATION, \"vertical\");\n                }\n\n                that.resize(true);\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVERSTATE, e.type == MOUSEENTER);\n            },\n\n            _toggleDisabled: function(element, enable) {\n                element = this.tabGroup.find(element);\n                element.each(function() {\n                    $(this)\n                        .toggleClass(DISABLEDSTATE, !enable)\n                        .attr(ARIA_DISABLED, !enable);\n                });\n            },\n\n            _toggleScrollButtons: function() {\n                var that = this,\n                    ul = that.tabGroup,\n                    scrollLeft = Math.floor(kendo.scrollLeft(ul)),\n                    scrollTop = Math.floor(ul.scrollTop()),\n                    scrollButtonsVisibility = that.options.scrollable.scrollButtons,\n                    isHorizontal = that.options.tabPosition == \"top\" || that.options.tabPosition == \"bottom\";\n\n                    const disableNextButton = (isHorizontal ? Math.abs(scrollLeft - (ul[0].scrollWidth - ul[0].offsetWidth)) : Math.abs(scrollTop - (ul[0].scrollHeight - ul[0].offsetHeight))) <= 1;\n                    const disablePrevButton = (isHorizontal ? scrollLeft : scrollTop) === 0;\n\n                    if (scrollButtonsVisibility !== \"hidden\") {\n                        that._scrollPrevButton.toggleClass('k-disabled', disablePrevButton);\n                        that._scrollNextButton.toggleClass('k-disabled', disableNextButton);\n                    } else {\n                        that.wrapper.toggleClass(\"k-tabstrip-scrollable-start\", disablePrevButton);\n                        that.wrapper.toggleClass(\"k-tabstrip-scrollable-end\", disableNextButton);\n                    }\n            },\n\n            _updateClasses: function() {\n                var that = this,\n                    tabs, activeItem, activeTab;\n                var isHorizontal = /top|bottom/.test(that.options.tabPosition);\n\n                that.wrapper.addClass(\"k-tabstrip\");\n\n                if (!that.tabGroup) {\n                    that.tabGroup = that.wrapper.children(\"ul\");\n                    that.tabGroup.wrap('<div />');\n                    that.tabWrapper = that.tabGroup.parent();\n                }\n\n                if (!that.tabGroup[0]) {\n                    that.tabGroup = $(\"<ul />\").prependTo(that.wrapper);\n                    that.tabGroup.wrap('<div />');\n                    that.tabWrapper = that.tabGroup.parent();\n                }\n\n                that.tabWrapper.addClass('k-tabstrip-items-wrapper');\n                that.tabWrapper.addClass(isHorizontal ? 'k-hstack' : 'k-vstack');\n                that.tabGroup.addClass('k-tabstrip-items k-reset');\n\n                tabs = that.tabGroup.find(\"li\").addClass(\"k-item k-tabstrip-item\");\n\n                if (tabs.length) {\n                    activeItem = tabs.filter(\".\" + ACTIVESTATE).index();\n                    activeTab = activeItem >= 0 ? activeItem : undefined$1;\n\n                    that.tabGroup // Remove empty text nodes\n                        .contents()\n                        .filter(function() { return (this.nodeType == 3 && !trim(this.nodeValue)); })\n                        .remove();\n                }\n\n                that.contentElements = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\");\n\n                that.contentElements\n                    .addClass(CONTENT)\n                    .eq(activeTab)\n                    .addClass(ACTIVESTATE)\n                    .css({ display: \"block\" });\n\n                if (tabs.length) {\n                    updateTabClasses(tabs, that.options);\n                    activeItem = tabs.filter(\".\" + ACTIVESTATE).index();\n\n                    that.tabGroup.attr(\"aria-activedescendant\", tabs.eq(activeItem).attr(\"id\"));\n                    updateFirstLast(that.tabGroup);\n                    that._updateContentElements(true);\n                }\n            },\n\n            _updateContentElements: function(isInitialUpdate) {\n                var that = this,\n                    contentUrls = that._contentUrls,\n                    items = that.tabGroup.children(\".k-item.k-tabstrip-item\"),\n                    contentElements = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\"),\n                    _elementId = that._elementId.bind(that);\n\n                if (contentElements.length && (items.length > contentElements.length)) {\n                    contentElements.each(function(idx) {\n                        // Generate an ID for each content element\n                        var contentId = _elementId($(this), idx),\n                            item = items.filter(\"[aria-controls=\" + (contentId || 0) + \"]\")[0],\n                            tabId;\n\n                        if (!item && isInitialUpdate) {\n                            // On initialization of the widget get the tab by its index\n                            item = items[idx];\n                        }\n\n                        if (item) {\n                            // set the tab aria-controls attribute to the content ID\n                            item.setAttribute(ARIA_CONTROLS, contentId);\n                            tabId = item.id = _elementId($(item), idx, true);\n                            this.setAttribute(ARIA_LABELLEDBY, tabId);\n                        }\n\n                        // set the get (possibly existing) ID on the content element\n                        this.setAttribute(\"id\", contentId);\n                    });\n                }\n                else {\n                    items.each(function(idx) {\n                        var currentContent = contentElements.eq(idx),\n                            contentId = _elementId(currentContent, idx),\n                            tabId;\n\n                        // set the tab aria-controls attribute to the content ID\n                        this.setAttribute(ARIA_CONTROLS, contentId);\n\n                        tabId = this.id = _elementId($(this), idx, true);\n\n                        if (!currentContent.length && contentUrls[idx]) {\n                            // Append content element in case contentUrl is used\n                            $(\"<div class='\" + CONTENT + \"'/>\")\n                                .appendTo(that.wrapper)\n                                .attr(\"id\", contentId);\n\n                            if (contentUrls[idx] == DOM_DATASOURCE_EMPTY) {\n                                that._contentUrls[idx] = null;\n                            }\n                        } else {\n                            // set the ID on the content element\n                            currentContent.attr(\"id\", contentId);\n                        }\n\n                        currentContent.attr(\"role\", \"tabpanel\");\n                        currentContent.attr(\"tabindex\", \"0\");\n                        currentContent.attr(ARIA_LABELLEDBY, tabId);\n                        currentContent.filter(\":not(.\" + ACTIVESTATE + \")\").attr(ARIA_HIDDEN, true);\n                    });\n\n                    that._removeEmptyUrls();\n                }\n\n                if (that.options._enableDOMDataSource && isInitialUpdate) {\n                    items.each(function(idx) {\n                        contentElements = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\");\n\n                        let currentContent = contentElements.eq(idx),\n                            contentId = _elementId(currentContent, idx),\n                            tabId;\n\n                        // set the tab aria-controls attribute to the content ID\n                        this.setAttribute(ARIA_CONTROLS, contentId);\n\n                        if (!currentContent.length && contentUrls[idx]) {\n                            $(\"<div class='\" + CONTENT + \"'/>\")\n                                .appendTo(that.wrapper)\n                                .attr(\"id\", contentId);\n\n                            if (contentUrls[idx] == DOM_DATASOURCE_EMPTY) {\n                                that._contentUrls[idx] = null;\n                            }\n                        }\n\n                        currentContent.attr(\"role\", \"tabpanel\");\n                        currentContent.attr(\"tabindex\", \"0\");\n                        currentContent.attr(ARIA_LABELLEDBY, tabId);\n                        currentContent.filter(\":not(.\" + ACTIVESTATE + \")\").attr(ARIA_HIDDEN, true);\n\n                    });\n\n                    that._removeEmptyUrls();\n                }\n\n                that.contentElements = that.contentAnimators = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\"); // refresh the contents\n\n                that.tabsHeight = outerHeight(that.tabGroup) +\n                                  parseInt(that.wrapper.css(\"border-top-width\"), 10) +\n                                  parseInt(that.wrapper.css(\"border-bottom-width\"), 10);\n\n                if (kendo.kineticScrollNeeded && kendo.mobile.ui.Scroller) {\n                    kendo.touchScroller(that.contentElements);\n                    that.contentElements = that.contentElements.children(\".km-scroll-container\");\n                }\n            },\n\n            _removeEmptyUrls: function() {\n                 let that = this;\n\n                 if (that._contentUrls.length) {\n                    that._contentUrls.forEach(function(url, idx) {\n                          that._contentUrls[idx] = url == DOM_DATASOURCE_EMPTY ? null : url;\n                    });\n                 }\n            },\n\n            _wrapper: function() {\n                var that = this;\n\n                if (that.element.is(\"ul\")) {\n                    that.wrapper = that.element.wrapAll(\"<div />\").parent();\n                } else {\n                    that.wrapper = that.element;\n                }\n            }\n        });\n\n        // client-side rendering\n        extend(TabStrip, {\n            renderItem: function(options) {\n                options = extend({ tabStrip: {}, group: {} }, options);\n                var empty = templates.empty,\n                    item = options.item,\n                    templateOptions = extend(options, {\n                        image: item.imageUrl ? templates.image : empty,\n                        sprite: item.spriteCssClass ? templates.sprite : empty,\n                        textWrapper: templates.textWrapper,\n                        itemActions: templates.itemActionsWrapperTemplate,\n                    }, rendering);\n\n                if (item.template) {\n                    return templates.itemWrapper(templateOptions, kendo.template(item.template)(item.model));\n                }\n\n                return templates.item(templateOptions);\n            },\n\n            renderContent: function(options) {\n                return templates.content(extend(options, rendering));\n            }\n        });\n\n        kendo.ui.plugin(TabStrip);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports[\"default\"] = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}