{"version":3,"sources":["raw-js/kendo.tabstrip.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendotabstrip","js","this","$","undefined$1","kendo","window","ui","keys","map","each","trim","extend","isFunction","outerWidth","template","_outerWidth","outerHeight","_outerHeight","Widget","excludedNodesRegExp","excludedNodesRegExp_DOM_DS","NS","HREF","PREV","NEXT","SHOW","LINK","LINK_TEXT","LAST","CLICK","IMAGE","FIRST","SELECT","ACTIVATE","CONTENT","CONTENTURL","MOUSEENTER","CONTENTLOAD","DISABLEDSTATE","ACTIVESTATE","FOCUSEDSTATE","HOVERSTATE","DOM_DATASOURCE_EMPTY","NAVIGATABLEITEMS","KEYBOARDNAVIGATABLEITEMS","HOVERABLEITEMS","ARIA_HIDDEN","ARIA_CONTROLS","ARIA_DISABLED","ARIA_SELECTED","ARIA_LABELLEDBY","templates","content","data","contentAttributes","item","textWrapper","tag","contentUrl","textAttributes","image","sprite","text","icon","iconClass","iconPosition","itemWrapper","wrapperCssClass","group","itemAttributes","active","imageUrl","spriteCssClass","empty","itemActionsWrapperTemplate","itemActionTemplate","element","attributes","resolvedAttributes","toJSON","html","renderButton","attr","themeColor","fillMode","rendering","result","index","classAttributes","class","enabled","push","length","split","forEach","className","includes","join","Object","entries","key","value","sanitizeAttribute","url","sanitizeLink","encoded","htmlEncode","updateTabClasses","tabs","options","children","addClass","filter","prop","parent","is","regex","_enableDOMDataSource","contents","nodeName","match","nodeType","nodeValue","wrapAll","updateFirstLast","tabGroup","removeClass","scrollButtonHtml","buttonClass","ajaxXhr","ajaxSettings","xhr","TabStrip","init","that","fn","call","_animations","isPresent","_contentUrls","contentUrls","_wrapper","_isRtl","support","isRtl","wrapper","_updateClasses","_dataSource","_tabindex","dataSource","fetch","_removeAdditionalWrapperClasses","_tabSizes","_tabPosition","_scrollable","_tabAlignment","_sortable","_processContentUrls","_attachEvents","_initialActivate","notify","_updateContentElements","_showWatermarkOverlay","events","name","dataEncodedField","dataTextField","dataContentField","dataImageUrlField","dataUrlField","dataSpriteCssClass","dataContentUrlField","dataIconField","dataIconPositionField","tabPosition","tabAlignment","size","tabTemplate","animation","open","effects","duration","close","closable","collapsible","navigatable","applyMinHeight","scrollable","distance","scrollButtonsPosition","scrollButtons","sortable","setDataSource","setOptions","on","_keyDownProxy","off","activateTab","find","animationSettings","hasCloseAnimation","neighbours","oldTab","itemIndex","reverse","hide","kendoRemoveClass","contentAnimators","inRequest","abort","_current","trigger","_scrollableModeActive","_scrollTabsToItem","visibleContents","contentHolder","contentElement","closest","tabsHeight","parseInt","css","kendoStop","kendoAnimate","isAjaxContent","showContentElement","removeAttr","resize","complete","oldMinHeight","showContent","ajaxRequest","kendoAddClass","link","ajaxOptions","type","cache","dataType","error","status","success","destroy","e","ajax","append","tab","inserted","_create","idx","tabWrapper","before","isNaN","contentElements","kineticScrollNeeded","id","i","len","eq","scrollContainer","touch","deactivateTab","isHidden","_refreshHandler","unbind","_scrollPrevButton","remove","_scrollNextButton","disable","_toggleDisabled","enable","state","insertAfter","referenceTab","prev","referenceContent","fromIndex","newTabsCreated","after","_moveUrlItem","insertBefore","next","items","refresh","getter","view","enableDOMDataSource","_enableDataSourceFromDOM","action","model","actions","Array","from","indexOf","field","get","_wrapExistingDOMItems","dataItem","linkContainer","tabText","checkActions","prepend","_initTabActions","hasOwnProperty","hasClass","reload","elements","_removeUrlItem","select","arguments","tabOptions","tabElement","isClosable","closeButtonAttributes","_handleClose","actionsWrapperTemplate","existingActionButtons","isClosableAction","actionTemplate","bind","currentTarget","_active","setTimeout","_endItem","_appendUrlItem","_itemClick","_toggleScrollButtons","_toggleHover","_keydown","_resize","_click","prevent","isAnchor","href","collapse","oldFocusedTab","_focused","charAt","ObservableArray","isPlainObject","isArray","renderedTabItem","renderItem","tabstripContent","renderContent","applyStylesFromKendoAttributes","test","parentNode","getAttribute","add","candidate","preventFocus","focused","_createDataSourceFromDOM","DataSource","create","dataSourceOptions","itemOptions","actionOptions","dataItems","$item","itemData","option","_decorateActions","$action","actionData","_elementId","elementId","wrapperId","guid","tabStripID","_getItem","selectedItems","childNodes","_item","endItem","target","document","activeElement","browser","msie","setActive","j","focus","preventDefault","keyCode","current","rtl","isHorizontal","DOWN","UP","RIGHT","LEFT","ENTER","SPACEBAR","HOME","END","to","splice","_getChildrenWidth","width","Math","floor","_getChildrenHeight","height","scrollButtonsVisibility","isVisible","wrapperOffset","tabGroupScroll","scrollPrevButton","scrollNextButton","_scrollableAllowed","offsetWidth","offsetHeight","scrollWidth","scrollHeight","condition","enableScroll","_removeScrollableClasses","_nowScrollingTabs","mouseDown","mouseUp","isRtlScrollDirection","edge","nextIcon","scrollLeft","scrollRight","_scrollTabsByDelta","itemPosition","currentScrollOffset","scrollTop","itemSize","itemOffset","position","left","first","top","tabGroupSize","mozilla","webkit","version","animationProps","finish","animate","delta","scrOffset","jQuery","fx","axis","Sortable","holdToDrag","allowTouchActions","container","hint","el","change","_sortChange","start","reference","newIndex","oldIndex","appendTo","toggleClass","ul","disableNextButton","abs","disablePrevButton","activeItem","activeTab","wrap","prependTo","display","isInitialUpdate","tabId","contentId","setAttribute","currentContent","_removeEmptyUrls","mobile","Scroller","touchScroller","tabStrip","templateOptions","itemActions","plugin","kendo$1","__meta__","category","description","depends","features","defineProperty"],"mappings":"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","file":"kendo.tabstrip.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.data.js'), require('kendo.icons.js'), require('kendo.html.button.js'), require('kendo.sortable.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.data', 'kendo.icons', 'kendo.html.button', 'kendo.sortable'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendotabstrip = global.kendotabstrip || {}, global.kendotabstrip.js = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"tabstrip\",\n        name: \"TabStrip\",\n        category: \"web\",\n        description: \"The TabStrip widget displays a collection of tabs with associated tab content.\",\n        depends: [ \"data\", \"icons\", \"html.button\", \"sortable\" ],\n        features: [ {\n            id: \"tabstrip-fx\",\n            name: \"Animation\",\n            description: \"Support for animation\",\n            depends: [ \"fx\" ]\n        } ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            keys = kendo.keys,\n            map = $.map,\n            each = $.each,\n            trim = kendo.trim,\n            extend = $.extend,\n            isFunction = kendo.isFunction,\n            template = kendo.template,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            Widget = ui.Widget,\n            excludedNodesRegExp = /^(a|div)$/i,\n            excludedNodesRegExp_DOM_DS = /^(a|div|button)$/i,\n            NS = \".kendoTabStrip\",\n            IMG = \"img\",\n            HREF = \"href\",\n            PREV = \"prev\",\n            NEXT = \"next\",\n            SHOW = \"show\",\n            LINK = \"k-link\",\n            LINK_TEXT = \"k-link-text\",\n            LAST = \"k-last\",\n            CLICK = \"click\",\n            ERROR = \"error\",\n            EMPTY = \":empty\",\n            IMAGE = \"k-image\",\n            FIRST = \"k-first\",\n            SELECT = \"select\",\n            ACTIVATE = \"activate\",\n            CONTENT = \"k-tabstrip-content\",\n            CONTENTURL = \"contentUrl\",\n            MOUSEENTER = \"mouseenter\",\n            MOUSELEAVE = \"mouseleave\",\n            CONTENTLOAD = \"contentLoad\",\n            DISABLEDSTATE = \"k-disabled\",\n            ACTIVESTATE = \"k-active\",\n            FOCUSEDSTATE = \"k-focus\",\n            HOVERSTATE = \"k-hover\",\n            DOM_DATASOURCE_EMPTY = \"EMPTY_URL\",\n            NAVIGATABLEITEMS = \".k-item.k-tabstrip-item:not(.\" + DISABLEDSTATE + \")\",\n            KEYBOARDNAVIGATABLEITEMS = \".k-item.k-tabstrip-item\",\n            HOVERABLEITEMS = \".k-tabstrip-items > \" + NAVIGATABLEITEMS + \":not(.\" + ACTIVESTATE + \")\",\n            DEFAULTDISTANCE = 200,\n            ARIA_HIDDEN = \"aria-hidden\",\n            ARIA_CONTROLS = \"aria-controls\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_SELECTED = \"aria-selected\",\n            ARIA_ORIENTATION = \"aria-orientation\",\n            ARIA_LABELLEDBY = \"aria-labelledby\",\n\n            templates = {\n                content: (data) =>\n                    `<div class='k-tabstrip-content' ${data.contentAttributes(data)} tabindex='0'>${data.content(data.item)}</div>`,\n                textWrapper: ({ tag, item , contentUrl, textAttributes, image, sprite, text }) =>\n                    `<${tag(item)} class='${LINK}' ${contentUrl(item)} ${textAttributes(item)}>` + `${image(item)}${sprite(item)}` +\n                        ((item.icon || item.iconClass) && item.iconPosition === 'before' ? kendo.ui.icon({ icon: item.icon || \"none\", iconClass: item.iconClass }) : '') +\n                            `<span class='${LINK_TEXT}'>${text(item)}</span>` +\n                        ((item.icon || item.iconClass) && item.iconPosition === 'after' ? kendo.ui.icon({ icon: item.icon || \"none\", iconClass: item.iconClass }) : '') +\n                    `</${tag(item)}>`,\n                item: (data) => templates.itemWrapper(data,`${data.textWrapper(data)}`),\n                itemWrapper: (data, item) =>\n                    `<li class='${data.wrapperCssClass(data.group, data.item)}' ${data.itemAttributes(data.item)} role='tab' ${data.item.active ? \"aria-selected='true'\" : ''}>` +\n                        item +\n                    \"</li>\",\n                image: ({ imageUrl }) => `<img class='k-image' alt='' src='${imageUrl}' />`,\n                sprite: ({ spriteCssClass }) => `<span class='k-sprite ${spriteCssClass}'></span>`,\n                empty: () => \"\",\n                itemActionsWrapperTemplate: () => `<span class=\"k-item-actions\"></span>`,\n                itemActionTemplate: ({ element, icon, iconClass, attributes }) => {\n                    let resolvedAttributes = attributes ? (attributes.toJSON ? attributes.toJSON() : attributes) : {};\n                    return kendo.html.renderButton(element || $(\"<button unselectable='on'></button>\").attr(resolvedAttributes), { icon, iconClass, themeColor: \"base\", fillMode: \"flat\" });\n                },\n            },\n\n            rendering = {\n                wrapperCssClass: function(group, item) {\n                    var result = [\"k-item\", \"k-tabstrip-item\"],\n                        index = item.index;\n\n                    const classAttributes = (item.attributes && item.attributes.class) || \"\";\n\n                    if (item.enabled === false) {\n                        result.push(\"k-disabled\");\n                    }\n\n                    if (index === 0) {\n                        result.push(\"k-first\");\n                    }\n\n                    if (index == group.length - 1) {\n                        result.push(\"k-last\");\n                    }\n\n                    classAttributes.split(\" \").forEach(function(className) {\n                        if (className && !result.includes(className)) {\n                            result.push(className);\n                        }\n                    });\n\n                    return result.join(\" \");\n                },\n                itemAttributes: function(item) {\n                    const attributes = item.attributes || {};\n                    return Object.entries(attributes)\n                        .map(([key, value]) => {\n                            if (key === \"class\" || key === \"role\" || key === \"aria-selected\") {\n                                return \"\";\n                            }\n                            return `${kendo.attr(key)}='${kendo.sanitizeAttribute(value)}'`;\n                        })\n                        .join(\" \");\n                },\n                textAttributes: function(item) {\n                    return item.url ? \" href='\" + kendo.sanitizeLink(item.url) + \"'\" : \"\";\n                },\n                text: function(item) {\n                    return item.encoded === false ? item.text : kendo.htmlEncode(item.text);\n                },\n                tag: function(item) {\n                    return item.url ? \"a\" : \"span\";\n                },\n                contentAttributes: function(content) {\n                    return content.active !== true ? ` ${kendo.attr(\"style-display\")}=\"none\" aria-hidden='true'` : \"\";\n                },\n                content: function(item) {\n                    return item.content ? item.content : item.contentUrl ? \"\" : \"&nbsp;\";\n                },\n                contentUrl: function(item) {\n                    return item.contentUrl ? kendo.attr(\"content-url\") + '=\"' + item.contentUrl + '\"' : \"\";\n                }\n            };\n\n        function updateTabClasses(tabs, options) {\n            tabs.children(IMG)\n                .addClass(IMAGE);\n\n            tabs.children(\"a\")\n                .addClass(LINK)\n                .children(IMG)\n                .addClass(IMAGE);\n\n            tabs.filter(\"li[disabled]\")\n                .addClass(DISABLEDSTATE)\n                .attr(ARIA_DISABLED, \"true\")\n                .prop(\"disabled\", false);\n\n            tabs.filter(\":not([class*=k-state])\")\n                .children(\"a\")\n                .filter(\":focus\")\n                .parent()\n                .addClass(ACTIVESTATE);\n\n            tabs.attr(\"role\", \"tab\");\n\n            tabs.each(function() {\n                var item = $(this);\n                item.attr(ARIA_SELECTED, item.is(\".\" + ACTIVESTATE));\n\n                const regex = options._enableDOMDataSource ? excludedNodesRegExp_DOM_DS : excludedNodesRegExp;\n                if (!item.children(\".\" + LINK).length) {\n                    item\n                        .contents() // exclude groups, real links, templates and empty text nodes\n                        .filter(function() { return (!this.nodeName.match(regex) && !(this.nodeType == 3 && !trim(this.nodeValue))); })\n                        .wrapAll(\"<span UNSELECTABLE='on' class='\" + LINK + \"'/>\")\n                        .wrapAll(\"<span UNSELECTABLE='on' class='\" + LINK_TEXT + \"'/>\");\n                }\n            });\n\n        }\n\n        function updateFirstLast(tabGroup) {\n            const tabs = tabGroup.children(\".k-item.k-tabstrip-item\");\n\n            tabs.filter(\".k-first:not(:first-child)\").removeClass(FIRST);\n            tabs.filter(\".k-last:not(:last-child)\").removeClass(LAST);\n            tabs.filter(\":first-child\").addClass(FIRST);\n            if (tabs.length > 1) {\n                tabs.filter(\":last-child\").addClass(LAST);\n            }\n        }\n\n        function scrollButtonHtml(buttonClass, iconClass) {\n            return `<span aria-hidden='true' class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-tabstrip-${buttonClass}' unselectable='on'>${kendo.ui.icon({ icon: iconClass, iconClass: \"k-button-icon\" })}</span>`;\n        }\n\n        function ajaxXhr() {\n            return $.ajaxSettings.xhr();\n        }\n\n        var TabStrip = Widget.extend({\n            init: function(element, options) {\n                var that = this, value;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._animations(that.options);\n\n                options = that.options;\n\n                if (kendo.isPresent(TabStrip._enableDOMDataSource)) {\n                    options._enableDOMDataSource = TabStrip._enableDOMDataSource;\n                }\n\n                that._contentUrls = options.contentUrls || [];\n\n                that._wrapper();\n                that._isRtl = kendo.support.isRtl(that.wrapper);\n\n                that._updateClasses();\n                that._dataSource();\n\n                that._tabindex(that.tabGroup);\n                that.tabGroup.attr(\"role\", \"tablist\");\n\n                if (options.dataSource || options._enableDOMDataSource) {\n                    that.dataSource.fetch();\n                }\n\n                that._removeAdditionalWrapperClasses();\n\n                that._tabSizes();\n                that._tabPosition();\n                that._scrollable();\n                that._tabAlignment();\n                that._sortable();\n                that._processContentUrls();\n                that._attachEvents();\n\n                if (that.options.value) {\n                    value = that.options.value;\n                }\n\n                that._initialActivate();\n                that.value(value);\n                kendo.notify(that);\n\n\n                if (options._enableDOMDataSource && options.contentUrls) {\n                    that._contentUrls = options.contentUrls.map(function(url) {\n                        return url || DOM_DATASOURCE_EMPTY;\n                    });\n\n                    that._updateContentElements(options._enableDOMDataSource);\n                }\n\n                if (that._showWatermarkOverlay) {\n                    that._showWatermarkOverlay(that.element[0]);\n                }\n            },\n\n            events: [\n                SELECT,\n                ACTIVATE,\n                SHOW,\n                ERROR,\n                CONTENTLOAD,\n                \"change\",\n                \"dataBinding\",\n                \"dataBound\"\n            ],\n\n            options: {\n                name: \"TabStrip\",\n                dataEncodedField: \"\",\n                dataTextField: \"\",\n                dataContentField: \"\",\n                dataImageUrlField: \"\",\n                dataUrlField: \"\",\n                dataSpriteCssClass: \"\",\n                dataContentUrlField: \"\",\n                dataIconField: \"icon\",\n                dataIconPositionField: \"iconPosition\",\n                tabPosition: \"top\",\n                tabAlignment: \"start\",\n                size: \"medium\",\n                tabTemplate: null,\n                animation: {\n                    open: {\n                        effects: \"expand:vertical fadeIn\",\n                        duration: 200\n                    },\n                    close: { // if close animation effects are defined, they will be used instead of open.reverse\n                        duration: 200\n                    }\n                },\n                closable: false,\n                collapsible: false,\n                navigatable: true,\n                contentUrls: false,\n                applyMinHeight: true,\n                scrollable: {\n                    distance: DEFAULTDISTANCE,\n                    scrollButtonsPosition: \"split\",\n                    scrollButtons: \"auto\",\n                },\n                sortable: false,\n                _enableDOMDataSource: false,\n            },\n\n            setDataSource: function(dataSource) {\n                var that = this;\n\n                that.options.dataSource = dataSource;\n                that._dataSource();\n                that.dataSource.fetch();\n            },\n\n            setOptions: function(options) {\n                var that = this,\n                    animation = that.options.animation;\n\n                that._animations(options);\n\n                if (options.contentUrls) {\n                    that._contentUrls = options.contentUrls;\n                }\n\n                options.animation = extend(true, animation, options.animation);\n\n                if (options.navigatable) {\n                    that.tabGroup.on(\"keydown\" + NS, that._keyDownProxy);\n                } else {\n                    that.tabGroup.off(\"keydown\" + NS, that._keyDownProxy);\n                }\n\n                Widget.fn.setOptions.call(that, options);\n            },\n\n            activateTab: function(item) {\n                if (this.tabGroup.children(\"[data-animating]\").length) { return; }\n\n                item = this.tabGroup.find(item);\n\n                var that = this,\n                    animationSettings = that.options.animation,\n                    animation = animationSettings.open,\n                    close = extend({}, animationSettings.close),\n                    hasCloseAnimation = close && \"effects\" in close,\n                    neighbours = item.parent().children(),\n                    oldTab = neighbours.filter(\".\" + ACTIVESTATE),\n                    itemIndex = neighbours.index(item),\n                    isAnimationEnabled = animation && \"duration\" in animation && \"effects\" in animation;\n\n                close = extend( hasCloseAnimation ? close : extend({ reverse: true }, animation), { hide: true });\n                // deactivate previously active tab\n                if (kendo.size(animation.effects)) {\n                    oldTab.kendoRemoveClass(ACTIVESTATE, { duration: close.duration });\n                    item.kendoRemoveClass(HOVERSTATE, { duration: close.duration });\n                } else {\n                    oldTab.removeClass(ACTIVESTATE);\n                    item.removeClass(HOVERSTATE);\n                }\n\n                // handle content elements\n                var contentAnimators = that.contentAnimators;\n\n                if (that.inRequest) {\n                    that.xhr.abort();\n                    that.inRequest = false;\n                }\n\n                if (contentAnimators.length === 0) {\n                    that.tabGroup.find(\".\" + ACTIVESTATE);\n\n                    item.addClass(ACTIVESTATE);\n                    that._current(item, true);\n\n                    that.trigger(\"change\");\n\n                    if (that._scrollableModeActive) {\n                        that._scrollTabsToItem(item);\n                    }\n\n                    return false;\n                }\n\n                var visibleContents = contentAnimators.filter(\".\" + ACTIVESTATE),\n                    contentHolder = that.contentHolder(itemIndex),\n                    contentElement = contentHolder.closest(\".k-tabstrip-content\");\n\n                that.tabsHeight = outerHeight(that.tabGroup) +\n                                  parseInt(that.wrapper.css(\"border-top-width\"), 10) +\n                                  parseInt(that.wrapper.css(\"border-bottom-width\"), 10);\n\n                if (contentHolder.length === 0) {\n                    visibleContents\n                        .removeClass( ACTIVESTATE )\n                        .attr(ARIA_HIDDEN, true)\n                        .kendoStop(true, true)\n                        .kendoAnimate( close );\n                    return false;\n                }\n\n                item.attr(\"data-animating\", true);\n\n                var isAjaxContent = (item.children(\".\" + LINK).data(CONTENTURL) || that._contentUrls[itemIndex] || false) && contentHolder.is(EMPTY),\n                    showContentElement = function() {\n                        oldTab.attr(ARIA_SELECTED, false);\n                        item.attr(ARIA_SELECTED, true);\n                        that.tabGroup.attr(\"aria-activedescendant\", item.attr(\"id\"));\n\n                        that._current(item, true);\n\n                        contentElement\n                            .addClass(ACTIVESTATE)\n                            .removeAttr(ARIA_HIDDEN)\n                            .kendoStop(true, true)\n                            .kendoAnimate( extend({ init: function() {\n                                that.trigger(SHOW, { item: item[0], contentElement: contentHolder[0] });\n                                kendo.resize(contentHolder);\n                            } }, animation, {\n                                complete: function() {\n                                    // See https://github.com/telerik/kendo-ui-core/issues/6660\n                                    that.element.css('min-height', oldMinHeight);\n                                    item.removeAttr(\"data-animating\");\n\n                                    that.trigger(ACTIVATE, { item: item[0], contentElement: contentHolder[0] });\n                                    kendo.resize(contentHolder);\n                                }\n                            } ) );\n                    },\n                    showContent = function() {\n                        if (!isAjaxContent) {\n                            showContentElement();\n                            that.trigger(\"change\");\n                        } else {\n                            item.removeAttr(\"data-animating\");\n                            that.ajaxRequest(item, contentHolder, function() {\n                                item.attr(\"data-animating\", true);\n                                showContentElement();\n                                that.trigger(\"change\");\n                            });\n                        }\n\n                        if (that._scrollableModeActive) {\n                            that._scrollTabsToItem(item);\n                        }\n\n                    };\n\n                // See https://github.com/telerik/kendo-ui-core/issues/6660\n                var oldMinHeight = that.element.css('min-height');\n\n                if (that.options.applyMinHeight) {\n                    that.element.css('min-height', that.element.outerHeight());\n                }\n\n                visibleContents.removeClass(ACTIVESTATE);\n                that.tabGroup.find(\".\" + ACTIVESTATE);\n\n                if (kendo.size(animation.effects)) {\n                    item.kendoAddClass(ACTIVESTATE, { duration: animation.duration });\n                } else {\n                    item.addClass(ACTIVESTATE);\n                }\n\n                visibleContents.attr(ARIA_HIDDEN, true);\n\n                if (visibleContents.length) {\n                    visibleContents\n                        .kendoStop(true, true)\n                        .kendoAnimate(extend( {\n                            complete: showContent\n                       }, close ));\n                } else {\n                    showContent();\n                }\n\n                return true;\n            },\n\n            ajaxRequest: function(element, content, complete, url) {\n                element = this.tabGroup.find(element);\n\n                var that = this,\n                    link = element.find(\".\" + LINK),\n                    data = {};\n\n                url = url || link.data(CONTENTURL) || that._contentUrls[element.index()] || link.attr(HREF);\n                that.inRequest = true;\n\n                var ajaxOptions = {\n                    type: \"GET\",\n                    cache: false,\n                    url: url,\n                    dataType: \"html\",\n                    data: data,\n                    xhr: ajaxXhr,\n\n                    error: function(xhr, status) {\n                        if (that.trigger(\"error\", { xhr: xhr, status: status })) {\n                            this.complete();\n                        }\n                    },\n\n                    complete: function(xhr) {\n                        that.inRequest = false;\n                    },\n\n                    success: function(data) {\n                        try {\n                            kendo.destroy(content);\n                            content.html(data);\n                        } catch (e) {\n                            this.error(this.xhr, \"error\");\n                        }\n\n                        if (complete) {\n                            complete.call(that, content);\n                        }\n\n                        that.trigger(CONTENTLOAD, { item: element[0], contentElement: content[0] });\n                    }\n                };\n\n                if (typeof url === \"object\") {\n                    ajaxOptions = $.extend(true, {}, ajaxOptions, url);\n\n                    if (isFunction(ajaxOptions.url)) {\n                        ajaxOptions.url = ajaxOptions.url();\n                    }\n\n                    if (isFunction(ajaxOptions.data)) {\n                        ajaxOptions.data = ajaxOptions.data();\n                    }\n                }\n\n                that.xhr = $.ajax(ajaxOptions);\n            },\n\n            append: function(tab) {\n                var that = this,\n                    inserted = that._create(tab);\n\n                each(inserted.tabs, function(idx) {\n                    var contents = inserted.contents[idx];\n                    that.tabGroup.append(this);\n                    if (that.options.tabPosition == \"bottom\") {\n                        that.tabWrapper.before(contents);\n                    } else {\n                        that.wrapper.append(contents);\n                    }\n                });\n\n                updateFirstLast(that.tabGroup);\n                that._updateContentElements();\n                that.resize(true);\n\n                return that;\n            },\n\n            contentElement: function(itemIndex) {\n                if (isNaN(itemIndex - 0)) {\n                    return undefined$1;\n                }\n\n                var contentElements = this.contentElements && this.contentElements[0] && !kendo.kineticScrollNeeded ? this.contentElements : this.contentAnimators;\n                var id = $(this.tabGroup.children()[itemIndex]).attr(ARIA_CONTROLS);\n\n                if (contentElements) {\n                    for (var i = 0, len = contentElements.length; i < len; i++) {\n                        if (contentElements.eq(i).closest(\".k-tabstrip-content\")[0].id == id) {\n                            return contentElements[i];\n                        }\n                    }\n                }\n\n                return undefined$1;\n            },\n\n            contentHolder: function(itemIndex) {\n                var contentElement = $(this.contentElement(itemIndex)),\n                    scrollContainer = contentElement.children(\".km-scroll-container\");\n\n                return kendo.support.touch && scrollContainer[0] ? scrollContainer : contentElement;\n            },\n\n            deactivateTab: function(item) {\n                var that = this,\n                    animationSettings = that.options.animation,\n                    animation = animationSettings.open,\n                    close = extend({}, animationSettings.close),\n                    hasCloseAnimation = close && \"effects\" in close;\n                item = that.tabGroup.find(item);\n\n                close = extend( hasCloseAnimation ? close : extend({ reverse: true }, animation), { hide: true });\n\n                if (kendo.size(animation.effects)) {\n                    item.kendoRemoveClass(ACTIVESTATE, { duration: animation.duration });\n                } else {\n                    item.removeClass(ACTIVESTATE);\n                }\n\n                item.attr(ARIA_SELECTED, false);\n                that.tabGroup.removeAttr(\"aria-activedescendant\");\n\n                that.contentAnimators\n                        .filter(\".\" + ACTIVESTATE)\n                        .kendoStop(true, true)\n                        .kendoAnimate( close )\n                        .removeClass(ACTIVESTATE)\n                        .attr(ARIA_HIDDEN, true);\n            },\n\n            _removeAdditionalWrapperClasses: function() {\n                const that = this;\n\n                that.wrapper.removeClass(\"k-tabstrip-sm k-tabstrip-md k-tabstrip-lg\");\n                that.tabGroup.removeClass(\"k-tabstrip-items-start k-tabstrip-items-center k-tabstrip-items-end k-tabstrip-items-justify k-tabstrip-items-stretched\");\n            },\n\n            destroy: function() {\n                var that = this;\n                const isHidden = that.options.scrollable && that.options.scrollable.scrollButtons === \"hidden\";\n                Widget.fn.destroy.call(that);\n\n                if (that._refreshHandler) {\n                    that.dataSource.unbind(\"change\", that._refreshHandler);\n                }\n\n                if (that.options.scrollable && isHidden) {\n                    that.tabGroup.unbind(\"scroll\" + NS);\n                }\n\n                that._removeAdditionalWrapperClasses();\n\n                that.wrapper.off(NS);\n                that.tabGroup.off(NS);\n\n                if (that._scrollableModeActive && !isHidden) {\n                    that._scrollPrevButton.off().remove();\n                    that._scrollNextButton.off().remove();\n                }\n\n                kendo.destroy(that.wrapper);\n            },\n\n            disable: function(element) {\n                this._toggleDisabled(element, false);\n\n                return this;\n            },\n\n            enable: function(element, state) {\n                this._toggleDisabled(element, state !== false);\n\n                return this;\n            },\n\n            insertAfter: function(tab, referenceTab) {\n                if ($(tab).is($(referenceTab))) {\n                    referenceTab = this.tabGroup.find(referenceTab).prev();\n                } else {\n                    referenceTab = this.tabGroup.find(referenceTab);\n                }\n\n                var that = this,\n                    inserted = that._create(tab),\n                    referenceContent = that.element.find(\"[id='\" + referenceTab.attr(ARIA_CONTROLS) + \"']\");\n\n                each(inserted.tabs, function(idx) {\n                    var contents = inserted.contents[idx];\n                    var fromIndex = inserted.newTabsCreated ? that._contentUrls.length - (inserted.tabs.length - idx) : $(contents).index() - 1;\n\n                    referenceTab.after(this);\n                    referenceContent.after(contents);\n\n                    that._moveUrlItem(fromIndex, $(this).index());\n                });\n\n                updateFirstLast(that.tabGroup);\n                that._updateContentElements(inserted.newTabsCreated);\n                that.resize(true);\n\n                return that;\n            },\n\n            insertBefore: function(tab, referenceTab) {\n                if ($(tab).is($(referenceTab))) {\n                    referenceTab = this.tabGroup.find(referenceTab).next();\n                } else {\n                    referenceTab = this.tabGroup.find(referenceTab);\n                }\n\n                var that = this,\n                    inserted = that._create(tab),\n                    referenceContent = that.element.find(\"[id='\" + referenceTab.attr(ARIA_CONTROLS) + \"']\");\n\n                each(inserted.tabs, function(idx) {\n                    var contents = inserted.contents[idx];\n                    var fromIndex = inserted.newTabsCreated ? that._contentUrls.length - (inserted.tabs.length - idx) : $(contents).index() - 1;\n\n                    referenceTab.before(this);\n                    referenceContent.before(contents);\n\n                    that._moveUrlItem(fromIndex, $(this).index());\n                });\n\n                updateFirstLast(that.tabGroup);\n                that._updateContentElements(inserted.newTabsCreated);\n                that.resize(true);\n\n                return that;\n            },\n\n            items: function() {\n                return this.tabGroup[0].children;\n            },\n\n            refresh: function(e) {\n                var that = this,\n                    options = that.options,\n                    encoded = kendo.getter(options.dataEncodedField),\n                    text = kendo.getter(options.dataTextField),\n                    content = kendo.getter(options.dataContentField),\n                    contentUrl = kendo.getter(options.dataContentUrlField),\n                    image = kendo.getter(options.dataImageUrlField),\n                    url = kendo.getter(options.dataUrlField),\n                    sprite = kendo.getter(options.dataSpriteCssClass),\n                    icon = kendo.getter(options.dataIconField),\n                    iconPosition = kendo.getter(options.dataIconPositionField),\n                    idx,\n                    tabs = [],\n                    tab,\n                    action,\n                    view = that.dataSource.view(),\n                    length;\n\n                const enableDOMDataSource = that._enableDataSourceFromDOM;\n\n                e = e || {};\n                action = e.action;\n\n                if (action) {\n                   view = e.items;\n                }\n\n                for (idx = 0, length = view.length; idx < length; idx ++) {\n                    tab = {\n                        text: (view[idx] && view[idx].text) || text(view[idx]),\n                    };\n\n                    if (options.tabTemplate) {\n                        tab.model = view[idx];\n                        tab.template = options.tabTemplate;\n                    }\n\n                    if (options.dataEncodedField) {\n                        tab.encoded = encoded(view[idx]);\n                    }\n\n                    if (options.dataContentField) {\n                        tab.content = content(view[idx]);\n                    }\n\n                    if (options.dataContentUrlField) {\n                        tab.contentUrl = contentUrl(view[idx]);\n                    }\n\n                    if (options.dataUrlField) {\n                        tab.url = url(view[idx]);\n                    }\n\n                    if (options.dataImageUrlField) {\n                        tab.imageUrl = image(view[idx]);\n                    }\n\n                    if (options.dataSpriteCssClass) {\n                        tab.spriteCssClass = sprite(view[idx]);\n                    }\n\n                    if (view[idx].actions) {\n                        const actions = typeof view[idx].actions === 'object' ? Array.from(view[idx].actions) : view[idx].actions;\n                        tab.actions = actions;\n                    }\n\n                    if (icon(view[idx]) || view[idx].iconClass) {\n                        tab.icon = icon(view[idx]);\n                        tab.iconClass = view[idx].iconClass;\n                        tab.iconPosition = iconPosition(view[idx]) ?? 'before';\n                    }\n\n                    tab.enabled = view[idx].enabled;\n                    tab.closable = view[idx].closable ?? options.closable;\n                    tab.attributes = view[idx].attributes;\n                    if (view[idx].content) {\n                        tab.content = view[idx].content;\n                    }\n\n                    tabs[idx] = tab;\n                }\n\n                if (e.action == \"add\") {\n                    if (e.index < that.tabGroup.children().length) {\n                        that.insertBefore(tabs, that.tabGroup.children().eq(e.index));\n                    } else {\n                        that.append(tabs);\n                    }\n                } else if (e.action == \"remove\") {\n                    for (idx = 0; idx < view.length; idx++) {\n                       that.remove(e.index);\n                    }\n                } else if (e.action == \"itemchange\") {\n                    idx = that.dataSource.view().indexOf(view[0]);\n                    if (e.field === options.dataTextField) {\n                        that.tabGroup.children().eq(idx).find(\".k-link\").text(view[0].get(e.field));\n                    }\n\n                    if (e.field === options.dataUrlField) {\n                        that._contentUrls[idx] = view[0].get(e.field);\n                    }\n                } else if (enableDOMDataSource && kendo.isPresent(that.dataSource)) {\n                    that._wrapExistingDOMItems();\n                    that._updateContentElements();\n                    that._enableDataSourceFromDOM = false;\n                } else {\n                    that.trigger(\"dataBinding\");\n                    that.remove(\"li\");\n                    that._contentUrls = [];\n                    that.append(tabs);\n                    that.trigger(\"dataBound\");\n                }\n            },\n\n            _wrapExistingDOMItems: function() {\n               const that = this;\n               const items = that.tabGroup.children(\"li\");\n               const dataSource = that.dataSource;\n               const dataItems = dataSource.view();\n\n               dataItems.forEach((dataItem, index) => {\n                    const item = items.eq(index);\n                    const linkContainer = item.find(\".\" + LINK);\n                    const tabText = linkContainer.find(\".\" + LINK_TEXT);\n                    const checkActions = (kendo.isPresent(dataItem.actions) && dataItem.actions.length) || (dataItem.closable) || (!dataItem.closable && that.options.closable);\n\n                    if (dataItem.contentUrl) {\n                        linkContainer.attr(\"data-content-url\", dataItem.contentUrl);\n                    }\n\n                    if (!that.options.contentUrls) {\n                        that._contentUrls.push(dataItem.contentUrl || DOM_DATASOURCE_EMPTY);\n                    }\n\n                    if (dataItem.icon || dataItem.iconClass) {\n                        if (dataItem.iconPosition === 'before') {\n                            linkContainer.prepend(kendo.ui.icon({ icon: dataItem.icon || \"none\", iconClass: dataItem.iconClass }));\n                        }\n                        if (dataItem.iconPosition === 'after') {\n                            linkContainer.append(kendo.ui.icon({ icon: dataItem.icon || \"none\", iconClass: dataItem.iconClass }));\n                        }\n                    }\n\n                    let template = \"\";\n                    if (dataItem.imageUrl) {\n                        template += templates.image({ imageUrl: dataItem.imageUrl });\n                    }\n\n                    if (dataItem.spriteCssClass) {\n                        template += templates.sprite({ spriteCssClass: dataItem.spriteCssClass });\n                    }\n\n                    linkContainer.prepend(template);\n\n                    if (checkActions) {\n                        that._initTabActions(item, dataItem);\n                    }\n\n                    if (dataItem.text) {\n                        const text = dataItem.encoded ? kendo.htmlEncode(dataItem.text) : dataItem.text;\n                        tabText.text(text);\n                    }\n\n                    if (item.attr(\"data-content\") && !dataItem.contentUrl) {\n                        let tabContent = that.contentElements.eq(index);\n                        tabContent.text(dataItem.content);\n                    }\n\n                    if (dataItem.hasOwnProperty(\"enabled\")) {\n                        dataItem.enabled ? item\n                                            .removeClass(DISABLEDSTATE)\n                                            .attr(ARIA_DISABLED, true)\n                                        : item\n                                           .addClass(DISABLEDSTATE)\n                                           .removeAttr(ARIA_DISABLED, false);\n                    }\n                    else if (item.hasClass(DISABLEDSTATE)) {\n                        item.addClass(DISABLEDSTATE)\n                            .removeAttr(ARIA_DISABLED, false);\n                    }\n               });\n            },\n\n            reload: function(element) {\n                element = this.tabGroup.find(element);\n                var that = this;\n                var contentUrls = that._contentUrls;\n\n                element.each(function() {\n                    var item = $(this),\n                        contentUrl = item.find(\".\" + LINK).data(CONTENTURL) || contentUrls[item.index()],\n                        content = that.contentHolder(item.index());\n\n                    if (contentUrl) {\n                        that.ajaxRequest(item, content, null, contentUrl);\n                    }\n                });\n\n                return that;\n            },\n\n            remove: function(elements) {\n                var that = this;\n                var type = typeof elements;\n                var contents;\n\n                if (type === \"string\") {\n                    elements = that.tabGroup.find(elements);\n                } else if (type === \"number\") {\n                    elements = that.tabGroup.children().eq(elements);\n                }\n\n                contents = elements.map(function() {\n                    var idx = $(this).index();\n                    var content = that.contentElement(idx);\n\n                    kendo.destroy(content);\n                    that._removeUrlItem(idx);\n\n                    return content;\n                });\n\n                elements.remove();\n                contents.empty();\n                contents.remove();\n\n                that._updateContentElements();\n                that.resize(true);\n\n                return that;\n            },\n\n            select: function(element) {\n                var that = this;\n\n                if (arguments.length === 0) {\n                    return that.tabGroup.children(\"li.\" + ACTIVESTATE);\n                }\n\n                if (!isNaN(element)) {\n                    element = that.tabGroup.children().get(element);\n                }\n\n                element = that.tabGroup.find(element);\n                $(element).each(function(index, item) {\n                    item = $(item);\n                    if (!item.hasClass(ACTIVESTATE) && !that.trigger(SELECT, { item: item[0], contentElement: that.contentHolder(item.index())[0] })) {\n                        that.activateTab(item);\n                        that.tabGroup.attr(\"aria-activedescendant\", item.attr(\"id\"));\n                    }\n                });\n\n                return that;\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value !== undefined$1) {\n                    if (value != that.value()) {\n                       that.tabGroup.children().each(function() {\n                            if (kendo.trim($(this).text()) == value) {\n                                that.select(this);\n                            }\n                       });\n                    }\n                } else {\n                    return that.select().text();\n                }\n            },\n\n            _initTabActions: function(tab, tabOptions) {\n                const that = this;\n                const tabElement = $(tab);\n                let actions = [];\n                let isClosable = tabOptions.closable;\n\n                let closeButtonAttributes = { icon: \"x\", attributes: { \"ref-close-button\": true }, action: that._handleClose };\n\n                if (tabOptions.actions) {\n                    actions = Array.from(tabOptions.actions);\n                }\n\n                if (isClosable) {\n                    actions.push(closeButtonAttributes);\n                }\n\n                if (actions?.length) {\n                    const actionsWrapperTemplate = $(templates.itemActionsWrapperTemplate());\n                    const existingActionButtons = tabElement.find(\"button\");\n\n                    actions.forEach((action, index) => {\n                        const isClosableAction = isClosable && index > existingActionButtons.length - 1;\n\n                        if (existingActionButtons.length && !isClosableAction) {\n                            action.element = existingActionButtons.eq(index);\n                        }\n\n                        const actionTemplate = $(templates.itemActionTemplate(action));\n\n                        if (!existingActionButtons.length) {\n                            actionsWrapperTemplate.append(actionTemplate);\n                        }\n\n                        if (isClosableAction && existingActionButtons.length) {\n                            existingActionButtons.parent().append(actionTemplate);\n                        }\n\n                        if (isFunction(action?.action)) {\n                            if (!existingActionButtons.length || isClosableAction) {\n                                actionTemplate.bind(CLICK, action.action.bind(that));\n                            } else {\n                                existingActionButtons.eq(index).bind(CLICK, action.action.bind(that));\n                            }\n                        }\n                    });\n\n                    if (existingActionButtons.length) {\n                        existingActionButtons.wrapAll(actionsWrapperTemplate);\n                    } else {\n                        tabElement.append(actionsWrapperTemplate);\n                    }\n                }\n\n                return tabElement[0];\n            },\n\n            _handleClose: function(e) {\n                const that = this;\n                const target = $(e.currentTarget);\n\n                const tab = target.closest('.k-item');\n\n                if (tab.hasClass(ACTIVESTATE)) {\n\n                    if (tab.prev().length > 0) {\n                        that.activateTab(tab.prev());\n                    } else {\n                        that.activateTab(tab.next());\n                    }\n                }\n\n                that.remove(tab);\n            },\n\n            _tabAlignment: function() {\n                const that = this;\n\n                let tabAlignment = that.options.tabAlignment;\n\n                if (that._scrollableModeActive) {\n                    tabAlignment = 'start';\n                }\n\n                that.tabGroup.addClass(\"k-tabstrip-items-\" + tabAlignment);\n\n            },\n\n            _active: function() {\n                var that = this;\n                setTimeout(function() {\n                    var item = that.tabGroup.children().filter(\".\" + ACTIVESTATE);\n\n                    item = item[0] ? item : that._endItem(\"first\");\n                    if (item[0]) {\n                        that._current(item);\n                    }\n                }, 100);\n            },\n\n            _animations: function(options) {\n                if (options && (\"animation\" in options) && !options.animation) {\n                    options.animation = { open: { effects: {} }, close: { effects: {} } }; // No animation\n                }\n            },\n\n            _appendUrlItem: function(url) {\n                this._contentUrls.push(url);\n            },\n\n            _attachEvents: function() {\n                var that = this,\n                    options = that.options;\n\n                that.tabGroup\n                    .on(CLICK + NS, \".k-disabled .k-link\", false)\n                    .on(CLICK + NS, \" > \" + NAVIGATABLEITEMS, that._itemClick.bind(that));\n\n                that.wrapper.on(\"focus\" + NS, function() { that.tabGroup.trigger(\"focus\"); });\n\n                if (options.scrollable && options.scrollable.scrollButtons === \"hidden\") {\n                    that.tabGroup.bind(\"scroll\", function(e) {\n                        that._toggleScrollButtons();\n                    });\n                }\n\n                that.tabGroup\n                    .on(MOUSEENTER + NS + \" \" + MOUSELEAVE + NS, HOVERABLEITEMS, that._toggleHover)\n                    .on(\"focus\" + NS, that._active.bind(that))\n                    .on(\"blur\" + NS, function() { that._current(null); });\n\n                that._keyDownProxy = that._keydown.bind(that);\n\n                if (options.navigatable) {\n                    that.tabGroup.on(\"keydown\" + NS, that._keyDownProxy);\n                }\n\n                $(window).on('resize' + NS, that._resize.bind(that));\n            },\n\n            _click: function(item) {\n                var that = this,\n                    link = item.find(\".\" + LINK),\n                    href = link.attr(HREF),\n                    collapse = that.options.collapsible,\n                    index = item.index(),\n                    contentHolder = that.contentHolder(index),\n                    prevent, isAnchor,\n                    neighbours = item.parent().children(),\n                    oldFocusedTab = neighbours.filter(\".\" + FOCUSEDSTATE);\n\n                if (item.closest(\".k-tabstrip\")[0] != that.wrapper[0]) {\n                    return;\n                }\n\n                if (item.is(\".\" + DISABLEDSTATE + (!collapse ? \",.\" + ACTIVESTATE : \"\"))) {\n                    oldFocusedTab.removeClass(FOCUSEDSTATE);\n                    that._focused = item;\n\n                    item.addClass(FOCUSEDSTATE);\n                    that._current(item);\n\n                    if (that._scrollableModeActive) {\n                        that._scrollTabsToItem(item);\n                    }\n                    return true;\n                }\n\n                isAnchor = link.data(CONTENTURL) || that._contentUrls[index] || (href && (href.charAt(href.length - 1) == \"#\" || href.indexOf(\"#\" + that.element[0].id + \"-\") != -1));\n                prevent = !href || isAnchor;\n\n                if (that.tabGroup.children(\"[data-animating]\").length) {\n                    return prevent;\n                }\n\n                if (that.trigger(SELECT, { item: item[0], contentElement: contentHolder[0] })) {\n                    return true;\n                }\n\n                if (prevent === false) {\n                    return;\n                }\n\n                if (collapse && item.is(\".\" + ACTIVESTATE)) {\n                    that.deactivateTab(item);\n                    return true;\n                }\n\n                if (that.activateTab(item)) {\n                    that._current(item);\n                    prevent = true;\n                }\n\n                return prevent;\n            },\n\n            _create: function(tab) {\n                var that = this,\n                tabs,\n                contents,\n                content,\n                newTabsCreated = false;\n\n                tab = tab instanceof kendo.data.ObservableArray ? tab.toJSON() : tab;\n\n                if ($.isPlainObject(tab) || Array.isArray(tab)) {\n                    tab = Array.isArray(tab) ? tab : [tab];\n                    newTabsCreated = true;\n\n                    tabs = map(tab, function(value, idx) {\n                        that._appendUrlItem(tab[idx].contentUrl || null);\n                        const renderedTabItem = TabStrip.renderItem({\n                            group: that.tabGroup,\n                            item: extend(value, { index: idx })\n                        });\n\n                        value.closable = value.closable ?? that.options.closable;\n                        return $(that._initTabActions(renderedTabItem, value));\n                    });\n\n                    contents = map( tab, function(value, idx) {\n                                if (typeof value.content == \"string\" || value.contentUrl) {\n                                    let tabstripContent = $(TabStrip.renderContent({\n                                        item: extend(value, { index: idx })\n                                    }));\n\n                                    kendo.applyStylesFromKendoAttributes(tabstripContent, [\"display\"]);\n                                    return tabstripContent;\n                                }\n                            });\n                } else {\n                    if (typeof tab == \"string\" && tab[0] != \"<\") {\n                        tabs = that.element.find(tab);\n                    } else {\n                        tabs = $(tab);\n                    }\n                    contents = $();\n                    tabs.each(function() {\n                        if (/k-tabstrip-items/.test(this.parentNode.className)) {\n                            var element = that.element.find(\"[id='\" + this.getAttribute(ARIA_CONTROLS) + \"']\");\n                            content = element;\n                        } else {\n                            content = $(\"<div class='\" + CONTENT + \"'/>\");\n                        }\n\n                        contents = contents.add(content);\n                    });\n\n                    updateTabClasses(tabs, that.options);\n                }\n\n                return { tabs: tabs, contents: contents, newTabsCreated: newTabsCreated };\n            },\n\n            _current: function(candidate, preventFocus) {\n                var that = this,\n                    focused = that._focused;\n\n                if (candidate === undefined$1) {\n                    return focused;\n                }\n\n                if (focused && candidate && focused[0] === candidate[0]) {\n                    focused = false;\n                }\n\n                if (focused) {\n                    focused.removeClass(FOCUSEDSTATE);\n                }\n\n                if (candidate && !preventFocus) {\n                    candidate.addClass(FOCUSEDSTATE);\n                }\n\n                that._focused = candidate;\n            },\n\n            _dataSource: function() {\n                var that = this;\n\n                if (that.dataSource && that._refreshHandler) {\n                    that.dataSource.unbind(\"change\", that._refreshHandler);\n                } else {\n                    that._refreshHandler = that.refresh.bind(that);\n                }\n                const dataSource = that.options.dataSource || that._createDataSourceFromDOM();\n\n                that.dataSource = kendo.data.DataSource.create(dataSource)\n                                    .bind(\"change\", that._refreshHandler);\n            },\n\n            _createDataSourceFromDOM: function() {\n                const that = this;\n                const dataSourceOptions = [];\n                const enableDOMDataSource = that.options._enableDOMDataSource;\n                const itemOptions = [\n                    \"text\",\n                    \"content\",\n                    \"icon\",\n                    \"iconPosition\",\n                    \"iconClass\",\n                    \"spriteCssClass\",\n                    \"imageUrl\",\n                    \"contentUrl\",\n                    \"encoded\",\n                    \"closable\",\n                    \"actions\",\n                    \"enabled\",\n                ];\n\n                const actionOptions = [\n                    \"icon\",\n                    \"iconClass\",\n                    \"text\",\n                    \"action\"\n                ];\n\n                if (!enableDOMDataSource) {\n                    return that.options.dataSource;\n                }\n\n                const dataItems = that.tabGroup.children(\"li\");\n                const contentElements = that.contentElements;\n\n                that._enableDataSourceFromDOM = dataItems.length > 0;\n                dataItems.each(function(idx, item) {\n                    const $item = $(item);\n                    const actions = $item.find(\"button\");\n                    const itemData = {};\n\n                    itemOptions.forEach(function(option) {\n                        let data = $item.data(option);\n\n                        if (option === \"text\" && !data) {\n                            data = $item\n                                .find(\".k-link-text\")\n                                .text()\n                                .trim();\n                        }\n\n                        if (option === \"content\" && !data) {\n                            const content = $(contentElements[idx]);\n                            if (content.length) {\n                                data = content.html();\n                            }\n                        }\n\n                        if (option === \"closable\" && data === undefined$1) {\n                            data = that.options.closable;\n                        }\n\n                        if (data !== undefined$1) {\n                            itemData[option] = data;\n                        }\n                    });\n\n                    if (itemData.iconPosition === undefined$1) {\n                        itemData.iconPosition = \"before\";\n                    }\n\n                    if (actions.length) {\n                        itemData.actions = [];\n                        that._decorateActions(actions, actionOptions, itemData);\n                    }\n\n                    dataSourceOptions.push(itemData);\n                });\n\n                return dataSourceOptions;\n            },\n\n            _decorateActions: function(actions, actionOptions, itemData) {\n                actions.each(function(idx, action) {\n                      const $action = $(action);\n                      const actionData = {};\n                      actionOptions.forEach(function(option) {\n                          let data = $action.data(option);\n\n                          if (option === \"text\" && !data) {\n                              data = kendo.htmlEncode($action.text().trim());\n                          }\n\n                          if (option === \"action\" && typeof data === \"string\") {\n                              let fn = window[data];\n                              if (typeof fn === \"function\") {\n                                  data = fn;\n                              }\n                          }\n\n                          if (data !== undefined$1) {\n                              actionData[option] = data;\n                          }\n                      }, this);\n                      itemData.actions.push(actionData);\n                });\n            },\n\n            _elementId: function(element, idx, tab) {\n                var elementId = element.attr(\"id\"),\n                    wrapperId = this.element.attr(\"id\"),\n                    guid = kendo.guid();\n\n                if (!elementId || elementId.indexOf(wrapperId + \"-\") > -1) {\n                    var tabStripID = (wrapperId || guid) + \"-\";\n\n                    if (tab) {\n                        tabStripID += \"tab-\";\n                    }\n\n                    return tabStripID + (idx + 1);\n                }\n\n                return elementId;\n            },\n\n            _endItem: function(action) {\n                return this.tabGroup.children(NAVIGATABLEITEMS)[action]();\n            },\n\n            _getItem: function(action) {\n                return this.tabGroup.children(KEYBOARDNAVIGATABLEITEMS)[action]();\n            },\n\n            _initialActivate: function() {\n                var that = this,\n                    selectedItems = that.tabGroup.children(\"li.\" + ACTIVESTATE),\n                    content = that.contentHolder(selectedItems.index());\n\n                if (selectedItems[0] && content.length > 0 && content[0].childNodes.length === 0) {\n                    that.activateTab(selectedItems.eq(0));\n                }\n            },\n\n            _item: function(item, action) {\n                var endItem;\n                if (action === PREV) {\n                    endItem = \"last\";\n                } else {\n                    endItem = \"first\";\n                }\n\n                if (!item) {\n                    return this._endItem(endItem);\n                }\n\n                item = item[action]();\n\n                if (!item[0]) {\n                    item = this.tabGroup.children(KEYBOARDNAVIGATABLEITEMS)[endItem]();\n                }\n\n                if (item.hasClass(DISABLEDSTATE)) {\n                    item.addClass(FOCUSEDSTATE);\n                }\n                if (item.hasClass(DISABLEDSTATE) || item.hasClass(ACTIVESTATE)) {\n                    this._focused = item;\n                }\n\n                return item;\n            },\n\n            _itemClick: function(e) {\n                var that = this,\n                    tabGroup = that.tabGroup[0];\n\n                if (e.target.closest('.k-item-actions')) {\n                    return;\n                }\n\n                if (tabGroup !== document.activeElement) {\n                    var msie = kendo.support.browser.msie;\n                    if (msie) {\n                        try {\n                            // does not scroll to the active element\n                            tabGroup.setActive();\n                        } catch (j) {\n                            tabGroup.focus();\n                        }\n                    } else {\n                        tabGroup.focus();\n                    }\n                }\n\n                if (that._click($(e.currentTarget))) {\n                    e.preventDefault();\n                }\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    key = e.keyCode,\n                    current = that._current(),\n                    rtl = that._isRtl,\n                    isHorizontal = /top|bottom/.test(that.options.tabPosition),\n                    action;\n\n                if (e.target != e.currentTarget || !current) {\n                    return;\n                }\n\n                if (key === keys.DOWN && !isHorizontal) {\n                    action = NEXT;\n                } else if (key === keys.UP && !isHorizontal) {\n                    action = PREV;\n                } else if (key === keys.RIGHT && isHorizontal) {\n                    action = rtl ? PREV : NEXT;\n                } else if (key === keys.LEFT && isHorizontal) {\n                    action = rtl ? NEXT : PREV;\n                } else if (key == keys.ENTER || key == keys.SPACEBAR) {\n                    that._click(current);\n                    e.preventDefault();\n                } else if (key == keys.HOME) {\n                    that._click(that._getItem(\"first\"));\n                    e.preventDefault();\n                    return;\n                } else if (key == keys.END) {\n                    that._click(that._getItem(\"last\"));\n                    e.preventDefault();\n                    return;\n                }\n\n                if (action) {\n                    that._click(that._item(current, action));\n                    e.preventDefault();\n                }\n            },\n\n            _moveUrlItem: function(from, to) {\n                this._contentUrls.splice(to, 0, this._contentUrls.splice(from, 1)[0]);\n            },\n\n            _processContentUrls: function() {\n                var that = this;\n\n                if (that._contentUrls.length) {\n                    that.tabGroup.children(\".k-item.k-tabstrip-item\")\n                        .each(function(index, item) {\n                            var url = that._contentUrls[index];\n\n                            if (typeof url === 'string') {\n                                $(item).find(\">.\" + LINK).data(CONTENTURL, url);\n                            }\n                        });\n                } else {\n                    that._contentUrls.length = that.tabGroup.find(\"li.k-item.k-tabstrip-item\").length;\n                }\n            },\n\n            _removeUrlItem: function(index) {\n                this._contentUrls.splice(index, 1);\n            },\n\n            _resize: function() {\n                this._scrollable();\n            },\n\n            _getChildrenWidth: function(element) {\n                let width = 0;\n                element.children().each(function() {\n                    width += outerWidth($(this));\n                });\n                return Math.floor(width);\n            },\n\n            _getChildrenHeight: function(element) {\n                let height = 0;\n                element.children().each(function() {\n                    height += outerHeight($(this));\n                });\n                return Math.floor(height);\n            },\n\n            _scrollable: function() {\n                const that = this,\n                    options = that.options,\n                    scrollButtonsPosition = options.scrollable.scrollButtonsPosition,\n                    scrollButtonsVisibility = options.scrollable.scrollButtons,\n                    isHorizontal = options.tabPosition == \"top\" || options.tabPosition == \"bottom\",\n                    isHidden = scrollButtonsVisibility === \"hidden\",\n                    isVisible = scrollButtonsVisibility === \"visible\";\n\n                let wrapperOffset,\n                tabGroupScroll,\n                    scrollPrevButton,\n                    scrollNextButton;\n\n                if (that._scrollableAllowed()) {\n\n                    that.wrapper.addClass(\"k-tabstrip-scrollable\");\n\n                    wrapperOffset = isHorizontal ? that.wrapper[0].offsetWidth : that.wrapper[0].offsetHeight;\n                    tabGroupScroll = isHorizontal ? that.tabGroup[0].scrollWidth : that.tabGroup[0].scrollHeight;\n                    const condition = isHorizontal ? (that._getChildrenWidth(that.tabGroup) > that.tabGroup.outerWidth()) : (that._getChildrenHeight(that.tabGroup) > that.tabGroup.outerHeight());\n                    const enableScroll = (tabGroupScroll > wrapperOffset) || condition;\n\n                    if (enableScroll && !that._scrollableModeActive && isHidden) {\n                        that.tabGroup.addClass(\"k-tabstrip-items-scroll\");\n                        that.wrapper.addClass(\"k-tabstrip-scrollable-overlay\");\n\n                        that._scrollableModeActive = true;\n                        that._toggleScrollButtons();\n                    } else if ((enableScroll || isVisible) && !that._scrollableModeActive) {\n                        that._nowScrollingTabs = false;\n                        that._isRtl = kendo.support.isRtl(that.element);\n                        const mouseDown = kendo.support.touch ? \"touchstart\" : \"mousedown\";\n                        const mouseUp = kendo.support.touch ? \"touchend\" : \"mouseup\";\n                        const browser = kendo.support.browser;\n                        const isRtlScrollDirection = that._isRtl && !browser.msie && !browser.edge;\n                        const prevIcon = isHorizontal ? \"caret-alt-left\" : \"caret-alt-up\";\n                        const nextIcon = isHorizontal ? \"caret-alt-right\" : \"caret-alt-down\";\n\n                        const scrollLeft = scrollButtonHtml(\"prev\", prevIcon);\n                        const scrollRight = scrollButtonHtml(\"next\", nextIcon);\n\n                        switch (scrollButtonsPosition) {\n                            case 'split':\n                                that.tabWrapper.prepend(scrollLeft);\n                                that.tabWrapper.append(scrollRight);\n                                break;\n                            case 'start':\n                                that.tabWrapper.prepend(scrollRight);\n                                that.tabWrapper.prepend(scrollLeft);\n                                break;\n                            case 'end':\n                                that.tabWrapper.append(scrollLeft);\n                                that.tabWrapper.append(scrollRight);\n                                break;\n                        }\n\n                        scrollPrevButton = that._scrollPrevButton = that.tabWrapper.children(\".k-tabstrip-prev\");\n                        scrollNextButton = that._scrollNextButton = that.tabWrapper.children(\".k-tabstrip-next\");\n\n                        scrollPrevButton.on(mouseDown + NS, function() {\n                            that._nowScrollingTabs = true;\n                            that._scrollTabsByDelta(options.scrollable.distance * (isRtlScrollDirection ? 1 : -1));\n                        });\n\n                        scrollNextButton.on(mouseDown + NS, function() {\n                            that._nowScrollingTabs = true;\n                            that._scrollTabsByDelta(options.scrollable.distance * (isRtlScrollDirection ? -1 : 1));\n                        });\n\n                        scrollPrevButton.add(scrollNextButton).on(mouseUp + NS, function() {\n                            that._nowScrollingTabs = false;\n                        });\n\n                        that._scrollableModeActive = true;\n\n                        that._toggleScrollButtons();\n                    } else if (that._scrollableModeActive && !enableScroll && !isVisible) {\n                        that._scrollableModeActive = false;\n\n                       that._removeScrollableClasses();\n\n                       that._scrollPrevButton && that._scrollPrevButton.off().remove();\n                       that._scrollNextButton && that._scrollNextButton.off().remove();\n                    } else if (!that._scrollableModeActive && !isVisible) {\n                        that._removeScrollableClasses();\n                    } else {\n                        that._toggleScrollButtons();\n                    }\n                }\n            },\n\n            _removeScrollableClasses: function() {\n                const that = this;\n                const isHidden = that.options.scrollable.scrollButtons === \"hidden\";\n\n                that.wrapper.removeClass(\"k-tabstrip-scrollable\");\n\n                if (isHidden) {\n                    that.wrapper.removeClass(\"k-tabstrip-scrollable-overlay\");\n                    that.wrapper.removeClass(\"k-tabstrip-scrollable-start\");\n                    that.wrapper.removeClass(\"k-tabstrip-scrollable-end\");\n\n                    that.tabGroup.removeClass(\"k-tabstrip-items-scroll\");\n                }\n            },\n\n            _scrollableAllowed: function() {\n                var options = this.options;\n\n                if (options.scrollable && !options.scrollable.distance) {\n                    options.scrollable = { distance: DEFAULTDISTANCE };\n                }\n                return options.scrollable && !isNaN(options.scrollable.distance);\n            },\n\n            _scrollTabsToItem: function(item) {\n                var that = this,\n                    tabGroup = that.tabGroup,\n                    isHorizontal = that.options.tabPosition == \"top\" || that.options.tabPosition == \"bottom\",\n                    currentScrollOffset = isHorizontal ? kendo.scrollLeft(tabGroup) : tabGroup.scrollTop(),\n                    itemSize = isHorizontal ? outerWidth(item) : outerHeight(item),\n                    itemOffset = isHorizontal ? (that._isRtl ? item.position().left : item.position().left - tabGroup.children().first().position().left) : item.position().top,\n                    tabGroupSize = isHorizontal ? tabGroup[0].offsetWidth : tabGroup[0].offsetHeight,\n                    browser = kendo.support.browser,\n                    itemPosition;\n\n                if (that._isRtl && isHorizontal && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                    currentScrollOffset = currentScrollOffset * -1;\n                }\n\n                if (that._isRtl && isHorizontal) {\n                    if (itemOffset < 0) {\n                        itemPosition = currentScrollOffset + itemOffset - (tabGroupSize - currentScrollOffset);\n                    } else if (itemOffset + itemSize > tabGroupSize) {\n                        itemPosition = currentScrollOffset + itemOffset - itemSize;\n                    }\n                } else {\n                    if (currentScrollOffset + tabGroupSize < itemOffset + itemSize) {\n                        itemPosition = itemOffset + itemSize - tabGroupSize;\n                    } else if (currentScrollOffset > itemOffset) {\n                        itemPosition = itemOffset;\n                    }\n                }\n\n                var animationProps = isHorizontal ? { \"scrollLeft\": itemPosition } : { \"scrollTop\": itemPosition };\n\n                tabGroup.finish().animate(animationProps, \"fast\", \"linear\", function() {\n                    that._toggleScrollButtons();\n                });\n            },\n\n            _scrollTabsByDelta: function(delta) {\n                const that = this;\n                const tabGroup = that.tabGroup;\n                const isHorizontal = that.options.tabPosition == \"top\" || that.options.tabPosition == \"bottom\";\n\n                let scrOffset = isHorizontal ? kendo.scrollLeft(tabGroup) : tabGroup.scrollTop();\n                const browser = kendo.support.browser;\n\n                if (that._isRtl && isHorizontal && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                    scrOffset = scrOffset * -1;\n                }\n\n                var animationProps = isHorizontal ? { \"scrollLeft\": scrOffset + delta } : { \"scrollTop\": scrOffset + delta };\n\n                tabGroup.finish().animate(animationProps, \"fast\", \"linear\", function() {\n                    if (that._nowScrollingTabs && !jQuery.fx.off) {\n                        that._scrollTabsByDelta(delta);\n                    } else {\n                        that._toggleScrollButtons();\n                    }\n                });\n            },\n\n            _sortable: function() {\n                var that = this,\n                options = that.options,\n                position = options.tabPosition,\n                isHidden = options.scrollable && options.scrollable.scrollButtons === \"hidden\",\n                axis = position === 'left' || position === 'right' ? 'y' : 'x';\n\n                if (!that.options.sortable) {\n                    return;\n                }\n\n                that.sortable = new kendo.ui.Sortable(that.tabGroup, {\n                    filter: \"li.k-item.k-tabstrip-item\",\n                    axis,\n                    holdToDrag: isHidden,\n                    allowTouchActions: isHidden,\n                    container: that.tabWrapper,\n                    hint: el => `<div id='hint' class='k-tabstrip k-tabstrip-${position}'>\n                                <div class= 'k-tabstrip-items-wrapper k-hstack'>\n                                    <ul class='k-tabstrip-items k-reset'>\n                                        <li class='k-item k-tabstrip-item k-first k-active'>${el.html()}</li>\n                                    </ul>\n                                </div>\n                            </div>`,\n                    change: that._sortChange.bind(that),\n                    start: e => that.activateTab(e.item)\n                });\n\n            },\n\n            _sortChange: function(e) {\n                var that = this,\n                    reference = that.tabGroup.children().eq(e.newIndex);\n\n                if (e.oldIndex < e.newIndex) {\n                    that.insertAfter(e.item, reference);\n                } else {\n                    that.insertBefore(e.item, reference);\n                }\n            },\n\n            _tabSizes: function() {\n                const that = this;\n                const tabSize = that.options.size;\n\n                let className;\n                switch (tabSize) {\n                    case \"small\":\n                        className = \"k-tabstrip-sm\";\n                        break;\n\n                    case \"medium\":\n                        className = \"k-tabstrip-md\";\n                        break;\n\n                    case \"large\":\n                        className = \"k-tabstrip-lg\";\n                        break;\n                }\n\n                that.wrapper.addClass(className);\n            },\n\n            _tabPosition: function() {\n                var that = this,\n                    tabPosition = that.options.tabPosition;\n\n                that.wrapper.addClass(\"k-tabstrip-\" + tabPosition);\n\n                if (tabPosition == \"bottom\") {\n                    that.tabWrapper.appendTo(that.wrapper);\n                }\n\n                if (tabPosition === \"left\" || tabPosition === \"right\") {\n                    that.tabGroup.attr(ARIA_ORIENTATION, \"vertical\");\n                }\n\n                that.resize(true);\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVERSTATE, e.type == MOUSEENTER);\n            },\n\n            _toggleDisabled: function(element, enable) {\n                element = this.tabGroup.find(element);\n                element.each(function() {\n                    $(this)\n                        .toggleClass(DISABLEDSTATE, !enable)\n                        .attr(ARIA_DISABLED, !enable);\n                });\n            },\n\n            _toggleScrollButtons: function() {\n                var that = this,\n                    ul = that.tabGroup,\n                    scrollLeft = Math.floor(kendo.scrollLeft(ul)),\n                    scrollTop = Math.floor(ul.scrollTop()),\n                    scrollButtonsVisibility = that.options.scrollable.scrollButtons,\n                    isHorizontal = that.options.tabPosition == \"top\" || that.options.tabPosition == \"bottom\";\n\n                    const disableNextButton = (isHorizontal ? Math.abs(scrollLeft - (ul[0].scrollWidth - ul[0].offsetWidth)) : Math.abs(scrollTop - (ul[0].scrollHeight - ul[0].offsetHeight))) <= 1;\n                    const disablePrevButton = (isHorizontal ? scrollLeft : scrollTop) === 0;\n\n                    if (scrollButtonsVisibility !== \"hidden\") {\n                        that._scrollPrevButton.toggleClass('k-disabled', disablePrevButton);\n                        that._scrollNextButton.toggleClass('k-disabled', disableNextButton);\n                    } else {\n                        that.wrapper.toggleClass(\"k-tabstrip-scrollable-start\", disablePrevButton);\n                        that.wrapper.toggleClass(\"k-tabstrip-scrollable-end\", disableNextButton);\n                    }\n            },\n\n            _updateClasses: function() {\n                var that = this,\n                    tabs, activeItem, activeTab;\n                var isHorizontal = /top|bottom/.test(that.options.tabPosition);\n\n                that.wrapper.addClass(\"k-tabstrip\");\n\n                if (!that.tabGroup) {\n                    that.tabGroup = that.wrapper.children(\"ul\");\n                    that.tabGroup.wrap('<div />');\n                    that.tabWrapper = that.tabGroup.parent();\n                }\n\n                if (!that.tabGroup[0]) {\n                    that.tabGroup = $(\"<ul />\").prependTo(that.wrapper);\n                    that.tabGroup.wrap('<div />');\n                    that.tabWrapper = that.tabGroup.parent();\n                }\n\n                that.tabWrapper.addClass('k-tabstrip-items-wrapper');\n                that.tabWrapper.addClass(isHorizontal ? 'k-hstack' : 'k-vstack');\n                that.tabGroup.addClass('k-tabstrip-items k-reset');\n\n                tabs = that.tabGroup.find(\"li\").addClass(\"k-item k-tabstrip-item\");\n\n                if (tabs.length) {\n                    activeItem = tabs.filter(\".\" + ACTIVESTATE).index();\n                    activeTab = activeItem >= 0 ? activeItem : undefined$1;\n\n                    that.tabGroup // Remove empty text nodes\n                        .contents()\n                        .filter(function() { return (this.nodeType == 3 && !trim(this.nodeValue)); })\n                        .remove();\n                }\n\n                that.contentElements = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\");\n\n                that.contentElements\n                    .addClass(CONTENT)\n                    .eq(activeTab)\n                    .addClass(ACTIVESTATE)\n                    .css({ display: \"block\" });\n\n                if (tabs.length) {\n                    updateTabClasses(tabs, that.options);\n                    activeItem = tabs.filter(\".\" + ACTIVESTATE).index();\n\n                    that.tabGroup.attr(\"aria-activedescendant\", tabs.eq(activeItem).attr(\"id\"));\n                    updateFirstLast(that.tabGroup);\n                    that._updateContentElements(true);\n                }\n            },\n\n            _updateContentElements: function(isInitialUpdate) {\n                var that = this,\n                    contentUrls = that._contentUrls,\n                    items = that.tabGroup.children(\".k-item.k-tabstrip-item\"),\n                    contentElements = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\"),\n                    _elementId = that._elementId.bind(that);\n\n                if (contentElements.length && (items.length > contentElements.length)) {\n                    contentElements.each(function(idx) {\n                        // Generate an ID for each content element\n                        var contentId = _elementId($(this), idx),\n                            item = items.filter(\"[aria-controls=\" + (contentId || 0) + \"]\")[0],\n                            tabId;\n\n                        if (!item && isInitialUpdate) {\n                            // On initialization of the widget get the tab by its index\n                            item = items[idx];\n                        }\n\n                        if (item) {\n                            // set the tab aria-controls attribute to the content ID\n                            item.setAttribute(ARIA_CONTROLS, contentId);\n                            tabId = item.id = _elementId($(item), idx, true);\n                            this.setAttribute(ARIA_LABELLEDBY, tabId);\n                        }\n\n                        // set the get (possibly existing) ID on the content element\n                        this.setAttribute(\"id\", contentId);\n                    });\n                }\n                else {\n                    items.each(function(idx) {\n                        var currentContent = contentElements.eq(idx),\n                            contentId = _elementId(currentContent, idx),\n                            tabId;\n\n                        // set the tab aria-controls attribute to the content ID\n                        this.setAttribute(ARIA_CONTROLS, contentId);\n\n                        tabId = this.id = _elementId($(this), idx, true);\n\n                        if (!currentContent.length && contentUrls[idx]) {\n                            // Append content element in case contentUrl is used\n                            $(\"<div class='\" + CONTENT + \"'/>\")\n                                .appendTo(that.wrapper)\n                                .attr(\"id\", contentId);\n\n                            if (contentUrls[idx] == DOM_DATASOURCE_EMPTY) {\n                                that._contentUrls[idx] = null;\n                            }\n                        } else {\n                            // set the ID on the content element\n                            currentContent.attr(\"id\", contentId);\n                        }\n\n                        currentContent.attr(\"role\", \"tabpanel\");\n                        currentContent.attr(\"tabindex\", \"0\");\n                        currentContent.attr(ARIA_LABELLEDBY, tabId);\n                        currentContent.filter(\":not(.\" + ACTIVESTATE + \")\").attr(ARIA_HIDDEN, true);\n                    });\n\n                    that._removeEmptyUrls();\n                }\n\n                if (that.options._enableDOMDataSource && isInitialUpdate) {\n                    items.each(function(idx) {\n                        contentElements = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\");\n\n                        let currentContent = contentElements.eq(idx),\n                            contentId = _elementId(currentContent, idx),\n                            tabId;\n\n                        // set the tab aria-controls attribute to the content ID\n                        this.setAttribute(ARIA_CONTROLS, contentId);\n\n                        if (!currentContent.length && contentUrls[idx]) {\n                            $(\"<div class='\" + CONTENT + \"'/>\")\n                                .appendTo(that.wrapper)\n                                .attr(\"id\", contentId);\n\n                            if (contentUrls[idx] == DOM_DATASOURCE_EMPTY) {\n                                that._contentUrls[idx] = null;\n                            }\n                        }\n\n                        currentContent.attr(\"role\", \"tabpanel\");\n                        currentContent.attr(\"tabindex\", \"0\");\n                        currentContent.attr(ARIA_LABELLEDBY, tabId);\n                        currentContent.filter(\":not(.\" + ACTIVESTATE + \")\").attr(ARIA_HIDDEN, true);\n\n                    });\n\n                    that._removeEmptyUrls();\n                }\n\n                that.contentElements = that.contentAnimators = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\"); // refresh the contents\n\n                that.tabsHeight = outerHeight(that.tabGroup) +\n                                  parseInt(that.wrapper.css(\"border-top-width\"), 10) +\n                                  parseInt(that.wrapper.css(\"border-bottom-width\"), 10);\n\n                if (kendo.kineticScrollNeeded && kendo.mobile.ui.Scroller) {\n                    kendo.touchScroller(that.contentElements);\n                    that.contentElements = that.contentElements.children(\".km-scroll-container\");\n                }\n            },\n\n            _removeEmptyUrls: function() {\n                 let that = this;\n\n                 if (that._contentUrls.length) {\n                    that._contentUrls.forEach(function(url, idx) {\n                          that._contentUrls[idx] = url == DOM_DATASOURCE_EMPTY ? null : url;\n                    });\n                 }\n            },\n\n            _wrapper: function() {\n                var that = this;\n\n                if (that.element.is(\"ul\")) {\n                    that.wrapper = that.element.wrapAll(\"<div />\").parent();\n                } else {\n                    that.wrapper = that.element;\n                }\n            }\n        });\n\n        // client-side rendering\n        extend(TabStrip, {\n            renderItem: function(options) {\n                options = extend({ tabStrip: {}, group: {} }, options);\n                var empty = templates.empty,\n                    item = options.item,\n                    templateOptions = extend(options, {\n                        image: item.imageUrl ? templates.image : empty,\n                        sprite: item.spriteCssClass ? templates.sprite : empty,\n                        textWrapper: templates.textWrapper,\n                        itemActions: templates.itemActionsWrapperTemplate,\n                    }, rendering);\n\n                if (item.template) {\n                    return templates.itemWrapper(templateOptions, kendo.template(item.template)(item.model));\n                }\n\n                return templates.item(templateOptions);\n            },\n\n            renderContent: function(options) {\n                return templates.content(extend(options, rendering));\n            }\n        });\n\n        kendo.ui.plugin(TabStrip);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports[\"default\"] = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}