{"version":3,"sources":["raw-js/kendo.tabstrip.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendotabstrip","js","this","$","undefined$1","kendo","window","ui","keys","map","each","trim","extend","isFunction","outerWidth","template","_outerWidth","outerHeight","_outerHeight","Widget","excludedNodesRegExp","NS","HREF","PREV","NEXT","SHOW","LINK","LINK_TEXT","LAST","CLICK","IMAGE","FIRST","SELECT","ACTIVATE","CONTENT","CONTENTURL","MOUSEENTER","CONTENTLOAD","DISABLEDSTATE","ACTIVESTATE","FOCUSEDSTATE","HOVERSTATE","NAVIGATABLEITEMS","KEYBOARDNAVIGATABLEITEMS","HOVERABLEITEMS","ARIA_HIDDEN","ARIA_CONTROLS","ARIA_DISABLED","ARIA_SELECTED","ARIA_LABELLEDBY","templates","content","data","contentAttributes","item","textWrapper","tag","contentUrl","textAttributes","image","sprite","text","itemWrapper","wrapperCssClass","group","active","imageUrl","spriteCssClass","empty","rendering","result","index","enabled","push","length","join","url","sanitizeLink","encoded","htmlEncode","attr","updateTabClasses","tabs","children","addClass","filter","prop","parent","is","contents","nodeName","match","nodeType","nodeValue","wrapAll","updateFirstLast","tabGroup","removeClass","scrollButtonHtml","buttonClass","iconClass","icon","ajaxXhr","current","request","ajaxSettings","xhr","event","progressUpload","progress","upload","addEventListener","evt","noProgress","XMLHttpRequest","TabStrip","init","element","options","value","that","fn","call","_animations","_contentUrls","contentUrls","_wrapper","_isRtl","support","isRtl","wrapper","_updateClasses","_dataSource","_tabindex","dataSource","fetch","_removeAdditionalWrapperClasses","_tabSizes","_tabPosition","_scrollable","_tabAlignment","_sortable","_processContentUrls","_attachEvents","_initialActivate","notify","_showWatermarkOverlay","events","name","dataEncodedField","dataTextField","dataContentField","dataImageUrlField","dataUrlField","dataSpriteCssClass","dataContentUrlField","tabPosition","tabAlignment","size","tabTemplate","animation","open","effects","duration","close","collapsible","navigatable","applyMinHeight","scrollable","distance","scrollButtonsPosition","scrollButtons","sortable","setDataSource","setOptions","on","_keyDownProxy","off","activateTab","find","animationSettings","hasCloseAnimation","neighbours","oldTab","itemIndex","reverse","hide","kendoRemoveClass","contentAnimators","inRequest","abort","_current","trigger","_scrollableModeActive","_scrollTabsToItem","visibleContents","contentHolder","contentElement","closest","tabsHeight","parseInt","css","kendoStop","kendoAnimate","isAjaxContent","showContentElement","removeAttr","resize","complete","oldMinHeight","showContent","ajaxRequest","kendoAddClass","link","ajaxOptions","type","cache","dataType","error","status","success","destroy","html","e","ajax","append","tab","inserted","_create","idx","tabWrapper","before","_updateContentElements","isNaN","contentElements","kineticScrollNeeded","id","i","len","eq","scrollContainer","touch","deactivateTab","isHidden","_refreshHandler","unbind","_scrollPrevButton","remove","_scrollNextButton","disable","_toggleDisabled","enable","state","insertAfter","referenceTab","prev","referenceContent","fromIndex","newTabsCreated","after","_moveUrlItem","insertBefore","next","items","refresh","getter","view","action","model","indexOf","field","get","reload","elements","_removeUrlItem","select","arguments","hasClass","_active","setTimeout","_endItem","_appendUrlItem","_itemClick","bind","_toggleScrollButtons","_toggleHover","_keydown","_resize","_click","prevent","isAnchor","href","collapse","oldFocusedTab","_focused","charAt","ObservableArray","toJSON","isPlainObject","Array","isArray","renderItem","tabstripContent","renderContent","applyStylesFromKendoAttributes","test","parentNode","className","getAttribute","add","candidate","preventFocus","focused","DataSource","create","_elementId","elementId","wrapperId","guid","tabStripID","_getItem","selectedItems","childNodes","_item","endItem","document","activeElement","browser","msie","setActive","j","focus","currentTarget","preventDefault","key","keyCode","rtl","isHorizontal","target","DOWN","UP","RIGHT","LEFT","ENTER","SPACEBAR","HOME","END","from","to","splice","_getChildrenWidth","width","Math","floor","_getChildrenHeight","height","scrollButtonsVisibility","isVisible","wrapperOffset","tabGroupScroll","scrollPrevButton","scrollNextButton","_scrollableAllowed","offsetWidth","offsetHeight","scrollWidth","scrollHeight","condition","enableScroll","_removeScrollableClasses","_nowScrollingTabs","mouseDown","mouseUp","isRtlScrollDirection","edge","nextIcon","scrollLeft","scrollRight","prepend","_scrollTabsByDelta","itemPosition","currentScrollOffset","scrollTop","itemSize","itemOffset","position","left","first","top","tabGroupSize","mozilla","webkit","version","animationProps","finish","animate","delta","scrOffset","jQuery","fx","axis","Sortable","holdToDrag","allowTouchActions","container","hint","el","change","_sortChange","start","reference","newIndex","oldIndex","appendTo","toggleClass","ul","disableNextButton","abs","disablePrevButton","activeItem","activeTab","wrap","prependTo","display","isInitialUpdate","tabId","contentId","setAttribute","currentContent","mobile","Scroller","touchScroller","tabStrip","templateOptions","plugin","kendo$1","__meta__","category","description","depends","features","Object","defineProperty"],"mappings":"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","file":"kendo.tabstrip.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.data.js'), require('kendo.icons.js'), require('kendo.sortable.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.data', 'kendo.icons', 'kendo.sortable'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendotabstrip = global.kendotabstrip || {}, global.kendotabstrip.js = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"tabstrip\",\n        name: \"TabStrip\",\n        category: \"web\",\n        description: \"The TabStrip widget displays a collection of tabs with associated tab content.\",\n        depends: [ \"data\", \"icons\", \"sortable\" ],\n        features: [ {\n            id: \"tabstrip-fx\",\n            name: \"Animation\",\n            description: \"Support for animation\",\n            depends: [ \"fx\" ]\n        } ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            keys = kendo.keys,\n            map = $.map,\n            each = $.each,\n            trim = kendo.trim,\n            extend = $.extend,\n            isFunction = kendo.isFunction,\n            template = kendo.template,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            Widget = ui.Widget,\n            excludedNodesRegExp = /^(a|div)$/i,\n            NS = \".kendoTabStrip\",\n            IMG = \"img\",\n            HREF = \"href\",\n            PREV = \"prev\",\n            NEXT = \"next\",\n            SHOW = \"show\",\n            LINK = \"k-link\",\n            LINK_TEXT = \"k-link-text\",\n            LAST = \"k-last\",\n            CLICK = \"click\",\n            ERROR = \"error\",\n            EMPTY = \":empty\",\n            IMAGE = \"k-image\",\n            FIRST = \"k-first\",\n            SELECT = \"select\",\n            ACTIVATE = \"activate\",\n            CONTENT = \"k-tabstrip-content\",\n            CONTENTURL = \"contentUrl\",\n            MOUSEENTER = \"mouseenter\",\n            MOUSELEAVE = \"mouseleave\",\n            CONTENTLOAD = \"contentLoad\",\n            DISABLEDSTATE = \"k-disabled\",\n            ACTIVESTATE = \"k-active\",\n            FOCUSEDSTATE = \"k-focus\",\n            HOVERSTATE = \"k-hover\",\n            NAVIGATABLEITEMS = \".k-item.k-tabstrip-item:not(.\" + DISABLEDSTATE + \")\",\n            KEYBOARDNAVIGATABLEITEMS = \".k-item.k-tabstrip-item\",\n            HOVERABLEITEMS = \".k-tabstrip-items > \" + NAVIGATABLEITEMS + \":not(.\" + ACTIVESTATE + \")\",\n            DEFAULTDISTANCE = 200,\n            ARIA_HIDDEN = \"aria-hidden\",\n            ARIA_CONTROLS = \"aria-controls\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_SELECTED = \"aria-selected\",\n            ARIA_ORIENTATION = \"aria-orientation\",\n            ARIA_LABELLEDBY = \"aria-labelledby\",\n\n            templates = {\n                content: (data) =>\n                    `<div class='k-tabstrip-content' ${data.contentAttributes(data)} tabindex='0'>${data.content(data.item)}</div>`,\n                textWrapper: ({ tag, item , contentUrl, textAttributes, image, sprite, text }) =>\n                    `<${tag(item)} class='${LINK}' ${contentUrl(item)} ${textAttributes(item)}>` + `${image(item)}${sprite(item)}` +\n                            `<span class='${LINK_TEXT}'>${text(item)}</span>` +\n                    `</${tag(item)}>`,\n                item: (data) =>templates.itemWrapper(data,`${data.textWrapper(data)}`),\n                itemWrapper: (data, item) =>\n                    `<li class='${data.wrapperCssClass(data.group, data.item)}' role='tab' ${data.item.active ? \"aria-selected='true'\" : ''}>` +\n                        item +\n                    \"</li>\",\n                image: ({ imageUrl }) => `<img class='k-image' alt='' src='${imageUrl}' />`,\n                sprite: ({ spriteCssClass }) => `<span class='k-sprite ${spriteCssClass}'></span>`,\n                empty: () => \"\",\n            },\n\n            rendering = {\n                wrapperCssClass: function(group, item) {\n                    var result = [\"k-item\", \"k-tabstrip-item\"],\n                        index = item.index;\n\n                    if (item.enabled === false) {\n                        result.push(\"k-disabled\");\n                    }\n\n                    if (index === 0) {\n                        result.push(\"k-first\");\n                    }\n\n                    if (index == group.length - 1) {\n                        result.push(\"k-last\");\n                    }\n\n                    return result.join(\" \");\n                },\n                textAttributes: function(item) {\n                    return item.url ? \" href='\" + kendo.sanitizeLink(item.url) + \"'\" : \"\";\n                },\n                text: function(item) {\n                    return item.encoded === false ? item.text : kendo.htmlEncode(item.text);\n                },\n                tag: function(item) {\n                    return item.url ? \"a\" : \"span\";\n                },\n                contentAttributes: function(content) {\n                    return content.active !== true ? ` ${kendo.attr(\"style-display\")}=\"none\" aria-hidden='true'` : \"\";\n                },\n                content: function(item) {\n                    return item.content ? item.content : item.contentUrl ? \"\" : \"&nbsp;\";\n                },\n                contentUrl: function(item) {\n                    return item.contentUrl ? kendo.attr(\"content-url\") + '=\"' + item.contentUrl + '\"' : \"\";\n                }\n            };\n\n        function updateTabClasses(tabs) {\n            tabs.children(IMG)\n                .addClass(IMAGE);\n\n            tabs.children(\"a\")\n                .addClass(LINK)\n                .children(IMG)\n                .addClass(IMAGE);\n\n            tabs.filter(\"li[disabled]\")\n                .addClass(DISABLEDSTATE)\n                .attr(ARIA_DISABLED, \"true\")\n                .prop(\"disabled\", false);\n\n            tabs.filter(\":not([class*=k-state])\")\n                .children(\"a\")\n                .filter(\":focus\")\n                .parent()\n                .addClass(ACTIVESTATE);\n\n            tabs.attr(\"role\", \"tab\");\n\n            tabs.each(function() {\n                var item = $(this);\n                item.attr(ARIA_SELECTED, item.is(\".\" + ACTIVESTATE));\n\n                if (!item.children(\".\" + LINK).length) {\n                    item\n                        .contents() // exclude groups, real links, templates and empty text nodes\n                        .filter(function() { return (!this.nodeName.match(excludedNodesRegExp) && !(this.nodeType == 3 && !trim(this.nodeValue))); })\n                        .wrapAll(\"<span UNSELECTABLE='on' class='\" + LINK + \"'/>\")\n                        .wrapAll(\"<span UNSELECTABLE='on' class='\" + LINK_TEXT + \"'/>\");\n                }\n            });\n\n        }\n\n        function updateFirstLast(tabGroup) {\n            const tabs = tabGroup.children(\".k-item.k-tabstrip-item\");\n\n            tabs.filter(\".k-first:not(:first-child)\").removeClass(FIRST);\n            tabs.filter(\".k-last:not(:last-child)\").removeClass(LAST);\n            tabs.filter(\":first-child\").addClass(FIRST);\n            if (tabs.length > 1) {\n                tabs.filter(\":last-child\").addClass(LAST);\n            }\n        }\n\n        function scrollButtonHtml(buttonClass, iconClass) {\n            return `<span aria-hidden='true' class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-tabstrip-${buttonClass}' unselectable='on'>${kendo.ui.icon({ icon: iconClass, iconClass: \"k-button-icon\" })}</span>`;\n        }\n\n        function ajaxXhr() {\n            var current = this,\n                request = $.ajaxSettings.xhr(),\n                event = current.progressUpload ? \"progressUpload\" : current.progress ? \"progress\" : false;\n\n            if (request) {\n                $.each([ request, request.upload ], function() {\n                    if (this.addEventListener) {\n                        this.addEventListener(\"progress\", function(evt) {\n                            if (event) {\n                                current[event](evt);\n                            }\n                        }, false);\n                    }\n                });\n            }\n\n            current.noProgress = !(window.XMLHttpRequest && ('upload' in new XMLHttpRequest()));\n            return request;\n        }\n\n        var TabStrip = Widget.extend({\n            init: function(element, options) {\n                var that = this, value;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._animations(that.options);\n\n                options = that.options;\n\n                that._contentUrls = options.contentUrls || [];\n\n                that._wrapper();\n                that._isRtl = kendo.support.isRtl(that.wrapper);\n\n                that._updateClasses();\n                that._dataSource();\n\n                that._tabindex(that.tabGroup);\n                that.tabGroup.attr(\"role\", \"tablist\");\n\n                if (options.dataSource) {\n                    that.dataSource.fetch();\n                }\n\n                that._removeAdditionalWrapperClasses();\n\n                that._tabSizes();\n                that._tabPosition();\n                that._scrollable();\n                that._tabAlignment();\n                that._sortable();\n                that._processContentUrls();\n                that._attachEvents();\n\n                if (that.options.value) {\n                    value = that.options.value;\n                }\n\n                that._initialActivate();\n                that.value(value);\n                kendo.notify(that);\n\n                if (that._showWatermarkOverlay) {\n                    that._showWatermarkOverlay(that.element[0]);\n                }\n            },\n\n            events: [\n                SELECT,\n                ACTIVATE,\n                SHOW,\n                ERROR,\n                CONTENTLOAD,\n                \"change\",\n                \"dataBinding\",\n                \"dataBound\"\n            ],\n\n            options: {\n                name: \"TabStrip\",\n                dataEncodedField: \"\",\n                dataTextField: \"\",\n                dataContentField: \"\",\n                dataImageUrlField: \"\",\n                dataUrlField: \"\",\n                dataSpriteCssClass: \"\",\n                dataContentUrlField: \"\",\n                tabPosition: \"top\",\n                tabAlignment: \"start\",\n                size: \"medium\",\n                tabTemplate: null,\n                animation: {\n                    open: {\n                        effects: \"expand:vertical fadeIn\",\n                        duration: 200\n                    },\n                    close: { // if close animation effects are defined, they will be used instead of open.reverse\n                        duration: 200\n                    }\n                },\n                collapsible: false,\n                navigatable: true,\n                contentUrls: false,\n                applyMinHeight: true,\n                scrollable: {\n                    distance: DEFAULTDISTANCE,\n                    scrollButtonsPosition: \"split\",\n                    scrollButtons: \"auto\",\n                },\n                sortable: false\n            },\n\n            setDataSource: function(dataSource) {\n                var that = this;\n\n                that.options.dataSource = dataSource;\n                that._dataSource();\n                that.dataSource.fetch();\n            },\n\n            setOptions: function(options) {\n                var that = this,\n                    animation = that.options.animation;\n\n                that._animations(options);\n\n                if (options.contentUrls) {\n                    that._contentUrls = options.contentUrls;\n                }\n\n                options.animation = extend(true, animation, options.animation);\n\n                if (options.navigatable) {\n                    that.tabGroup.on(\"keydown\" + NS, that._keyDownProxy);\n                } else {\n                    that.tabGroup.off(\"keydown\" + NS, that._keyDownProxy);\n                }\n\n                Widget.fn.setOptions.call(that, options);\n            },\n\n            activateTab: function(item) {\n                if (this.tabGroup.children(\"[data-animating]\").length) { return; }\n\n                item = this.tabGroup.find(item);\n\n                var that = this,\n                    animationSettings = that.options.animation,\n                    animation = animationSettings.open,\n                    close = extend({}, animationSettings.close),\n                    hasCloseAnimation = close && \"effects\" in close,\n                    neighbours = item.parent().children(),\n                    oldTab = neighbours.filter(\".\" + ACTIVESTATE),\n                    itemIndex = neighbours.index(item),\n                    isAnimationEnabled = animation && \"duration\" in animation && \"effects\" in animation;\n\n                close = extend( hasCloseAnimation ? close : extend({ reverse: true }, animation), { hide: true });\n                // deactivate previously active tab\n                if (kendo.size(animation.effects)) {\n                    oldTab.kendoRemoveClass(ACTIVESTATE, { duration: close.duration });\n                    item.kendoRemoveClass(HOVERSTATE, { duration: close.duration });\n                } else {\n                    oldTab.removeClass(ACTIVESTATE);\n                    item.removeClass(HOVERSTATE);\n                }\n\n                // handle content elements\n                var contentAnimators = that.contentAnimators;\n\n                if (that.inRequest) {\n                    that.xhr.abort();\n                    that.inRequest = false;\n                }\n\n                if (contentAnimators.length === 0) {\n                    that.tabGroup.find(\".\" + ACTIVESTATE);\n\n                    item.addClass(ACTIVESTATE);\n                    that._current(item, true);\n\n                    that.trigger(\"change\");\n\n                    if (that._scrollableModeActive) {\n                        that._scrollTabsToItem(item);\n                    }\n\n                    return false;\n                }\n\n                var visibleContents = contentAnimators.filter(\".\" + ACTIVESTATE),\n                    contentHolder = that.contentHolder(itemIndex),\n                    contentElement = contentHolder.closest(\".k-tabstrip-content\");\n\n                that.tabsHeight = outerHeight(that.tabGroup) +\n                                  parseInt(that.wrapper.css(\"border-top-width\"), 10) +\n                                  parseInt(that.wrapper.css(\"border-bottom-width\"), 10);\n\n                if (contentHolder.length === 0) {\n                    visibleContents\n                        .removeClass( ACTIVESTATE )\n                        .attr(ARIA_HIDDEN, true)\n                        .kendoStop(true, true)\n                        .kendoAnimate( close );\n                    return false;\n                }\n\n                item.attr(\"data-animating\", true);\n\n                var isAjaxContent = (item.children(\".\" + LINK).data(CONTENTURL) || that._contentUrls[itemIndex] || false) && contentHolder.is(EMPTY),\n                    showContentElement = function() {\n                        oldTab.attr(ARIA_SELECTED, false);\n                        item.attr(ARIA_SELECTED, true);\n                        that.tabGroup.attr(\"aria-activedescendant\", item.attr(\"id\"));\n\n                        that._current(item, true);\n\n                        contentElement\n                            .addClass(ACTIVESTATE)\n                            .removeAttr(ARIA_HIDDEN)\n                            .kendoStop(true, true)\n                            .kendoAnimate( extend({ init: function() {\n                                that.trigger(SHOW, { item: item[0], contentElement: contentHolder[0] });\n                                kendo.resize(contentHolder);\n                            } }, animation, {\n                                complete: function() {\n                                    // See https://github.com/telerik/kendo-ui-core/issues/6660\n                                    that.element.css('min-height', oldMinHeight);\n                                    item.removeAttr(\"data-animating\");\n\n                                    that.trigger(ACTIVATE, { item: item[0], contentElement: contentHolder[0] });\n                                    kendo.resize(contentHolder);\n                                }\n                            } ) );\n                    },\n                    showContent = function() {\n                        if (!isAjaxContent) {\n                            showContentElement();\n                            that.trigger(\"change\");\n                        } else {\n                            item.removeAttr(\"data-animating\");\n                            that.ajaxRequest(item, contentHolder, function() {\n                                item.attr(\"data-animating\", true);\n                                showContentElement();\n                                that.trigger(\"change\");\n                            });\n                        }\n\n                        if (that._scrollableModeActive) {\n                            that._scrollTabsToItem(item);\n                        }\n\n                    };\n\n                // See https://github.com/telerik/kendo-ui-core/issues/6660\n                var oldMinHeight = that.element.css('min-height');\n\n                if (that.options.applyMinHeight) {\n                    that.element.css('min-height', that.element.outerHeight());\n                }\n\n                visibleContents.removeClass(ACTIVESTATE);\n                that.tabGroup.find(\".\" + ACTIVESTATE);\n\n                if (kendo.size(animation.effects)) {\n                    item.kendoAddClass(ACTIVESTATE, { duration: animation.duration });\n                } else {\n                    item.addClass(ACTIVESTATE);\n                }\n\n                visibleContents.attr(ARIA_HIDDEN, true);\n\n                if (visibleContents.length) {\n                    visibleContents\n                        .kendoStop(true, true)\n                        .kendoAnimate(extend( {\n                            complete: showContent\n                       }, close ));\n                } else {\n                    showContent();\n                }\n\n                return true;\n            },\n\n            ajaxRequest: function(element, content, complete, url) {\n                element = this.tabGroup.find(element);\n\n                var that = this,\n                    link = element.find(\".\" + LINK),\n                    data = {};\n\n                url = url || link.data(CONTENTURL) || that._contentUrls[element.index()] || link.attr(HREF);\n                that.inRequest = true;\n\n                var ajaxOptions = {\n                    type: \"GET\",\n                    cache: false,\n                    url: url,\n                    dataType: \"html\",\n                    data: data,\n                    xhr: ajaxXhr,\n\n                    error: function(xhr, status) {\n                        if (that.trigger(\"error\", { xhr: xhr, status: status })) {\n                            this.complete();\n                        }\n                    },\n\n                    complete: function(xhr) {\n                        that.inRequest = false;\n                    },\n\n                    success: function(data) {\n                        try {\n                            kendo.destroy(content);\n                            content.html(data);\n                        } catch (e) {\n                            this.error(this.xhr, \"error\");\n                        }\n\n                        if (complete) {\n                            complete.call(that, content);\n                        }\n\n                        that.trigger(CONTENTLOAD, { item: element[0], contentElement: content[0] });\n                    }\n                };\n\n                if (typeof url === \"object\") {\n                    ajaxOptions = $.extend(true, {}, ajaxOptions, url);\n\n                    if (isFunction(ajaxOptions.url)) {\n                        ajaxOptions.url = ajaxOptions.url();\n                    }\n\n                    if (isFunction(ajaxOptions.data)) {\n                        ajaxOptions.data = ajaxOptions.data();\n                    }\n                }\n\n                that.xhr = $.ajax(ajaxOptions);\n            },\n\n            append: function(tab) {\n                var that = this,\n                    inserted = that._create(tab);\n\n                each(inserted.tabs, function(idx) {\n                    var contents = inserted.contents[idx];\n                    that.tabGroup.append(this);\n                    if (that.options.tabPosition == \"bottom\") {\n                        that.tabWrapper.before(contents);\n                    } else {\n                        that.wrapper.append(contents);\n                    }\n                });\n\n                updateFirstLast(that.tabGroup);\n                that._updateContentElements();\n                that.resize(true);\n\n                return that;\n            },\n\n            contentElement: function(itemIndex) {\n                if (isNaN(itemIndex - 0)) {\n                    return undefined$1;\n                }\n\n                var contentElements = this.contentElements && this.contentElements[0] && !kendo.kineticScrollNeeded ? this.contentElements : this.contentAnimators;\n                var id = $(this.tabGroup.children()[itemIndex]).attr(ARIA_CONTROLS);\n\n                if (contentElements) {\n                    for (var i = 0, len = contentElements.length; i < len; i++) {\n                        if (contentElements.eq(i).closest(\".k-tabstrip-content\")[0].id == id) {\n                            return contentElements[i];\n                        }\n                    }\n                }\n\n                return undefined$1;\n            },\n\n            contentHolder: function(itemIndex) {\n                var contentElement = $(this.contentElement(itemIndex)),\n                    scrollContainer = contentElement.children(\".km-scroll-container\");\n\n                return kendo.support.touch && scrollContainer[0] ? scrollContainer : contentElement;\n            },\n\n            deactivateTab: function(item) {\n                var that = this,\n                    animationSettings = that.options.animation,\n                    animation = animationSettings.open,\n                    close = extend({}, animationSettings.close),\n                    hasCloseAnimation = close && \"effects\" in close;\n                item = that.tabGroup.find(item);\n\n                close = extend( hasCloseAnimation ? close : extend({ reverse: true }, animation), { hide: true });\n\n                if (kendo.size(animation.effects)) {\n                    item.kendoRemoveClass(ACTIVESTATE, { duration: animation.duration });\n                } else {\n                    item.removeClass(ACTIVESTATE);\n                }\n\n                item.attr(ARIA_SELECTED, false);\n                that.tabGroup.removeAttr(\"aria-activedescendant\");\n\n                that.contentAnimators\n                        .filter(\".\" + ACTIVESTATE)\n                        .kendoStop(true, true)\n                        .kendoAnimate( close )\n                        .removeClass(ACTIVESTATE)\n                        .attr(ARIA_HIDDEN, true);\n            },\n\n            _removeAdditionalWrapperClasses: function() {\n                const that = this;\n\n                that.wrapper.removeClass(\"k-tabstrip-sm k-tabstrip-md k-tabstrip-lg\");\n                that.tabGroup.removeClass(\"k-tabstrip-items-start k-tabstrip-items-center k-tabstrip-items-end k-tabstrip-items-justify k-tabstrip-items-stretched\");\n            },\n\n            destroy: function() {\n                var that = this;\n                const isHidden = that.options.scrollable && that.options.scrollable.scrollButtons === \"hidden\";\n                Widget.fn.destroy.call(that);\n\n                if (that._refreshHandler) {\n                    that.dataSource.unbind(\"change\", that._refreshHandler);\n                }\n\n                if (that.options.scrollable && isHidden) {\n                    that.tabGroup.unbind(\"scroll\" + NS);\n                }\n\n                that._removeAdditionalWrapperClasses();\n\n                that.wrapper.off(NS);\n                that.tabGroup.off(NS);\n\n                if (that._scrollableModeActive && !isHidden) {\n                    that._scrollPrevButton.off().remove();\n                    that._scrollNextButton.off().remove();\n                }\n\n                kendo.destroy(that.wrapper);\n            },\n\n            disable: function(element) {\n                this._toggleDisabled(element, false);\n\n                return this;\n            },\n\n            enable: function(element, state) {\n                this._toggleDisabled(element, state !== false);\n\n                return this;\n            },\n\n            insertAfter: function(tab, referenceTab) {\n                if ($(tab).is($(referenceTab))) {\n                    referenceTab = this.tabGroup.find(referenceTab).prev();\n                } else {\n                    referenceTab = this.tabGroup.find(referenceTab);\n                }\n\n                var that = this,\n                    inserted = that._create(tab),\n                    referenceContent = that.element.find(\"[id='\" + referenceTab.attr(ARIA_CONTROLS) + \"']\");\n\n                each(inserted.tabs, function(idx) {\n                    var contents = inserted.contents[idx];\n                    var fromIndex = inserted.newTabsCreated ? that._contentUrls.length - (inserted.tabs.length - idx) : $(contents).index() - 1;\n\n                    referenceTab.after(this);\n                    referenceContent.after(contents);\n\n                    that._moveUrlItem(fromIndex, $(this).index());\n                });\n\n                updateFirstLast(that.tabGroup);\n                that._updateContentElements(inserted.newTabsCreated);\n                that.resize(true);\n\n                return that;\n            },\n\n            insertBefore: function(tab, referenceTab) {\n                if ($(tab).is($(referenceTab))) {\n                    referenceTab = this.tabGroup.find(referenceTab).next();\n                } else {\n                    referenceTab = this.tabGroup.find(referenceTab);\n                }\n\n                var that = this,\n                    inserted = that._create(tab),\n                    referenceContent = that.element.find(\"[id='\" + referenceTab.attr(ARIA_CONTROLS) + \"']\");\n\n                each(inserted.tabs, function(idx) {\n                    var contents = inserted.contents[idx];\n                    var fromIndex = inserted.newTabsCreated ? that._contentUrls.length - (inserted.tabs.length - idx) : $(contents).index() - 1;\n\n                    referenceTab.before(this);\n                    referenceContent.before(contents);\n\n                    that._moveUrlItem(fromIndex, $(this).index());\n                });\n\n                updateFirstLast(that.tabGroup);\n                that._updateContentElements(inserted.newTabsCreated);\n                that.resize(true);\n\n                return that;\n            },\n\n            items: function() {\n                return this.tabGroup[0].children;\n            },\n\n            refresh: function(e) {\n                var that = this,\n                    options = that.options,\n                    encoded = kendo.getter(options.dataEncodedField),\n                    text = kendo.getter(options.dataTextField),\n                    content = kendo.getter(options.dataContentField),\n                    contentUrl = kendo.getter(options.dataContentUrlField),\n                    image = kendo.getter(options.dataImageUrlField),\n                    url = kendo.getter(options.dataUrlField),\n                    sprite = kendo.getter(options.dataSpriteCssClass),\n                    idx,\n                    tabs = [],\n                    tab,\n                    action,\n                    view = that.dataSource.view(),\n                    length;\n\n\n                e = e || {};\n                action = e.action;\n\n                if (action) {\n                   view = e.items;\n                }\n\n                for (idx = 0, length = view.length; idx < length; idx ++) {\n                    tab = {\n                        text: text(view[idx])\n                    };\n\n                    if (options.tabTemplate) {\n                        tab.model = view[idx];\n                        tab.template = options.tabTemplate;\n                    }\n\n                    if (options.dataEncodedField) {\n                        tab.encoded = encoded(view[idx]);\n                    }\n\n                    if (options.dataContentField) {\n                        tab.content = content(view[idx]);\n                    }\n\n                    if (options.dataContentUrlField) {\n                        tab.contentUrl = contentUrl(view[idx]);\n                    }\n\n                    if (options.dataUrlField) {\n                        tab.url = url(view[idx]);\n                    }\n\n                    if (options.dataImageUrlField) {\n                        tab.imageUrl = image(view[idx]);\n                    }\n\n                    if (options.dataSpriteCssClass) {\n                        tab.spriteCssClass = sprite(view[idx]);\n                    }\n\n                    tabs[idx] = tab;\n                }\n\n                if (e.action == \"add\") {\n                    if (e.index < that.tabGroup.children().length) {\n                        that.insertBefore(tabs, that.tabGroup.children().eq(e.index));\n                    } else {\n                        that.append(tabs);\n                    }\n                } else if (e.action == \"remove\") {\n                    for (idx = 0; idx < view.length; idx++) {\n                       that.remove(e.index);\n                    }\n                } else if (e.action == \"itemchange\") {\n                    idx = that.dataSource.view().indexOf(view[0]);\n                    if (e.field === options.dataTextField) {\n                        that.tabGroup.children().eq(idx).find(\".k-link\").text(view[0].get(e.field));\n                    }\n\n                    if (e.field === options.dataUrlField) {\n                        that._contentUrls[idx] = view[0].get(e.field);\n                    }\n                } else {\n                    that.trigger(\"dataBinding\");\n                    that.remove(\"li\");\n                    that._contentUrls = [];\n                    that.append(tabs);\n                    that.trigger(\"dataBound\");\n                }\n            },\n\n            reload: function(element) {\n                element = this.tabGroup.find(element);\n                var that = this;\n                var contentUrls = that._contentUrls;\n\n                element.each(function() {\n                    var item = $(this),\n                        contentUrl = item.find(\".\" + LINK).data(CONTENTURL) || contentUrls[item.index()],\n                        content = that.contentHolder(item.index());\n\n                    if (contentUrl) {\n                        that.ajaxRequest(item, content, null, contentUrl);\n                    }\n                });\n\n                return that;\n            },\n\n            remove: function(elements) {\n                var that = this;\n                var type = typeof elements;\n                var contents;\n\n                if (type === \"string\") {\n                    elements = that.tabGroup.find(elements);\n                } else if (type === \"number\") {\n                    elements = that.tabGroup.children().eq(elements);\n                }\n\n                contents = elements.map(function() {\n                    var idx = $(this).index();\n                    var content = that.contentElement(idx);\n\n                    kendo.destroy(content);\n                    that._removeUrlItem(idx);\n\n                    return content;\n                });\n\n                elements.remove();\n                contents.empty();\n                contents.remove();\n\n                that._updateContentElements();\n                that.resize(true);\n\n                return that;\n            },\n\n            select: function(element) {\n                var that = this;\n\n                if (arguments.length === 0) {\n                    return that.tabGroup.children(\"li.\" + ACTIVESTATE);\n                }\n\n                if (!isNaN(element)) {\n                    element = that.tabGroup.children().get(element);\n                }\n\n                element = that.tabGroup.find(element);\n                $(element).each(function(index, item) {\n                    item = $(item);\n                    if (!item.hasClass(ACTIVESTATE) && !that.trigger(SELECT, { item: item[0], contentElement: that.contentHolder(item.index())[0] })) {\n                        that.activateTab(item);\n                        that.tabGroup.attr(\"aria-activedescendant\", item.attr(\"id\"));\n                    }\n                });\n\n                return that;\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value !== undefined$1) {\n                    if (value != that.value()) {\n                       that.tabGroup.children().each(function() {\n                            if (kendo.trim($(this).text()) == value) {\n                                that.select(this);\n                            }\n                       });\n                    }\n                } else {\n                    return that.select().text();\n                }\n            },\n\n            _tabAlignment: function() {\n                const that = this;\n\n                let tabAlignment = that.options.tabAlignment;\n\n                if (that._scrollableModeActive) {\n                    tabAlignment = 'start';\n                }\n\n                that.tabGroup.addClass(\"k-tabstrip-items-\" + tabAlignment);\n\n            },\n\n            _active: function() {\n                var that = this;\n                setTimeout(function() {\n                    var item = that.tabGroup.children().filter(\".\" + ACTIVESTATE);\n\n                    item = item[0] ? item : that._endItem(\"first\");\n                    if (item[0]) {\n                        that._current(item);\n                    }\n                }, 100);\n            },\n\n            _animations: function(options) {\n                if (options && (\"animation\" in options) && !options.animation) {\n                    options.animation = { open: { effects: {} }, close: { effects: {} } }; // No animation\n                }\n            },\n\n            _appendUrlItem: function(url) {\n                this._contentUrls.push(url);\n            },\n\n            _attachEvents: function() {\n                var that = this,\n                    options = that.options;\n\n                that.tabGroup\n                    .on(CLICK + NS, \".k-disabled .k-link\", false)\n                    .on(CLICK + NS, \" > \" + NAVIGATABLEITEMS, that._itemClick.bind(that));\n\n                that.wrapper.on(\"focus\" + NS, function() { that.tabGroup.trigger(\"focus\"); });\n\n                if (options.scrollable && options.scrollable.scrollButtons === \"hidden\") {\n                    that.tabGroup.bind(\"scroll\", function(e) {\n                        that._toggleScrollButtons();\n                    });\n                }\n\n                that.tabGroup\n                    .on(MOUSEENTER + NS + \" \" + MOUSELEAVE + NS, HOVERABLEITEMS, that._toggleHover)\n                    .on(\"focus\" + NS, that._active.bind(that))\n                    .on(\"blur\" + NS, function() { that._current(null); });\n\n                that._keyDownProxy = that._keydown.bind(that);\n\n                if (options.navigatable) {\n                    that.tabGroup.on(\"keydown\" + NS, that._keyDownProxy);\n                }\n\n                $(window).on('resize' + NS, that._resize.bind(that));\n            },\n\n            _click: function(item) {\n                var that = this,\n                    link = item.find(\".\" + LINK),\n                    href = link.attr(HREF),\n                    collapse = that.options.collapsible,\n                    index = item.index(),\n                    contentHolder = that.contentHolder(index),\n                    prevent, isAnchor,\n                    neighbours = item.parent().children(),\n                    oldFocusedTab = neighbours.filter(\".\" + FOCUSEDSTATE);\n\n                if (item.closest(\".k-tabstrip\")[0] != that.wrapper[0]) {\n                    return;\n                }\n\n                if (item.is(\".\" + DISABLEDSTATE + (!collapse ? \",.\" + ACTIVESTATE : \"\"))) {\n                    oldFocusedTab.removeClass(FOCUSEDSTATE);\n                    that._focused = item;\n\n                    item.addClass(FOCUSEDSTATE);\n                    that._current(item);\n\n                    if (that._scrollableModeActive) {\n                        that._scrollTabsToItem(item);\n                    }\n                    return true;\n                }\n\n                isAnchor = link.data(CONTENTURL) || that._contentUrls[index] || (href && (href.charAt(href.length - 1) == \"#\" || href.indexOf(\"#\" + that.element[0].id + \"-\") != -1));\n                prevent = !href || isAnchor;\n\n                if (that.tabGroup.children(\"[data-animating]\").length) {\n                    return prevent;\n                }\n\n                if (that.trigger(SELECT, { item: item[0], contentElement: contentHolder[0] })) {\n                    return true;\n                }\n\n                if (prevent === false) {\n                    return;\n                }\n\n                if (collapse && item.is(\".\" + ACTIVESTATE)) {\n                    that.deactivateTab(item);\n                    return true;\n                }\n\n                if (that.activateTab(item)) {\n                    that._current(item);\n                    prevent = true;\n                }\n\n                return prevent;\n            },\n\n            _create: function(tab) {\n                var that = this,\n                tabs,\n                contents,\n                content,\n                newTabsCreated = false;\n\n                tab = tab instanceof kendo.data.ObservableArray ? tab.toJSON() : tab;\n\n                if ($.isPlainObject(tab) || Array.isArray(tab)) {\n                    tab = Array.isArray(tab) ? tab : [tab];\n                    newTabsCreated = true;\n\n                    tabs = map(tab, function(value, idx) {\n                                that._appendUrlItem(tab[idx].contentUrl || null);\n\n                                return $(TabStrip.renderItem({\n                                    group: that.tabGroup,\n                                    item: extend(value, { index: idx })\n                                }));\n                            });\n\n                    contents = map( tab, function(value, idx) {\n                                if (typeof value.content == \"string\" || value.contentUrl) {\n                                    let tabstripContent = $(TabStrip.renderContent({\n                                        item: extend(value, { index: idx })\n                                    }));\n\n                                    kendo.applyStylesFromKendoAttributes(tabstripContent, [\"display\"]);\n                                    return tabstripContent;\n                                }\n                            });\n                } else {\n                    if (typeof tab == \"string\" && tab[0] != \"<\") {\n                        tabs = that.element.find(tab);\n                    } else {\n                        tabs = $(tab);\n                    }\n                    contents = $();\n                    tabs.each(function() {\n                        if (/k-tabstrip-items/.test(this.parentNode.className)) {\n                            var element = that.element.find(\"[id='\" + this.getAttribute(ARIA_CONTROLS) + \"']\");\n                            content = element;\n                        } else {\n                            content = $(\"<div class='\" + CONTENT + \"'/>\");\n                        }\n\n                        contents = contents.add(content);\n                    });\n\n                    updateTabClasses(tabs);\n                }\n\n                return { tabs: tabs, contents: contents, newTabsCreated: newTabsCreated };\n            },\n\n            _current: function(candidate, preventFocus) {\n                var that = this,\n                    focused = that._focused;\n\n                if (candidate === undefined$1) {\n                    return focused;\n                }\n\n                if (focused && candidate && focused[0] === candidate[0]) {\n                    focused = false;\n                }\n\n                if (focused) {\n                    focused.removeClass(FOCUSEDSTATE);\n                }\n\n                if (candidate && !preventFocus) {\n                    candidate.addClass(FOCUSEDSTATE);\n                }\n\n                that._focused = candidate;\n            },\n\n            _dataSource: function() {\n                var that = this;\n\n                if (that.dataSource && that._refreshHandler) {\n                    that.dataSource.unbind(\"change\", that._refreshHandler);\n                } else {\n                    that._refreshHandler = that.refresh.bind(that);\n                }\n\n                that.dataSource = kendo.data.DataSource.create(that.options.dataSource)\n                                    .bind(\"change\", that._refreshHandler);\n            },\n\n            _elementId: function(element, idx, tab) {\n                var elementId = element.attr(\"id\"),\n                    wrapperId = this.element.attr(\"id\"),\n                    guid = kendo.guid();\n\n                if (!elementId || elementId.indexOf(wrapperId + \"-\") > -1) {\n                    var tabStripID = (wrapperId || guid) + \"-\";\n\n                    if (tab) {\n                        tabStripID += \"tab-\";\n                    }\n\n                    return tabStripID + (idx + 1);\n                }\n\n                return elementId;\n            },\n\n            _endItem: function(action) {\n                return this.tabGroup.children(NAVIGATABLEITEMS)[action]();\n            },\n\n            _getItem: function(action) {\n                return this.tabGroup.children(KEYBOARDNAVIGATABLEITEMS)[action]();\n            },\n\n            _initialActivate: function() {\n                var that = this,\n                    selectedItems = that.tabGroup.children(\"li.\" + ACTIVESTATE),\n                    content = that.contentHolder(selectedItems.index());\n\n                if (selectedItems[0] && content.length > 0 && content[0].childNodes.length === 0) {\n                    that.activateTab(selectedItems.eq(0));\n                }\n            },\n\n            _item: function(item, action) {\n                var endItem;\n                if (action === PREV) {\n                    endItem = \"last\";\n                } else {\n                    endItem = \"first\";\n                }\n\n                if (!item) {\n                    return this._endItem(endItem);\n                }\n\n                item = item[action]();\n\n                if (!item[0]) {\n                    item = this.tabGroup.children(KEYBOARDNAVIGATABLEITEMS)[endItem]();\n                }\n\n                if (item.hasClass(DISABLEDSTATE)) {\n                    item.addClass(FOCUSEDSTATE);\n                }\n                if (item.hasClass(DISABLEDSTATE) || item.hasClass(ACTIVESTATE)) {\n                    this._focused = item;\n                }\n\n                return item;\n            },\n\n            _itemClick: function(e) {\n                var that = this,\n                    tabGroup = that.tabGroup[0];\n\n                if (tabGroup !== document.activeElement) {\n                    var msie = kendo.support.browser.msie;\n                    if (msie) {\n                        try {\n                            // does not scroll to the active element\n                            tabGroup.setActive();\n                        } catch (j) {\n                            tabGroup.focus();\n                        }\n                    } else {\n                        tabGroup.focus();\n                    }\n                }\n\n                if (that._click($(e.currentTarget))) {\n                    e.preventDefault();\n                }\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    key = e.keyCode,\n                    current = that._current(),\n                    rtl = that._isRtl,\n                    isHorizontal = /top|bottom/.test(that.options.tabPosition),\n                    action;\n\n                if (e.target != e.currentTarget || !current) {\n                    return;\n                }\n\n                if (key === keys.DOWN && !isHorizontal) {\n                    action = NEXT;\n                } else if (key === keys.UP && !isHorizontal) {\n                    action = PREV;\n                } else if (key === keys.RIGHT && isHorizontal) {\n                    action = rtl ? PREV : NEXT;\n                } else if (key === keys.LEFT && isHorizontal) {\n                    action = rtl ? NEXT : PREV;\n                } else if (key == keys.ENTER || key == keys.SPACEBAR) {\n                    that._click(current);\n                    e.preventDefault();\n                } else if (key == keys.HOME) {\n                    that._click(that._getItem(\"first\"));\n                    e.preventDefault();\n                    return;\n                } else if (key == keys.END) {\n                    that._click(that._getItem(\"last\"));\n                    e.preventDefault();\n                    return;\n                }\n\n                if (action) {\n                    that._click(that._item(current, action));\n                    e.preventDefault();\n                }\n            },\n\n            _moveUrlItem: function(from, to) {\n                this._contentUrls.splice(to, 0, this._contentUrls.splice(from, 1)[0]);\n            },\n\n            _processContentUrls: function() {\n                var that = this;\n\n                if (that._contentUrls.length) {\n                    that.tabGroup.children(\".k-item.k-tabstrip-item\")\n                        .each(function(index, item) {\n                            var url = that._contentUrls[index];\n\n                            if (typeof url === 'string') {\n                                $(item).find(\">.\" + LINK).data(CONTENTURL, url);\n                            }\n                        });\n                } else {\n                    that._contentUrls.length = that.tabGroup.find(\"li.k-item.k-tabstrip-item\").length;\n                }\n            },\n\n            _removeUrlItem: function(index) {\n                this._contentUrls.splice(index, 1);\n            },\n\n            _resize: function() {\n                this._scrollable();\n            },\n\n            _getChildrenWidth: function(element) {\n                let width = 0;\n                element.children().each(function() {\n                    width += outerWidth($(this));\n                });\n                return Math.floor(width);\n            },\n\n            _getChildrenHeight: function(element) {\n                let height = 0;\n                element.children().each(function() {\n                    height += outerHeight($(this));\n                });\n                return Math.floor(height);\n            },\n\n            _scrollable: function() {\n                const that = this,\n                    options = that.options,\n                    scrollButtonsPosition = options.scrollable.scrollButtonsPosition,\n                    scrollButtonsVisibility = options.scrollable.scrollButtons,\n                    isHorizontal = options.tabPosition == \"top\" || options.tabPosition == \"bottom\",\n                    isHidden = scrollButtonsVisibility === \"hidden\",\n                    isVisible = scrollButtonsVisibility === \"visible\";\n\n                let wrapperOffset,\n                tabGroupScroll,\n                    scrollPrevButton,\n                    scrollNextButton;\n\n                if (that._scrollableAllowed()) {\n\n                    that.wrapper.addClass(\"k-tabstrip-scrollable\");\n\n                    wrapperOffset = isHorizontal ? that.wrapper[0].offsetWidth : that.wrapper[0].offsetHeight;\n                    tabGroupScroll = isHorizontal ? that.tabGroup[0].scrollWidth : that.tabGroup[0].scrollHeight;\n                    const condition = isHorizontal ? (that._getChildrenWidth(that.tabGroup) > that.tabGroup.outerWidth()) : (that._getChildrenHeight(that.tabGroup) > that.tabGroup.outerHeight());\n                    const enableScroll = (tabGroupScroll > wrapperOffset) || condition;\n\n                    if (enableScroll && !that._scrollableModeActive && isHidden) {\n                        that.tabGroup.addClass(\"k-tabstrip-items-scroll\");\n                        that.wrapper.addClass(\"k-tabstrip-scrollable-overlay\");\n\n                        that._scrollableModeActive = true;\n                        that._toggleScrollButtons();\n                    } else if ((enableScroll || isVisible) && !that._scrollableModeActive) {\n                        that._nowScrollingTabs = false;\n                        that._isRtl = kendo.support.isRtl(that.element);\n                        const mouseDown = kendo.support.touch ? \"touchstart\" : \"mousedown\";\n                        const mouseUp = kendo.support.touch ? \"touchend\" : \"mouseup\";\n                        const browser = kendo.support.browser;\n                        const isRtlScrollDirection = that._isRtl && !browser.msie && !browser.edge;\n                        const prevIcon = isHorizontal ? \"caret-alt-left\" : \"caret-alt-up\";\n                        const nextIcon = isHorizontal ? \"caret-alt-right\" : \"caret-alt-down\";\n\n                        const scrollLeft = scrollButtonHtml(\"prev\", prevIcon);\n                        const scrollRight = scrollButtonHtml(\"next\", nextIcon);\n\n                        switch (scrollButtonsPosition) {\n                            case 'split':\n                                that.tabWrapper.prepend(scrollLeft);\n                                that.tabWrapper.append(scrollRight);\n                                break;\n                            case 'start':\n                                that.tabWrapper.prepend(scrollRight);\n                                that.tabWrapper.prepend(scrollLeft);\n                                break;\n                            case 'end':\n                                that.tabWrapper.append(scrollLeft);\n                                that.tabWrapper.append(scrollRight);\n                                break;\n                        }\n\n                        scrollPrevButton = that._scrollPrevButton = that.tabWrapper.children(\".k-tabstrip-prev\");\n                        scrollNextButton = that._scrollNextButton = that.tabWrapper.children(\".k-tabstrip-next\");\n\n                        scrollPrevButton.on(mouseDown + NS, function() {\n                            that._nowScrollingTabs = true;\n                            that._scrollTabsByDelta(options.scrollable.distance * (isRtlScrollDirection ? 1 : -1));\n                        });\n\n                        scrollNextButton.on(mouseDown + NS, function() {\n                            that._nowScrollingTabs = true;\n                            that._scrollTabsByDelta(options.scrollable.distance * (isRtlScrollDirection ? -1 : 1));\n                        });\n\n                        scrollPrevButton.add(scrollNextButton).on(mouseUp + NS, function() {\n                            that._nowScrollingTabs = false;\n                        });\n\n                        that._scrollableModeActive = true;\n\n                        that._toggleScrollButtons();\n                    } else if (that._scrollableModeActive && !enableScroll && !isVisible) {\n                        that._scrollableModeActive = false;\n\n                       that._removeScrollableClasses();\n\n                       that._scrollPrevButton && that._scrollPrevButton.off().remove();\n                       that._scrollNextButton && that._scrollNextButton.off().remove();\n                    } else if (!that._scrollableModeActive && !isVisible) {\n                        that._removeScrollableClasses();\n                    } else {\n                        that._toggleScrollButtons();\n                    }\n                }\n            },\n\n            _removeScrollableClasses: function() {\n                const that = this;\n                const isHidden = that.options.scrollable.scrollButtons === \"hidden\";\n\n                that.wrapper.removeClass(\"k-tabstrip-scrollable\");\n\n                if (isHidden) {\n                    that.wrapper.removeClass(\"k-tabstrip-scrollable-overlay\");\n                    that.wrapper.removeClass(\"k-tabstrip-scrollable-start\");\n                    that.wrapper.removeClass(\"k-tabstrip-scrollable-end\");\n\n                    that.tabGroup.removeClass(\"k-tabstrip-items-scroll\");\n                }\n            },\n\n            _scrollableAllowed: function() {\n                var options = this.options;\n\n                if (options.scrollable && !options.scrollable.distance) {\n                    options.scrollable = { distance: DEFAULTDISTANCE };\n                }\n                return options.scrollable && !isNaN(options.scrollable.distance);\n            },\n\n            _scrollTabsToItem: function(item) {\n                var that = this,\n                    tabGroup = that.tabGroup,\n                    isHorizontal = that.options.tabPosition == \"top\" || that.options.tabPosition == \"bottom\",\n                    currentScrollOffset = isHorizontal ? kendo.scrollLeft(tabGroup) : tabGroup.scrollTop(),\n                    itemSize = isHorizontal ? outerWidth(item) : outerHeight(item),\n                    itemOffset = isHorizontal ? (that._isRtl ? item.position().left : item.position().left - tabGroup.children().first().position().left) : item.position().top,\n                    tabGroupSize = isHorizontal ? tabGroup[0].offsetWidth : tabGroup[0].offsetHeight,\n                    browser = kendo.support.browser,\n                    itemPosition;\n\n                if (that._isRtl && isHorizontal && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                    currentScrollOffset = currentScrollOffset * -1;\n                }\n\n                if (that._isRtl && isHorizontal) {\n                    if (itemOffset < 0) {\n                        itemPosition = currentScrollOffset + itemOffset - (tabGroupSize - currentScrollOffset);\n                    } else if (itemOffset + itemSize > tabGroupSize) {\n                        itemPosition = currentScrollOffset + itemOffset - itemSize;\n                    }\n                } else {\n                    if (currentScrollOffset + tabGroupSize < itemOffset + itemSize) {\n                        itemPosition = itemOffset + itemSize - tabGroupSize;\n                    } else if (currentScrollOffset > itemOffset) {\n                        itemPosition = itemOffset;\n                    }\n                }\n\n                var animationProps = isHorizontal ? { \"scrollLeft\": itemPosition } : { \"scrollTop\": itemPosition };\n\n                tabGroup.finish().animate(animationProps, \"fast\", \"linear\", function() {\n                    that._toggleScrollButtons();\n                });\n            },\n\n            _scrollTabsByDelta: function(delta) {\n                const that = this;\n                const tabGroup = that.tabGroup;\n                const isHorizontal = that.options.tabPosition == \"top\" || that.options.tabPosition == \"bottom\";\n\n                let scrOffset = isHorizontal ? kendo.scrollLeft(tabGroup) : tabGroup.scrollTop();\n                const browser = kendo.support.browser;\n\n                if (that._isRtl && isHorizontal && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                    scrOffset = scrOffset * -1;\n                }\n\n                var animationProps = isHorizontal ? { \"scrollLeft\": scrOffset + delta } : { \"scrollTop\": scrOffset + delta };\n\n                tabGroup.finish().animate(animationProps, \"fast\", \"linear\", function() {\n                    if (that._nowScrollingTabs && !jQuery.fx.off) {\n                        that._scrollTabsByDelta(delta);\n                    } else {\n                        that._toggleScrollButtons();\n                    }\n                });\n            },\n\n            _sortable: function() {\n                var that = this,\n                options = that.options,\n                position = options.tabPosition,\n                isHidden = options.scrollable && options.scrollable.scrollButtons === \"hidden\",\n                axis = position === 'left' || position === 'right' ? 'y' : 'x';\n\n                if (!that.options.sortable) {\n                    return;\n                }\n\n                that.sortable = new kendo.ui.Sortable(that.tabGroup, {\n                    filter: \"li.k-item.k-tabstrip-item\",\n                    axis,\n                    holdToDrag: isHidden,\n                    allowTouchActions: isHidden,\n                    container: that.tabWrapper,\n                    hint: el => `<div id='hint' class='k-tabstrip k-tabstrip-${position}'>\n                                <div class= 'k-tabstrip-items-wrapper k-hstack'>\n                                    <ul class='k-tabstrip-items k-reset'>\n                                        <li class='k-item k-tabstrip-item k-first k-active'>${el.html()}</li>\n                                    </ul>\n                                </div>\n                            </div>`,\n                    change: that._sortChange.bind(that),\n                    start: e => that.activateTab(e.item)\n                });\n\n            },\n\n            _sortChange: function(e) {\n                var that = this,\n                    reference = that.tabGroup.children().eq(e.newIndex);\n\n                if (e.oldIndex < e.newIndex) {\n                    that.insertAfter(e.item, reference);\n                } else {\n                    that.insertBefore(e.item, reference);\n                }\n            },\n\n            _tabSizes: function() {\n                const that = this;\n                const tabSize = that.options.size;\n\n                let className;\n                switch (tabSize) {\n                    case \"small\":\n                        className = \"k-tabstrip-sm\";\n                        break;\n\n                    case \"medium\":\n                        className = \"k-tabstrip-md\";\n                        break;\n\n                    case \"large\":\n                        className = \"k-tabstrip-lg\";\n                        break;\n                }\n\n                that.wrapper.addClass(className);\n            },\n\n            _tabPosition: function() {\n                var that = this,\n                    tabPosition = that.options.tabPosition;\n\n                that.wrapper.addClass(\"k-tabstrip-\" + tabPosition);\n\n                if (tabPosition == \"bottom\") {\n                    that.tabWrapper.appendTo(that.wrapper);\n                }\n\n                if (tabPosition === \"left\" || tabPosition === \"right\") {\n                    that.tabGroup.attr(ARIA_ORIENTATION, \"vertical\");\n                }\n\n                that.resize(true);\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVERSTATE, e.type == MOUSEENTER);\n            },\n\n            _toggleDisabled: function(element, enable) {\n                element = this.tabGroup.find(element);\n                element.each(function() {\n                    $(this)\n                        .toggleClass(DISABLEDSTATE, !enable)\n                        .attr(ARIA_DISABLED, !enable);\n                });\n            },\n\n            _toggleScrollButtons: function() {\n                var that = this,\n                    ul = that.tabGroup,\n                    scrollLeft = Math.floor(kendo.scrollLeft(ul)),\n                    scrollTop = Math.floor(ul.scrollTop()),\n                    scrollButtonsVisibility = that.options.scrollable.scrollButtons,\n                    isHorizontal = that.options.tabPosition == \"top\" || that.options.tabPosition == \"bottom\";\n\n                    const disableNextButton = (isHorizontal ? Math.abs(scrollLeft - (ul[0].scrollWidth - ul[0].offsetWidth)) : Math.abs(scrollTop - (ul[0].scrollHeight - ul[0].offsetHeight))) <= 1;\n                    const disablePrevButton = (isHorizontal ? scrollLeft : scrollTop) === 0;\n\n                    if (scrollButtonsVisibility !== \"hidden\") {\n                        that._scrollPrevButton.toggleClass('k-disabled', disablePrevButton);\n                        that._scrollNextButton.toggleClass('k-disabled', disableNextButton);\n                    } else {\n                        that.wrapper.toggleClass(\"k-tabstrip-scrollable-start\", disablePrevButton);\n                        that.wrapper.toggleClass(\"k-tabstrip-scrollable-end\", disableNextButton);\n                    }\n            },\n\n            _updateClasses: function() {\n                var that = this,\n                    tabs, activeItem, activeTab;\n                var isHorizontal = /top|bottom/.test(that.options.tabPosition);\n\n                that.wrapper.addClass(\"k-tabstrip\");\n\n                if (!that.tabGroup) {\n                    that.tabGroup = that.wrapper.children(\"ul\");\n                    that.tabGroup.wrap('<div />');\n                    that.tabWrapper = that.tabGroup.parent();\n                }\n\n                if (!that.tabGroup[0]) {\n                    that.tabGroup = $(\"<ul />\").prependTo(that.wrapper);\n                    that.tabGroup.wrap('<div />');\n                    that.tabWrapper = that.tabGroup.parent();\n                }\n\n                that.tabWrapper.addClass('k-tabstrip-items-wrapper');\n                that.tabWrapper.addClass(isHorizontal ? 'k-hstack' : 'k-vstack');\n                that.tabGroup.addClass('k-tabstrip-items k-reset');\n\n                tabs = that.tabGroup.find(\"li\").addClass(\"k-item k-tabstrip-item\");\n\n                if (tabs.length) {\n                    activeItem = tabs.filter(\".\" + ACTIVESTATE).index();\n                    activeTab = activeItem >= 0 ? activeItem : undefined$1;\n\n                    that.tabGroup // Remove empty text nodes\n                        .contents()\n                        .filter(function() { return (this.nodeType == 3 && !trim(this.nodeValue)); })\n                        .remove();\n                }\n\n                that.contentElements = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\");\n\n                that.contentElements\n                    .addClass(CONTENT)\n                    .eq(activeTab)\n                    .addClass(ACTIVESTATE)\n                    .css({ display: \"block\" });\n\n                if (tabs.length) {\n                    updateTabClasses(tabs);\n                    activeItem = tabs.filter(\".\" + ACTIVESTATE).index();\n\n                    that.tabGroup.attr(\"aria-activedescendant\", tabs.eq(activeItem).attr(\"id\"));\n                    updateFirstLast(that.tabGroup);\n                    that._updateContentElements(true);\n                }\n            },\n\n            _updateContentElements: function(isInitialUpdate) {\n                var that = this,\n                    contentUrls = that._contentUrls,\n                    items = that.tabGroup.children(\".k-item.k-tabstrip-item\"),\n                    contentElements = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\"),\n                    _elementId = that._elementId.bind(that);\n\n                if (contentElements.length && (items.length > contentElements.length)) {\n                    contentElements.each(function(idx) {\n                        // Generate an ID for each content element\n                        var contentId = _elementId($(this), idx),\n                            item = items.filter(\"[aria-controls=\" + (contentId || 0) + \"]\")[0],\n                            tabId;\n\n                        if (!item && isInitialUpdate) {\n                            // On initialization of the widget get the tab by its index\n                            item = items[idx];\n                        }\n\n                        if (item) {\n                            // set the tab aria-controls attribute to the content ID\n                            item.setAttribute(ARIA_CONTROLS, contentId);\n                            tabId = item.id = _elementId($(item), idx, true);\n                            this.setAttribute(ARIA_LABELLEDBY, tabId);\n                        }\n\n                        // set the get (possibly existing) ID on the content element\n                        this.setAttribute(\"id\", contentId);\n                    });\n                } else {\n                    items.each(function(idx) {\n                        var currentContent = contentElements.eq(idx),\n                            contentId = _elementId(currentContent, idx),\n                            tabId;\n\n                        // set the tab aria-controls attribute to the content ID\n                        this.setAttribute(ARIA_CONTROLS, contentId);\n\n                        tabId = this.id = _elementId($(this), idx, true);\n\n                        if (!currentContent.length && contentUrls[idx]) {\n                            // Append content element in case contentUrl is used\n                            $(\"<div class='\" + CONTENT + \"'/>\").appendTo(that.wrapper).attr(\"id\", contentId);\n                        } else {\n                            // set the ID on the content element\n                            currentContent.attr(\"id\", contentId);\n                        }\n\n                        currentContent.attr(\"role\", \"tabpanel\");\n                        currentContent.attr(\"tabindex\", \"0\");\n                        currentContent.attr(ARIA_LABELLEDBY, tabId);\n                        currentContent.filter(\":not(.\" + ACTIVESTATE + \")\").attr(ARIA_HIDDEN, true);\n                    });\n                }\n\n                that.contentElements = that.contentAnimators = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\"); // refresh the contents\n\n                that.tabsHeight = outerHeight(that.tabGroup) +\n                                  parseInt(that.wrapper.css(\"border-top-width\"), 10) +\n                                  parseInt(that.wrapper.css(\"border-bottom-width\"), 10);\n\n                if (kendo.kineticScrollNeeded && kendo.mobile.ui.Scroller) {\n                    kendo.touchScroller(that.contentElements);\n                    that.contentElements = that.contentElements.children(\".km-scroll-container\");\n                }\n            },\n\n            _wrapper: function() {\n                var that = this;\n\n                if (that.element.is(\"ul\")) {\n                    that.wrapper = that.element.wrapAll(\"<div />\").parent();\n                } else {\n                    that.wrapper = that.element;\n                }\n            }\n        });\n\n        // client-side rendering\n        extend(TabStrip, {\n            renderItem: function(options) {\n                options = extend({ tabStrip: {}, group: {} }, options);\n\n                var empty = templates.empty,\n                    item = options.item,\n                    templateOptions = extend(options, {\n                        image: item.imageUrl ? templates.image : empty,\n                        sprite: item.spriteCssClass ? templates.sprite : empty,\n                        textWrapper: templates.textWrapper\n                    }, rendering);\n\n                    if (item.template) {\n                        return templates.itemWrapper(templateOptions, kendo.template(item.template)(item.model));\n                    }\n\n                return templates.item(templateOptions);\n            },\n\n            renderContent: function(options) {\n                return templates.content(extend(options, rendering));\n            }\n        });\n\n        kendo.ui.plugin(TabStrip);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports[\"default\"] = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}