{"version":3,"sources":["raw-js/kendo.calendar.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendocalendar","js","this","$","undefined$1","kendo","window","support","ui","Widget","keys","parse","parseDate","encode","htmlEncode","adjustDST","date","weekInYear","Selectable","RangeSelectable","extractFormat","_extractFormat","template","getCulture","transitionOrigin","cellTemplate","data","cssClass","ns","dateString","value","emptyCellTemplate","otherMonthCellTemplate","weekNumberTemplate","weekNumber","outerWidth","_outerWidth","CLICK","KEYDOWN_NS","ID","SLIDE","MONTH","CENTURY","CHANGE","NAVIGATE","VALUE","DISABLED","FOCUSED","OTHERMONTH","EMPTYCELL","CELLSELECTOR","START","CELLSELECTORVALID","SELECTED","BLUR","FOCUS","FOCUS_WITH_NS","MOUSEENTER","touch","MOUSEENTER_WITH_NS","MOUSELEAVE","MS_PER_DAY","PREVARROW","NEXTARROW","ARIA_DISABLED","ARIA_SELECTED","ARIA_LABEL","extend","DATE","Date","views","month","year","decade","century","HEADERSELECTOR","Calendar","init","element","options","that","componentType","fn","call","wrapper","url","unescape","disableDates","getDisabledExpr","_templates","_selectable","_header","_viewWrapper","hasFooter","_footer","footer","_today","find","_toggle","addClass","on","mousetoggle","_move","bind","e","link","currentTarget","firstChild","toDateObject","indexOf","preventDefault","_view","name","_isSingleSelection","_click","_focusView","focusOnNav","attr","first","closest","last","_isMultipleSelection","selectable","_lastActive","selectRange","trigger","event","_isRangeSelection","rangeSelectable","range","change","_current","_value","_setCurrent","normalize","format","culture","_selectDates","_index","start","restrictValue","min","max","_addClassProxy","_active","_cell","hasClass","todayString","toDateString","getToday","_cellByDate","_removeClassProxy","removeClass","selectDates","length","_range","notify","dates","allowReverse","centuryCellsFormat","end","target","depth","size","showOtherMonthDays","animation","horizontal","effects","reverse","duration","divisor","vertical","messages","weekColumnHeader","today","navigateTo","parentViews","events","componentTypes","classic","header","actionAttr","isRtl","icon","iconClass","guid","linksSelector","contentClasses","modern","setOptions","isComponentTypeChanged","_destroySelectable","prototype","remove","hide","navigate","_table","destroy","off","_title","current","view","focus","table","_bindTable","_option","navigateToPast","_navigate","navigateToFuture","navigateUp","index","navigateDown","isEqualDate","isNaN","to","currentView","compare","disabled","title","from","old","_oldTable","currentValue","future","viewWrapper","children","calendar","toggleClass","kendoStop","_changeView","html","removeAttr","content","isWeekColumnVisible","_aria","replace","_animate","_focus","_visualizeSelectedDatesInView","_selectCell","validSelectedDates","datesUnique","map","getTime","filter","position","array","time","grep","_validateValue","setHours","createDate","getFullYear","getMonth","getDate","isInRange","selectedDates","each","clear","cells","_selectElement","parseOptions","single","multiple","selectableOptions","widget","cellSelector","cellSelectorValid","_onSelect","resetOnStart","aria","inputSelectors","relatedTarget","_onRelatedTarget","_restoreSelection","_preventChange","startInRange","endInRange","visibleRange","_visibleRange","_dateInViews","selectTo","selectFrom","mid","is","initialRange","eventArgs","useEnd","sender","_useEnd","useStart","_useStart","ctrlKey","metaKey","_toggleSelection","_cellsBySelector","_deselect","_addSelectedCellsToArray","shiftKey","_rangeSelection","currentCell","push","toDateCell","startDate","daysDifference","fromDate","toDate","daysBetweenTwoDates","addDaysToArray","DOT","selector","item","currentDateIndex","Number","splice","_dateInView","firstDateInView","_isNavigatable","cellIndex","isDisabled","eq","tables","lastDateInView","prevent","method","temp","cell","lastActive","key","keyCode","RIGHT","LEFT","UP","DOWN","SPACEBAR","HOME","END","getHours","getMinutes","getSeconds","getMilliseconds","setFullYear","_todayClick","ENTER","_keyboardToggleSelection","focusedDate","setDate","_nextNavigatable","_keyboardRangeSelection","focusedCell","_end","_start","PAGEUP","PAGEDOWN","_unselect","navigatableDate","active","parent","append","insertAfter","_horizontal","viewWidth","margin","add","css","width","wrap","display","complete","unwrap","kendoAnimate","_vertical","insertBefore","left","parseInt","top","height","_selectedCell","removeAttribute","id","appendTo","show","toString","getValidCssClass","arrow","modifier","has","option","isBigger","value1","value2","isEqualMonth","empty","toggle","isTodayDisabled","todayClass","_todayClass","footerTemplate","linkClass","executeTemplate","label","useWithBlock","_updateAria","ariaTemplate","text","valueType","plugin","firstDayOfMonth","firstVisibleDay","calendarInfo","firstDay","getDay","setTime","tzOffsetBefore","getTimezoneOffset","resultDATE","tzOffsetDiff","getCalendarInfo","months","names","idx","navigateUrl","showHeader","hasUrl","currentCalendar","firstDayIdx","days","shiftArray","shortNames","namesShort","lastDayOfMonth","perRow","setter","build","day","i","inArray","join","weekNumberBuild","currentDate","timeOffset","Math","abs","date1","date2","month1","year1","month2","year2","hours","calendarMonths","namesAbbr","namesFull","setMonth","minYear","maxYear","modular","cellsPerRow","otherMonthTemplate","result","slice","concat","multiplier","endDate","fromDateUTC","UTC","endDateUTC","ceil","numberOfDays","nextDay","type","dateObject","calendars","standard","patterns","d","isFunction","Array","isArray","callback","disabledDates","convertDatesArray","toLowerCase","createDisabledExpr","noop","oldValue","newValue","split","tmpl","isEqualDatePart","viewsEnum","jQuery","kendo$1","__meta__","category","description","depends","Object","defineProperty"],"mappings":"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","file":"kendo.calendar.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.selectable.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.selectable', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendocalendar = global.kendocalendar || {}, global.kendocalendar.js = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"calendar\",\n        name: \"Calendar\",\n        category: \"web\",\n        description: \"The Calendar widget renders a graphical calendar that supports navigation and selection.\",\n        depends: [ \"core\", \"selectable\" ]\n    };\n\n    (function($, undefined$1) {\n        let kendo = window.kendo,\n            support = kendo.support,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            keys = kendo.keys,\n            parse = kendo.parseDate,\n            encode = kendo.htmlEncode,\n            adjustDST = kendo.date.adjustDST,\n            weekInYear = kendo.date.weekInYear,\n            Selectable = kendo.ui.Selectable,\n            RangeSelectable = kendo.ui.RangeSelectable,\n            extractFormat = kendo._extractFormat,\n            template = kendo.template,\n            getCulture = kendo.getCulture,\n            transitionOrigin = \"transform-origin\",\n            cellTemplate = template((data) => `<td class=\"${data.cssClass}\" role=\"gridcell\"><span tabindex=\"-1\" class=\"k-link\" data-href=\"#\" data-${data.ns}value=\"${data.dateString}\">${data.value}</span></td>`),\n            emptyCellTemplate = template(() => '<td role=\"gridcell\" class=\"k-calendar-td k-empty\"></td>'),\n            otherMonthCellTemplate = template(() => '<td role=\"gridcell\" class=\"k-calendar-td k-empty\">&nbsp;</td>'),\n            weekNumberTemplate = template((data) => `<td class=\"k-calendar-td k-alt\">${data.weekNumber}</td>`),\n            outerWidth = kendo._outerWidth,\n            ns = \".kendoCalendar\",\n            CLICK = \"click\" + ns,\n            KEYDOWN_NS = \"keydown\" + ns,\n            DOT = \".\",\n            EMPTY = \" \",\n            TABLE = \"table\",\n            CALENDAR_VIEW = \"k-calendar-view\",\n            ID = \"id\",\n            MIN = \"min\",\n            LEFT = \"left\",\n            SLIDE = \"slideIn\",\n            MONTH = \"month\",\n            CENTURY = \"century\",\n            CHANGE = \"change\",\n            NAVIGATE = \"navigate\",\n            VALUE = \"value\",\n            HOVER = \"k-hover\",\n            DISABLED = \"k-disabled\",\n            FOCUSED = \"k-focus\",\n            OTHERMONTH = \"k-other-month\",\n            EMPTYCELL = \"k-empty\",\n            TODAY = \"k-calendar-nav-today\",\n            CELLSELECTOR = \"td:has(.k-link)\",\n            START = \"start\",\n            END = \"end\",\n            CELLSELECTORVALID = \"td:has(.k-link):not(.\" + DISABLED + \"):not(.\" + EMPTYCELL + \")\",\n            WEEKCOLUMNSELECTOR = \"td:not(:has(.k-link))\",\n            SELECTED = \"k-selected\",\n            BLUR = \"blur\" + ns,\n            FOCUS = \"focus\",\n            FOCUS_WITH_NS = FOCUS + ns,\n            MOUSEENTER = support.touch ? \"touchstart\" : \"mouseenter\",\n            MOUSEENTER_WITH_NS = support.touch ? \"touchstart\" + ns : \"mouseenter\" + ns,\n            MOUSELEAVE = support.touch ? \"touchend\" + ns + \" touchmove\" + ns : \"mouseleave\" + ns,\n            MS_PER_MINUTE = 60000,\n            MS_PER_DAY = 86400000,\n            PREVARROW = \"_prevArrow\",\n            NEXTARROW = \"_nextArrow\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_SELECTED = \"aria-selected\",\n            ARIA_LABEL = \"aria-label\",\n            extend = $.extend,\n            DATE = Date,\n            views = {\n                month: 0,\n                year: 1,\n                decade: 2,\n                century: 3\n            },\n            HEADERSELECTOR = '.k-header, .k-calendar-header',\n            CLASSIC_HEADER_TEMPLATE = ({ actionAttr, size, isRtl }) => `<div class=\"k-header k-hstack\">\n            <span tabindex=\"-1\" data-href=\"#\" ${actionAttr}=\"prev\" role=\"button\" class=\"k-calendar-nav-prev k-button ${size} k-rounded-md k-button-flat k-button-flat-base k-icon-button\" ${ARIA_LABEL}=\"Previous\">${kendo.ui.icon({ icon: `caret-alt-${isRtl ? \"right\" : \"left\"}`, iconClass: \"k-button-icon\" })}</span></span>\n            <span tabindex=\"-1\" data-href=\"#\" ${actionAttr}=\"nav-up\" id=\"` + kendo.guid() + `\" role=\"button\" class=\"k-calendar-nav-fast k-button ${size} k-rounded-md k-button-flat k-button-flat-base  k-flex\"></span>\n            <span tabindex=\"-1\" data-href=\"#\" ${actionAttr}=\"next\" role=\"button\" class=\"k-calendar-nav-next k-button ${size} k-rounded-md k-button-flat k-button-flat-base  k-icon-button\" ${ARIA_LABEL}=\"Next\">${kendo.ui.icon({ icon: `caret-alt-${isRtl ? \"left\" : \"right\"}`, iconClass: \"k-button-icon\" })}</span>\n        </div>`,\n            MODERN_HEADER_TEMPLATE = ({ actionAttr, size, messages, isRtl }) => `<div class=\"k-calendar-header\">\n            <button ${actionAttr}=\"nav-up\" id=\"` + kendo.guid() + `\" class=\"k-calendar-title k-button ${size} k-button-flat k-button-flat-primary k-rounded-md\">\n                <span class=\"k-button-text\"></span>\n            </button>\n            <span class=\"k-spacer\"></span>\n            <span class=\"k-calendar-nav\">\n                <button tabindex=\"-1\" ${actionAttr}=${isRtl ? \"next\" : \"prev\"} class=\"k-calendar-nav-prev k-button ${size} k-button-flat k-button-flat-base k-rounded-md k-icon-button\">\n                    ${kendo.ui.icon({ icon: `chevron-${isRtl ? \"right\" : \"left\"}`, iconClass: \"k-button-icon\" })}\n                </button>\n                <button tabindex=\"-1\" ${actionAttr}=\"today\" class=\"k-calendar-nav-today k-button ${size} k-button-flat k-button-flat-primary k-rounded-md\" role=\"link\">\n                    <span class=\"k-button-text\">${kendo.htmlEncode(messages.today)}</span>\n                </button>\n                <button tabindex=\"-1\" ${actionAttr}=${isRtl ? \"prev\" : \"next\"} class=\"k-calendar-nav-next k-button ${size} k-button-flat k-button-flat-base k-rounded-md k-icon-button\">\n                    ${kendo.ui.icon({ icon: `chevron-${isRtl ? \"left\" : \"right\"}`, iconClass: \"k-button-icon\" })}\n                </button>\n            </span>\n        </div>`;\n\n        var Calendar = Widget.extend({\n            init: function(element, options) {\n                var that = this, value, id;\n                options = options || {};\n                options.componentType = options.componentType || \"classic\";\n                Widget.fn.init.call(that, element, options);\n\n                element = that.wrapper = that.element;\n                options = that.options;\n\n                options.url = kendo.unescape(options.url);\n\n                that.options.disableDates = getDisabledExpr(that.options.disableDates);\n\n                that._templates();\n\n                that._selectable();\n\n                that._header();\n\n                that._viewWrapper();\n\n                if (that.options.hasFooter) {\n                    that._footer(that.footer);\n                } else {\n                    that._today = that.element.find('.k-calendar-nav-today');\n                    that._toggle();\n                }\n\n                id = element\n                    .addClass(\"k-calendar k-calendar-md \" + (options.weekNumber ? \" k-week-number\" : \"\"))\n                    .on(MOUSEENTER_WITH_NS + \" \" + MOUSELEAVE, CELLSELECTOR, mousetoggle)\n                    .on(KEYDOWN_NS, \"table.k-calendar-table\", that._move.bind(that))\n                    .on(CLICK + \" touchend\", CELLSELECTORVALID, function(e) {\n                        var link = e.currentTarget.firstChild,\n                            value = toDateObject(link);\n\n                        if ($(link).data(\"href\").indexOf(\"#\") != -1) {\n                            e.preventDefault();\n                        }\n\n                        if (that._view.name == \"month\" && that.options.disableDates(value)) {\n                            return;\n                        }\n                        if (that._view.name != \"month\" || that._isSingleSelection()) {\n                                that._click($(link));\n                        }\n                    })\n                    .on(\"mouseup\" + ns, \"table.k-calendar-table, .k-calendar-footer\", function() {\n                        that._focusView(that.options.focusOnNav !== false);\n                    })\n                    .attr(ID);\n\n                if (that.options.weekNumber) {\n                    element.on(CLICK, WEEKCOLUMNSELECTOR, function(e) {\n                            var first = $(e.currentTarget).closest(\"tr\").find(CELLSELECTORVALID).first(),\n                                last = $(e.currentTarget).closest(\"tr\").find(CELLSELECTORVALID).last();\n\n                            if (that._isMultipleSelection()) {\n                                that.selectable._lastActive = last;\n                                that.selectable.selectRange(first, last);\n                                that.selectable.trigger(CHANGE, { event: e });\n                            }\n\n                            if (that._isRangeSelection()) {\n                                that.rangeSelectable._lastActive = last;\n                                that.rangeSelectable.range(first, last);\n                                that.rangeSelectable.change();\n                            }\n\n                            that._current = that._value = toDateObject(last.find(\"span\"));\n                            that._setCurrent(that._current);\n                    });\n                }\n\n                normalize(options);\n                value = parse(options.value, options.format, options.culture);\n                that._selectDates = [];\n\n                that._index = views[options.start];\n\n                that._current = new DATE(+restrictValue(value, options.min, options.max));\n\n                that._addClassProxy = function() {\n                    that._active = true;\n\n                    if (that._cell.hasClass(DISABLED)) {\n                        var todayString = that._view.toDateString(getToday());\n                        that._cell = that._cellByDate(todayString);\n                    }\n\n                    that._cell.addClass(FOCUSED);\n                };\n\n                that._removeClassProxy = function() {\n                    that._active = false;\n                    if (that._cell) {\n                        that._cell.removeClass(FOCUSED);\n                    }\n                };\n\n                that.value(value);\n\n                if (that._isMultipleSelection() && options.selectDates.length > 0) {\n                    that.selectDates(options.selectDates);\n                }\n\n                that._range = options.range;\n\n                if (that._isRangeSelection()) {\n                    that.selectRange(that._range);\n                }\n\n                kendo.notify(that);\n            },\n\n            options: {\n                name: \"Calendar\",\n                value: null,\n                min: new DATE(1900, 0, 1),\n                max: new DATE(2099, 11, 31),\n                dates: [],\n                disableDates: null,\n                allowReverse: false,\n                centuryCellsFormat: \"long\",\n                url: \"\",\n                culture: \"\",\n                footer: \"\",\n                format: \"\",\n                month: {},\n                weekNumber: false,\n                range: { start: null, end: null, target: START },\n                selectable: \"single\",\n                selectDates: [],\n                start: MONTH,\n                depth: MONTH,\n                size: \"medium\",\n                showOtherMonthDays: true,\n                animation: {\n                    horizontal: {\n                        effects: SLIDE,\n                        reverse: true,\n                        duration: 500,\n                        divisor: 2\n                    },\n                    vertical: {\n                        effects: \"zoomIn\",\n                        duration: 400\n                    }\n                },\n                messages: {\n                    weekColumnHeader: \"\",\n                    today: \"Today\",\n                    navigateTo: \"Navigate to \",\n                    parentViews: {\n                        month: \"year view\",\n                        year: \"decade view\",\n                        decade: \"century view\"\n                    }\n                },\n                componentType: \"classic\"\n            },\n\n            events: [\n                CHANGE,\n                NAVIGATE\n            ],\n\n            componentTypes: {\n                \"classic\": {\n                    header: {\n                        template: CLASSIC_HEADER_TEMPLATE\n                    },\n                    hasFooter: true,\n                    linksSelector: \".k-button\",\n                    contentClasses: \"k-calendar-table\"\n                },\n                \"modern\": {\n                    header: {\n                        template: MODERN_HEADER_TEMPLATE\n                    },\n                    hasFooter: false,\n                    linksSelector: \".k-button\",\n                    contentClasses: \"k-calendar-table\"\n                }\n            },\n\n            setOptions: function(options) {\n                let that = this,\n                isComponentTypeChanged;\n\n                isComponentTypeChanged = options.componentType ? true : false;\n\n                normalize(options);\n\n                options.disableDates = getDisabledExpr(options.disableDates);\n                that._destroySelectable();\n\n                if (options.messages) {\n                    options.messages = $.extend({}, true, that.options.messages, options.messages);\n                }\n\n                Widget.fn.setOptions.call(that, options);\n\n                that._templates();\n\n                that._selectable();\n\n                if (isComponentTypeChanged) {\n                    let componentTypes = Calendar.prototype.componentTypes;\n\n                    that.options.header = componentTypes[options.componentType].header;\n                    that.options.hasFooter = componentTypes[options.componentType].hasFooter;\n                    let header = that.element.find(HEADERSELECTOR)[0];\n\n                    if (header) {\n                        header.remove();\n                    }\n\n                    that._header();\n                }\n\n                that._viewWrapper();\n\n                if (that.options.hasFooter) {\n                    that._footer(that.footer);\n                } else {\n                    that.element.find(\".k-calendar-footer\").hide();\n                    that._toggle();\n                }\n                that._index = views[that.options.start];\n\n                that.navigate();\n\n                if (isComponentTypeChanged) {\n                    let value = parse(that.options.value, options.format, options.culture);\n                    that._current = new DATE(+restrictValue(value, options.min, options.max));\n                    that._cell = null;\n                    that._table = null;\n                    that.value(value);\n                }\n\n                if (options.weekNumber) {\n                    that.element.addClass('k-week-number');\n                }\n            },\n\n            destroy: function() {\n                var that = this,\n                today = that._today;\n\n                that.element.off(ns);\n                that._title.off(ns);\n                that[PREVARROW].off(ns);\n                that[NEXTARROW].off(ns);\n                that._destroySelectable();\n                kendo.destroy(that._table);\n\n                if (today) {\n                    kendo.destroy(today.off(ns));\n                }\n\n                Widget.fn.destroy.call(that);\n            },\n\n            current: function() {\n                return this._current;\n            },\n\n            view: function() {\n                return this._view;\n            },\n\n            focus: function(table) {\n                table = table || this._table;\n                this._bindTable(table);\n                table.trigger(\"focus\");\n            },\n\n            min: function(value) {\n                return this._option(MIN, value);\n            },\n\n            max: function(value) {\n                return this._option(\"max\", value);\n            },\n\n            navigateToPast: function() {\n                this._navigate(PREVARROW, -1);\n            },\n\n            navigateToFuture: function() {\n                this._navigate(NEXTARROW, 1);\n            },\n\n            navigateUp: function() {\n                var that = this,\n                index = that._index;\n\n                if (that._title.hasClass(DISABLED)) {\n                    return;\n                }\n\n                that.navigate(that._current, ++index);\n            },\n\n            navigateDown: function(value) {\n                var that = this,\n                index = that._index,\n                depth = that.options.depth;\n\n                if (!value) {\n                    return;\n                }\n\n                if (index === views[depth]) {\n                    if (!isEqualDate(that._value, that._current) || !isEqualDate(that._value, value)) {\n                        that.value(value);\n                        that.trigger(CHANGE);\n                    }\n                    return;\n                }\n\n                that.navigate(value, --index);\n            },\n\n            navigate: function(value, view) {\n                view = isNaN(view) ? views[view] : view;\n\n                var that = this,\n                    options = that.options,\n                    culture = options.culture,\n                    min = options.min,\n                    max = options.max,\n                    title = that._title,\n                    from = that._table,\n                    old = that._oldTable,\n                    currentValue = that._current,\n                    future = value && +value > +currentValue,\n                    vertical = view !== undefined$1 && view !== that._index,\n                    to, currentView, compare,\n                    disabled,\n                    viewWrapper = that.element.children(\".k-calendar-view\");\n\n                if (!value) {\n                    value = currentValue;\n                }\n\n                that._current = value = new DATE(+restrictValue(value, min, max));\n\n                if (view === undefined$1) {\n                    view = that._index;\n                } else {\n                    that._index = view;\n                }\n\n                that._view = currentView = calendar.views[view];\n                compare = currentView.compare;\n\n                disabled = view === views[CENTURY];\n                title.toggleClass(DISABLED, disabled).attr(ARIA_DISABLED, disabled);\n\n                disabled = compare(value, min) < 1;\n                that[PREVARROW].toggleClass(DISABLED, disabled).attr(ARIA_DISABLED, disabled);\n\n                disabled = compare(value, max) > -1;\n                that[NEXTARROW].toggleClass(DISABLED, disabled).attr(ARIA_DISABLED, disabled);\n\n                if (from && old && old.data(\"animating\")) {\n                    old.kendoStop(true, true);\n                    from.kendoStop(true, true);\n                }\n\n                that._oldTable = from;\n\n                if (!from || that._changeView) {\n                    title.html('<span class=\"k-button-text\">' + currentView.title(value, min, max, culture) + '</span>');\n\n                    if (that.options.messages.parentViews && that._view.name !== CENTURY) {\n                        title.attr(\"title\", encode(that.options.messages.navigateTo + that.options.messages.parentViews[that._view.name]));\n                    } else {\n                        title.removeAttr(\"title\");\n                    }\n\n                    that._table = to = $(currentView.content(extend({\n                        min: min,\n                        max: max,\n                        date: value,\n                        url: options.url,\n                        dates: options.dates,\n                        format: options.format,\n                        showOtherMonthDays: options.showOtherMonthDays,\n                        centuryCellsFormat: options.centuryCellsFormat,\n                        culture: culture,\n                        disableDates: options.disableDates,\n                        isWeekColumnVisible: options.weekNumber,\n                        messages: options.messages,\n                        contentClasses: that.options.contentClasses\n                    }, that[currentView.name])));\n\n                    that._aria();\n\n                    var replace = from && from.data(\"start\") === to.data(\"start\");\n                    that._animate({\n                        from: from,\n                        to: to,\n                        vertical: vertical,\n                        future: future,\n                        replace: replace\n                    });\n\n                    viewWrapper.removeClass(\"k-calendar-monthview k-calendar-yearview k-calendar-decadeview k-calendar-centuryview\");\n                    viewWrapper.addClass(\"k-calendar-\" + currentView.name + \"view\");\n\n                    that.trigger(NAVIGATE);\n\n                    that._focus(value);\n                }\n\n                if (view === views[options.depth] && that._selectDates.length > 0) {\n                    that._visualizeSelectedDatesInView();\n                }\n\n                if (that._isSingleSelection()) {\n                    if (view === views[options.depth] && that._value && !that.options.disableDates(that._value)) {\n                        that._selectCell(that._value);\n                    }\n                }\n\n                that._setCurrent(value);\n\n                if (!from && that._cell) {\n                    that._cell.removeClass(FOCUSED);\n                }\n\n                that._changeView = true;\n            },\n\n            selectDates: function(dates) {\n                var that = this,\n                    validSelectedDates,\n                    datesUnique;\n\n                if (dates === undefined$1) {\n                    return that._selectDates;\n                }\n\n                datesUnique = dates\n                    .map(function(date) { return date.getTime(); })\n                    .filter(function(date, position, array) {\n                        return array.indexOf(date) === position;\n                    })\n                    .map(function(time) { return new Date(time); });\n\n                validSelectedDates = $.grep(datesUnique, function(value) {\n                    if (value) {\n                        return +that._validateValue(new Date(value.setHours(0, 0, 0, 0))) === +value;\n                    }\n                });\n                that._selectDates = validSelectedDates.length > 0 ? validSelectedDates : (datesUnique.length === 0 ? datesUnique : that._selectDates);\n                that._visualizeSelectedDatesInView();\n            },\n\n            value: function(value) {\n                var that = this,\n                    old = that._view,\n                    view = that._view;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                value = that._validateValue(value);\n                if (value && that._isMultipleSelection()) {\n                    var date = new Date(+value);\n                    date.setHours(0, 0, 0, 0);\n                    that._selectDates = [date];\n                    that.selectable._lastActive = null;\n                }\n\n                if (old && value === null && that._cell) {\n                    that._cell.removeClass(SELECTED);\n                } else {\n                    that._changeView = !value || view && view.compare(value, that._current) !== 0;\n                    that.navigate(value);\n                }\n            },\n\n            isRtl: function() {\n                return kendo.support.isRtl(this.wrapper);\n            },\n\n            _aria: function() {\n                var table = this._table;\n\n                table.attr(\"aria-labelledby\", this._title.attr(\"id\"));\n\n                if (this._view.name === \"month\" && this._isMultipleSelection()) {\n                    table.attr(\"aria-multiselectable\", \"true\");\n                }\n            },\n\n            _validateValue: function(value) {\n                var that = this,\n                    options = that.options,\n                    min = options.min,\n                    max = options.max;\n\n                if (value === null) {\n                    that._current = createDate(that._current.getFullYear(), that._current.getMonth(), that._current.getDate());\n                }\n\n                value = parse(value, options.format, options.culture);\n\n                if (value !== null) {\n                    value = new DATE(+value);\n\n                    if (!isInRange(value, min, max)) {\n                        value = null;\n                    }\n                }\n\n                if (value === null || !that.options.disableDates(new Date(+value))) {\n                    that._value = value;\n                } else if (that._value === undefined$1) {\n                    that._value = null;\n                }\n\n                return that._value;\n            },\n\n            _visualizeSelectedDatesInView: function() {\n                var that = this;\n                 var selectedDates = {};\n                $.each(that._selectDates, function(index, value) {\n                    selectedDates[kendo.calendar.views[0].toDateString(value)] = value;\n                });\n                that.selectable.clear();\n                 var cells = that._table\n                    .find(CELLSELECTOR)\n                    .filter(function(index, element) {\n                        return selectedDates[$(element.firstChild).attr(kendo.attr(VALUE))];\n                    });\n                if (cells.length > 0) {\n                    that.selectable._selectElement(cells, true);\n                }\n            },\n\n            _isSingleSelection: function() {\n                let selectable = this.options.selectable,\n                selectableOptions = Selectable.parseOptions(selectable);\n                return selectableOptions.single;\n            },\n\n            _isMultipleSelection: function() {\n                let selectable = this.options.selectable,\n                selectableOptions = Selectable.parseOptions(selectable);\n                return selectableOptions.multiple;\n            },\n\n            _isRangeSelection: function() {\n                let selectable = this.options.selectable,\n                selectableOptions = Selectable.parseOptions(selectable);\n                return selectableOptions.range;\n            },\n\n            _selectable: function() {\n                let that = this,\n                    selectable = that.options.selectable,\n                    selectableOptions = Selectable.parseOptions(selectable);\n\n                if (!that._isMultipleSelection() && !that._isRangeSelection()) {\n                    return;\n                }\n\n                if (that.rangeSelectable) {\n                    that.rangeSelectable.destroy();\n                    that.rangeSelectable = null;\n                }\n\n                if (selectableOptions.range) {\n                    that.rangeSelectable = new RangeSelectable(that.wrapper, {\n                        widget: that,\n                        filter: \".k-calendar-monthview table \" + CELLSELECTORVALID,\n                        cellSelector: CELLSELECTOR,\n                        cellSelectorValid: CELLSELECTORVALID,\n                        change: that._onSelect.bind(that),\n                        reverse: that.options.allowReverse,\n                        resetOnStart: true,\n                        ns: ns\n                    });\n\n                    that.element.addClass(\"k-calendar-range\");\n                } else {\n                    that.selectable = new Selectable(that.wrapper, {\n                        aria: true,\n                        //excludes the anchor element\n                        inputSelectors: \"input,textarea,.k-multiselect-wrap,select,button,.k-button>span,.k-button>img,span.k-icon.k-i-caret-alt-down,span.k-icon.k-i-caret-alt-up,span.k-svg-icon.k-svg-i-caret-alt-down,span.k-svg-icon.k-svg-i-caret-alt-up\",\n                        multiple: selectableOptions.multiple,\n                        filter: \"table.k-calendar-table:eq(0) \" + CELLSELECTORVALID,\n                        change: that._onSelect.bind(that),\n                        relatedTarget: that._onRelatedTarget.bind(that)\n                    });\n                }\n            },\n\n            _restoreSelection: function() {\n                const that = this;\n                let range;\n\n                that._preventChange = true;\n\n                if (that._isRangeSelection()) {\n                    range = that.selectRange();\n\n                    if (!range || !range.start) {\n                        that._preventChange = false;\n                        return;\n                    }\n\n                    that.selectRange(range);\n                }\n\n                that._preventChange = false;\n            },\n\n            selectRange: function(range) {\n                const that = this, view = that._view;\n                let startInRange, endInRange, visibleRange;\n\n                if (range === undefined$1) {\n                    return that._range;\n                }\n\n                that._range = range;\n\n                if (!range.start) {\n                    return;\n                }\n\n                visibleRange = that._visibleRange();\n\n                startInRange = that._dateInViews(range.start);\n                endInRange = range.end && that._dateInViews(range.end);\n\n                if (!startInRange && endInRange) {\n                    that.rangeSelectable.selectTo(that._cellByDate(view.toDateString(range.end)));\n                }\n\n                if (startInRange && endInRange) {\n                    that.rangeSelectable.range(that._cellByDate(view.toDateString(range.start)), that._cellByDate(view.toDateString(range.end)), false, that.options.allowReverse);\n                }\n\n                if (range.end && startInRange && !endInRange) {\n                    that.rangeSelectable.selectFrom(that._cellByDate(view.toDateString(range.start)));\n                }\n\n                if (!range.end && startInRange) {\n                    that.rangeSelectable.start(that._cellByDate(view.toDateString(range.start)));\n                }\n\n                if (+visibleRange.start > +range.start && +visibleRange.end < +range.end) {\n                    that.rangeSelectable.mid(that.element.find(CELLSELECTORVALID));\n                }\n            },\n\n            _onRelatedTarget: function(target) {\n                var that = this;\n\n                if (that.selectable.options.multiple && target.is(CELLSELECTORVALID)) {\n                    that._current = toDateObject(target.find(\"span\"));\n                    that._setCurrent(that._current);\n                }\n\n            },\n\n            _onSelect: function(e) {\n                let that = this,\n                    eventArgs = e,\n                    range,\n                    useEnd = e.sender._useEnd,\n                    useStart = e.sender._useStart,\n                    initialRange,\n                    start,\n                    end,\n                    value,\n                    target,\n                    selectableOptions = Selectable.parseOptions(that.options.selectable);\n\n                if (that._isRangeSelection()) {\n                    range = e.sender.range();\n                    initialRange = that.selectRange() || {};\n                    target = initialRange.target;\n                    if (range.start && range.start.length) {\n                        start = toDateObject(range.start.find(\"span\"));\n                    }\n\n                    if (range.end && range.end.length) {\n                        end = toDateObject(range.end.find(\"span\"));\n                    }\n\n                    if (target === END) {\n                        target = START;\n                    } else {\n                        target = END;\n                    }\n\n                    that._range = { start: useStart ? initialRange.start : start, end: useEnd ? initialRange.end : end, target: target };\n\n                    if (!that._preventChange) {\n                        that.trigger(CHANGE);\n                    }\n\n                    value = end || start;\n\n                    if (end && !that._dateInViews(end)) {\n                        value = start;\n                    }\n\n                    that.selectRange(that._range);\n                    that.value(value);\n                    return;\n                }\n\n                if (!selectableOptions.multiple) {\n                    if ($(eventArgs.event.currentTarget).is(\"td\") && !$(eventArgs.event.currentTarget).hasClass(\"k-selected\")) {\n                        $(eventArgs.event.currentTarget).addClass(\"k-selected\");\n                    }\n                    else {\n                        that._click($(eventArgs.event.currentTarget).find(\"span\"));\n                    }\n                    return;\n                }\n\n                if (eventArgs.event.ctrlKey || eventArgs.event.metaKey) {\n                    if ($(eventArgs.event.currentTarget).is(CELLSELECTORVALID)) {\n                        that._toggleSelection($(eventArgs.event.currentTarget));\n                    }\n                    else {\n                        that._cellsBySelector(CELLSELECTORVALID).each(function(index, element) {\n                            var value = toDateObject($(element).find(\"span\"));\n                            that._deselect(value);\n                        });\n                        that._addSelectedCellsToArray();\n                    }\n                }\n                else if (eventArgs.event.shiftKey) {\n                    that._rangeSelection(that._cell);\n                }\n                else if ($(eventArgs.event.currentTarget).is(CELLSELECTOR)) {\n                    that.value(toDateObject($(eventArgs.event.currentTarget).find(\"span\")));\n                }\n                else {\n                    that._selectDates = [];\n                    that._addSelectedCellsToArray();\n                }\n                 that.trigger(CHANGE);\n            },\n\n            _destroySelectable: function() {\n                var that = this;\n\n                if (that.selectable) {\n                    that.selectable.destroy();\n                    that.selectable = null;\n                }\n\n                if (that.rangeSelectable) {\n                    that.rangeSelectable.destroy();\n                    that.rangeSelectable = null;\n                }\n            },\n\n            //when ctrl key is clicked\n            _toggleSelection: function(currentCell) {\n                var that = this,\n                    date = toDateObject(currentCell.find(\"span\"));\n                    if (currentCell.hasClass(\"k-selected\")) {\n                        that._selectDates.push(date);\n                    }\n                    else {\n                        that._deselect(date);\n                    }\n            },\n\n            //shift selection\n            _rangeSelection: function(toDateCell, startDate) {\n                var that = this,\n                    fromDate = startDate || toDateObject(that.selectable.value().first().find(\"span\")),\n                    toDate = toDateObject(toDateCell.find(\"span\")),\n                    daysDifference;\n\n                if (that.selectable._lastActive || that._value) {\n                    fromDate = that.selectable._lastActive ? toDateObject(that.selectable._lastActive.find(\"span\")) : new Date(+that._value);\n                } else {\n                    that.selectable._lastActive = startDate ? that._cellByDate(that._view.toDateString(startDate), CELLSELECTORVALID) : that.selectable.value().first();\n                }\n\n                that._selectDates = [];\n                daysDifference = daysBetweenTwoDates(fromDate, toDate);\n                addDaysToArray(that._selectDates, daysDifference, fromDate, that.options.disableDates);\n\n                that._visualizeSelectedDatesInView();\n            },\n\n            _visibleRange: function() {\n                let table = this.element.find(DOT + CALENDAR_VIEW + EMPTY + TABLE),\n                    firstDateInView = toDateObject(table.first().find(CELLSELECTOR).first().find(\"span\")),\n                    lastDateInView = toDateObject(table.last().find(CELLSELECTOR).last().find(\"span\"));\n                return { start: firstDateInView, end: lastDateInView };\n            },\n\n            _cellsBySelector: function(selector) {\n                var that = this;\n                return that._table.find(selector);\n            },\n\n            _addSelectedCellsToArray: function() {\n                var that = this;\n                that.selectable.value().each(function(index, item) {\n                    var date = toDateObject($(item.firstChild));\n                    if (!that.options.disableDates(date)) {\n                        that._selectDates.push(date);\n                    }\n                });\n            },\n\n             _deselect: function(date) {\n                var that = this;\n                 var currentDateIndex = that._selectDates.map(Number).indexOf(+date);\n                if (currentDateIndex != -1) {\n                    that._selectDates.splice(currentDateIndex, 1);\n                }\n            },\n\n            _dateInView: function(date) {\n                var that = this,\n                    firstDateInView = toDateObject(that._cellsBySelector(CELLSELECTORVALID).first().find(\"span\")),\n                    lastDateInView = toDateObject(that._cellsBySelector(CELLSELECTORVALID).last().find(\"span\"));\n\n                return +date <= +lastDateInView && +date >= +firstDateInView;\n            },\n\n            _isNavigatable: function(currentValue, cellIndex) {\n                var that = this;\n                var isDisabled = that.options.disableDates;\n                var cell;\n                var index;\n\n                if (that._view.name == \"month\") {\n                    return !isDisabled(currentValue);\n                } else {\n                    index = that.wrapper.find(\".\" + FOCUSED).index();\n                    cell = that.wrapper.find(\".k-calendar-table td\").eq(index + cellIndex);\n                    return cell.is(CELLSELECTORVALID) || !isDisabled(currentValue);\n                }\n            },\n\n            _dateInViews: function(date) {\n                let that = this,\n                    tables = that.element.find(\".k-calendar-view table\"),\n                    firstDateInView = toDateObject(tables.first().find(CELLSELECTOR).first().find(\"span\")),\n                    lastDateInView = toDateObject(tables.last().find(CELLSELECTOR).last().find(\"span\"));\n\n                date = new Date(date.toDateString());\n\n                return +date <= +lastDateInView && +date >= +firstDateInView;\n            },\n\n            _move: function(e) {\n                var that = this,\n                    options = that.options,\n                    key = e.keyCode,\n                    view = that._view,\n                    index = that._index,\n                    min = that.options.min,\n                    max = that.options.max,\n                    currentValue = new DATE(+that._current),\n                    isRtl = that.isRtl(),\n                    isDisabled = that.options.disableDates,\n                    value, prevent, method, temp, cell, focusedCell, lastActive;\n\n                if (e.target === that._table[0]) {\n                    that._active = true;\n                }\n\n                if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                    value = 1;\n                    prevent = true;\n                } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                    value = -1;\n                    prevent = true;\n                } else if (key == keys.UP) {\n                    value = index === 0 ? -7 : -4;\n                    prevent = true;\n                } else if (key == keys.DOWN) {\n                    value = index === 0 ? 7 : 4;\n                    prevent = true;\n                } else if (key == keys.SPACEBAR) {\n                    value = 0;\n                    prevent = true;\n                } else if (key == keys.HOME || key == keys.END) {\n                    method = key == keys.HOME ? \"first\" : \"last\";\n                    temp = view[method](currentValue);\n                    currentValue = new DATE(temp.getFullYear(), temp.getMonth(), temp.getDate(), currentValue.getHours(), currentValue.getMinutes(), currentValue.getSeconds(), currentValue.getMilliseconds());\n                    currentValue.setFullYear(temp.getFullYear());\n                    prevent = true;\n                } else if (key === 84) {\n                    that._todayClick(e);\n                    prevent = true;\n                }\n\n                if (e.ctrlKey || e.metaKey) {\n                    if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                        that.navigateToFuture();\n                        prevent = true;\n                    } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                        that.navigateToPast();\n                        prevent = true;\n                    } else if (key == keys.UP) {\n                        that.navigateUp();\n                        prevent = true;\n                    } else if (key == keys.DOWN) {\n                        that._click($(that._cell[0].firstChild));\n                        prevent = true;\n                    }\n                      else if ((key == keys.ENTER || key == keys.SPACEBAR) && that._isMultipleSelection()) {\n                        that._keyboardToggleSelection(e);\n\n                        var focusedDate = toDateObject($(that._cell[0]).find(\"span\"));\n                        that._setCurrent(focusedDate);\n\n                    }\n                } else if (e.shiftKey) {\n                    if (value !== undefined$1 || method) {\n                        if (!method) {\n                            view.setDate(currentValue, value);\n                        }\n\n                        if (!isInRange(currentValue, min, max)) {\n                            currentValue = restrictValue(currentValue, options.min, options.max);\n                        }\n\n                        if (isDisabled(currentValue)) {\n                            currentValue = that._nextNavigatable(currentValue, value);\n                        }\n\n                        min = createDate(min.getFullYear(), min.getMonth(), min.getDate());\n                        if (that._isMultipleSelection()) {\n                            that._keyboardRangeSelection(e, currentValue);\n                        } else if (that._isRangeSelection()) {\n                            if (!that._dateInViews(currentValue)) {\n                                if (value > 0) {\n                                    that.navigateToFuture();\n                                } else {\n                                    that.navigateToPast();\n                                }\n                            }\n                        } else {\n                            that._focus(currentValue);\n                        }\n                    }\n\n                    if (that.rangeSelectable) {\n                        cell = that._cellByDate(view.toDateString(currentValue));\n                        lastActive = toDateObject((that.rangeSelectable._lastActive || focusedCell).find(\"span\"));\n                        if (!that._dateInViews(lastActive)) {\n                            if (+lastActive > +currentValue) {\n                                that.rangeSelectable._end = that.rangeSelectable._lastActive;\n                                that.rangeSelectable.selectFrom(cell);\n                            } else {\n                                that.rangeSelectable.selectTo(cell);\n                            }\n                        } else {\n                            if (that.rangeSelectable._end && that.rangeSelectable._end.is(\".\" + FOCUSED)) {\n                                that.rangeSelectable._lastActive = that.rangeSelectable._start;\n                            } else {\n                                that.rangeSelectable._lastActive = that._cellByDate(view.toDateString(lastActive));\n                            }\n                            that.rangeSelectable.range(that.rangeSelectable._lastActive, cell);\n                        }\n                        that.rangeSelectable.change();\n                        that._setCurrent(currentValue);\n                    }\n                } else {\n                    if (key == keys.ENTER || key == keys.SPACEBAR) {\n                        if (view.name == \"month\" && that._isMultipleSelection()) {\n                            that.value(toDateObject($(that._cell.find(\"span\"))));\n                            that.selectable._lastActive = $(that._cell[0]);\n                            that.trigger(CHANGE);\n                        } else if (that.rangeSelectable) {\n                            that.rangeSelectable.change();\n                        } else {\n                            that._click($(that._cell[0].firstChild));\n                        }\n                        prevent = true;\n                    } else if (key == keys.PAGEUP) {\n                        prevent = true;\n                        that.navigateToPast();\n                    } else if (key == keys.PAGEDOWN) {\n                        prevent = true;\n                        that.navigateToFuture();\n                    }\n\n                    if (value || method) {\n                        if (!method) {\n                            view.setDate(currentValue, value);\n                        }\n\n                        min = createDate(min.getFullYear(), min.getMonth(), min.getDate());\n\n                        if (!isInRange(currentValue, min, max)) {\n                            currentValue = restrictValue(currentValue, options.min, options.max);\n                        }\n\n                        if (!that._isNavigatable(currentValue, value)) {\n                            currentValue = that._nextNavigatable(currentValue, value);\n                        }\n\n                        if (that._isMultipleSelection()) {\n                            if (!that._dateInView(currentValue)) {\n                                that.navigate(currentValue);\n                            }\n                            else {\n                                that._current = currentValue;\n                                that._setCurrent(currentValue);\n                            }\n                        }\n                        else {\n                            that._focus(currentValue);\n                        }\n                    }\n                }\n\n                if (prevent) {\n                    e.preventDefault();\n                }\n\n                return that._current;\n            },\n\n            _keyboardRangeSelection: function(event, currentValue) {\n                var that = this,\n                    fromDate,\n                    daysDifference;\n\n                if (!that._dateInView(currentValue)) {\n                    that._selectDates = [];\n\n                    fromDate = that.selectable._lastActive ? toDateObject(that.selectable._lastActive.find(\"span\")) : currentValue;\n                    daysDifference = daysBetweenTwoDates(fromDate, new Date(+currentValue));\n\n                    addDaysToArray(that._selectDates, daysDifference, fromDate, that.options.disableDates);\n\n                    that.navigate(currentValue);\n                    that._current = currentValue;\n                    that.selectable._lastActive = that.selectable._lastActive || that._cellByDate(that._view.toDateString(currentValue), CELLSELECTORVALID);\n                    that.trigger(CHANGE);\n                    return;\n                }\n                that.selectable.options.filter = that.wrapper.find(\"table\").length > 1 && +currentValue > +that._current ? \"table.k-calendar-table:eq(1) \" + CELLSELECTORVALID : \"table.k-calendar-table:eq(0) \" + CELLSELECTORVALID;\n                that._setCurrent(currentValue);\n                that._current = currentValue;\n\n                that._rangeSelection(that._cellByDate(that._view.toDateString(currentValue), CELLSELECTORVALID), currentValue);\n\n                that.trigger(CHANGE);\n\n                that.selectable.options.filter = \"table.k-calendar-table:eq(0) \" + CELLSELECTORVALID;\n            },\n\n            _keyboardToggleSelection: function(event) {\n                var that = this;\n\n                event.currentTarget = that._cell[0];\n                that.selectable._lastActive = $(that._cell[0]);\n\n                if ($(that._cell[0]).hasClass(SELECTED)) {\n                    that.selectable._unselect($(that._cell[0]));\n                }\n                else {\n                    that.selectable.value($(that._cell[0]));\n                }\n                that.selectable.trigger(CHANGE, { event: event });\n            },\n\n            _nextNavigatable: function(currentValue, value) {\n                var that = this,\n                disabled = true,\n                view = that._view,\n                min = that.options.min,\n                max = that.options.max,\n                isDisabled = that.options.disableDates,\n                navigatableDate = new Date(currentValue.getTime());\n\n                view.setDate(navigatableDate, -value);\n\n                while (disabled) {\n                    view.setDate(currentValue, value);\n\n                    if (!isInRange(currentValue, min, max)) {\n                        currentValue = navigatableDate;\n                        break;\n                    }\n                    disabled = isDisabled(currentValue);\n                }\n                return currentValue;\n            },\n\n            _animate: function(options) {\n                var that = this;\n                var from = options.from;\n                var to = options.to;\n                var active = that._active;\n                var viewWrapper = that.element.children(\".k-calendar-view\");\n\n                if (!from) {\n                    viewWrapper.append(to);\n                    that._bindTable(to);\n                } else if (from.parent().data(\"animating\")) {\n                    from.off(ns);\n                    from.parent().kendoStop(true, true).remove();\n                    from.remove();\n\n                    viewWrapper.append(to);\n                    that._focusView(active);\n                } else if (!from.is(\":visible\") || that.options.animation === false || options.replace) {\n                    to.insertAfter(from);\n                    from.off(ns).remove();\n\n                    that._focusView(active);\n                } else {\n                    that[options.vertical ? \"_vertical\" : \"_horizontal\"](from, to, options.future);\n                }\n            },\n\n            _horizontal: function(from, to, future) {\n                var that = this,\n                    active = that._active,\n                    horizontal = that.options.animation.horizontal,\n                    effects = horizontal.effects,\n                    viewWidth = outerWidth(from),\n                    margin = (outerWidth(from, true) - viewWidth);\n\n                if (effects && effects.indexOf(SLIDE) != -1) {\n                    from.add(to).css({ width: viewWidth });\n\n                    from.wrap(\"<div/>\");\n\n                    that._focusView(active, from);\n\n                    from.parent()\n                    .css({\n                        position: \"relative\",\n                        width: (viewWidth * 2) + (2 * margin),\n                        display: \"flex\",\n                        [future ? \"margin-right\" : \"margin-left\"]: (-viewWidth - margin)\n                    });\n\n                    to[future ? \"insertAfter\" : \"insertBefore\"](from);\n\n                    extend(horizontal, {\n                        effects: SLIDE + \":\" + (future ? \"right\" : LEFT),\n                        complete: function() {\n                            from.off(ns).remove();\n                            that._oldTable = null;\n\n                            to.unwrap();\n\n                            that._focusView(active);\n\n                        }\n                    });\n\n                    from.parent().kendoStop(true, true).kendoAnimate(horizontal);\n                }\n            },\n\n            _vertical: function(from, to) {\n                var that = this,\n                    vertical = that.options.animation.vertical,\n                    effects = vertical.effects,\n                    active = that._active, //active state before from's blur\n                    cell, position;\n\n                if (effects && effects.indexOf(\"zoom\") != -1) {\n                    to.insertBefore(from);\n\n                    from.css({\n                        position: \"absolute\",\n                        width: to.width()\n                    });\n\n                    if (transitionOrigin) {\n                        cell = that._cellByDate(that._view.toDateString(that._current));\n                        position = cell.position();\n                        position = (position.left + parseInt(cell.width() / 2, 10)) + \"px\" + \" \" + (position.top + parseInt(cell.height() / 2, 10) + \"px\");\n                        to.css(transitionOrigin, position);\n                    }\n\n                    from.kendoStop(true, true).kendoAnimate({\n                        effects: \"fadeOut\",\n                        duration: 600,\n                        complete: function() {\n                            from.off(ns).remove();\n                            that._oldTable = null;\n\n                            that._focusView(active);\n                        }\n                    });\n\n                    to.kendoStop(true, true).kendoAnimate(vertical);\n                }\n            },\n\n            _cellByDate: function(value, selector) {\n                return this._table.find(selector ? selector : \"td:not(.\" + OTHERMONTH + \")\")\n                .filter(function() {\n                    return $(this.firstChild).attr(kendo.attr(VALUE)) === value;\n                });\n            },\n\n            _selectCell: function(date) {\n                var that = this,\n                    cell = that._selectedCell,\n                    value = that._view.toDateString(date);\n\n                    if (cell && cell[0]) {\n                        cell[0].removeAttribute(ARIA_SELECTED);\n                        cell.removeClass(SELECTED);\n                    }\n\n                    cell = that._cellByDate(value, CELLSELECTOR);\n\n                    that._selectedCell = cell;\n                    cell.addClass(SELECTED)\n                        .attr(ARIA_SELECTED, true);\n            },\n\n            _setCurrent: function(date) {\n                var that = this,\n                    id = kendo.guid(),\n                    cell = that._cell,\n                    value = that._view.toDateString(date);\n\n                    if (cell && cell[0]) {\n                        cell.removeClass(FOCUSED);\n                        cell[0].removeAttribute(ARIA_LABEL);\n                        cell[0].removeAttribute(ID);\n                    }\n\n                    cell = that._cellByDate(value, that._isMultipleSelection() ? CELLSELECTOR : \"td:not(.\" + OTHERMONTH + \")\");\n\n                    that._cell = cell;\n\n                    cell.attr(ID, id)\n                        .addClass(FOCUSED);\n\n                    if (that._table[0]) {\n                        that._table[0].removeAttribute(\"aria-activedescendant\");\n                        that._table.attr(\"aria-activedescendant\", id);\n                    }\n            },\n\n            _bindTable: function(table) {\n                table\n                .on(FOCUS_WITH_NS, this._addClassProxy)\n                .on(BLUR, this._removeClassProxy);\n            },\n\n            _click: function(link) {\n                var that = this,\n                options = that.options,\n                currentValue = new Date(+that._current),\n                value = toDateObject(link);\n\n                adjustDST(value, 0);\n\n                if (that._view.name == \"month\" && that.options.disableDates(value)) {\n                    value = that._value;\n                }\n\n                that._view.setDate(currentValue, value);\n\n                that.navigateDown(restrictValue(currentValue, options.min, options.max));\n            },\n\n            _focus: function(value) {\n                var that = this,\n                view = that._view;\n\n                if (view.compare(value, that._current) !== 0) {\n                    that.navigate(value);\n                } else {\n                    that._current = value;\n                    that._setCurrent(value);\n                }\n            },\n\n            _focusView: function(active, table) {\n                if (active) {\n                    this.focus(table);\n                }\n            },\n\n            _viewWrapper: function() {\n                var that = this;\n                var element = that.element;\n                var viewWrapper = element.children(\".k-calendar-view\");\n\n                if (!viewWrapper[0]) {\n                    viewWrapper = $(\"<div class='k-calendar-view k-align-items-start k-justify-content-center k-hstack' />\").insertAfter(element.find(HEADERSELECTOR));\n                }\n            },\n\n            _footer: function(template) {\n                var that = this,\n                today = getToday(),\n                element = that.element,\n                footer = element.find(\".k-calendar-footer\");\n\n                if (!template) {\n                    that._toggle(false);\n                    footer.hide();\n                    return;\n                }\n\n                if (!footer[0]) {\n                    footer = $(`<div class=\"k-calendar-footer\">\n                    <button tabindex=\"-1\" class=\"k-calendar-nav-today k-flex k-button k-button-md k-button-flat k-button-flat-primary k-rounded-md\" role=\"link\">\n                        <span class=\"k-button-text\"></span>\n                    </button>\n                </div>`).appendTo(element);\n                }\n\n                that._today = footer.show()\n                    .find(\".k-button-flat-primary\")\n                    .attr(\"title\", kendo.toString(today, \"D\", that.options.culture));\n\n                footer.find(\".k-button-text\")\n                    .html(template(today));\n\n                that._toggle();\n            },\n\n            _header: function() {\n                var that = this,\n                element = that.element,\n                linksSelector = that.options.linksSelector;\n\n                if (!element.find(HEADERSELECTOR)[0]) {\n                    element.html(kendo.template(that.options.header.template)($.extend(true,{}, that.options, {\n                        actionAttr: kendo.attr(\"action\"),\n                        size: kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size),\n                        isRtl: that.isRtl()\n                    })));\n                }\n\n                element.find(linksSelector)\n                    .on(CLICK + \" touchend\" + ns, function() { return false; } );\n\n                that._title = element.find('[' + kendo.attr(\"action\") + '=\"nav-up\"]').on(CLICK + \" touchend\" + ns, function() {\n                    that._active = that.options.focusOnNav !== false;\n                    that.navigateUp();\n                });\n                that[PREVARROW] = element.find('[' + kendo.attr(\"action\") + '=\"prev\"]').on(CLICK + \" touchend\" + ns, function() {\n                    that._active = that.options.focusOnNav !== false;\n                    that.navigateToPast();\n                });\n                that[NEXTARROW] = element.find('[' + kendo.attr(\"action\") + '=\"next\"]').on(CLICK + \" touchend\" + ns, function() {\n                    that._active = that.options.focusOnNav !== false;\n                    that.navigateToFuture();\n                });\n                element.find('[' + kendo.attr(\"action\") + '=\"today\"]').on(CLICK + \" touchend\" + ns, that._todayClick.bind(that));\n\n            },\n\n            _navigate: function(arrow, modifier) {\n                var that = this,\n                index = that._index + 1,\n                currentValue = new DATE(+that._current);\n\n                if (that._isMultipleSelection()) {\n                    var firstDayCurrentMonth = that._table.find(\"td:not(.\" + OTHERMONTH + \"):not(.\" + EMPTYCELL + \")\").has(\".k-link\").first();\n                    currentValue = toDateObject(firstDayCurrentMonth.find(\"span\"));\n                    that._current = new Date(+currentValue);\n                }\n\n                arrow = that[arrow];\n\n                if (!arrow.hasClass(DISABLED)) {\n                    if (index > 3) {\n                        currentValue.setFullYear(currentValue.getFullYear() + 100 * modifier);\n                    } else {\n                        calendar.views[index].setDate(currentValue, modifier);\n                    }\n\n                    that.navigate(currentValue);\n                    that._restoreSelection();\n                }\n            },\n\n            _option: function(option, value) {\n                var that = this,\n                    options = that.options,\n                    currentValue = that._value || that._current,\n                    isBigger;\n\n                if (value === undefined$1) {\n                    return options[option];\n                }\n\n                value = parse(value, options.format, options.culture);\n\n                if (!value) {\n                    return;\n                }\n\n                options[option] = new DATE(+value);\n\n                if (option === MIN) {\n                    isBigger = value > currentValue;\n                } else {\n                    isBigger = currentValue > value;\n                }\n\n                if (isBigger || isEqualMonth(currentValue, value)) {\n                    if (isBigger) {\n                        that._value = null;\n                    }\n                    that._changeView = true;\n                }\n\n                if (!that._changeView) {\n                    that._changeView = !!(options.month.content || options.month.empty);\n                }\n\n                that.navigate(that._value);\n\n                that._toggle();\n            },\n\n            _toggle: function(toggle) {\n                var that = this,\n                    options = that.options,\n                    isTodayDisabled = that.options.disableDates(getToday()),\n                    link = that._today,\n                    todayClass = that._todayClass();\n\n                if (toggle === undefined$1) {\n                    toggle = isInRange(getToday(), options.min, options.max);\n                }\n\n                if (link) {\n                    link.off(CLICK);\n\n                    if (toggle && !isTodayDisabled) {\n                        link.addClass(todayClass)\n                        .removeClass(DISABLED)\n                        .on(CLICK, that._todayClick.bind(that));\n                    } else {\n                        link.removeClass(todayClass)\n                        .addClass(DISABLED)\n                        .on(CLICK, prevent);\n                    }\n                }\n            },\n\n            _todayClass: function() {\n                return TODAY;\n            },\n\n            _todayClick: function(e) {\n                var that = this,\n                depth = views[that.options.depth],\n                disabled = that.options.disableDates,\n                today = getToday();\n\n                e.preventDefault();\n\n                if (disabled(today)) {\n                    return;\n                }\n\n                if (that._view.compare(that._current, today) === 0 && that._index == depth) {\n                    that._changeView = false;\n                }\n\n                if (that._isMultipleSelection()) {\n                    that._selectDates = [today];\n                    that.selectable._lastActive = null;\n                }\n\n                that._value = today;\n                that.navigate(today, depth);\n\n                that.trigger(CHANGE);\n            },\n\n            _templates: function() {\n                var that = this,\n                    options = that.options,\n                    footer = options.footer,\n                    month = options.month,\n                    content = month.content,\n                    weekNumber = month.weekNumber,\n                    empty = month.empty,\n                    footerTemplate = (data) => `${kendo.toString(data,\"D\",options.culture)}`;\n\n                that.month = {\n                    content: (data) => `<td class=\"${data.cssClass}\" role=\"gridcell\"><span tabindex=\"-1\" class=\"k-link ${data.linkClass}\" data-href=\"${data.url}\" ${kendo.attr(VALUE)}=\"${data.dateString}\" title=\"${data.title}\">${executeTemplate(content, data) || data.value}</span></td>`,\n                    empty: (data) => `<td role=\"gridcell\">${executeTemplate(empty, data) || \"&nbsp;\"}</td>`,\n                    weekNumber: (data) => `<td class=\"k-calendar-td k-alt\">${executeTemplate(weekNumber, data) || data.weekNumber}</td>`\n                };\n\n                that.year = {\n                    content: template((data) => `<td class=\"${data.cssClass}\" role=\"gridcell\"><span tabindex=\"-1\" class=\"k-link\" data-href=\"#\" data-${data.ns}value=\"${data.dateString}\" aria-label=\"${data.label}\">${data.value}</span></td>`)\n                };\n\n                if (footer && footer !== true) {\n                    footerTemplate = footer;\n                }\n\n                that.footer = footer !== false ? template(footerTemplate, { useWithBlock: false }) : null;\n            },\n\n            _updateAria: function(ariaTemplate, date) {\n                var that = this;\n                var cell = that._cell;\n                var valueType = that.view().valueType();\n                var current = date || that.current();\n                var text;\n\n                if (valueType === \"month\") {\n                    text = kendo.toString(current, \"MMMM\");\n                } else if (valueType === \"date\") {\n                    text = kendo.toString(current, \"D\");\n                } else {\n                    text = cell.text();\n                }\n\n                cell.attr(\"aria-label\", ariaTemplate({ current: current, valueType: valueType, text: text }));\n\n                return cell.attr(\"id\");\n            }\n        });\n\n        ui.plugin(Calendar);\n\n        var calendar = {\n            firstDayOfMonth: function(date) {\n                return createDate(\n                    date.getFullYear(),\n                    date.getMonth(),\n                    1\n                );\n            },\n\n            firstVisibleDay: function(date, calendarInfo) {\n                calendarInfo = calendarInfo || kendo.culture().calendar;\n\n                var firstDay = calendarInfo.firstDay,\n                firstVisibleDay = new DATE(date.getFullYear(), date.getMonth(), 1, date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n                firstVisibleDay.setFullYear(date.getFullYear());\n\n                while (firstVisibleDay.getDay() != firstDay) {\n                    calendar.setTime(firstVisibleDay, -1 * MS_PER_DAY);\n                }\n\n                return firstVisibleDay;\n            },\n\n            setTime: function(date, time) {\n                var tzOffsetBefore = date.getTimezoneOffset(),\n                resultDATE = new DATE(date.getTime() + time),\n                tzOffsetDiff = resultDATE.getTimezoneOffset() - tzOffsetBefore;\n\n                date.setTime(resultDATE.getTime() + tzOffsetDiff * MS_PER_MINUTE);\n            },\n            views: [{\n                name: MONTH,\n                title: function(date, min, max, culture) {\n                    return getCalendarInfo(culture).months.names[date.getMonth()] + \" \" + date.getFullYear();\n                },\n                content: function(options) {\n                    var that = this,\n                        idx = 0,\n                        min = options.min,\n                        max = options.max,\n                        date = options.date,\n                        dates = options.dates,\n                        format = options.format,\n                        culture = options.culture,\n                        navigateUrl = options.url,\n                        showHeader = options.showHeader,\n                        showOtherMonthDays = options.showOtherMonthDays,\n                        isWeekColumnVisible = options.isWeekColumnVisible,\n                        hasUrl = navigateUrl && dates[0],\n                        currentCalendar = getCalendarInfo(culture),\n                        firstDayIdx = currentCalendar.firstDay,\n                        days = currentCalendar.days,\n                        names = shiftArray(days.names, firstDayIdx),\n                        shortNames = shiftArray(days.namesShort, firstDayIdx),\n                        start = calendar.firstVisibleDay(date, currentCalendar),\n                        firstDayOfMonth = that.first(date),\n                        lastDayOfMonth = that.last(date),\n                        toDateString = that.toDateString,\n                        today = getToday(),\n                        contentClasses = options.contentClasses,\n                        html = '<table tabindex=\"0\" role=\"grid\" class=\"' + contentClasses + '\" cellspacing=\"0\" data-start=\"' + toDateString(start) + '\">';\n\n                    if (showHeader) {\n                        html += '<caption class=\"k-calendar-caption k-month-header\">' + this.title(date, min, max, culture) + '</caption>';\n                    }\n\n                    html += '<thead class=\"k-calendar-thead\"><tr role=\"row\" class=\"k-calendar-tr\">';\n\n                    if (isWeekColumnVisible) {\n                        html += '<th scope=\"col\" class=\"k-calendar-th k-alt\">' + encode(options.messages.weekColumnHeader) + '</th>';\n                    }\n\n                    for (; idx < 7; idx++) {\n                        html += '<th scope=\"col\" class=\"k-calendar-th\" aria-label=\"' + names[idx] + '\">' + shortNames[idx] + '</th>';\n                    }\n\n                    adjustDST(today, 0);\n                    today = +today;\n\n                    return view({\n                        cells: 42,\n                        perRow: 7,\n                        html: html += '</tr></thead><tbody class=\"k-calendar-tbody\"><tr role=\"row\" class=\"k-calendar-tr\">',\n                        start: createDate(start.getFullYear(), start.getMonth(), start.getDate()),\n                        isWeekColumnVisible: isWeekColumnVisible,\n                        weekNumber: options.weekNumber,\n                        min: createDate(min.getFullYear(), min.getMonth(), min.getDate()),\n                        max: createDate(max.getFullYear(), max.getMonth(), max.getDate()),\n                        showOtherMonthDays: showOtherMonthDays,\n                        content: options.content,\n                        lastDayOfMonth: lastDayOfMonth,\n                        empty: options.empty,\n                        setter: that.setDate,\n                        disableDates: options.disableDates,\n                        build: function(date, idx, disableDates) {\n                            var cssClass = [ \"k-calendar-td\" ],\n                                day = date.getDay(),\n                                linkClass = \"\",\n                                url = \"#\";\n\n                            if (date < firstDayOfMonth || date > lastDayOfMonth) {\n                                cssClass.push(OTHERMONTH);\n                            }\n\n                            if (disableDates(date)) {\n                                cssClass.push(DISABLED);\n                            }\n\n                            if (+date === today) {\n                                cssClass.push(\"k-today\");\n                            }\n\n                            if (day === 0 || day === 6) {\n                                cssClass.push(\"k-weekend\");\n                            }\n\n                            if (hasUrl && inArray(+date, dates)) {\n                                url = navigateUrl.replace(\"{0}\", kendo.toString(date, format, culture));\n                                linkClass = \" k-action-link\";\n                            }\n\n                            return {\n                                date: date,\n                                dates: dates,\n                                ns: kendo.ns,\n                                title: kendo.toString(date, \"D\", culture),\n                                value: date.getDate(),\n                                dateString: toDateString(date),\n                                cssClass: cssClass.join(\" \"),\n                                linkClass: linkClass,\n                                url: url\n                            };\n                        },\n                        weekNumberBuild: function(date) {\n                            return {\n                                weekNumber: weekInYear(date, kendo.culture().calendar.firstDay),\n                                currentDate: date\n                            };\n                        }\n                    });\n                },\n                first: function(date) {\n                    return calendar.firstDayOfMonth(date);\n                },\n                last: function(date) {\n                    var last = createDate(date.getFullYear(), date.getMonth() + 1, 0),\n                    first = calendar.firstDayOfMonth(date),\n                    timeOffset = Math.abs(last.getTimezoneOffset() - first.getTimezoneOffset());\n\n                    if (timeOffset) {\n                        last.setHours(first.getHours() + (timeOffset / 60));\n                    }\n\n                    return last;\n                },\n                compare: function(date1, date2) {\n                    var result,\n                    month1 = date1.getMonth(),\n                    year1 = date1.getFullYear(),\n                    month2 = date2.getMonth(),\n                    year2 = date2.getFullYear();\n\n                    if (year1 > year2) {\n                        result = 1;\n                    } else if (year1 < year2) {\n                        result = -1;\n                    } else {\n                        result = month1 == month2 ? 0 : month1 > month2 ? 1 : -1;\n                    }\n\n                    return result;\n                },\n                setDate: function(date, value) {\n                    var hours = date.getHours();\n                    if (value instanceof DATE) {\n                        date.setFullYear(value.getFullYear(), value.getMonth(), value.getDate());\n                    } else {\n                        calendar.setTime(date, value * MS_PER_DAY);\n                    }\n                    adjustDST(date, hours);\n                },\n                toDateString: function(date) {\n                    return date.getFullYear() + \"/\" + date.getMonth() + \"/\" + date.getDate();\n                },\n                valueType: function() {\n                    return \"date\";\n                }\n            },\n            {\n                name: \"year\",\n                title: function(date) {\n                    return date.getFullYear();\n                },\n                content: function(options) {\n                    var calendarMonths = getCalendarInfo(options.culture).months,\n                        namesAbbr = calendarMonths.namesAbbr,\n                        namesFull = calendarMonths.names,\n                        toDateString = this.toDateString,\n                        min = options.min,\n                        max = options.max,\n                        html = \"\";\n\n                    if (options.showHeader) {\n                        html += '<table tabindex=\"0\" role=\"grid\" class=\"k-calendar-table\" cellspacing=\"0\">';\n                            html += '<caption class=\"k-calendar-caption k-meta-header\">';\n                                html += this.title(options.date);\n                            html += '</caption>';\n                            html += '<tbody class=\"k-calendar-tbody\">';\n                                html += '<tr role=\"row\" class=\"k-calendar-tr\">';\n                    }\n\n                    return view({\n                        min: createDate(min.getFullYear(), min.getMonth(), 1),\n                        max: createDate(max.getFullYear(), max.getMonth(), 1),\n                        start: createDate(options.date.getFullYear(), 0, 1),\n                        html: html,\n                        setter: this.setDate,\n                        content: options.content,\n                        build: function(date) {\n                            var cssClass = [ \"k-calendar-td\" ];\n\n                            return {\n                                value: namesAbbr[date.getMonth()],\n                                label: namesFull[date.getMonth()],\n                                ns: kendo.ns,\n                                dateString: toDateString(date),\n                                cssClass: cssClass.join(\" \")\n                            };\n                        }\n                    });\n                },\n                first: function(date) {\n                    return createDate(date.getFullYear(), 0, date.getDate());\n                },\n                last: function(date) {\n                    return createDate(date.getFullYear(), 11, date.getDate());\n                },\n                compare: function(date1, date2) {\n                    return compare(date1, date2);\n                },\n                setDate: function(date, value) {\n                    var month,\n                    hours = date.getHours();\n\n                    if (value instanceof DATE) {\n                        month = value.getMonth();\n\n                        date.setFullYear(value.getFullYear(), month, date.getDate());\n\n                        if (month !== date.getMonth()) {\n                            date.setDate(0);\n                        }\n                    } else {\n                        month = date.getMonth() + value;\n\n                        date.setMonth(month);\n\n                        if (month > 11) {\n                            month -= 12;\n                        }\n\n                        if (month > 0 && date.getMonth() != month) {\n                            date.setDate(0);\n                        }\n                    }\n\n                    adjustDST(date, hours);\n                },\n                toDateString: function(date) {\n                    return date.getFullYear() + \"/\" + date.getMonth() + \"/1\";\n                },\n                valueType: function() {\n                    return \"month\";\n                }\n            },\n            {\n                name: \"decade\",\n                title: function(date, min, max) {\n                    return title(date, min, max, 10);\n                },\n                content: function(options) {\n                    var year = options.date.getFullYear(),\n                    toDateString = this.toDateString,\n                    html = \"\";\n\n                    if (options.showHeader) {\n                        html += '<table tabindex=\"0\" role=\"grid\" class=\"k-calendar-table\" cellspacing=\"0\">';\n                            html += '<caption class=\"k-meta-header\">';\n                                html += this.title(options.date, options.min, options.max);\n                            html += '</caption>';\n                            html += '<tbody class=\"k-calendar-thead\">';\n                                html += '<tr role=\"row\" class=\"k-calendar-tr\">';\n                    }\n\n                    return view({\n                        start: createDate(year - year % 10, 0, 1),\n                        min: createDate(options.min.getFullYear(), 0, 1),\n                        max: createDate(options.max.getFullYear(), 0, 1),\n                        showOtherMonthDays: options.showOtherMonthDays,\n                        html: html,\n                        setter: this.setDate,\n                        build: function(date, idx) {\n                            var cssClass = [ \"k-calendar-td\" ];\n\n                            if (idx === 10 || idx === 11) {\n                                cssClass.push(EMPTYCELL);\n                            }\n\n                            return {\n                                value: date.getFullYear(),\n                                ns: kendo.ns,\n                                dateString: toDateString(date),\n                                cssClass: cssClass.join(\" \")\n                            };\n                        }\n                    });\n                },\n                first: function(date) {\n                    var year = date.getFullYear();\n                    return createDate(year - year % 10, date.getMonth(), date.getDate());\n                },\n                last: function(date) {\n                    var year = date.getFullYear();\n                    return createDate(year - year % 10 + 9, date.getMonth(), date.getDate());\n                },\n                compare: function(date1, date2) {\n                    return compare(date1, date2, 10);\n                },\n                setDate: function(date, value) {\n                    setDate(date, value, 1);\n                },\n                toDateString: function(date) {\n                    return date.getFullYear() + \"/0/1\";\n                },\n                valueType: function() {\n                    return \"year\";\n                }\n            },\n            {\n                name: CENTURY,\n                title: function(date, min, max) {\n                    return title(date, min, max, 100);\n                },\n                content: function(options) {\n                    var year = options.date.getFullYear(),\n                    min = options.min.getFullYear(),\n                    max = options.max.getFullYear(),\n                    toDateString = this.toDateString,\n                    minYear = min,\n                    maxYear = max,\n                    html = \"\";\n\n                    minYear = minYear - minYear % 10;\n                    maxYear = maxYear - maxYear % 10;\n\n                    if (maxYear - minYear < 10) {\n                        maxYear = minYear + 9;\n                    }\n\n                    if (options.showHeader) {\n                        html += '<table tabindex=\"0\" role=\"grid\" class=\"k-calendar-table\" cellspacing=\"0\">';\n                            html += '<caption class=\"k-calendar-caption k-meta-header\">';\n                                html += this.title(options.date, options.min, options.max);\n                            html += '</caption>';\n                            html += '<tbody class=\"k-calendar-tbody\">';\n                                html += '<tr role=\"row\" class=\"k-calendar-tr\">';\n                    }\n\n                    return view({\n                        start: createDate(year - year % 100, 0, 1),\n                        min: createDate(minYear, 0, 1),\n                        max: createDate(maxYear, 0, 1),\n                        showOtherMonthDays: options.showOtherMonthDays,\n                        html: html,\n                        setter: this.setDate,\n                        build: function(date, idx) {\n                            var cssClass = [ \"k-calendar-td\" ];\n                            var start = date.getFullYear(),\n                                end = start + 9;\n\n                            if (idx === 10 || idx === 11) {\n                                cssClass.push(EMPTYCELL);\n                            }\n\n                            if (start < min) {\n                                start = min;\n                            }\n\n                            if (end > max) {\n                                end = max;\n                            }\n\n                            return {\n                                ns: kendo.ns,\n                                value: options.centuryCellsFormat === \"long\" ? `${start} - ${end}` : start,\n                                dateString: toDateString(date),\n                                cssClass: cssClass.join(\" \")\n                            };\n                        }\n                    });\n                },\n                first: function(date) {\n                    var year = date.getFullYear();\n                    return createDate(year - year % 100, date.getMonth(), date.getDate());\n                },\n                last: function(date) {\n                    var year = date.getFullYear();\n                    return createDate(year - year % 100 + 99, date.getMonth(), date.getDate());\n                },\n                compare: function(date1, date2) {\n                    return compare(date1, date2, 100);\n                },\n                setDate: function(date, value) {\n                    setDate(date, value, 10);\n                },\n                toDateString: function(date) {\n                    var year = date.getFullYear();\n                    return (year - year % 10) + \"/0/1\";\n                },\n                valueType: function() {\n                    return \"decade\";\n                }\n            }]\n        };\n\n        function title(date, min, max, modular) {\n            var start = date.getFullYear(),\n                minYear = min.getFullYear(),\n                maxYear = max.getFullYear(),\n                end;\n\n            start = start - start % modular;\n            end = start + (modular - 1);\n\n            if (start < minYear) {\n                start = minYear;\n            }\n            if (end > maxYear) {\n                end = maxYear;\n            }\n\n            return start + \"-\" + end;\n        }\n\n        function view(options) {\n            var idx = 0,\n                data,\n                min = options.min,\n                max = options.max,\n                start = options.start,\n                setter = options.setter,\n                build = options.build,\n                weekNumberBuild = options.weekNumberBuild,\n                length = options.cells || 12,\n                isWeekColumnVisible = options.isWeekColumnVisible,\n                cellsPerRow = options.perRow || 4,\n                showOtherMonthDays = options.showOtherMonthDays,\n                lastDayOfMonth = options.lastDayOfMonth,\n                weekNumber = options.weekNumber || weekNumberTemplate,\n                content = options.content || cellTemplate,\n                empty = options.empty || emptyCellTemplate,\n                otherMonthTemplate = options.otherMonthCellTemplate || otherMonthCellTemplate,\n                html = options.html || '<table tabindex=\"0\" role=\"grid\" class=\"k-calendar-table\" cellspacing=\"0\"><tbody class=\"k-calendar-tbody\"><tr role=\"row\" class=\"k-calendar-tr\">';\n\n            if (isWeekColumnVisible) {\n                html += weekNumber(weekNumberBuild(start));\n            }\n\n\n            for (; idx < length; idx++) {\n                if (idx > 0 && idx % cellsPerRow === 0) {\n                    html += '</tr><tr role=\"row\" class=\"k-calendar-tr\">';\n                    if (isWeekColumnVisible) {\n                        html += showOtherMonthDays || (+start <= +lastDayOfMonth) ? weekNumber(weekNumberBuild(start)) : weekNumber({ weekNumber: \"&nbsp;\" });\n                    }\n                }\n\n                start = createDate(start.getFullYear(), start.getMonth(), start.getDate());\n                adjustDST(start, 0);\n\n                data = build(start, idx, options.disableDates);\n\n                if (data.cssClass.indexOf(OTHERMONTH) !== -1 && !showOtherMonthDays) {\n                    html += otherMonthTemplate(data);\n                } else {\n                    if (isInRange(start, min, max) && data.cssClass.indexOf(EMPTYCELL) === -1) {\n                        html += content(data);\n                    } else {\n                        html += empty(data);\n                    }\n                }\n\n                setter(start, 1);\n            }\n\n            return html + \"</tr></tbody></table>\";\n        }\n\n        function compare(date1, date2, modifier) {\n            var year1 = date1.getFullYear(),\n                start = date2.getFullYear(),\n                end = start,\n                result = 0;\n\n            if (modifier) {\n                start = start - start % modifier;\n                end = start - start % modifier + modifier - 1;\n            }\n\n            if (year1 > end) {\n                result = 1;\n            } else if (year1 < start) {\n                result = -1;\n            }\n\n            return result;\n        }\n\n        function getToday() {\n            var today = new DATE();\n            return new DATE(today.getFullYear(), today.getMonth(), today.getDate());\n        }\n\n        function restrictValue(value, min, max) {\n            var today = getToday();\n\n            if (value) {\n                today = new DATE(+value);\n            }\n\n            if (min > today) {\n                today = new DATE(+min);\n            } else if (max < today) {\n                today = new DATE(+max);\n            }\n            return today;\n        }\n\n        function isInRange(date, min, max) {\n            return +date >= +min && +date <= +max;\n        }\n\n        function shiftArray(array, idx) {\n            return array.slice(idx).concat(array.slice(0, idx));\n        }\n\n        function setDate(date, value, multiplier) {\n            value = value instanceof DATE ? value.getFullYear() : date.getFullYear() + multiplier * value;\n            date.setFullYear(value);\n        }\n\n        function daysBetweenTwoDates(startDate, endDate) {\n            if (+endDate < +startDate) {\n                var temp = +startDate;\n                calendar.views[0].setDate(startDate, endDate);\n                calendar.views[0].setDate(endDate, new Date(temp));\n            }\n            var fromDateUTC = Date.UTC(startDate.getFullYear(), startDate.getMonth(), startDate.getDate());\n            var endDateUTC = Date.UTC(endDate.getFullYear(), endDate.getMonth(), endDate.getDate());\n\n            return Math.ceil((+endDateUTC - +fromDateUTC) / kendo.date.MS_PER_DAY);\n        }\n\n        function addDaysToArray(array, numberOfDays, fromDate, disableDates) {\n            for (var i = 0; i <= numberOfDays; i++) {\n                var nextDay = new Date(fromDate.getTime());\n                nextDay = new Date(nextDay.setDate(nextDay.getDate() + i));\n                if (!disableDates(nextDay)) {\n                    array.push(nextDay);\n                }\n            }\n        }\n\n        function mousetoggle(e) {\n            var disabled = $(this).hasClass(\"k-disabled\");\n\n            if (!disabled) {\n                $(this).toggleClass(HOVER, MOUSEENTER.indexOf(e.type) > -1 || e.type == FOCUS);\n            }\n        }\n\n        function prevent(e) {\n            e.preventDefault();\n        }\n\n        // creates date with full year\n        function createDate(year, month, date) {\n            var dateObject = new DATE(year, month, date);\n            dateObject.setFullYear(year, month, date);\n            return dateObject;\n        }\n\n        function getCalendarInfo(culture) {\n            return getCulture(culture).calendars.standard;\n        }\n\n        function normalize(options) {\n            var start = views[options.start],\n                depth = views[options.depth],\n                culture = getCulture(options.culture);\n\n            options.format = extractFormat(options.format || culture.calendars.standard.patterns.d);\n\n            if (isNaN(start)) {\n                start = 0;\n                options.start = MONTH;\n            }\n\n            if (depth === undefined$1 || depth > start) {\n                options.depth = MONTH;\n            }\n\n            if (options.dates === null) {\n                options.dates = [];\n            }\n        }\n\n        function inArray(date, dates) {\n            for (var i = 0, length = dates.length; i < length; i++) {\n                if (date === +dates[i]) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function isEqualDatePart(value1, value2) {\n            if (value1) {\n                return value1.getFullYear() === value2.getFullYear() &&\n                    value1.getMonth() === value2.getMonth() &&\n                    value1.getDate() === value2.getDate();\n            }\n\n            return false;\n        }\n\n        function isEqualMonth(value1, value2) {\n            if (value1) {\n                return value1.getFullYear() === value2.getFullYear() &&\n                    value1.getMonth() === value2.getMonth();\n            }\n\n            return false;\n        }\n\n\n        function getDisabledExpr(option) {\n            if (kendo.isFunction(option)) {\n                return option;\n            }\n\n            if (Array.isArray(option)) {\n                return createDisabledExpr(option);\n            }\n            return $.noop;\n        }\n\n        function convertDatesArray(dates) {\n            var result = [];\n            for (var i = 0; i < dates.length; i++) {\n                result.push(dates[i].setHours(0, 0, 0, 0));\n            }\n            return result;\n        }\n\n        function createDisabledExpr(dates) {\n            var callback,\n                disabledDates = [],\n                days = [\"su\", \"mo\", \"tu\", \"we\", \"th\", \"fr\", \"sa\"];\n\n            if (dates[0] instanceof DATE) {\n                disabledDates = convertDatesArray(dates);\n                callback = (date) => !!(date && disabledDates.indexOf((new Date(date)).setHours(0, 0, 0, 0)) > -1);\n            } else {\n                disabledDates = dates.map(day => {\n                    day = day.slice(0,2).toLowerCase();\n                    let index = days.indexOf(day);\n                    if (index > -1) {\n                        return index;\n                    }\n                });\n\n                callback = (date) => !!(date && disabledDates.indexOf((new Date(date)).getDay()) > -1);\n            }\n\n            return callback;\n        }\n\n        function isEqualDate(oldValue, newValue) {\n           if (oldValue instanceof Date && newValue instanceof Date) {\n               oldValue = oldValue.getTime();\n               newValue = newValue.getTime();\n           }\n\n           return oldValue === newValue;\n        }\n\n        function toDateObject(link) {\n            var value = $(link).attr(kendo.attr(VALUE)).split(\"/\");\n            //Safari cannot create correctly date from \"1/1/2090\"\n            value = createDate(value[0], value[1], value[2]);\n\n            return value;\n        }\n\n        // Backwards compatibility after CSP changes.\n        function executeTemplate(tmpl, data) {\n            if (tmpl) {\n                if (kendo.isFunction(tmpl)) {\n                    return tmpl(data);\n                }\n                return template(tmpl)(data);\n            }\n            return undefined$1;\n        }\n\n        calendar.isEqualDatePart = isEqualDatePart;\n        calendar.isEqualDate = isEqualDate;\n        calendar.restrictValue = restrictValue;\n        calendar.isInRange = isInRange;\n        calendar.normalize = normalize;\n        calendar.viewsEnum = views;\n        calendar.disabled = getDisabledExpr;\n        calendar.toDateObject = toDateObject;\n        calendar.getToday = getToday;\n        calendar.createDate = createDate;\n\n        kendo.calendar = calendar;\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports[\"default\"] = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}