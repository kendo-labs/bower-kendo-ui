{"version":3,"sources":["raw-js/kendo.calendar.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendocalendar","js","this","$","undefined$1","kendo","window","support","ui","Widget","keys","parse","parseDate","encode","htmlEncode","adjustDST","date","weekInYear","Selectable","extractFormat","_extractFormat","template","getCulture","transitions","transitionOrigin","css","cellTemplate","data","cssClass","ns","dateString","value","emptyCellTemplate","otherMonthCellTemplate","weekNumberTemplate","weekNumber","outerWidth","_outerWidth","CLICK","KEYDOWN_NS","ID","SLIDE","MONTH","CENTURY","CHANGE","NAVIGATE","VALUE","DISABLED","FOCUSED","OTHERMONTH","CELLSELECTOR","CELLSELECTORVALID","SELECTED","BLUR","FOCUS","FOCUS_WITH_NS","MOUSEENTER","touch","MOUSEENTER_WITH_NS","MOUSELEAVE","MS_PER_DAY","PREVARROW","NEXTARROW","ARIA_DISABLED","ARIA_SELECTED","ARIA_LABEL","extend","DATE","Date","views","month","year","decade","century","HEADERSELECTOR","Calendar","init","element","options","that","componentType","fn","call","wrapper","url","unescape","disableDates","getDisabledExpr","_templates","_selectable","_header","_viewWrapper","hasFooter","_footer","footer","_today","find","_toggle","addClass","on","mousetoggle","_move","bind","e","link","currentTarget","firstChild","toDateObject","href","indexOf","preventDefault","_view","name","selectable","_click","_focusView","focusOnNav","attr","_isMultipleSelection","first","closest","last","_lastActive","selectRange","trigger","event","_current","_value","_setCurrent","normalize","format","culture","_selectDates","_index","start","restrictValue","min","max","_addClassProxy","_active","_cell","hasClass","todayString","toDateString","getToday","_cellByDate","_removeClassProxy","removeClass","selectDates","length","notify","dates","depth","size","animation","horizontal","effects","reverse","duration","divisor","vertical","messages","weekColumnHeader","today","navigateTo","parentViews","events","componentTypes","classic","header","actionAttr","isRtl","icon","iconClass","guid","linksSelector","contentClasses","modern","setOptions","_destroySelectable","hide","navigate","destroy","off","_title","_table","current","view","focus","table","_bindTable","_option","navigateToPast","_navigate","navigateToFuture","navigateUp","index","navigateDown","isEqualDate","isNaN","to","currentView","compare","disabled","title","from","old","_oldTable","currentValue","future","viewWrapper","children","calendar","toggleClass","kendoStop","_changeView","html","removeAttr","content","otherMonth","isWeekColumnVisible","_aria","addClassToViewContainer","replace","_animate","_focus","_visualizeSelectedDatesInView","_selectCell","validSelectedDates","datesUnique","map","getTime","filter","position","array","time","grep","_validateValue","setHours","createDate","getFullYear","getMonth","getDate","isInRange","selectedDates","each","clear","cells","_selectElement","selectableOptions","parseOptions","aria","inputSelectors","multiple","change","_onSelect","relatedTarget","_onRelatedTarget","target","is","eventArgs","ctrlKey","metaKey","_toggleSelection","_cellsBySelector","_deselect","_addSelectedCellsToArray","shiftKey","_rangeSelection","currentCell","push","toDateCell","startDate","daysDifference","fromDate","toDate","daysBetweenTwoDates","addDaysToArray","selector","item","currentDateIndex","Number","splice","_dateInView","firstDateInView","_isNavigatable","cellIndex","isDisabled","eq","prevent","method","temp","key","keyCode","RIGHT","LEFT","UP","DOWN","SPACEBAR","HOME","END","getHours","getMinutes","getSeconds","getMilliseconds","setFullYear","_todayClick","ENTER","_keyboardToggleSelection","focusedDate","setDate","_nextNavigatable","_keyboardRangeSelection","PAGEUP","PAGEDOWN","_unselect","navigatableDate","active","parent","remove","append","insertAfter","_horizontal","viewWidth","margin","add","width","wrap","display","complete","unwrap","kendoAnimate","_vertical","cell","insertBefore","left","parseInt","top","height","_selectedCell","removeAttribute","id","appendTo","show","toString","getValidCssClass","arrow","modifier","has","option","isBigger","value1","value2","isEqualMonth","empty","toggle","isTodayDisabled","todayClass","_todayClass","footerTemplate","linkClass","executeTemplate","label","useWithBlock","_updateAria","ariaTemplate","text","valueType","plugin","firstDayOfMonth","firstVisibleDay","calendarInfo","firstDay","getDay","setTime","tzOffsetBefore","getTimezoneOffset","resultDATE","tzOffsetDiff","getCalendarInfo","months","names","idx","navigateUrl","showHeader","hasUrl","currentCalendar","firstDayIdx","days","shiftArray","shortNames","namesShort","lastDayOfMonth","perRow","setter","build","day","i","inArray","join","weekNumberBuild","currentDate","timeOffset","Math","abs","date1","date2","month1","year1","month2","year2","hours","calendarMonths","namesAbbr","namesFull","setMonth","minYear","maxYear","end","modular","cellsPerRow","otherMonthTemplate","result","slice","concat","multiplier","endDate","fromDateUTC","UTC","endDateUTC","ceil","numberOfDays","nextDay","type","dateObject","calendars","standard","patterns","d","isFunction","Array","isArray","callback","disabledDates","convertDatesArray","toLowerCase","createDisabledExpr","noop","oldValue","newValue","split","tmpl","isEqualDatePart","viewsEnum","jQuery"],"mappings":"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","file":"kendo.calendar.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.selectable.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.selectable', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendocalendar = global.kendocalendar || {}, global.kendocalendar.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"calendar\",\n        name: \"Calendar\",\n        category: \"web\",\n        description: \"The Calendar widget renders a graphical calendar that supports navigation and selection.\",\n        depends: [ \"core\", \"selectable\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            support = kendo.support,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            keys = kendo.keys,\n            parse = kendo.parseDate,\n            encode = kendo.htmlEncode,\n            adjustDST = kendo.date.adjustDST,\n            weekInYear = kendo.date.weekInYear,\n            Selectable = kendo.ui.Selectable,\n            extractFormat = kendo._extractFormat,\n            template = kendo.template,\n            getCulture = kendo.getCulture,\n            transitions = kendo.support.transitions,\n            transitionOrigin = transitions ? transitions.css + \"transform-origin\" : \"\",\n            cellTemplate = template((data) => `<td class=\"${data.cssClass}\" role=\"gridcell\"><a tabindex=\"-1\" class=\"k-link\" href=\"#\" data-${data.ns}value=\"${data.dateString}\">${data.value}</a></td>`),\n            emptyCellTemplate = template(() => '<td role=\"gridcell\" class=\"k-calendar-td k-out-of-range\"><a class=\"k-link\"></a></td>'),\n            otherMonthCellTemplate = template(() => '<td role=\"gridcell\" class=\"k-calendar-td k-out-of-range\">&nbsp;</td>'),\n            weekNumberTemplate = template((data) => `<td class=\"k-calendar-td k-alt\">${data.weekNumber}</td>`),\n            outerWidth = kendo._outerWidth,\n            ns = \".kendoCalendar\",\n            CLICK = \"click\" + ns,\n            KEYDOWN_NS = \"keydown\" + ns,\n            ID = \"id\",\n            MIN = \"min\",\n            LEFT = \"left\",\n            SLIDE = \"slideIn\",\n            MONTH = \"month\",\n            CENTURY = \"century\",\n            CHANGE = \"change\",\n            NAVIGATE = \"navigate\",\n            VALUE = \"value\",\n            HOVER = \"k-hover\",\n            DISABLED = \"k-disabled\",\n            FOCUSED = \"k-focus\",\n            OTHERMONTH = \"k-other-month\",\n            OUTOFRANGE = \"k-out-of-range\",\n            TODAY = \"k-calendar-nav-today\",\n            CELLSELECTOR = \"td:has(.k-link)\",\n            CELLSELECTORVALID = \"td:has(.k-link):not(.\" + DISABLED + \"):not(.\" + OUTOFRANGE + \")\",\n            WEEKCOLUMNSELECTOR = \"td:not(:has(.k-link))\",\n            SELECTED = \"k-selected\",\n            BLUR = \"blur\" + ns,\n            FOCUS = \"focus\",\n            FOCUS_WITH_NS = FOCUS + ns,\n            MOUSEENTER = support.touch ? \"touchstart\" : \"mouseenter\",\n            MOUSEENTER_WITH_NS = support.touch ? \"touchstart\" + ns : \"mouseenter\" + ns,\n            MOUSELEAVE = support.touch ? \"touchend\" + ns + \" touchmove\" + ns : \"mouseleave\" + ns,\n            MS_PER_MINUTE = 60000,\n            MS_PER_DAY = 86400000,\n            PREVARROW = \"_prevArrow\",\n            NEXTARROW = \"_nextArrow\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_SELECTED = \"aria-selected\",\n            ARIA_LABEL = \"aria-label\",\n            extend = $.extend,\n            DATE = Date,\n            views = {\n                month: 0,\n                year: 1,\n                decade: 2,\n                century: 3\n            },\n            HEADERSELECTOR = '.k-header, .k-calendar-header',\n            CLASSIC_HEADER_TEMPLATE = ({ actionAttr, size, isRtl }) => `<div class=\"k-header k-hstack\">\n            <a tabindex=\"-1\" href=\"#\" ${actionAttr}=\"prev\" role=\"button\" class=\"k-calendar-nav-prev k-button ${size} k-rounded-md k-button-flat k-button-flat-base k-icon-button\" ${ARIA_LABEL}=\"Previous\">${kendo.ui.icon({ icon: `caret-alt-${isRtl ? \"right\" : \"left\"}`, iconClass: \"k-button-icon\" })}</span></a>\n            <a tabindex=\"-1\" href=\"#\" ${actionAttr}=\"nav-up\" id=\"` + kendo.guid() + `\" role=\"button\" class=\"k-calendar-nav-fast k-button ${size} k-rounded-md k-button-flat k-button-flat-base  k-flex\"></a>\n            <a tabindex=\"-1\" href=\"#\" ${actionAttr}=\"next\" role=\"button\" class=\"k-calendar-nav-next k-button ${size} k-rounded-md k-button-flat k-button-flat-base  k-icon-button\" ${ARIA_LABEL}=\"Next\">${kendo.ui.icon({ icon: `caret-alt-${isRtl ? \"left\" : \"right\"}`, iconClass: \"k-button-icon\" })}</a>\n        </div>`,\n            MODERN_HEADER_TEMPLATE = ({ actionAttr, size, messages, isRtl }) => `<div class=\"k-calendar-header k-hstack\">\n            <button ${actionAttr}=\"nav-up\" id=\"` + kendo.guid() + `\" class=\"k-calendar-title k-button ${size} k-button-flat k-button-flat-base k-rounded-md\">\n                <span class=\"k-button-text\"></span>\n            </button>\n            <span class=\"k-spacer\"></span>\n            <span class=\"k-calendar-nav\">\n                <button tabindex=\"-1\" ${actionAttr}=${isRtl ? \"next\" : \"prev\"} class=\"k-calendar-nav-prev k-button ${size} k-button-flat k-button-flat-base k-rounded-md k-icon-button\">\n                    ${kendo.ui.icon({ icon: `chevron-${isRtl ? \"right\" : \"left\"}`, iconClass: \"k-button-icon\" })}\n                </button>\n                <button tabindex=\"-1\" ${actionAttr}=\"today\" class=\"k-calendar-nav-today k-button ${size} k-button-flat k-button-flat-primary k-rounded-md\">\n                    <span class=\"k-button-text\">${kendo.htmlEncode(messages.today)}</span>\n                </button>\n                <button tabindex=\"-1\" ${actionAttr}=${isRtl ? \"prev\" : \"next\"} class=\"k-calendar-nav-next k-button ${size} k-button-flat k-button-flat-base k-rounded-md k-icon-button\">\n                    ${kendo.ui.icon({ icon: `chevron-${isRtl ? \"left\" : \"right\"}`, iconClass: \"k-button-icon\" })}\n                </button>\n            </span>\n        </div>`;\n\n        var Calendar = Widget.extend({\n            init: function(element, options) {\n                var that = this, value, id;\n                options = options || {};\n                options.componentType = options.componentType || \"classic\";\n                Widget.fn.init.call(that, element, options);\n\n                element = that.wrapper = that.element;\n                options = that.options;\n\n                options.url = kendo.unescape(options.url);\n\n                that.options.disableDates = getDisabledExpr(that.options.disableDates);\n\n                that._templates();\n\n                that._selectable();\n\n                that._header();\n\n                that._viewWrapper();\n\n                if (that.options.hasFooter) {\n                    that._footer(that.footer);\n                } else {\n                    that._today = that.element.find('.k-calendar-nav-today');\n                    that._toggle();\n                }\n\n                id = element\n                    .addClass(\"k-widget k-calendar \" + (options.weekNumber ? \" k-week-number\" : \"\"))\n                    .on(MOUSEENTER_WITH_NS + \" \" + MOUSELEAVE, CELLSELECTOR, mousetoggle)\n                    .on(KEYDOWN_NS, \"table.k-content\", that._move.bind(that))\n                    .on(CLICK + \" touchend\", CELLSELECTOR, function(e) {\n                        var link = e.currentTarget.firstChild,\n                            value = toDateObject(link);\n\n                        if (link.href.indexOf(\"#\") != -1) {\n                            e.preventDefault();\n                        }\n\n                        if (that._view.name == \"month\" && that.options.disableDates(value)) {\n                            return;\n                        }\n                        if (that._view.name != \"month\" || options.selectable == \"single\") {\n                                that._click($(link));\n                        }\n                    })\n                    .on(\"mouseup\" + ns, \"table.k-content, .k-footer\", function() {\n                        that._focusView(that.options.focusOnNav !== false);\n                    })\n                    .attr(ID);\n\n                if (that._isMultipleSelection() && that.options.weekNumber) {\n                    element.on(CLICK, WEEKCOLUMNSELECTOR, function(e) {\n                            var first = $(e.currentTarget).closest(\"tr\").find(CELLSELECTORVALID).first(),\n                                last = that.selectable._lastActive = $(e.currentTarget).closest(\"tr\").find(CELLSELECTORVALID).last();\n                            that.selectable.selectRange(first, last);\n                            that.selectable.trigger(CHANGE, { event: e });\n                            that._current = that._value = toDateObject(last.find(\"a\"));\n                            that._setCurrent(that._current);\n                    });\n                }\n\n                normalize(options);\n                value = parse(options.value, options.format, options.culture);\n                that._selectDates = [];\n\n                that._index = views[options.start];\n\n                that._current = new DATE(+restrictValue(value, options.min, options.max));\n\n                that._addClassProxy = function() {\n                    that._active = true;\n\n                    if (that._cell.hasClass(DISABLED)) {\n                        var todayString = that._view.toDateString(getToday());\n                        that._cell = that._cellByDate(todayString);\n                    }\n\n                    that._cell.addClass(FOCUSED);\n                };\n\n                that._removeClassProxy = function() {\n                    that._active = false;\n                    if (that._cell) {\n                        that._cell.removeClass(FOCUSED);\n                    }\n                };\n\n                that.value(value);\n\n                if (that._isMultipleSelection() && options.selectDates.length > 0) {\n                    that.selectDates(options.selectDates);\n                }\n                kendo.notify(that);\n            },\n\n            options: {\n                name: \"Calendar\",\n                value: null,\n                min: new DATE(1900, 0, 1),\n                max: new DATE(2099, 11, 31),\n                dates: [],\n                disableDates: null,\n                url: \"\",\n                culture: \"\",\n                footer: \"\",\n                format: \"\",\n                month: {},\n                weekNumber: false,\n                selectable: \"single\",\n                selectDates: [],\n                start: MONTH,\n                depth: MONTH,\n                size: \"medium\",\n                animation: {\n                    horizontal: {\n                        effects: SLIDE,\n                        reverse: true,\n                        duration: 500,\n                        divisor: 2\n                    },\n                    vertical: {\n                        effects: \"zoomIn\",\n                        duration: 400\n                    }\n                },\n                messages: {\n                    weekColumnHeader: \"\",\n                    today: \"Today\",\n                    navigateTo: \"Navigate to \",\n                    parentViews: {\n                        month: \"year view\",\n                        year: \"decade view\",\n                        decade: \"century view\"\n                    }\n                },\n                componentType: \"classic\"\n            },\n\n            events: [\n                CHANGE,\n                NAVIGATE\n            ],\n\n            componentTypes: {\n                \"classic\": {\n                    header: {\n                        template: CLASSIC_HEADER_TEMPLATE\n                    },\n                    hasFooter: true,\n                    linksSelector: \".k-button\",\n                    contentClasses: \"k-calendar-table k-content\"\n                },\n                \"modern\": {\n                    header: {\n                        template: MODERN_HEADER_TEMPLATE\n                    },\n                    hasFooter: false,\n                    linksSelector: \".k-button\",\n                    contentClasses: \"k-calendar-table k-content k-calendar-content\"\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this;\n\n                normalize(options);\n\n                options.disableDates = getDisabledExpr(options.disableDates);\n                that._destroySelectable();\n\n                if (options.messages) {\n                    options.messages = $.extend({}, true, that.options.messages, options.messages);\n                }\n\n                Widget.fn.setOptions.call(that, options);\n\n                that._templates();\n\n                that._selectable();\n\n                that._viewWrapper();\n\n                if (that.options.hasFooter) {\n                    that._footer(that.footer);\n                } else {\n                    that.element.find(\".k-footer\").hide();\n                    that._toggle();\n                }\n                that._index = views[that.options.start];\n\n                that.navigate();\n\n                if (options.weekNumber) {\n                    that.element.addClass('k-week-number');\n                }\n            },\n\n            destroy: function() {\n                var that = this,\n                today = that._today;\n\n                that.element.off(ns);\n                that._title.off(ns);\n                that[PREVARROW].off(ns);\n                that[NEXTARROW].off(ns);\n                that._destroySelectable();\n                kendo.destroy(that._table);\n\n                if (today) {\n                    kendo.destroy(today.off(ns));\n                }\n\n                Widget.fn.destroy.call(that);\n            },\n\n            current: function() {\n                return this._current;\n            },\n\n            view: function() {\n                return this._view;\n            },\n\n            focus: function(table) {\n                table = table || this._table;\n                this._bindTable(table);\n                table.trigger(\"focus\");\n            },\n\n            min: function(value) {\n                return this._option(MIN, value);\n            },\n\n            max: function(value) {\n                return this._option(\"max\", value);\n            },\n\n            navigateToPast: function() {\n                this._navigate(PREVARROW, -1);\n            },\n\n            navigateToFuture: function() {\n                this._navigate(NEXTARROW, 1);\n            },\n\n            navigateUp: function() {\n                var that = this,\n                index = that._index;\n\n                if (that._title.hasClass(DISABLED)) {\n                    return;\n                }\n\n                that.navigate(that._current, ++index);\n            },\n\n            navigateDown: function(value) {\n                var that = this,\n                index = that._index,\n                depth = that.options.depth;\n\n                if (!value) {\n                    return;\n                }\n\n                if (index === views[depth]) {\n                    if (!isEqualDate(that._value, that._current) || !isEqualDate(that._value, value)) {\n                        that.value(value);\n                        that.trigger(CHANGE);\n                    }\n                    return;\n                }\n\n                that.navigate(value, --index);\n            },\n\n            navigate: function(value, view) {\n                view = isNaN(view) ? views[view] : view;\n\n                var that = this,\n                    options = that.options,\n                    culture = options.culture,\n                    min = options.min,\n                    max = options.max,\n                    title = that._title,\n                    from = that._table,\n                    old = that._oldTable,\n                    currentValue = that._current,\n                    future = value && +value > +currentValue,\n                    vertical = view !== undefined$1 && view !== that._index,\n                    to, currentView, compare,\n                    disabled,\n                    viewWrapper = that.element.children(\".k-calendar-view\");\n\n                if (!value) {\n                    value = currentValue;\n                }\n\n                that._current = value = new DATE(+restrictValue(value, min, max));\n\n                if (view === undefined$1) {\n                    view = that._index;\n                } else {\n                    that._index = view;\n                }\n\n                that._view = currentView = calendar.views[view];\n                compare = currentView.compare;\n\n                disabled = view === views[CENTURY];\n                title.toggleClass(DISABLED, disabled).attr(ARIA_DISABLED, disabled);\n\n                disabled = compare(value, min) < 1;\n                that[PREVARROW].toggleClass(DISABLED, disabled).attr(ARIA_DISABLED, disabled);\n\n                disabled = compare(value, max) > -1;\n                that[NEXTARROW].toggleClass(DISABLED, disabled).attr(ARIA_DISABLED, disabled);\n\n                if (from && old && old.data(\"animating\")) {\n                    old.kendoStop(true, true);\n                    from.kendoStop(true, true);\n                }\n\n                that._oldTable = from;\n\n                if (!from || that._changeView) {\n                    title.html('<span class=\"k-button-text\">' + currentView.title(value, min, max, culture) + '</span>');\n\n                    if (that.options.messages.parentViews && that._view.name !== CENTURY) {\n                        title.attr(\"title\", encode(that.options.messages.navigateTo + that.options.messages.parentViews[that._view.name]));\n                    } else {\n                        title.removeAttr(\"title\");\n                    }\n\n                    that._table = to = $(currentView.content(extend({\n                        min: min,\n                        max: max,\n                        date: value,\n                        url: options.url,\n                        dates: options.dates,\n                        format: options.format,\n                        otherMonth: true,\n                        culture: culture,\n                        disableDates: options.disableDates,\n                        isWeekColumnVisible: options.weekNumber,\n                        messages: options.messages,\n                        contentClasses: that.options.contentClasses\n                    }, that[currentView.name])));\n\n                    that._aria();\n\n                    addClassToViewContainer(to, currentView.name);\n                    var replace = from && from.data(\"start\") === to.data(\"start\");\n                    that._animate({\n                        from: from,\n                        to: to,\n                        vertical: vertical,\n                        future: future,\n                        replace: replace\n                    });\n\n                    viewWrapper.removeClass(\"k-calendar-monthview k-calendar-yearview k-calendar-decadeview k-calendar-centuryview\");\n                    viewWrapper.addClass(\"k-calendar-\" + currentView.name + \"view\");\n\n                    that.trigger(NAVIGATE);\n\n                    that._focus(value);\n                }\n\n                if (view === views[options.depth] && that._selectDates.length > 0) {\n                    that._visualizeSelectedDatesInView();\n                }\n\n                if (that.options.selectable === \"single\") {\n                    if (view === views[options.depth] && that._value && !that.options.disableDates(that._value)) {\n                        that._selectCell(that._value);\n                    }\n                }\n\n                that._setCurrent(value);\n\n                if (!from && that._cell) {\n                    that._cell.removeClass(FOCUSED);\n                }\n\n                that._changeView = true;\n            },\n\n            selectDates: function(dates) {\n                var that = this,\n                    validSelectedDates,\n                    datesUnique;\n\n                if (dates === undefined$1) {\n                    return that._selectDates;\n                }\n\n                datesUnique = dates\n                    .map(function(date) { return date.getTime(); })\n                    .filter(function(date, position, array) {\n                        return array.indexOf(date) === position;\n                    })\n                    .map(function(time) { return new Date(time); });\n\n                validSelectedDates = $.grep(datesUnique, function(value) {\n                    if (value) {\n                        return +that._validateValue(new Date(value.setHours(0, 0, 0, 0))) === +value;\n                    }\n                });\n                that._selectDates = validSelectedDates.length > 0 ? validSelectedDates : (datesUnique.length === 0 ? datesUnique : that._selectDates);\n                that._visualizeSelectedDatesInView();\n            },\n\n            value: function(value) {\n                var that = this,\n                    old = that._view,\n                    view = that._view;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                value = that._validateValue(value);\n                if (value && that._isMultipleSelection()) {\n                    var date = new Date(+value);\n                    date.setHours(0, 0, 0, 0);\n                    that._selectDates = [date];\n                    that.selectable._lastActive = null;\n                }\n                if (old && value === null && that._cell) {\n                    that._cell.removeClass(SELECTED);\n                } else {\n                    that._changeView = !value || view && view.compare(value, that._current) !== 0;\n                    that.navigate(value);\n                }\n            },\n\n            isRtl: function() {\n                return kendo.support.isRtl(this.wrapper);\n            },\n\n            _aria: function() {\n                var table = this._table;\n\n                table.attr(\"aria-labelledby\", this._title.attr(\"id\"));\n\n                if (this._view.name === \"month\" && this.options.selectable === \"multiple\") {\n                    table.attr(\"aria-multiselectable\", \"true\");\n                }\n            },\n\n            _validateValue: function(value) {\n                var that = this,\n                    options = that.options,\n                    min = options.min,\n                    max = options.max;\n\n                if (value === null) {\n                    that._current = createDate(that._current.getFullYear(), that._current.getMonth(), that._current.getDate());\n                }\n\n                value = parse(value, options.format, options.culture);\n\n                if (value !== null) {\n                    value = new DATE(+value);\n\n                    if (!isInRange(value, min, max)) {\n                        value = null;\n                    }\n                }\n\n                if (value === null || !that.options.disableDates(new Date(+value))) {\n                    that._value = value;\n                } else if (that._value === undefined$1) {\n                    that._value = null;\n                }\n\n                return that._value;\n            },\n\n            _visualizeSelectedDatesInView: function() {\n                var that = this;\n                 var selectedDates = {};\n                $.each(that._selectDates, function(index, value) {\n                    selectedDates[kendo.calendar.views[0].toDateString(value)] = value;\n                });\n                that.selectable.clear();\n                 var cells = that._table\n                    .find(CELLSELECTOR)\n                    .filter(function(index, element) {\n                        return selectedDates[$(element.firstChild).attr(kendo.attr(VALUE))];\n                    });\n                if (cells.length > 0) {\n                    that.selectable._selectElement(cells, true);\n                }\n            },\n\n            _isMultipleSelection: function() {\n                var that = this;\n                return that.options.selectable === \"multiple\";\n            },\n\n            _selectable: function() {\n                var that = this;\n                if (!that._isMultipleSelection()) {\n                    return;\n                }\n\n                var selectable = that.options.selectable,\n                selectableOptions = Selectable.parseOptions(selectable);\n\n                that.selectable = new Selectable(that.wrapper, {\n                    aria: true,\n                    //excludes the anchor element\n                    inputSelectors: \"input,textarea,.k-multiselect-wrap,select,button,.k-button>span,.k-button>img,span.k-icon.k-i-caret-alt-down,span.k-icon.k-i-caret-alt-up,span.k-svg-icon.k-svg-i-caret-alt-down,span.k-svg-icon.k-svg-i-caret-alt-up\",\n                    multiple: selectableOptions.multiple,\n                    filter: \"table.k-month:eq(0) \" + CELLSELECTORVALID,\n                    change: that._onSelect.bind(that),\n                    relatedTarget: that._onRelatedTarget.bind(that)\n                });\n            },\n\n            _onRelatedTarget: function(target) {\n                var that = this;\n\n                if (that.selectable.options.multiple && target.is(CELLSELECTORVALID)) {\n                    that._current = toDateObject(target.find(\"a\"));\n                    that._setCurrent(that._current);\n                }\n\n            },\n\n            _onSelect: function(e) {\n                var that = this,\n                    eventArgs = e,\n                    selectableOptions = Selectable.parseOptions(that.options.selectable);\n\n                if (!selectableOptions.multiple) {\n                    if ($(eventArgs.event.currentTarget).is(\"td\") && !$(eventArgs.event.currentTarget).hasClass(\"k-selected\")) {\n                        $(eventArgs.event.currentTarget).addClass(\"k-selected\");\n                    }\n                    else {\n                        that._click($(eventArgs.event.currentTarget).find(\"a\"));\n                    }\n                    return;\n                }\n\n                if (eventArgs.event.ctrlKey || eventArgs.event.metaKey) {\n                    if ($(eventArgs.event.currentTarget).is(CELLSELECTORVALID)) {\n                        that._toggleSelection($(eventArgs.event.currentTarget));\n                    }\n                    else {\n                        that._cellsBySelector(CELLSELECTORVALID).each(function(index, element) {\n                            var value = toDateObject($(element).find(\"a\"));\n                            that._deselect(value);\n                        });\n                        that._addSelectedCellsToArray();\n                    }\n                }\n                else if (eventArgs.event.shiftKey) {\n                    that._rangeSelection(that._cell);\n                }\n                else if ($(eventArgs.event.currentTarget).is(CELLSELECTOR)) {\n                    that.value(toDateObject($(eventArgs.event.currentTarget).find(\"a\")));\n                }\n                else {\n                    that._selectDates = [];\n                    that._addSelectedCellsToArray();\n                }\n                 that.trigger(CHANGE);\n            },\n\n            _destroySelectable: function() {\n                var that = this;\n\n                if (that.selectable) {\n                    that.selectable.destroy();\n                    that.selectable = null;\n                }\n            },\n\n            //when ctrl key is clicked\n            _toggleSelection: function(currentCell) {\n                var that = this,\n                    date = toDateObject(currentCell.find(\"a\"));\n                    if (currentCell.hasClass(\"k-selected\")) {\n                        that._selectDates.push(date);\n                    }\n                    else {\n                        that._deselect(date);\n                    }\n            },\n\n            //shift selection\n            _rangeSelection: function(toDateCell, startDate) {\n                var that = this,\n                    fromDate = startDate || toDateObject(that.selectable.value().first().find(\"a\")),\n                    toDate = toDateObject(toDateCell.find(\"a\")),\n                    daysDifference;\n\n                if (that.selectable._lastActive || that._value) {\n                    fromDate = that.selectable._lastActive ? toDateObject(that.selectable._lastActive.find(\"a\")) : new Date(+that._value);\n                } else {\n                    that.selectable._lastActive = startDate ? that._cellByDate(that._view.toDateString(startDate), CELLSELECTORVALID) : that.selectable.value().first();\n                }\n\n                that._selectDates = [];\n                daysDifference = daysBetweenTwoDates(fromDate, toDate);\n                addDaysToArray(that._selectDates, daysDifference, fromDate, that.options.disableDates);\n\n                that._visualizeSelectedDatesInView();\n            },\n\n            _cellsBySelector: function(selector) {\n                var that = this;\n                return that._table.find(selector);\n            },\n\n            _addSelectedCellsToArray: function() {\n                var that = this;\n                that.selectable.value().each(function(index, item) {\n                    var date = toDateObject($(item.firstChild));\n                    if (!that.options.disableDates(date)) {\n                        that._selectDates.push(date);\n                    }\n                });\n            },\n\n             _deselect: function(date) {\n                var that = this;\n                 var currentDateIndex = that._selectDates.map(Number).indexOf(+date);\n                if (currentDateIndex != -1) {\n                    that._selectDates.splice(currentDateIndex, 1);\n                }\n            },\n\n            _dateInView: function(date) {\n                var that = this,\n                    firstDateInView = toDateObject(that._cellsBySelector(CELLSELECTORVALID).first().find(\"a\")),\n                    lastDateInView = toDateObject(that._cellsBySelector(CELLSELECTORVALID).last().find(\"a\"));\n\n                return +date <= +lastDateInView && +date >= +firstDateInView;\n            },\n\n            _isNavigatable: function(currentValue, cellIndex) {\n                var that = this;\n                var isDisabled = that.options.disableDates;\n                var cell;\n                var index;\n\n                if (that._view.name == \"month\") {\n                    return !isDisabled(currentValue);\n                } else {\n                    index = that.wrapper.find(\".\" + FOCUSED).index();\n                    cell = that.wrapper.find(\".k-content td\").eq(index + cellIndex);\n                    return cell.is(CELLSELECTORVALID) || !isDisabled(currentValue);\n                }\n            },\n\n            _move: function(e) {\n                var that = this,\n                    options = that.options,\n                    key = e.keyCode,\n                    view = that._view,\n                    index = that._index,\n                    min = that.options.min,\n                    max = that.options.max,\n                    currentValue = new DATE(+that._current),\n                    isRtl = that.isRtl(),\n                    isDisabled = that.options.disableDates,\n                    value, prevent, method, temp;\n\n                if (e.target === that._table[0]) {\n                    that._active = true;\n                }\n\n                if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                    value = 1;\n                    prevent = true;\n                } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                    value = -1;\n                    prevent = true;\n                } else if (key == keys.UP) {\n                    value = index === 0 ? -7 : -4;\n                    prevent = true;\n                } else if (key == keys.DOWN) {\n                    value = index === 0 ? 7 : 4;\n                    prevent = true;\n                } else if (key == keys.SPACEBAR) {\n                    value = 0;\n                    prevent = true;\n                } else if (key == keys.HOME || key == keys.END) {\n                    method = key == keys.HOME ? \"first\" : \"last\";\n                    temp = view[method](currentValue);\n                    currentValue = new DATE(temp.getFullYear(), temp.getMonth(), temp.getDate(), currentValue.getHours(), currentValue.getMinutes(), currentValue.getSeconds(), currentValue.getMilliseconds());\n                    currentValue.setFullYear(temp.getFullYear());\n                    prevent = true;\n                } else if (key === 84) {\n                    that._todayClick(e);\n                    prevent = true;\n                }\n\n                if (e.ctrlKey || e.metaKey) {\n                    if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                        that.navigateToFuture();\n                        prevent = true;\n                    } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                        that.navigateToPast();\n                        prevent = true;\n                    } else if (key == keys.UP) {\n                        that.navigateUp();\n                        prevent = true;\n                    } else if (key == keys.DOWN) {\n                        that._click($(that._cell[0].firstChild));\n                        prevent = true;\n                    }\n                      else if ((key == keys.ENTER || key == keys.SPACEBAR) && that._isMultipleSelection()) {\n                        that._keyboardToggleSelection(e);\n\n                        var focusedDate = toDateObject($(that._cell[0]).find(\"a\"));\n                        that._setCurrent(focusedDate);\n\n                    }\n                } else if (e.shiftKey) {\n                    if (value !== undefined$1 || method) {\n                        if (!method) {\n                            view.setDate(currentValue, value);\n                        }\n\n                        if (!isInRange(currentValue, min, max)) {\n                            currentValue = restrictValue(currentValue, options.min, options.max);\n                        }\n\n                        if (isDisabled(currentValue)) {\n                            currentValue = that._nextNavigatable(currentValue, value);\n                        }\n\n                        min = createDate(min.getFullYear(), min.getMonth(), min.getDate());\n                        if (that._isMultipleSelection()) {\n                            that._keyboardRangeSelection(e, currentValue);\n                        }\n                        else {\n                            that._focus(currentValue);\n                        }\n                    }\n                } else {\n                    if (key == keys.ENTER || key == keys.SPACEBAR) {\n                        if (view.name == \"month\" && that._isMultipleSelection()) {\n                            that.value(toDateObject($(that._cell.find(\"a\"))));\n                            that.selectable._lastActive = $(that._cell[0]);\n                            that.trigger(CHANGE);\n                        }\n                        else {\n                            that._click($(that._cell[0].firstChild));\n                        }\n                        prevent = true;\n                    } else if (key == keys.PAGEUP) {\n                        prevent = true;\n                        that.navigateToPast();\n                    } else if (key == keys.PAGEDOWN) {\n                        prevent = true;\n                        that.navigateToFuture();\n                    }\n\n                    if (value || method) {\n                        if (!method) {\n                            view.setDate(currentValue, value);\n                        }\n\n                        min = createDate(min.getFullYear(), min.getMonth(), min.getDate());\n\n                        if (!isInRange(currentValue, min, max)) {\n                            currentValue = restrictValue(currentValue, options.min, options.max);\n                        }\n\n                        if (!that._isNavigatable(currentValue, value)) {\n                            currentValue = that._nextNavigatable(currentValue, value);\n                        }\n\n                        if (that._isMultipleSelection()) {\n                            if (!that._dateInView(currentValue)) {\n                                that.navigate(currentValue);\n                            }\n                            else {\n                                that._current = currentValue;\n                                that._setCurrent(currentValue);\n                            }\n                        }\n                        else {\n                            that._focus(currentValue);\n                        }\n                    }\n                }\n\n                if (prevent) {\n                    e.preventDefault();\n                }\n\n                return that._current;\n            },\n\n            _keyboardRangeSelection: function(event, currentValue) {\n                var that = this,\n                    fromDate,\n                    daysDifference;\n\n                if (!that._dateInView(currentValue)) {\n                    that._selectDates = [];\n\n                    fromDate = that.selectable._lastActive ? toDateObject(that.selectable._lastActive.find(\"a\")) : currentValue;\n                    daysDifference = daysBetweenTwoDates(fromDate, new Date(+currentValue));\n\n                    addDaysToArray(that._selectDates, daysDifference, fromDate, that.options.disableDates);\n\n                    that.navigate(currentValue);\n                    that._current = currentValue;\n                    that.selectable._lastActive = that.selectable._lastActive || that._cellByDate(that._view.toDateString(currentValue), CELLSELECTORVALID);\n                    that.trigger(CHANGE);\n                    return;\n                }\n                that.selectable.options.filter = that.wrapper.find(\"table\").length > 1 && +currentValue > +that._current ? \"table.k-month:eq(1) \" + CELLSELECTORVALID : \"table.k-month:eq(0) \" + CELLSELECTORVALID;\n                that._setCurrent(currentValue);\n                that._current = currentValue;\n\n                that._rangeSelection(that._cellByDate(that._view.toDateString(currentValue), CELLSELECTORVALID), currentValue);\n\n                that.trigger(CHANGE);\n\n                that.selectable.options.filter = \"table.k-month:eq(0) \" + CELLSELECTORVALID;\n            },\n\n            _keyboardToggleSelection: function(event) {\n                var that = this;\n\n                event.currentTarget = that._cell[0];\n                that.selectable._lastActive = $(that._cell[0]);\n\n                if ($(that._cell[0]).hasClass(SELECTED)) {\n                    that.selectable._unselect($(that._cell[0]));\n                }\n                else {\n                    that.selectable.value($(that._cell[0]));\n                }\n                that.selectable.trigger(CHANGE, { event: event });\n            },\n\n            _nextNavigatable: function(currentValue, value) {\n                var that = this,\n                disabled = true,\n                view = that._view,\n                min = that.options.min,\n                max = that.options.max,\n                isDisabled = that.options.disableDates,\n                navigatableDate = new Date(currentValue.getTime());\n\n                view.setDate(navigatableDate, -value);\n\n                while (disabled) {\n                    view.setDate(currentValue, value);\n\n                    if (!isInRange(currentValue, min, max)) {\n                        currentValue = navigatableDate;\n                        break;\n                    }\n                    disabled = isDisabled(currentValue);\n                }\n                return currentValue;\n            },\n\n            _animate: function(options) {\n                var that = this;\n                var from = options.from;\n                var to = options.to;\n                var active = that._active;\n                var viewWrapper = that.element.children(\".k-calendar-view\");\n\n                if (!from) {\n                    viewWrapper.append(to);\n                    that._bindTable(to);\n                } else if (from.parent().data(\"animating\")) {\n                    from.off(ns);\n                    from.parent().kendoStop(true, true).remove();\n                    from.remove();\n\n                    viewWrapper.append(to);\n                    that._focusView(active);\n                } else if (!from.is(\":visible\") || that.options.animation === false || options.replace) {\n                    to.insertAfter(from);\n                    from.off(ns).remove();\n\n                    that._focusView(active);\n                } else {\n                    that[options.vertical ? \"_vertical\" : \"_horizontal\"](from, to, options.future);\n                }\n            },\n\n            _horizontal: function(from, to, future) {\n                var that = this,\n                    active = that._active,\n                    horizontal = that.options.animation.horizontal,\n                    effects = horizontal.effects,\n                    viewWidth = outerWidth(from),\n                    margin = (outerWidth(from, true) - viewWidth);\n\n                if (effects && effects.indexOf(SLIDE) != -1) {\n                    from.add(to).css({ width: viewWidth });\n\n                    from.wrap(\"<div/>\");\n\n                    that._focusView(active, from);\n\n                    from.parent()\n                    .css({\n                        position: \"relative\",\n                        width: (viewWidth * 2) + (2 * margin),\n                        display: \"flex\",\n                        \"margin-left\": future ? 0 : (-viewWidth - margin)\n                    });\n\n                    to[future ? \"insertAfter\" : \"insertBefore\"](from);\n\n                    extend(horizontal, {\n                        effects: SLIDE + \":\" + (future ? \"right\" : LEFT),\n                        complete: function() {\n                            from.off(ns).remove();\n                            that._oldTable = null;\n\n                            to.unwrap();\n\n                            that._focusView(active);\n\n                        }\n                    });\n\n                    from.parent().kendoStop(true, true).kendoAnimate(horizontal);\n                }\n            },\n\n            _vertical: function(from, to) {\n                var that = this,\n                    vertical = that.options.animation.vertical,\n                    effects = vertical.effects,\n                    active = that._active, //active state before from's blur\n                    cell, position;\n\n                if (effects && effects.indexOf(\"zoom\") != -1) {\n                    to.insertBefore(from);\n\n                    from.css({\n                        position: \"absolute\",\n                        width: to.width()\n                    });\n\n                    if (transitionOrigin) {\n                        cell = that._cellByDate(that._view.toDateString(that._current));\n                        position = cell.position();\n                        position = (position.left + parseInt(cell.width() / 2, 10)) + \"px\" + \" \" + (position.top + parseInt(cell.height() / 2, 10) + \"px\");\n                        to.css(transitionOrigin, position);\n                    }\n\n                    from.kendoStop(true, true).kendoAnimate({\n                        effects: \"fadeOut\",\n                        duration: 600,\n                        complete: function() {\n                            from.off(ns).remove();\n                            that._oldTable = null;\n\n                            that._focusView(active);\n                        }\n                    });\n\n                    to.kendoStop(true, true).kendoAnimate(vertical);\n                }\n            },\n\n            _cellByDate: function(value, selector) {\n                return this._table.find(selector ? selector : \"td:not(.\" + OTHERMONTH + \")\")\n                .filter(function() {\n                    return $(this.firstChild).attr(kendo.attr(VALUE)) === value;\n                });\n            },\n\n            _selectCell: function(date) {\n                var that = this,\n                    cell = that._selectedCell,\n                    value = that._view.toDateString(date);\n\n                    if (cell && cell[0]) {\n                        cell[0].removeAttribute(ARIA_SELECTED);\n                        cell.removeClass(SELECTED);\n                    }\n\n                    cell = that._cellByDate(value, that.options.selectable == \"multiple\" ? CELLSELECTOR : \"td:not(.\" + OTHERMONTH + \")\");\n\n                    that._selectedCell = cell;\n                    cell.addClass(SELECTED)\n                        .attr(ARIA_SELECTED, true);\n            },\n\n            _setCurrent: function(date) {\n                var that = this,\n                    id = kendo.guid(),\n                    cell = that._cell,\n                    value = that._view.toDateString(date);\n\n                    if (cell && cell[0]) {\n                        cell.removeClass(FOCUSED);\n                        cell[0].removeAttribute(ARIA_LABEL);\n                        cell[0].removeAttribute(ID);\n                    }\n\n                    cell = that._cellByDate(value, that.options.selectable == \"multiple\" ? CELLSELECTOR : \"td:not(.\" + OTHERMONTH + \")\");\n\n                    that._cell = cell;\n\n                    cell.attr(ID, id)\n                        .addClass(FOCUSED);\n\n                    if (that._table[0]) {\n                        that._table[0].removeAttribute(\"aria-activedescendant\");\n                        that._table.attr(\"aria-activedescendant\", id);\n                    }\n            },\n\n            _bindTable: function(table) {\n                table\n                .on(FOCUS_WITH_NS, this._addClassProxy)\n                .on(BLUR, this._removeClassProxy);\n            },\n\n            _click: function(link) {\n                var that = this,\n                options = that.options,\n                currentValue = new Date(+that._current),\n                value = toDateObject(link);\n\n                adjustDST(value, 0);\n\n                if (that._view.name == \"month\" && that.options.disableDates(value)) {\n                    value = that._value;\n                }\n\n                that._view.setDate(currentValue, value);\n\n                that.navigateDown(restrictValue(currentValue, options.min, options.max));\n            },\n\n            _focus: function(value) {\n                var that = this,\n                view = that._view;\n\n                if (view.compare(value, that._current) !== 0) {\n                    that.navigate(value);\n                } else {\n                    that._current = value;\n                    that._setCurrent(value);\n                }\n            },\n\n            _focusView: function(active, table) {\n                if (active) {\n                    this.focus(table);\n                }\n            },\n\n            _viewWrapper: function() {\n                var that = this;\n                var element = that.element;\n                var viewWrapper = element.children(\".k-calendar-view\");\n\n                if (!viewWrapper[0]) {\n                    viewWrapper = $(\"<div class='k-calendar-view' />\").insertAfter(element.find(HEADERSELECTOR));\n                }\n            },\n\n            _footer: function(template) {\n                var that = this,\n                today = getToday(),\n                element = that.element,\n                footer = element.find(\".k-footer\");\n\n                if (!template) {\n                    that._toggle(false);\n                    footer.hide();\n                    return;\n                }\n\n                if (!footer[0]) {\n                    footer = $(`<div class=\"k-footer\">\n                    <button tabindex=\"-1\" class=\"k-calendar-nav-today k-flex k-button k-button-md k-button-flat k-button-flat-primary k-rounded-md\">\n                        <span class=\"k-button-text\"></span>\n                    </button>\n                </div>`).appendTo(element);\n                }\n\n                that._today = footer.show()\n                    .find(\".k-button-flat-primary\")\n                    .attr(\"title\", kendo.toString(today, \"D\", that.options.culture));\n\n                footer.find(\".k-button-text\")\n                    .html(template(today));\n\n                that._toggle();\n            },\n\n            _header: function() {\n                var that = this,\n                element = that.element,\n                linksSelector = that.options.linksSelector;\n\n                if (!element.find(HEADERSELECTOR)[0]) {\n                    element.html(kendo.template(that.options.header.template)($.extend(true,{}, that.options, {\n                        actionAttr: kendo.attr(\"action\"),\n                        size: kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size),\n                        isRtl: that.isRtl()\n                    })));\n                }\n\n                element.find(linksSelector)\n                    .on(CLICK + \" touchend\" + ns, function() { return false; } );\n\n                that._title = element.find('[' + kendo.attr(\"action\") + '=\"nav-up\"]').on(CLICK + \" touchend\" + ns, function() {\n                    that._active = that.options.focusOnNav !== false;\n                    that.navigateUp();\n                });\n                that[PREVARROW] = element.find('[' + kendo.attr(\"action\") + '=\"prev\"]').on(CLICK + \" touchend\" + ns, function() {\n                    that._active = that.options.focusOnNav !== false;\n                    that.navigateToPast();\n                });\n                that[NEXTARROW] = element.find('[' + kendo.attr(\"action\") + '=\"next\"]').on(CLICK + \" touchend\" + ns, function() {\n                    that._active = that.options.focusOnNav !== false;\n                    that.navigateToFuture();\n                });\n                element.find('[' + kendo.attr(\"action\") + '=\"today\"]').on(CLICK + \" touchend\" + ns, that._todayClick.bind(that));\n\n            },\n\n            _navigate: function(arrow, modifier) {\n                var that = this,\n                index = that._index + 1,\n                currentValue = new DATE(+that._current);\n\n                if (that._isMultipleSelection()) {\n                    var firstDayCurrentMonth = that._table.find(\"td:not(.k-other-month):not(.k-out-of-range)\").has(\".k-link\").first();\n                    currentValue = toDateObject(firstDayCurrentMonth.find(\"a\"));\n                    that._current = new Date(+currentValue);\n                }\n\n                arrow = that[arrow];\n\n                if (!arrow.hasClass(DISABLED)) {\n                    if (index > 3) {\n                        currentValue.setFullYear(currentValue.getFullYear() + 100 * modifier);\n                    } else {\n                        calendar.views[index].setDate(currentValue, modifier);\n                    }\n\n                    that.navigate(currentValue);\n                }\n            },\n\n            _option: function(option, value) {\n                var that = this,\n                    options = that.options,\n                    currentValue = that._value || that._current,\n                    isBigger;\n\n                if (value === undefined$1) {\n                    return options[option];\n                }\n\n                value = parse(value, options.format, options.culture);\n\n                if (!value) {\n                    return;\n                }\n\n                options[option] = new DATE(+value);\n\n                if (option === MIN) {\n                    isBigger = value > currentValue;\n                } else {\n                    isBigger = currentValue > value;\n                }\n\n                if (isBigger || isEqualMonth(currentValue, value)) {\n                    if (isBigger) {\n                        that._value = null;\n                    }\n                    that._changeView = true;\n                }\n\n                if (!that._changeView) {\n                    that._changeView = !!(options.month.content || options.month.empty);\n                }\n\n                that.navigate(that._value);\n\n                that._toggle();\n            },\n\n            _toggle: function(toggle) {\n                var that = this,\n                    options = that.options,\n                    isTodayDisabled = that.options.disableDates(getToday()),\n                    link = that._today,\n                    todayClass = that._todayClass();\n\n                if (toggle === undefined$1) {\n                    toggle = isInRange(getToday(), options.min, options.max);\n                }\n\n                if (link) {\n                    link.off(CLICK);\n\n                    if (toggle && !isTodayDisabled) {\n                        link.addClass(todayClass)\n                        .removeClass(DISABLED)\n                        .on(CLICK, that._todayClick.bind(that));\n                    } else {\n                        link.removeClass(todayClass)\n                        .addClass(DISABLED)\n                        .on(CLICK, prevent);\n                    }\n                }\n            },\n\n            _todayClass: function() {\n                return TODAY;\n            },\n\n            _todayClick: function(e) {\n                var that = this,\n                depth = views[that.options.depth],\n                disabled = that.options.disableDates,\n                today = getToday();\n\n                e.preventDefault();\n\n                if (disabled(today)) {\n                    return;\n                }\n\n                if (that._view.compare(that._current, today) === 0 && that._index == depth) {\n                    that._changeView = false;\n                }\n\n                if (that._isMultipleSelection()) {\n                    that._selectDates = [today];\n                    that.selectable._lastActive = null;\n                }\n\n                that._value = today;\n                that.navigate(today, depth);\n\n                that.trigger(CHANGE);\n            },\n\n            _templates: function() {\n                var that = this,\n                    options = that.options,\n                    footer = options.footer,\n                    month = options.month,\n                    content = month.content,\n                    weekNumber = month.weekNumber,\n                    empty = month.empty,\n                    footerTemplate = (data) => `${kendo.toString(data,\"D\",options.culture)}`;\n\n                that.month = {\n                    content: (data) => `<td class=\"${data.cssClass}\" role=\"gridcell\"><a tabindex=\"-1\" class=\"k-link ${data.linkClass}\" href=\"${data.url}\" ${kendo.attr(VALUE)}=\"${data.dateString}\" title=\"${data.title}\">${executeTemplate(content, data) || data.value}</a></td>`,\n                    empty: (data) => `<td role=\"gridcell\">${executeTemplate(empty, data) || \"&nbsp;\"}</td>`,\n                    weekNumber: (data) => `<td class=\"k-alt\">${executeTemplate(weekNumber, data) || data.weekNumber}</td>`\n                };\n\n                that.year = {\n                    content: template((data) => `<td class=\"${data.cssClass}\" role=\"gridcell\"><a tabindex=\"-1\" class=\"k-link\" href=\"#\" data-${data.ns}value=\"${data.dateString}\" aria-label=\"${data.label}\">${data.value}</a></td>`)\n                };\n\n                if (footer && footer !== true) {\n                    footerTemplate = footer;\n                }\n\n                that.footer = footer !== false ? template(footerTemplate, { useWithBlock: false }) : null;\n            },\n\n            _updateAria: function(ariaTemplate, date) {\n                var that = this;\n                var cell = that._cell;\n                var valueType = that.view().valueType();\n                var current = date || that.current();\n                var text;\n\n                if (valueType === \"month\") {\n                    text = kendo.toString(current, \"MMMM\");\n                } else if (valueType === \"date\") {\n                    text = kendo.toString(current, \"D\");\n                } else {\n                    text = cell.text();\n                }\n\n                cell.attr(\"aria-label\", ariaTemplate({ current: current, valueType: valueType, text: text }));\n\n                return cell.attr(\"id\");\n            }\n        });\n\n        ui.plugin(Calendar);\n\n        var calendar = {\n            firstDayOfMonth: function(date) {\n                return createDate(\n                    date.getFullYear(),\n                    date.getMonth(),\n                    1\n                );\n            },\n\n            firstVisibleDay: function(date, calendarInfo) {\n                calendarInfo = calendarInfo || kendo.culture().calendar;\n\n                var firstDay = calendarInfo.firstDay,\n                firstVisibleDay = new DATE(date.getFullYear(), date.getMonth(), 1, date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n                firstVisibleDay.setFullYear(date.getFullYear());\n\n                while (firstVisibleDay.getDay() != firstDay) {\n                    calendar.setTime(firstVisibleDay, -1 * MS_PER_DAY);\n                }\n\n                return firstVisibleDay;\n            },\n\n            setTime: function(date, time) {\n                var tzOffsetBefore = date.getTimezoneOffset(),\n                resultDATE = new DATE(date.getTime() + time),\n                tzOffsetDiff = resultDATE.getTimezoneOffset() - tzOffsetBefore;\n\n                date.setTime(resultDATE.getTime() + tzOffsetDiff * MS_PER_MINUTE);\n            },\n            views: [{\n                name: MONTH,\n                title: function(date, min, max, culture) {\n                    return getCalendarInfo(culture).months.names[date.getMonth()] + \" \" + date.getFullYear();\n                },\n                content: function(options) {\n                    var that = this,\n                        idx = 0,\n                        min = options.min,\n                        max = options.max,\n                        date = options.date,\n                        dates = options.dates,\n                        format = options.format,\n                        culture = options.culture,\n                        navigateUrl = options.url,\n                        showHeader = options.showHeader,\n                        otherMonth = options.otherMonth,\n                        isWeekColumnVisible = options.isWeekColumnVisible,\n                        hasUrl = navigateUrl && dates[0],\n                        currentCalendar = getCalendarInfo(culture),\n                        firstDayIdx = currentCalendar.firstDay,\n                        days = currentCalendar.days,\n                        names = shiftArray(days.names, firstDayIdx),\n                        shortNames = shiftArray(days.namesShort, firstDayIdx),\n                        start = calendar.firstVisibleDay(date, currentCalendar),\n                        firstDayOfMonth = that.first(date),\n                        lastDayOfMonth = that.last(date),\n                        toDateString = that.toDateString,\n                        today = getToday(),\n                        contentClasses = options.contentClasses,\n                        html = '<table tabindex=\"0\" role=\"grid\" class=\"' + contentClasses + '\" cellspacing=\"0\" data-start=\"' + toDateString(start) + '\">';\n\n                    if (showHeader) {\n                        html += '<caption class=\"k-calendar-caption k-month-header\">' + this.title(date, min, max, culture) + '</caption>';\n                    }\n\n                    html += '<thead class=\"k-calendar-thead\"><tr role=\"row\" class=\"k-calendar-tr\">';\n\n                    if (isWeekColumnVisible) {\n                        html += '<th scope=\"col\" class=\"k-calendar-th k-alt\">' + encode(options.messages.weekColumnHeader) + '</th>';\n                    }\n\n                    for (; idx < 7; idx++) {\n                        html += '<th scope=\"col\" class=\"k-calendar-th\" aria-label=\"' + names[idx] + '\">' + shortNames[idx] + '</th>';\n                    }\n\n                    adjustDST(today, 0);\n                    today = +today;\n\n                    return view({\n                        cells: 42,\n                        perRow: 7,\n                        html: html += '</tr></thead><tbody class=\"k-calendar-tbody\"><tr role=\"row\" class=\"k-calendar-tr\">',\n                        start: createDate(start.getFullYear(), start.getMonth(), start.getDate()),\n                        isWeekColumnVisible: isWeekColumnVisible,\n                        weekNumber: options.weekNumber,\n                        min: createDate(min.getFullYear(), min.getMonth(), min.getDate()),\n                        max: createDate(max.getFullYear(), max.getMonth(), max.getDate()),\n                        otherMonth: otherMonth,\n                        content: options.content,\n                        lastDayOfMonth: lastDayOfMonth,\n                        empty: options.empty,\n                        setter: that.setDate,\n                        disableDates: options.disableDates,\n                        build: function(date, idx, disableDates) {\n                            var cssClass = [ \"k-calendar-td\" ],\n                                day = date.getDay(),\n                                linkClass = \"\",\n                                url = \"#\";\n\n                            if (date < firstDayOfMonth || date > lastDayOfMonth) {\n                                cssClass.push(OTHERMONTH);\n                            }\n\n                            if (disableDates(date)) {\n                                cssClass.push(DISABLED);\n                            }\n\n                            if (+date === today) {\n                                cssClass.push(\"k-today\");\n                            }\n\n                            if (day === 0 || day === 6) {\n                                cssClass.push(\"k-weekend\");\n                            }\n\n                            if (hasUrl && inArray(+date, dates)) {\n                                url = navigateUrl.replace(\"{0}\", kendo.toString(date, format, culture));\n                                linkClass = \" k-action-link\";\n                            }\n\n                            return {\n                                date: date,\n                                dates: dates,\n                                ns: kendo.ns,\n                                title: kendo.toString(date, \"D\", culture),\n                                value: date.getDate(),\n                                dateString: toDateString(date),\n                                cssClass: cssClass.join(\" \"),\n                                linkClass: linkClass,\n                                url: url\n                            };\n                        },\n                        weekNumberBuild: function(date) {\n                            return {\n                                weekNumber: weekInYear(date, kendo.culture().calendar.firstDay),\n                                currentDate: date\n                            };\n                        }\n                    });\n                },\n                first: function(date) {\n                    return calendar.firstDayOfMonth(date);\n                },\n                last: function(date) {\n                    var last = createDate(date.getFullYear(), date.getMonth() + 1, 0),\n                    first = calendar.firstDayOfMonth(date),\n                    timeOffset = Math.abs(last.getTimezoneOffset() - first.getTimezoneOffset());\n\n                    if (timeOffset) {\n                        last.setHours(first.getHours() + (timeOffset / 60));\n                    }\n\n                    return last;\n                },\n                compare: function(date1, date2) {\n                    var result,\n                    month1 = date1.getMonth(),\n                    year1 = date1.getFullYear(),\n                    month2 = date2.getMonth(),\n                    year2 = date2.getFullYear();\n\n                    if (year1 > year2) {\n                        result = 1;\n                    } else if (year1 < year2) {\n                        result = -1;\n                    } else {\n                        result = month1 == month2 ? 0 : month1 > month2 ? 1 : -1;\n                    }\n\n                    return result;\n                },\n                setDate: function(date, value) {\n                    var hours = date.getHours();\n                    if (value instanceof DATE) {\n                        date.setFullYear(value.getFullYear(), value.getMonth(), value.getDate());\n                    } else {\n                        calendar.setTime(date, value * MS_PER_DAY);\n                    }\n                    adjustDST(date, hours);\n                },\n                toDateString: function(date) {\n                    return date.getFullYear() + \"/\" + date.getMonth() + \"/\" + date.getDate();\n                },\n                valueType: function() {\n                    return \"date\";\n                }\n            },\n            {\n                name: \"year\",\n                title: function(date) {\n                    return date.getFullYear();\n                },\n                content: function(options) {\n                    var calendarMonths = getCalendarInfo(options.culture).months,\n                        namesAbbr = calendarMonths.namesAbbr,\n                        namesFull = calendarMonths.names,\n                        toDateString = this.toDateString,\n                        min = options.min,\n                        max = options.max,\n                        html = \"\";\n\n                    if (options.showHeader) {\n                        html += '<table tabindex=\"0\" role=\"grid\" class=\"k-calendar-table k-content k-meta-view\" cellspacing=\"0\">';\n                            html += '<caption class=\"k-calendar-caption k-meta-header\">';\n                                html += this.title(options.date);\n                            html += '</caption>';\n                            html += '<tbody class=\"k-calendar-tbody\">';\n                                html += '<tr role=\"row\" class=\"k-calendar-tr\">';\n                    }\n\n                    return view({\n                        min: createDate(min.getFullYear(), min.getMonth(), 1),\n                        max: createDate(max.getFullYear(), max.getMonth(), 1),\n                        start: createDate(options.date.getFullYear(), 0, 1),\n                        html: html,\n                        setter: this.setDate,\n                        content: options.content,\n                        build: function(date) {\n                            var cssClass = [ \"k-calendar-td\" ];\n\n                            return {\n                                value: namesAbbr[date.getMonth()],\n                                label: namesFull[date.getMonth()],\n                                ns: kendo.ns,\n                                dateString: toDateString(date),\n                                cssClass: cssClass.join(\" \")\n                            };\n                        }\n                    });\n                },\n                first: function(date) {\n                    return createDate(date.getFullYear(), 0, date.getDate());\n                },\n                last: function(date) {\n                    return createDate(date.getFullYear(), 11, date.getDate());\n                },\n                compare: function(date1, date2) {\n                    return compare(date1, date2);\n                },\n                setDate: function(date, value) {\n                    var month,\n                    hours = date.getHours();\n\n                    if (value instanceof DATE) {\n                        month = value.getMonth();\n\n                        date.setFullYear(value.getFullYear(), month, date.getDate());\n\n                        if (month !== date.getMonth()) {\n                            date.setDate(0);\n                        }\n                    } else {\n                        month = date.getMonth() + value;\n\n                        date.setMonth(month);\n\n                        if (month > 11) {\n                            month -= 12;\n                        }\n\n                        if (month > 0 && date.getMonth() != month) {\n                            date.setDate(0);\n                        }\n                    }\n\n                    adjustDST(date, hours);\n                },\n                toDateString: function(date) {\n                    return date.getFullYear() + \"/\" + date.getMonth() + \"/1\";\n                },\n                valueType: function() {\n                    return \"month\";\n                }\n            },\n            {\n                name: \"decade\",\n                title: function(date, min, max) {\n                    return title(date, min, max, 10);\n                },\n                content: function(options) {\n                    var year = options.date.getFullYear(),\n                    toDateString = this.toDateString,\n                    html = \"\";\n\n                    if (options.showHeader) {\n                        html += '<table tabindex=\"0\" role=\"grid\" class=\"k-calendar-table k-content k-meta-view\" cellspacing=\"0\">';\n                            html += '<caption class=\"k-meta-header\">';\n                                html += this.title(options.date, options.min, options.max);\n                            html += '</caption>';\n                            html += '<tbody class=\"k-calendar-thead\">';\n                                html += '<tr role=\"row\" class=\"k-calendar-tr\">';\n                    }\n\n                    return view({\n                        start: createDate(year - year % 10 - 1, 0, 1),\n                        min: createDate(options.min.getFullYear(), 0, 1),\n                        max: createDate(options.max.getFullYear(), 0, 1),\n                        otherMonth: options.otherMonth,\n                        html: html,\n                        setter: this.setDate,\n                        build: function(date, idx) {\n                            var cssClass = [ \"k-calendar-td\" ];\n\n                            if (idx === 0 || idx === 11) {\n                                cssClass.push(OTHERMONTH);\n                            }\n\n                            return {\n                                value: date.getFullYear(),\n                                ns: kendo.ns,\n                                dateString: toDateString(date),\n                                cssClass: cssClass.join(\" \")\n                            };\n                        }\n                    });\n                },\n                first: function(date) {\n                    var year = date.getFullYear();\n                    return createDate(year - year % 10, date.getMonth(), date.getDate());\n                },\n                last: function(date) {\n                    var year = date.getFullYear();\n                    return createDate(year - year % 10 + 9, date.getMonth(), date.getDate());\n                },\n                compare: function(date1, date2) {\n                    return compare(date1, date2, 10);\n                },\n                setDate: function(date, value) {\n                    setDate(date, value, 1);\n                },\n                toDateString: function(date) {\n                    return date.getFullYear() + \"/0/1\";\n                },\n                valueType: function() {\n                    return \"year\";\n                }\n            },\n            {\n                name: CENTURY,\n                title: function(date, min, max) {\n                    return title(date, min, max, 100);\n                },\n                content: function(options) {\n                    var year = options.date.getFullYear(),\n                    min = options.min.getFullYear(),\n                    max = options.max.getFullYear(),\n                    toDateString = this.toDateString,\n                    minYear = min,\n                    maxYear = max,\n                    html = \"\";\n\n                    minYear = minYear - minYear % 10;\n                    maxYear = maxYear - maxYear % 10;\n\n                    if (maxYear - minYear < 10) {\n                        maxYear = minYear + 9;\n                    }\n\n                    if (options.showHeader) {\n                        html += '<table tabindex=\"0\" role=\"grid\" class=\"k-calendar-table k-content k-meta-view\" cellspacing=\"0\">';\n                            html += '<caption class=\"k-calendar-caption k-meta-header\">';\n                                html += this.title(options.date, options.min, options.max);\n                            html += '</caption>';\n                            html += '<tbody class=\"k-calendar-tbody\">';\n                                html += '<tr role=\"row\" class=\"k-calendar-tr\">';\n                    }\n\n                    return view({\n                        start: createDate(year - year % 100 - 10, 0, 1),\n                        min: createDate(minYear, 0, 1),\n                        max: createDate(maxYear, 0, 1),\n                        otherMonth: options.otherMonth,\n                        html: html,\n                        setter: this.setDate,\n                        build: function(date, idx) {\n                            var cssClass = [ \"k-calendar-td\" ];\n                            var start = date.getFullYear(),\n                                end = start + 9;\n\n                            if (idx === 0 || idx === 11) {\n                                cssClass.push(OTHERMONTH);\n                            }\n\n                            if (start < min) {\n                                start = min;\n                            }\n\n                            if (end > max) {\n                                end = max;\n                            }\n\n                            return {\n                                ns: kendo.ns,\n                                value: start + \" - \" + end,\n                                dateString: toDateString(date),\n                                cssClass: cssClass.join(\" \")\n                            };\n                        }\n                    });\n                },\n                first: function(date) {\n                    var year = date.getFullYear();\n                    return createDate(year - year % 100, date.getMonth(), date.getDate());\n                },\n                last: function(date) {\n                    var year = date.getFullYear();\n                    return createDate(year - year % 100 + 99, date.getMonth(), date.getDate());\n                },\n                compare: function(date1, date2) {\n                    return compare(date1, date2, 100);\n                },\n                setDate: function(date, value) {\n                    setDate(date, value, 10);\n                },\n                toDateString: function(date) {\n                    var year = date.getFullYear();\n                    return (year - year % 10) + \"/0/1\";\n                },\n                valueType: function() {\n                    return \"decade\";\n                }\n            }]\n        };\n\n        function title(date, min, max, modular) {\n            var start = date.getFullYear(),\n                minYear = min.getFullYear(),\n                maxYear = max.getFullYear(),\n                end;\n\n            start = start - start % modular;\n            end = start + (modular - 1);\n\n            if (start < minYear) {\n                start = minYear;\n            }\n            if (end > maxYear) {\n                end = maxYear;\n            }\n\n            return start + \"-\" + end;\n        }\n\n        function view(options) {\n            var idx = 0,\n                data,\n                min = options.min,\n                max = options.max,\n                start = options.start,\n                setter = options.setter,\n                build = options.build,\n                weekNumberBuild = options.weekNumberBuild,\n                length = options.cells || 12,\n                isWeekColumnVisible = options.isWeekColumnVisible,\n                cellsPerRow = options.perRow || 4,\n                otherMonth = options.otherMonth,\n                lastDayOfMonth = options.lastDayOfMonth,\n                weekNumber = options.weekNumber || weekNumberTemplate,\n                content = options.content || cellTemplate,\n                empty = options.empty || emptyCellTemplate,\n                otherMonthTemplate = options.otherMonthCellTemplate || otherMonthCellTemplate,\n                html = options.html || '<table tabindex=\"0\" role=\"grid\" class=\"k-calendar-table k-content k-meta-view\" cellspacing=\"0\"><tbody class=\"k-calendar-tbody\"><tr role=\"row\" class=\"k-calendar-tr\">';\n\n            if (isWeekColumnVisible) {\n                html += weekNumber(weekNumberBuild(start));\n            }\n\n\n            for (; idx < length; idx++) {\n                if (idx > 0 && idx % cellsPerRow === 0) {\n                    html += '</tr><tr role=\"row\" class=\"k-calendar-tr\">';\n                    if (isWeekColumnVisible) {\n                        html += otherMonth || (+start <= +lastDayOfMonth) ? weekNumber(weekNumberBuild(start)) : weekNumber({ weekNumber: \"&nbsp;\" });\n                    }\n                }\n\n                start = createDate(start.getFullYear(), start.getMonth(), start.getDate());\n                adjustDST(start, 0);\n\n                data = build(start, idx, options.disableDates);\n\n                html += (data.cssClass.indexOf(OTHERMONTH) !== -1 && !otherMonth) ? otherMonthTemplate(data) : isInRange(start, min, max) ? content(data) : empty(data);\n\n                setter(start, 1);\n            }\n\n            return html + \"</tr></tbody></table>\";\n        }\n\n        function compare(date1, date2, modifier) {\n            var year1 = date1.getFullYear(),\n                start = date2.getFullYear(),\n                end = start,\n                result = 0;\n\n            if (modifier) {\n                start = start - start % modifier;\n                end = start - start % modifier + modifier - 1;\n            }\n\n            if (year1 > end) {\n                result = 1;\n            } else if (year1 < start) {\n                result = -1;\n            }\n\n            return result;\n        }\n\n        function getToday() {\n            var today = new DATE();\n            return new DATE(today.getFullYear(), today.getMonth(), today.getDate());\n        }\n\n        function restrictValue(value, min, max) {\n            var today = getToday();\n\n            if (value) {\n                today = new DATE(+value);\n            }\n\n            if (min > today) {\n                today = new DATE(+min);\n            } else if (max < today) {\n                today = new DATE(+max);\n            }\n            return today;\n        }\n\n        function isInRange(date, min, max) {\n            return +date >= +min && +date <= +max;\n        }\n\n        function shiftArray(array, idx) {\n            return array.slice(idx).concat(array.slice(0, idx));\n        }\n\n        function setDate(date, value, multiplier) {\n            value = value instanceof DATE ? value.getFullYear() : date.getFullYear() + multiplier * value;\n            date.setFullYear(value);\n        }\n\n        function daysBetweenTwoDates(startDate, endDate) {\n            if (+endDate < +startDate) {\n                var temp = +startDate;\n                calendar.views[0].setDate(startDate, endDate);\n                calendar.views[0].setDate(endDate, new Date(temp));\n            }\n            var fromDateUTC = Date.UTC(startDate.getFullYear(), startDate.getMonth(), startDate.getDate());\n            var endDateUTC = Date.UTC(endDate.getFullYear(), endDate.getMonth(), endDate.getDate());\n\n            return Math.ceil((+endDateUTC - +fromDateUTC) / kendo.date.MS_PER_DAY);\n        }\n\n        function addDaysToArray(array, numberOfDays, fromDate, disableDates) {\n            for (var i = 0; i <= numberOfDays; i++) {\n                var nextDay = new Date(fromDate.getTime());\n                nextDay = new Date(nextDay.setDate(nextDay.getDate() + i));\n                if (!disableDates(nextDay)) {\n                    array.push(nextDay);\n                }\n            }\n        }\n\n        function mousetoggle(e) {\n            var disabled = $(this).hasClass(\"k-disabled\");\n\n            if (!disabled) {\n                $(this).toggleClass(HOVER, MOUSEENTER.indexOf(e.type) > -1 || e.type == FOCUS);\n            }\n        }\n\n        function prevent(e) {\n            e.preventDefault();\n        }\n\n        // creates date with full year\n        function createDate(year, month, date) {\n            var dateObject = new DATE(year, month, date);\n            dateObject.setFullYear(year, month, date);\n            return dateObject;\n        }\n\n        function getCalendarInfo(culture) {\n            return getCulture(culture).calendars.standard;\n        }\n\n        function normalize(options) {\n            var start = views[options.start],\n                depth = views[options.depth],\n                culture = getCulture(options.culture);\n\n            options.format = extractFormat(options.format || culture.calendars.standard.patterns.d);\n\n            if (isNaN(start)) {\n                start = 0;\n                options.start = MONTH;\n            }\n\n            if (depth === undefined$1 || depth > start) {\n                options.depth = MONTH;\n            }\n\n            if (options.dates === null) {\n                options.dates = [];\n            }\n        }\n\n        function addClassToViewContainer(element, currentView) {\n            element.addClass(\"k-\" + currentView);\n        }\n\n        function inArray(date, dates) {\n            for (var i = 0, length = dates.length; i < length; i++) {\n                if (date === +dates[i]) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function isEqualDatePart(value1, value2) {\n            if (value1) {\n                return value1.getFullYear() === value2.getFullYear() &&\n                    value1.getMonth() === value2.getMonth() &&\n                    value1.getDate() === value2.getDate();\n            }\n\n            return false;\n        }\n\n        function isEqualMonth(value1, value2) {\n            if (value1) {\n                return value1.getFullYear() === value2.getFullYear() &&\n                    value1.getMonth() === value2.getMonth();\n            }\n\n            return false;\n        }\n\n\n        function getDisabledExpr(option) {\n            if (kendo.isFunction(option)) {\n                return option;\n            }\n\n            if (Array.isArray(option)) {\n                return createDisabledExpr(option);\n            }\n            return $.noop;\n        }\n\n        function convertDatesArray(dates) {\n            var result = [];\n            for (var i = 0; i < dates.length; i++) {\n                result.push(dates[i].setHours(0, 0, 0, 0));\n            }\n            return result;\n        }\n\n        function createDisabledExpr(dates) {\n            var callback,\n                disabledDates = [],\n                days = [\"su\", \"mo\", \"tu\", \"we\", \"th\", \"fr\", \"sa\"];\n\n            if (dates[0] instanceof DATE) {\n                disabledDates = convertDatesArray(dates);\n                callback = (date) => !!(date && disabledDates.indexOf((new Date(date)).setHours(0, 0, 0, 0)) > -1);\n            } else {\n                disabledDates = dates.map(day => {\n                    day = day.slice(0,2).toLowerCase();\n                    let index = days.indexOf(day);\n                    if (index > -1) {\n                        return index;\n                    }\n                });\n\n                callback = (date) => !!(date && disabledDates.indexOf((new Date(date)).getDay()) > -1);\n            }\n\n            return callback;\n        }\n\n        function isEqualDate(oldValue, newValue) {\n           if (oldValue instanceof Date && newValue instanceof Date) {\n               oldValue = oldValue.getTime();\n               newValue = newValue.getTime();\n           }\n\n           return oldValue === newValue;\n        }\n\n        function toDateObject(link) {\n            var value = $(link).attr(kendo.attr(VALUE)).split(\"/\");\n            //Safari cannot create correctly date from \"1/1/2090\"\n            value = createDate(value[0], value[1], value[2]);\n\n            return value;\n        }\n\n        // Backwards compatibility after CSP changes.\n        function executeTemplate(tmpl, data) {\n            if (tmpl) {\n                if (kendo.isFunction(tmpl)) {\n                    return tmpl(data);\n                }\n                return template(tmpl)(data);\n            }\n            return undefined$1;\n        }\n\n        calendar.isEqualDatePart = isEqualDatePart;\n        calendar.isEqualDate = isEqualDate;\n        calendar.restrictValue = restrictValue;\n        calendar.isInRange = isInRange;\n        calendar.addClassToViewContainer = addClassToViewContainer;\n        calendar.normalize = normalize;\n        calendar.viewsEnum = views;\n        calendar.disabled = getDisabledExpr;\n        calendar.toDateObject = toDateObject;\n        calendar.getToday = getToday;\n        calendar.createDate = createDate;\n\n        kendo.calendar = calendar;\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}