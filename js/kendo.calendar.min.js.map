{"version":3,"sources":["raw-js/kendo.calendar.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendocalendar","js","this","$","undefined$1","kendo","window","support","ui","Widget","keys","parse","parseDate","encode","htmlEncode","adjustDST","date","weekInYear","Selectable","RangeSelectable","extractFormat","_extractFormat","template","getCulture","transitions","transitionOrigin","css","cellTemplate","data","cssClass","ns","dateString","value","emptyCellTemplate","otherMonthCellTemplate","weekNumberTemplate","weekNumber","outerWidth","_outerWidth","CLICK","KEYDOWN_NS","ID","SLIDE","MONTH","CENTURY","CHANGE","NAVIGATE","VALUE","DISABLED","FOCUSED","OTHERMONTH","EMPTYCELL","CELLSELECTOR","START","CELLSELECTORVALID","SELECTED","BLUR","FOCUS","FOCUS_WITH_NS","MOUSEENTER","touch","MOUSEENTER_WITH_NS","MOUSELEAVE","MS_PER_DAY","PREVARROW","NEXTARROW","ARIA_DISABLED","ARIA_SELECTED","ARIA_LABEL","extend","DATE","Date","views","month","year","decade","century","HEADERSELECTOR","Calendar","init","element","options","that","componentType","fn","call","wrapper","url","unescape","disableDates","getDisabledExpr","_templates","_selectable","_header","_viewWrapper","hasFooter","_footer","footer","_today","find","_toggle","addClass","on","mousetoggle","_move","bind","e","link","currentTarget","firstChild","toDateObject","indexOf","preventDefault","_view","name","_isSingleSelection","_click","_focusView","focusOnNav","attr","first","closest","last","_isMultipleSelection","selectable","_lastActive","selectRange","trigger","event","_isRangeSelection","rangeSelectable","range","change","_current","_value","_setCurrent","normalize","format","culture","_selectDates","_index","start","restrictValue","min","max","_addClassProxy","_active","_cell","hasClass","todayString","toDateString","getToday","_cellByDate","_removeClassProxy","removeClass","selectDates","length","_range","notify","dates","allowReverse","centuryCellsFormat","end","target","depth","size","showOtherMonthDays","animation","horizontal","effects","reverse","duration","divisor","vertical","messages","weekColumnHeader","today","navigateTo","parentViews","events","componentTypes","classic","header","actionAttr","isRtl","icon","iconClass","guid","linksSelector","contentClasses","modern","setOptions","_destroySelectable","hide","navigate","destroy","off","_title","_table","current","view","focus","table","_bindTable","_option","navigateToPast","_navigate","navigateToFuture","navigateUp","index","navigateDown","isEqualDate","isNaN","to","currentView","compare","disabled","title","from","old","_oldTable","currentValue","future","viewWrapper","children","calendar","toggleClass","kendoStop","_changeView","html","removeAttr","content","isWeekColumnVisible","_aria","replace","_animate","_focus","_visualizeSelectedDatesInView","_selectCell","validSelectedDates","datesUnique","map","getTime","filter","position","array","time","grep","_validateValue","setHours","createDate","getFullYear","getMonth","getDate","isInRange","selectedDates","each","clear","cells","_selectElement","parseOptions","single","multiple","selectableOptions","widget","cellSelector","cellSelectorValid","_onSelect","resetOnStart","aria","inputSelectors","relatedTarget","_onRelatedTarget","_restoreSelection","_preventChange","startInRange","endInRange","visibleRange","_visibleRange","_dateInViews","selectTo","selectFrom","mid","is","initialRange","eventArgs","useEnd","sender","_useEnd","useStart","_useStart","ctrlKey","metaKey","_toggleSelection","_cellsBySelector","_deselect","_addSelectedCellsToArray","shiftKey","_rangeSelection","currentCell","push","toDateCell","startDate","daysDifference","fromDate","toDate","daysBetweenTwoDates","addDaysToArray","DOT","selector","item","currentDateIndex","Number","splice","_dateInView","firstDateInView","_isNavigatable","cellIndex","isDisabled","eq","tables","lastDateInView","prevent","method","temp","cell","lastActive","key","keyCode","RIGHT","LEFT","UP","DOWN","SPACEBAR","HOME","END","getHours","getMinutes","getSeconds","getMilliseconds","setFullYear","_todayClick","ENTER","_keyboardToggleSelection","focusedDate","setDate","_nextNavigatable","_keyboardRangeSelection","focusedCell","_end","_start","PAGEUP","PAGEDOWN","_unselect","navigatableDate","active","parent","remove","append","insertAfter","_horizontal","viewWidth","margin","add","width","wrap","display","complete","unwrap","kendoAnimate","_vertical","insertBefore","left","parseInt","top","height","_selectedCell","removeAttribute","id","appendTo","show","toString","getValidCssClass","arrow","modifier","has","option","isBigger","value1","value2","isEqualMonth","empty","toggle","isTodayDisabled","todayClass","_todayClass","footerTemplate","linkClass","executeTemplate","label","useWithBlock","_updateAria","ariaTemplate","text","valueType","plugin","firstDayOfMonth","firstVisibleDay","calendarInfo","firstDay","getDay","setTime","tzOffsetBefore","getTimezoneOffset","resultDATE","tzOffsetDiff","getCalendarInfo","months","names","idx","navigateUrl","showHeader","hasUrl","currentCalendar","firstDayIdx","days","shiftArray","shortNames","namesShort","lastDayOfMonth","perRow","setter","build","day","i","inArray","join","weekNumberBuild","currentDate","timeOffset","Math","abs","date1","date2","month1","year1","month2","year2","hours","calendarMonths","namesAbbr","namesFull","setMonth","minYear","maxYear","modular","cellsPerRow","otherMonthTemplate","result","slice","concat","multiplier","endDate","fromDateUTC","UTC","endDateUTC","ceil","numberOfDays","nextDay","type","dateObject","calendars","standard","patterns","d","isFunction","Array","isArray","callback","disabledDates","convertDatesArray","toLowerCase","createDisabledExpr","noop","oldValue","newValue","split","tmpl","isEqualDatePart","viewsEnum","jQuery"],"mappings":"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","file":"kendo.calendar.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.selectable.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.selectable', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendocalendar = global.kendocalendar || {}, global.kendocalendar.js = factory()));\n})(this, (function () {\n    let __meta__ = {\n        id: \"calendar\",\n        name: \"Calendar\",\n        category: \"web\",\n        description: \"The Calendar widget renders a graphical calendar that supports navigation and selection.\",\n        depends: [ \"core\", \"selectable\" ]\n    };\n\n    (function($, undefined$1) {\n        let kendo = window.kendo,\n            support = kendo.support,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            keys = kendo.keys,\n            parse = kendo.parseDate,\n            encode = kendo.htmlEncode,\n            adjustDST = kendo.date.adjustDST,\n            weekInYear = kendo.date.weekInYear,\n            Selectable = kendo.ui.Selectable,\n            RangeSelectable = kendo.ui.RangeSelectable,\n            extractFormat = kendo._extractFormat,\n            template = kendo.template,\n            getCulture = kendo.getCulture,\n            transitions = kendo.support.transitions,\n            transitionOrigin = transitions ? transitions.css + \"transform-origin\" : \"\",\n            cellTemplate = template((data) => `<td class=\"${data.cssClass}\" role=\"gridcell\"><span tabindex=\"-1\" class=\"k-link\" data-href=\"#\" data-${data.ns}value=\"${data.dateString}\">${data.value}</span></td>`),\n            emptyCellTemplate = template(() => '<td role=\"gridcell\" class=\"k-calendar-td k-empty\"></td>'),\n            otherMonthCellTemplate = template(() => '<td role=\"gridcell\" class=\"k-calendar-td k-empty\">&nbsp;</td>'),\n            weekNumberTemplate = template((data) => `<td class=\"k-calendar-td k-alt\">${data.weekNumber}</td>`),\n            outerWidth = kendo._outerWidth,\n            ns = \".kendoCalendar\",\n            CLICK = \"click\" + ns,\n            KEYDOWN_NS = \"keydown\" + ns,\n            DOT = \".\",\n            EMPTY = \" \",\n            TABLE = \"table\",\n            CALENDAR_VIEW = \"k-calendar-view\",\n            ID = \"id\",\n            MIN = \"min\",\n            LEFT = \"left\",\n            SLIDE = \"slideIn\",\n            MONTH = \"month\",\n            CENTURY = \"century\",\n            CHANGE = \"change\",\n            NAVIGATE = \"navigate\",\n            VALUE = \"value\",\n            HOVER = \"k-hover\",\n            DISABLED = \"k-disabled\",\n            FOCUSED = \"k-focus\",\n            OTHERMONTH = \"k-other-month\",\n            EMPTYCELL = \"k-empty\",\n            TODAY = \"k-calendar-nav-today\",\n            CELLSELECTOR = \"td:has(.k-link)\",\n            START = \"start\",\n            END = \"end\",\n            CELLSELECTORVALID = \"td:has(.k-link):not(.\" + DISABLED + \"):not(.\" + EMPTYCELL + \")\",\n            WEEKCOLUMNSELECTOR = \"td:not(:has(.k-link))\",\n            SELECTED = \"k-selected\",\n            BLUR = \"blur\" + ns,\n            FOCUS = \"focus\",\n            FOCUS_WITH_NS = FOCUS + ns,\n            MOUSEENTER = support.touch ? \"touchstart\" : \"mouseenter\",\n            MOUSEENTER_WITH_NS = support.touch ? \"touchstart\" + ns : \"mouseenter\" + ns,\n            MOUSELEAVE = support.touch ? \"touchend\" + ns + \" touchmove\" + ns : \"mouseleave\" + ns,\n            MS_PER_MINUTE = 60000,\n            MS_PER_DAY = 86400000,\n            PREVARROW = \"_prevArrow\",\n            NEXTARROW = \"_nextArrow\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_SELECTED = \"aria-selected\",\n            ARIA_LABEL = \"aria-label\",\n            extend = $.extend,\n            DATE = Date,\n            views = {\n                month: 0,\n                year: 1,\n                decade: 2,\n                century: 3\n            },\n            HEADERSELECTOR = '.k-header, .k-calendar-header',\n            CLASSIC_HEADER_TEMPLATE = ({ actionAttr, size, isRtl }) => `<div class=\"k-header k-hstack\">\n            <span tabindex=\"-1\" data-href=\"#\" ${actionAttr}=\"prev\" role=\"button\" class=\"k-calendar-nav-prev k-button ${size} k-rounded-md k-button-flat k-button-flat-base k-icon-button\" ${ARIA_LABEL}=\"Previous\">${kendo.ui.icon({ icon: `caret-alt-${isRtl ? \"right\" : \"left\"}`, iconClass: \"k-button-icon\" })}</span></span>\n            <span tabindex=\"-1\" data-href=\"#\" ${actionAttr}=\"nav-up\" id=\"` + kendo.guid() + `\" role=\"button\" class=\"k-calendar-nav-fast k-button ${size} k-rounded-md k-button-flat k-button-flat-base  k-flex\"></span>\n            <span tabindex=\"-1\" data-href=\"#\" ${actionAttr}=\"next\" role=\"button\" class=\"k-calendar-nav-next k-button ${size} k-rounded-md k-button-flat k-button-flat-base  k-icon-button\" ${ARIA_LABEL}=\"Next\">${kendo.ui.icon({ icon: `caret-alt-${isRtl ? \"left\" : \"right\"}`, iconClass: \"k-button-icon\" })}</span>\n        </div>`,\n            MODERN_HEADER_TEMPLATE = ({ actionAttr, size, messages, isRtl }) => `<div class=\"k-calendar-header\">\n            <button ${actionAttr}=\"nav-up\" id=\"` + kendo.guid() + `\" class=\"k-calendar-title k-button ${size} k-button-flat k-button-flat-primary k-rounded-md\">\n                <span class=\"k-button-text\"></span>\n            </button>\n            <span class=\"k-spacer\"></span>\n            <span class=\"k-calendar-nav\">\n                <button tabindex=\"-1\" ${actionAttr}=${isRtl ? \"next\" : \"prev\"} class=\"k-calendar-nav-prev k-button ${size} k-button-flat k-button-flat-base k-rounded-md k-icon-button\">\n                    ${kendo.ui.icon({ icon: `chevron-${isRtl ? \"right\" : \"left\"}`, iconClass: \"k-button-icon\" })}\n                </button>\n                <button tabindex=\"-1\" ${actionAttr}=\"today\" class=\"k-calendar-nav-today k-button ${size} k-button-flat k-button-flat-primary k-rounded-md\" role=\"link\">\n                    <span class=\"k-button-text\">${kendo.htmlEncode(messages.today)}</span>\n                </button>\n                <button tabindex=\"-1\" ${actionAttr}=${isRtl ? \"prev\" : \"next\"} class=\"k-calendar-nav-next k-button ${size} k-button-flat k-button-flat-base k-rounded-md k-icon-button\">\n                    ${kendo.ui.icon({ icon: `chevron-${isRtl ? \"left\" : \"right\"}`, iconClass: \"k-button-icon\" })}\n                </button>\n            </span>\n        </div>`;\n\n        var Calendar = Widget.extend({\n            init: function(element, options) {\n                var that = this, value, id;\n                options = options || {};\n                options.componentType = options.componentType || \"classic\";\n                Widget.fn.init.call(that, element, options);\n\n                element = that.wrapper = that.element;\n                options = that.options;\n\n                options.url = kendo.unescape(options.url);\n\n                that.options.disableDates = getDisabledExpr(that.options.disableDates);\n\n                that._templates();\n\n                that._selectable();\n\n                that._header();\n\n                that._viewWrapper();\n\n                if (that.options.hasFooter) {\n                    that._footer(that.footer);\n                } else {\n                    that._today = that.element.find('.k-calendar-nav-today');\n                    that._toggle();\n                }\n\n                id = element\n                    .addClass(\"k-calendar k-calendar-md \" + (options.weekNumber ? \" k-week-number\" : \"\"))\n                    .on(MOUSEENTER_WITH_NS + \" \" + MOUSELEAVE, CELLSELECTOR, mousetoggle)\n                    .on(KEYDOWN_NS, \"table.k-calendar-table\", that._move.bind(that))\n                    .on(CLICK + \" touchend\", CELLSELECTORVALID, function(e) {\n                        var link = e.currentTarget.firstChild,\n                            value = toDateObject(link);\n\n                        if ($(link).data(\"href\").indexOf(\"#\") != -1) {\n                            e.preventDefault();\n                        }\n\n                        if (that._view.name == \"month\" && that.options.disableDates(value)) {\n                            return;\n                        }\n                        if (that._view.name != \"month\" || that._isSingleSelection()) {\n                                that._click($(link));\n                        }\n                    })\n                    .on(\"mouseup\" + ns, \"table.k-calendar-table, .k-calendar-footer\", function() {\n                        that._focusView(that.options.focusOnNav !== false);\n                    })\n                    .attr(ID);\n\n                if (that.options.weekNumber) {\n                    element.on(CLICK, WEEKCOLUMNSELECTOR, function(e) {\n                            var first = $(e.currentTarget).closest(\"tr\").find(CELLSELECTORVALID).first(),\n                                last = $(e.currentTarget).closest(\"tr\").find(CELLSELECTORVALID).last();\n\n                            if (that._isMultipleSelection()) {\n                                that.selectable._lastActive = last;\n                                that.selectable.selectRange(first, last);\n                                that.selectable.trigger(CHANGE, { event: e });\n                            }\n\n                            if (that._isRangeSelection()) {\n                                that.rangeSelectable._lastActive = last;\n                                that.rangeSelectable.range(first, last);\n                                that.rangeSelectable.change();\n                            }\n\n                            that._current = that._value = toDateObject(last.find(\"span\"));\n                            that._setCurrent(that._current);\n                    });\n                }\n\n                normalize(options);\n                value = parse(options.value, options.format, options.culture);\n                that._selectDates = [];\n\n                that._index = views[options.start];\n\n                that._current = new DATE(+restrictValue(value, options.min, options.max));\n\n                that._addClassProxy = function() {\n                    that._active = true;\n\n                    if (that._cell.hasClass(DISABLED)) {\n                        var todayString = that._view.toDateString(getToday());\n                        that._cell = that._cellByDate(todayString);\n                    }\n\n                    that._cell.addClass(FOCUSED);\n                };\n\n                that._removeClassProxy = function() {\n                    that._active = false;\n                    if (that._cell) {\n                        that._cell.removeClass(FOCUSED);\n                    }\n                };\n\n                that.value(value);\n\n                if (that._isMultipleSelection() && options.selectDates.length > 0) {\n                    that.selectDates(options.selectDates);\n                }\n\n                that._range = options.range;\n\n                if (that._isRangeSelection()) {\n                    that.selectRange(that._range);\n                }\n\n                kendo.notify(that);\n            },\n\n            options: {\n                name: \"Calendar\",\n                value: null,\n                min: new DATE(1900, 0, 1),\n                max: new DATE(2099, 11, 31),\n                dates: [],\n                disableDates: null,\n                allowReverse: false,\n                centuryCellsFormat: \"long\",\n                url: \"\",\n                culture: \"\",\n                footer: \"\",\n                format: \"\",\n                month: {},\n                weekNumber: false,\n                range: { start: null, end: null, target: START },\n                selectable: \"single\",\n                selectDates: [],\n                start: MONTH,\n                depth: MONTH,\n                size: \"medium\",\n                showOtherMonthDays: true,\n                animation: {\n                    horizontal: {\n                        effects: SLIDE,\n                        reverse: true,\n                        duration: 500,\n                        divisor: 2\n                    },\n                    vertical: {\n                        effects: \"zoomIn\",\n                        duration: 400\n                    }\n                },\n                messages: {\n                    weekColumnHeader: \"\",\n                    today: \"Today\",\n                    navigateTo: \"Navigate to \",\n                    parentViews: {\n                        month: \"year view\",\n                        year: \"decade view\",\n                        decade: \"century view\"\n                    }\n                },\n                componentType: \"classic\"\n            },\n\n            events: [\n                CHANGE,\n                NAVIGATE\n            ],\n\n            componentTypes: {\n                \"classic\": {\n                    header: {\n                        template: CLASSIC_HEADER_TEMPLATE\n                    },\n                    hasFooter: true,\n                    linksSelector: \".k-button\",\n                    contentClasses: \"k-calendar-table\"\n                },\n                \"modern\": {\n                    header: {\n                        template: MODERN_HEADER_TEMPLATE\n                    },\n                    hasFooter: false,\n                    linksSelector: \".k-button\",\n                    contentClasses: \"k-calendar-table\"\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this;\n\n                normalize(options);\n\n                options.disableDates = getDisabledExpr(options.disableDates);\n                that._destroySelectable();\n\n                if (options.messages) {\n                    options.messages = $.extend({}, true, that.options.messages, options.messages);\n                }\n\n                Widget.fn.setOptions.call(that, options);\n\n                that._templates();\n\n                that._selectable();\n\n                that._viewWrapper();\n\n                if (that.options.hasFooter) {\n                    that._footer(that.footer);\n                } else {\n                    that.element.find(\".k-calendar-footer\").hide();\n                    that._toggle();\n                }\n                that._index = views[that.options.start];\n\n                that.navigate();\n\n                if (options.weekNumber) {\n                    that.element.addClass('k-week-number');\n                }\n            },\n\n            destroy: function() {\n                var that = this,\n                today = that._today;\n\n                that.element.off(ns);\n                that._title.off(ns);\n                that[PREVARROW].off(ns);\n                that[NEXTARROW].off(ns);\n                that._destroySelectable();\n                kendo.destroy(that._table);\n\n                if (today) {\n                    kendo.destroy(today.off(ns));\n                }\n\n                Widget.fn.destroy.call(that);\n            },\n\n            current: function() {\n                return this._current;\n            },\n\n            view: function() {\n                return this._view;\n            },\n\n            focus: function(table) {\n                table = table || this._table;\n                this._bindTable(table);\n                table.trigger(\"focus\");\n            },\n\n            min: function(value) {\n                return this._option(MIN, value);\n            },\n\n            max: function(value) {\n                return this._option(\"max\", value);\n            },\n\n            navigateToPast: function() {\n                this._navigate(PREVARROW, -1);\n            },\n\n            navigateToFuture: function() {\n                this._navigate(NEXTARROW, 1);\n            },\n\n            navigateUp: function() {\n                var that = this,\n                index = that._index;\n\n                if (that._title.hasClass(DISABLED)) {\n                    return;\n                }\n\n                that.navigate(that._current, ++index);\n            },\n\n            navigateDown: function(value) {\n                var that = this,\n                index = that._index,\n                depth = that.options.depth;\n\n                if (!value) {\n                    return;\n                }\n\n                if (index === views[depth]) {\n                    if (!isEqualDate(that._value, that._current) || !isEqualDate(that._value, value)) {\n                        that.value(value);\n                        that.trigger(CHANGE);\n                    }\n                    return;\n                }\n\n                that.navigate(value, --index);\n            },\n\n            navigate: function(value, view) {\n                view = isNaN(view) ? views[view] : view;\n\n                var that = this,\n                    options = that.options,\n                    culture = options.culture,\n                    min = options.min,\n                    max = options.max,\n                    title = that._title,\n                    from = that._table,\n                    old = that._oldTable,\n                    currentValue = that._current,\n                    future = value && +value > +currentValue,\n                    vertical = view !== undefined$1 && view !== that._index,\n                    to, currentView, compare,\n                    disabled,\n                    viewWrapper = that.element.children(\".k-calendar-view\");\n\n                if (!value) {\n                    value = currentValue;\n                }\n\n                that._current = value = new DATE(+restrictValue(value, min, max));\n\n                if (view === undefined$1) {\n                    view = that._index;\n                } else {\n                    that._index = view;\n                }\n\n                that._view = currentView = calendar.views[view];\n                compare = currentView.compare;\n\n                disabled = view === views[CENTURY];\n                title.toggleClass(DISABLED, disabled).attr(ARIA_DISABLED, disabled);\n\n                disabled = compare(value, min) < 1;\n                that[PREVARROW].toggleClass(DISABLED, disabled).attr(ARIA_DISABLED, disabled);\n\n                disabled = compare(value, max) > -1;\n                that[NEXTARROW].toggleClass(DISABLED, disabled).attr(ARIA_DISABLED, disabled);\n\n                if (from && old && old.data(\"animating\")) {\n                    old.kendoStop(true, true);\n                    from.kendoStop(true, true);\n                }\n\n                that._oldTable = from;\n\n                if (!from || that._changeView) {\n                    title.html('<span class=\"k-button-text\">' + currentView.title(value, min, max, culture) + '</span>');\n\n                    if (that.options.messages.parentViews && that._view.name !== CENTURY) {\n                        title.attr(\"title\", encode(that.options.messages.navigateTo + that.options.messages.parentViews[that._view.name]));\n                    } else {\n                        title.removeAttr(\"title\");\n                    }\n\n                    that._table = to = $(currentView.content(extend({\n                        min: min,\n                        max: max,\n                        date: value,\n                        url: options.url,\n                        dates: options.dates,\n                        format: options.format,\n                        showOtherMonthDays: options.showOtherMonthDays,\n                        centuryCellsFormat: options.centuryCellsFormat,\n                        culture: culture,\n                        disableDates: options.disableDates,\n                        isWeekColumnVisible: options.weekNumber,\n                        messages: options.messages,\n                        contentClasses: that.options.contentClasses\n                    }, that[currentView.name])));\n\n                    that._aria();\n\n                    var replace = from && from.data(\"start\") === to.data(\"start\");\n                    that._animate({\n                        from: from,\n                        to: to,\n                        vertical: vertical,\n                        future: future,\n                        replace: replace\n                    });\n\n                    viewWrapper.removeClass(\"k-calendar-monthview k-calendar-yearview k-calendar-decadeview k-calendar-centuryview\");\n                    viewWrapper.addClass(\"k-calendar-\" + currentView.name + \"view\");\n\n                    that.trigger(NAVIGATE);\n\n                    that._focus(value);\n                }\n\n                if (view === views[options.depth] && that._selectDates.length > 0) {\n                    that._visualizeSelectedDatesInView();\n                }\n\n                if (that._isSingleSelection()) {\n                    if (view === views[options.depth] && that._value && !that.options.disableDates(that._value)) {\n                        that._selectCell(that._value);\n                    }\n                }\n\n                that._setCurrent(value);\n\n                if (!from && that._cell) {\n                    that._cell.removeClass(FOCUSED);\n                }\n\n                that._changeView = true;\n            },\n\n            selectDates: function(dates) {\n                var that = this,\n                    validSelectedDates,\n                    datesUnique;\n\n                if (dates === undefined$1) {\n                    return that._selectDates;\n                }\n\n                datesUnique = dates\n                    .map(function(date) { return date.getTime(); })\n                    .filter(function(date, position, array) {\n                        return array.indexOf(date) === position;\n                    })\n                    .map(function(time) { return new Date(time); });\n\n                validSelectedDates = $.grep(datesUnique, function(value) {\n                    if (value) {\n                        return +that._validateValue(new Date(value.setHours(0, 0, 0, 0))) === +value;\n                    }\n                });\n                that._selectDates = validSelectedDates.length > 0 ? validSelectedDates : (datesUnique.length === 0 ? datesUnique : that._selectDates);\n                that._visualizeSelectedDatesInView();\n            },\n\n            value: function(value) {\n                var that = this,\n                    old = that._view,\n                    view = that._view;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                value = that._validateValue(value);\n                if (value && that._isMultipleSelection()) {\n                    var date = new Date(+value);\n                    date.setHours(0, 0, 0, 0);\n                    that._selectDates = [date];\n                    that.selectable._lastActive = null;\n                }\n\n                if (old && value === null && that._cell) {\n                    that._cell.removeClass(SELECTED);\n                } else {\n                    that._changeView = !value || view && view.compare(value, that._current) !== 0;\n                    that.navigate(value);\n                }\n            },\n\n            isRtl: function() {\n                return kendo.support.isRtl(this.wrapper);\n            },\n\n            _aria: function() {\n                var table = this._table;\n\n                table.attr(\"aria-labelledby\", this._title.attr(\"id\"));\n\n                if (this._view.name === \"month\" && this._isMultipleSelection()) {\n                    table.attr(\"aria-multiselectable\", \"true\");\n                }\n            },\n\n            _validateValue: function(value) {\n                var that = this,\n                    options = that.options,\n                    min = options.min,\n                    max = options.max;\n\n                if (value === null) {\n                    that._current = createDate(that._current.getFullYear(), that._current.getMonth(), that._current.getDate());\n                }\n\n                value = parse(value, options.format, options.culture);\n\n                if (value !== null) {\n                    value = new DATE(+value);\n\n                    if (!isInRange(value, min, max)) {\n                        value = null;\n                    }\n                }\n\n                if (value === null || !that.options.disableDates(new Date(+value))) {\n                    that._value = value;\n                } else if (that._value === undefined$1) {\n                    that._value = null;\n                }\n\n                return that._value;\n            },\n\n            _visualizeSelectedDatesInView: function() {\n                var that = this;\n                 var selectedDates = {};\n                $.each(that._selectDates, function(index, value) {\n                    selectedDates[kendo.calendar.views[0].toDateString(value)] = value;\n                });\n                that.selectable.clear();\n                 var cells = that._table\n                    .find(CELLSELECTOR)\n                    .filter(function(index, element) {\n                        return selectedDates[$(element.firstChild).attr(kendo.attr(VALUE))];\n                    });\n                if (cells.length > 0) {\n                    that.selectable._selectElement(cells, true);\n                }\n            },\n\n            _isSingleSelection: function() {\n                let selectable = this.options.selectable,\n                selectableOptions = Selectable.parseOptions(selectable);\n                return selectableOptions.single;\n            },\n\n            _isMultipleSelection: function() {\n                let selectable = this.options.selectable,\n                selectableOptions = Selectable.parseOptions(selectable);\n                return selectableOptions.multiple;\n            },\n\n            _isRangeSelection: function() {\n                let selectable = this.options.selectable,\n                selectableOptions = Selectable.parseOptions(selectable);\n                return selectableOptions.range;\n            },\n\n            _selectable: function() {\n                let that = this,\n                    selectable = that.options.selectable,\n                    selectableOptions = Selectable.parseOptions(selectable);\n\n                if (!that._isMultipleSelection() && !that._isRangeSelection()) {\n                    return;\n                }\n\n                if (that.rangeSelectable) {\n                    that.rangeSelectable.destroy();\n                    that.rangeSelectable = null;\n                }\n\n                if (selectableOptions.range) {\n                    that.rangeSelectable = new RangeSelectable(that.wrapper, {\n                        widget: that,\n                        filter: \".k-calendar-monthview table \" + CELLSELECTORVALID,\n                        cellSelector: CELLSELECTOR,\n                        cellSelectorValid: CELLSELECTORVALID,\n                        change: that._onSelect.bind(that),\n                        reverse: that.options.allowReverse,\n                        resetOnStart: true,\n                        ns: ns\n                    });\n\n                    that.element.addClass(\"k-calendar-range\");\n                } else {\n                    that.selectable = new Selectable(that.wrapper, {\n                        aria: true,\n                        //excludes the anchor element\n                        inputSelectors: \"input,textarea,.k-multiselect-wrap,select,button,.k-button>span,.k-button>img,span.k-icon.k-i-caret-alt-down,span.k-icon.k-i-caret-alt-up,span.k-svg-icon.k-svg-i-caret-alt-down,span.k-svg-icon.k-svg-i-caret-alt-up\",\n                        multiple: selectableOptions.multiple,\n                        filter: \"table.k-calendar-table:eq(0) \" + CELLSELECTORVALID,\n                        change: that._onSelect.bind(that),\n                        relatedTarget: that._onRelatedTarget.bind(that)\n                    });\n                }\n            },\n\n            _restoreSelection: function() {\n                const that = this;\n                let range;\n\n                that._preventChange = true;\n\n                if (that._isRangeSelection()) {\n                    range = that.selectRange();\n\n                    if (!range || !range.start) {\n                        that._preventChange = false;\n                        return;\n                    }\n\n                    that.selectRange(range);\n                }\n\n                that._preventChange = false;\n            },\n\n            selectRange: function(range) {\n                const that = this, view = that._view;\n                let startInRange, endInRange, visibleRange;\n\n                if (range === undefined$1) {\n                    return that._range;\n                }\n\n                that._range = range;\n\n                if (!range.start) {\n                    return;\n                }\n\n                visibleRange = that._visibleRange();\n\n                startInRange = that._dateInViews(range.start);\n                endInRange = range.end && that._dateInViews(range.end);\n\n                if (!startInRange && endInRange) {\n                    that.rangeSelectable.selectTo(that._cellByDate(view.toDateString(range.end)));\n                }\n\n                if (startInRange && endInRange) {\n                    that.rangeSelectable.range(that._cellByDate(view.toDateString(range.start)), that._cellByDate(view.toDateString(range.end)), false, that.options.allowReverse);\n                }\n\n                if (range.end && startInRange && !endInRange) {\n                    that.rangeSelectable.selectFrom(that._cellByDate(view.toDateString(range.start)));\n                }\n\n                if (!range.end && startInRange) {\n                    that.rangeSelectable.start(that._cellByDate(view.toDateString(range.start)));\n                }\n\n                if (+visibleRange.start > +range.start && +visibleRange.end < +range.end) {\n                    that.rangeSelectable.mid(that.element.find(CELLSELECTORVALID));\n                }\n            },\n\n            _onRelatedTarget: function(target) {\n                var that = this;\n\n                if (that.selectable.options.multiple && target.is(CELLSELECTORVALID)) {\n                    that._current = toDateObject(target.find(\"span\"));\n                    that._setCurrent(that._current);\n                }\n\n            },\n\n            _onSelect: function(e) {\n                let that = this,\n                    eventArgs = e,\n                    range,\n                    useEnd = e.sender._useEnd,\n                    useStart = e.sender._useStart,\n                    initialRange,\n                    start,\n                    end,\n                    value,\n                    target,\n                    selectableOptions = Selectable.parseOptions(that.options.selectable);\n\n                if (that._isRangeSelection()) {\n                    range = e.sender.range();\n                    initialRange = that.selectRange() || {};\n                    target = initialRange.target;\n                    if (range.start && range.start.length) {\n                        start = toDateObject(range.start.find(\"span\"));\n                    }\n\n                    if (range.end && range.end.length) {\n                        end = toDateObject(range.end.find(\"span\"));\n                    }\n\n                    if (target === END) {\n                        target = START;\n                    } else {\n                        target = END;\n                    }\n\n                    that._range = { start: useStart ? initialRange.start : start, end: useEnd ? initialRange.end : end, target: target };\n\n                    if (!that._preventChange) {\n                        that.trigger(CHANGE);\n                    }\n\n                    value = end || start;\n\n                    if (end && !that._dateInViews(end)) {\n                        value = start;\n                    }\n\n                    that.selectRange(that._range);\n                    that.value(value);\n                    return;\n                }\n\n                if (!selectableOptions.multiple) {\n                    if ($(eventArgs.event.currentTarget).is(\"td\") && !$(eventArgs.event.currentTarget).hasClass(\"k-selected\")) {\n                        $(eventArgs.event.currentTarget).addClass(\"k-selected\");\n                    }\n                    else {\n                        that._click($(eventArgs.event.currentTarget).find(\"span\"));\n                    }\n                    return;\n                }\n\n                if (eventArgs.event.ctrlKey || eventArgs.event.metaKey) {\n                    if ($(eventArgs.event.currentTarget).is(CELLSELECTORVALID)) {\n                        that._toggleSelection($(eventArgs.event.currentTarget));\n                    }\n                    else {\n                        that._cellsBySelector(CELLSELECTORVALID).each(function(index, element) {\n                            var value = toDateObject($(element).find(\"span\"));\n                            that._deselect(value);\n                        });\n                        that._addSelectedCellsToArray();\n                    }\n                }\n                else if (eventArgs.event.shiftKey) {\n                    that._rangeSelection(that._cell);\n                }\n                else if ($(eventArgs.event.currentTarget).is(CELLSELECTOR)) {\n                    that.value(toDateObject($(eventArgs.event.currentTarget).find(\"span\")));\n                }\n                else {\n                    that._selectDates = [];\n                    that._addSelectedCellsToArray();\n                }\n                 that.trigger(CHANGE);\n            },\n\n            _destroySelectable: function() {\n                var that = this;\n\n                if (that.selectable) {\n                    that.selectable.destroy();\n                    that.selectable = null;\n                }\n\n                if (that.rangeSelectable) {\n                    that.rangeSelectable.destroy();\n                    that.rangeSelectable = null;\n                }\n            },\n\n            //when ctrl key is clicked\n            _toggleSelection: function(currentCell) {\n                var that = this,\n                    date = toDateObject(currentCell.find(\"span\"));\n                    if (currentCell.hasClass(\"k-selected\")) {\n                        that._selectDates.push(date);\n                    }\n                    else {\n                        that._deselect(date);\n                    }\n            },\n\n            //shift selection\n            _rangeSelection: function(toDateCell, startDate) {\n                var that = this,\n                    fromDate = startDate || toDateObject(that.selectable.value().first().find(\"span\")),\n                    toDate = toDateObject(toDateCell.find(\"span\")),\n                    daysDifference;\n\n                if (that.selectable._lastActive || that._value) {\n                    fromDate = that.selectable._lastActive ? toDateObject(that.selectable._lastActive.find(\"span\")) : new Date(+that._value);\n                } else {\n                    that.selectable._lastActive = startDate ? that._cellByDate(that._view.toDateString(startDate), CELLSELECTORVALID) : that.selectable.value().first();\n                }\n\n                that._selectDates = [];\n                daysDifference = daysBetweenTwoDates(fromDate, toDate);\n                addDaysToArray(that._selectDates, daysDifference, fromDate, that.options.disableDates);\n\n                that._visualizeSelectedDatesInView();\n            },\n\n            _visibleRange: function() {\n                let table = this.element.find(DOT + CALENDAR_VIEW + EMPTY + TABLE),\n                    firstDateInView = toDateObject(table.first().find(CELLSELECTOR).first().find(\"span\")),\n                    lastDateInView = toDateObject(table.last().find(CELLSELECTOR).last().find(\"span\"));\n                return { start: firstDateInView, end: lastDateInView };\n            },\n\n            _cellsBySelector: function(selector) {\n                var that = this;\n                return that._table.find(selector);\n            },\n\n            _addSelectedCellsToArray: function() {\n                var that = this;\n                that.selectable.value().each(function(index, item) {\n                    var date = toDateObject($(item.firstChild));\n                    if (!that.options.disableDates(date)) {\n                        that._selectDates.push(date);\n                    }\n                });\n            },\n\n             _deselect: function(date) {\n                var that = this;\n                 var currentDateIndex = that._selectDates.map(Number).indexOf(+date);\n                if (currentDateIndex != -1) {\n                    that._selectDates.splice(currentDateIndex, 1);\n                }\n            },\n\n            _dateInView: function(date) {\n                var that = this,\n                    firstDateInView = toDateObject(that._cellsBySelector(CELLSELECTORVALID).first().find(\"span\")),\n                    lastDateInView = toDateObject(that._cellsBySelector(CELLSELECTORVALID).last().find(\"span\"));\n\n                return +date <= +lastDateInView && +date >= +firstDateInView;\n            },\n\n            _isNavigatable: function(currentValue, cellIndex) {\n                var that = this;\n                var isDisabled = that.options.disableDates;\n                var cell;\n                var index;\n\n                if (that._view.name == \"month\") {\n                    return !isDisabled(currentValue);\n                } else {\n                    index = that.wrapper.find(\".\" + FOCUSED).index();\n                    cell = that.wrapper.find(\".k-calendar-table td\").eq(index + cellIndex);\n                    return cell.is(CELLSELECTORVALID) || !isDisabled(currentValue);\n                }\n            },\n\n            _dateInViews: function(date) {\n                let that = this,\n                    tables = that.element.find(\".k-calendar-view table\"),\n                    firstDateInView = toDateObject(tables.first().find(CELLSELECTOR).first().find(\"span\")),\n                    lastDateInView = toDateObject(tables.last().find(CELLSELECTOR).last().find(\"span\"));\n\n                date = new Date(date.toDateString());\n\n                return +date <= +lastDateInView && +date >= +firstDateInView;\n            },\n\n            _move: function(e) {\n                var that = this,\n                    options = that.options,\n                    key = e.keyCode,\n                    view = that._view,\n                    index = that._index,\n                    min = that.options.min,\n                    max = that.options.max,\n                    currentValue = new DATE(+that._current),\n                    isRtl = that.isRtl(),\n                    isDisabled = that.options.disableDates,\n                    value, prevent, method, temp, cell, focusedCell, lastActive;\n\n                if (e.target === that._table[0]) {\n                    that._active = true;\n                }\n\n                if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                    value = 1;\n                    prevent = true;\n                } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                    value = -1;\n                    prevent = true;\n                } else if (key == keys.UP) {\n                    value = index === 0 ? -7 : -4;\n                    prevent = true;\n                } else if (key == keys.DOWN) {\n                    value = index === 0 ? 7 : 4;\n                    prevent = true;\n                } else if (key == keys.SPACEBAR) {\n                    value = 0;\n                    prevent = true;\n                } else if (key == keys.HOME || key == keys.END) {\n                    method = key == keys.HOME ? \"first\" : \"last\";\n                    temp = view[method](currentValue);\n                    currentValue = new DATE(temp.getFullYear(), temp.getMonth(), temp.getDate(), currentValue.getHours(), currentValue.getMinutes(), currentValue.getSeconds(), currentValue.getMilliseconds());\n                    currentValue.setFullYear(temp.getFullYear());\n                    prevent = true;\n                } else if (key === 84) {\n                    that._todayClick(e);\n                    prevent = true;\n                }\n\n                if (e.ctrlKey || e.metaKey) {\n                    if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                        that.navigateToFuture();\n                        prevent = true;\n                    } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                        that.navigateToPast();\n                        prevent = true;\n                    } else if (key == keys.UP) {\n                        that.navigateUp();\n                        prevent = true;\n                    } else if (key == keys.DOWN) {\n                        that._click($(that._cell[0].firstChild));\n                        prevent = true;\n                    }\n                      else if ((key == keys.ENTER || key == keys.SPACEBAR) && that._isMultipleSelection()) {\n                        that._keyboardToggleSelection(e);\n\n                        var focusedDate = toDateObject($(that._cell[0]).find(\"span\"));\n                        that._setCurrent(focusedDate);\n\n                    }\n                } else if (e.shiftKey) {\n                    if (value !== undefined$1 || method) {\n                        if (!method) {\n                            view.setDate(currentValue, value);\n                        }\n\n                        if (!isInRange(currentValue, min, max)) {\n                            currentValue = restrictValue(currentValue, options.min, options.max);\n                        }\n\n                        if (isDisabled(currentValue)) {\n                            currentValue = that._nextNavigatable(currentValue, value);\n                        }\n\n                        min = createDate(min.getFullYear(), min.getMonth(), min.getDate());\n                        if (that._isMultipleSelection()) {\n                            that._keyboardRangeSelection(e, currentValue);\n                        } else if (that._isRangeSelection()) {\n                            if (!that._dateInViews(currentValue)) {\n                                if (value > 0) {\n                                    that.navigateToFuture();\n                                } else {\n                                    that.navigateToPast();\n                                }\n                            }\n                        } else {\n                            that._focus(currentValue);\n                        }\n                    }\n\n                    if (that.rangeSelectable) {\n                        cell = that._cellByDate(view.toDateString(currentValue));\n                        lastActive = toDateObject((that.rangeSelectable._lastActive || focusedCell).find(\"span\"));\n                        if (!that._dateInViews(lastActive)) {\n                            if (+lastActive > +currentValue) {\n                                that.rangeSelectable._end = that.rangeSelectable._lastActive;\n                                that.rangeSelectable.selectFrom(cell);\n                            } else {\n                                that.rangeSelectable.selectTo(cell);\n                            }\n                        } else {\n                            if (that.rangeSelectable._end && that.rangeSelectable._end.is(\".\" + FOCUSED)) {\n                                that.rangeSelectable._lastActive = that.rangeSelectable._start;\n                            } else {\n                                that.rangeSelectable._lastActive = that._cellByDate(view.toDateString(lastActive));\n                            }\n                            that.rangeSelectable.range(that.rangeSelectable._lastActive, cell);\n                        }\n                        that.rangeSelectable.change();\n                        that._setCurrent(currentValue);\n                    }\n                } else {\n                    if (key == keys.ENTER || key == keys.SPACEBAR) {\n                        if (view.name == \"month\" && that._isMultipleSelection()) {\n                            that.value(toDateObject($(that._cell.find(\"span\"))));\n                            that.selectable._lastActive = $(that._cell[0]);\n                            that.trigger(CHANGE);\n                        } else if (that.rangeSelectable) {\n                            that.rangeSelectable.change();\n                        } else {\n                            that._click($(that._cell[0].firstChild));\n                        }\n                        prevent = true;\n                    } else if (key == keys.PAGEUP) {\n                        prevent = true;\n                        that.navigateToPast();\n                    } else if (key == keys.PAGEDOWN) {\n                        prevent = true;\n                        that.navigateToFuture();\n                    }\n\n                    if (value || method) {\n                        if (!method) {\n                            view.setDate(currentValue, value);\n                        }\n\n                        min = createDate(min.getFullYear(), min.getMonth(), min.getDate());\n\n                        if (!isInRange(currentValue, min, max)) {\n                            currentValue = restrictValue(currentValue, options.min, options.max);\n                        }\n\n                        if (!that._isNavigatable(currentValue, value)) {\n                            currentValue = that._nextNavigatable(currentValue, value);\n                        }\n\n                        if (that._isMultipleSelection()) {\n                            if (!that._dateInView(currentValue)) {\n                                that.navigate(currentValue);\n                            }\n                            else {\n                                that._current = currentValue;\n                                that._setCurrent(currentValue);\n                            }\n                        }\n                        else {\n                            that._focus(currentValue);\n                        }\n                    }\n                }\n\n                if (prevent) {\n                    e.preventDefault();\n                }\n\n                return that._current;\n            },\n\n            _keyboardRangeSelection: function(event, currentValue) {\n                var that = this,\n                    fromDate,\n                    daysDifference;\n\n                if (!that._dateInView(currentValue)) {\n                    that._selectDates = [];\n\n                    fromDate = that.selectable._lastActive ? toDateObject(that.selectable._lastActive.find(\"span\")) : currentValue;\n                    daysDifference = daysBetweenTwoDates(fromDate, new Date(+currentValue));\n\n                    addDaysToArray(that._selectDates, daysDifference, fromDate, that.options.disableDates);\n\n                    that.navigate(currentValue);\n                    that._current = currentValue;\n                    that.selectable._lastActive = that.selectable._lastActive || that._cellByDate(that._view.toDateString(currentValue), CELLSELECTORVALID);\n                    that.trigger(CHANGE);\n                    return;\n                }\n                that.selectable.options.filter = that.wrapper.find(\"table\").length > 1 && +currentValue > +that._current ? \"table.k-calendar-table:eq(1) \" + CELLSELECTORVALID : \"table.k-calendar-table:eq(0) \" + CELLSELECTORVALID;\n                that._setCurrent(currentValue);\n                that._current = currentValue;\n\n                that._rangeSelection(that._cellByDate(that._view.toDateString(currentValue), CELLSELECTORVALID), currentValue);\n\n                that.trigger(CHANGE);\n\n                that.selectable.options.filter = \"table.k-calendar-table:eq(0) \" + CELLSELECTORVALID;\n            },\n\n            _keyboardToggleSelection: function(event) {\n                var that = this;\n\n                event.currentTarget = that._cell[0];\n                that.selectable._lastActive = $(that._cell[0]);\n\n                if ($(that._cell[0]).hasClass(SELECTED)) {\n                    that.selectable._unselect($(that._cell[0]));\n                }\n                else {\n                    that.selectable.value($(that._cell[0]));\n                }\n                that.selectable.trigger(CHANGE, { event: event });\n            },\n\n            _nextNavigatable: function(currentValue, value) {\n                var that = this,\n                disabled = true,\n                view = that._view,\n                min = that.options.min,\n                max = that.options.max,\n                isDisabled = that.options.disableDates,\n                navigatableDate = new Date(currentValue.getTime());\n\n                view.setDate(navigatableDate, -value);\n\n                while (disabled) {\n                    view.setDate(currentValue, value);\n\n                    if (!isInRange(currentValue, min, max)) {\n                        currentValue = navigatableDate;\n                        break;\n                    }\n                    disabled = isDisabled(currentValue);\n                }\n                return currentValue;\n            },\n\n            _animate: function(options) {\n                var that = this;\n                var from = options.from;\n                var to = options.to;\n                var active = that._active;\n                var viewWrapper = that.element.children(\".k-calendar-view\");\n\n                if (!from) {\n                    viewWrapper.append(to);\n                    that._bindTable(to);\n                } else if (from.parent().data(\"animating\")) {\n                    from.off(ns);\n                    from.parent().kendoStop(true, true).remove();\n                    from.remove();\n\n                    viewWrapper.append(to);\n                    that._focusView(active);\n                } else if (!from.is(\":visible\") || that.options.animation === false || options.replace) {\n                    to.insertAfter(from);\n                    from.off(ns).remove();\n\n                    that._focusView(active);\n                } else {\n                    that[options.vertical ? \"_vertical\" : \"_horizontal\"](from, to, options.future);\n                }\n            },\n\n            _horizontal: function(from, to, future) {\n                var that = this,\n                    active = that._active,\n                    horizontal = that.options.animation.horizontal,\n                    effects = horizontal.effects,\n                    viewWidth = outerWidth(from),\n                    margin = (outerWidth(from, true) - viewWidth);\n\n                if (effects && effects.indexOf(SLIDE) != -1) {\n                    from.add(to).css({ width: viewWidth });\n\n                    from.wrap(\"<div/>\");\n\n                    that._focusView(active, from);\n\n                    from.parent()\n                    .css({\n                        position: \"relative\",\n                        width: (viewWidth * 2) + (2 * margin),\n                        display: \"flex\",\n                        \"margin-left\": future ? 0 : (-viewWidth - margin)\n                    });\n\n                    to[future ? \"insertAfter\" : \"insertBefore\"](from);\n\n                    extend(horizontal, {\n                        effects: SLIDE + \":\" + (future ? \"right\" : LEFT),\n                        complete: function() {\n                            from.off(ns).remove();\n                            that._oldTable = null;\n\n                            to.unwrap();\n\n                            that._focusView(active);\n\n                        }\n                    });\n\n                    from.parent().kendoStop(true, true).kendoAnimate(horizontal);\n                }\n            },\n\n            _vertical: function(from, to) {\n                var that = this,\n                    vertical = that.options.animation.vertical,\n                    effects = vertical.effects,\n                    active = that._active, //active state before from's blur\n                    cell, position;\n\n                if (effects && effects.indexOf(\"zoom\") != -1) {\n                    to.insertBefore(from);\n\n                    from.css({\n                        position: \"absolute\",\n                        width: to.width()\n                    });\n\n                    if (transitionOrigin) {\n                        cell = that._cellByDate(that._view.toDateString(that._current));\n                        position = cell.position();\n                        position = (position.left + parseInt(cell.width() / 2, 10)) + \"px\" + \" \" + (position.top + parseInt(cell.height() / 2, 10) + \"px\");\n                        to.css(transitionOrigin, position);\n                    }\n\n                    from.kendoStop(true, true).kendoAnimate({\n                        effects: \"fadeOut\",\n                        duration: 600,\n                        complete: function() {\n                            from.off(ns).remove();\n                            that._oldTable = null;\n\n                            that._focusView(active);\n                        }\n                    });\n\n                    to.kendoStop(true, true).kendoAnimate(vertical);\n                }\n            },\n\n            _cellByDate: function(value, selector) {\n                return this._table.find(selector ? selector : \"td:not(.\" + OTHERMONTH + \")\")\n                .filter(function() {\n                    return $(this.firstChild).attr(kendo.attr(VALUE)) === value;\n                });\n            },\n\n            _selectCell: function(date) {\n                var that = this,\n                    cell = that._selectedCell,\n                    value = that._view.toDateString(date);\n\n                    if (cell && cell[0]) {\n                        cell[0].removeAttribute(ARIA_SELECTED);\n                        cell.removeClass(SELECTED);\n                    }\n\n                    cell = that._cellByDate(value, CELLSELECTOR);\n\n                    that._selectedCell = cell;\n                    cell.addClass(SELECTED)\n                        .attr(ARIA_SELECTED, true);\n            },\n\n            _setCurrent: function(date) {\n                var that = this,\n                    id = kendo.guid(),\n                    cell = that._cell,\n                    value = that._view.toDateString(date);\n\n                    if (cell && cell[0]) {\n                        cell.removeClass(FOCUSED);\n                        cell[0].removeAttribute(ARIA_LABEL);\n                        cell[0].removeAttribute(ID);\n                    }\n\n                    cell = that._cellByDate(value, that._isMultipleSelection() ? CELLSELECTOR : \"td:not(.\" + OTHERMONTH + \")\");\n\n                    that._cell = cell;\n\n                    cell.attr(ID, id)\n                        .addClass(FOCUSED);\n\n                    if (that._table[0]) {\n                        that._table[0].removeAttribute(\"aria-activedescendant\");\n                        that._table.attr(\"aria-activedescendant\", id);\n                    }\n            },\n\n            _bindTable: function(table) {\n                table\n                .on(FOCUS_WITH_NS, this._addClassProxy)\n                .on(BLUR, this._removeClassProxy);\n            },\n\n            _click: function(link) {\n                var that = this,\n                options = that.options,\n                currentValue = new Date(+that._current),\n                value = toDateObject(link);\n\n                adjustDST(value, 0);\n\n                if (that._view.name == \"month\" && that.options.disableDates(value)) {\n                    value = that._value;\n                }\n\n                that._view.setDate(currentValue, value);\n\n                that.navigateDown(restrictValue(currentValue, options.min, options.max));\n            },\n\n            _focus: function(value) {\n                var that = this,\n                view = that._view;\n\n                if (view.compare(value, that._current) !== 0) {\n                    that.navigate(value);\n                } else {\n                    that._current = value;\n                    that._setCurrent(value);\n                }\n            },\n\n            _focusView: function(active, table) {\n                if (active) {\n                    this.focus(table);\n                }\n            },\n\n            _viewWrapper: function() {\n                var that = this;\n                var element = that.element;\n                var viewWrapper = element.children(\".k-calendar-view\");\n\n                if (!viewWrapper[0]) {\n                    viewWrapper = $(\"<div class='k-calendar-view k-align-items-start k-justify-content-center k-hstack' />\").insertAfter(element.find(HEADERSELECTOR));\n                }\n            },\n\n            _footer: function(template) {\n                var that = this,\n                today = getToday(),\n                element = that.element,\n                footer = element.find(\".k-calendar-footer\");\n\n                if (!template) {\n                    that._toggle(false);\n                    footer.hide();\n                    return;\n                }\n\n                if (!footer[0]) {\n                    footer = $(`<div class=\"k-calendar-footer\">\n                    <button tabindex=\"-1\" class=\"k-calendar-nav-today k-flex k-button k-button-md k-button-flat k-button-flat-primary k-rounded-md\" role=\"link\">\n                        <span class=\"k-button-text\"></span>\n                    </button>\n                </div>`).appendTo(element);\n                }\n\n                that._today = footer.show()\n                    .find(\".k-button-flat-primary\")\n                    .attr(\"title\", kendo.toString(today, \"D\", that.options.culture));\n\n                footer.find(\".k-button-text\")\n                    .html(template(today));\n\n                that._toggle();\n            },\n\n            _header: function() {\n                var that = this,\n                element = that.element,\n                linksSelector = that.options.linksSelector;\n\n                if (!element.find(HEADERSELECTOR)[0]) {\n                    element.html(kendo.template(that.options.header.template)($.extend(true,{}, that.options, {\n                        actionAttr: kendo.attr(\"action\"),\n                        size: kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size),\n                        isRtl: that.isRtl()\n                    })));\n                }\n\n                element.find(linksSelector)\n                    .on(CLICK + \" touchend\" + ns, function() { return false; } );\n\n                that._title = element.find('[' + kendo.attr(\"action\") + '=\"nav-up\"]').on(CLICK + \" touchend\" + ns, function() {\n                    that._active = that.options.focusOnNav !== false;\n                    that.navigateUp();\n                });\n                that[PREVARROW] = element.find('[' + kendo.attr(\"action\") + '=\"prev\"]').on(CLICK + \" touchend\" + ns, function() {\n                    that._active = that.options.focusOnNav !== false;\n                    that.navigateToPast();\n                });\n                that[NEXTARROW] = element.find('[' + kendo.attr(\"action\") + '=\"next\"]').on(CLICK + \" touchend\" + ns, function() {\n                    that._active = that.options.focusOnNav !== false;\n                    that.navigateToFuture();\n                });\n                element.find('[' + kendo.attr(\"action\") + '=\"today\"]').on(CLICK + \" touchend\" + ns, that._todayClick.bind(that));\n\n            },\n\n            _navigate: function(arrow, modifier) {\n                var that = this,\n                index = that._index + 1,\n                currentValue = new DATE(+that._current);\n\n                if (that._isMultipleSelection()) {\n                    var firstDayCurrentMonth = that._table.find(\"td:not(.\" + OTHERMONTH + \"):not(.\" + EMPTYCELL + \")\").has(\".k-link\").first();\n                    currentValue = toDateObject(firstDayCurrentMonth.find(\"span\"));\n                    that._current = new Date(+currentValue);\n                }\n\n                arrow = that[arrow];\n\n                if (!arrow.hasClass(DISABLED)) {\n                    if (index > 3) {\n                        currentValue.setFullYear(currentValue.getFullYear() + 100 * modifier);\n                    } else {\n                        calendar.views[index].setDate(currentValue, modifier);\n                    }\n\n                    that.navigate(currentValue);\n                    that._restoreSelection();\n                }\n            },\n\n            _option: function(option, value) {\n                var that = this,\n                    options = that.options,\n                    currentValue = that._value || that._current,\n                    isBigger;\n\n                if (value === undefined$1) {\n                    return options[option];\n                }\n\n                value = parse(value, options.format, options.culture);\n\n                if (!value) {\n                    return;\n                }\n\n                options[option] = new DATE(+value);\n\n                if (option === MIN) {\n                    isBigger = value > currentValue;\n                } else {\n                    isBigger = currentValue > value;\n                }\n\n                if (isBigger || isEqualMonth(currentValue, value)) {\n                    if (isBigger) {\n                        that._value = null;\n                    }\n                    that._changeView = true;\n                }\n\n                if (!that._changeView) {\n                    that._changeView = !!(options.month.content || options.month.empty);\n                }\n\n                that.navigate(that._value);\n\n                that._toggle();\n            },\n\n            _toggle: function(toggle) {\n                var that = this,\n                    options = that.options,\n                    isTodayDisabled = that.options.disableDates(getToday()),\n                    link = that._today,\n                    todayClass = that._todayClass();\n\n                if (toggle === undefined$1) {\n                    toggle = isInRange(getToday(), options.min, options.max);\n                }\n\n                if (link) {\n                    link.off(CLICK);\n\n                    if (toggle && !isTodayDisabled) {\n                        link.addClass(todayClass)\n                        .removeClass(DISABLED)\n                        .on(CLICK, that._todayClick.bind(that));\n                    } else {\n                        link.removeClass(todayClass)\n                        .addClass(DISABLED)\n                        .on(CLICK, prevent);\n                    }\n                }\n            },\n\n            _todayClass: function() {\n                return TODAY;\n            },\n\n            _todayClick: function(e) {\n                var that = this,\n                depth = views[that.options.depth],\n                disabled = that.options.disableDates,\n                today = getToday();\n\n                e.preventDefault();\n\n                if (disabled(today)) {\n                    return;\n                }\n\n                if (that._view.compare(that._current, today) === 0 && that._index == depth) {\n                    that._changeView = false;\n                }\n\n                if (that._isMultipleSelection()) {\n                    that._selectDates = [today];\n                    that.selectable._lastActive = null;\n                }\n\n                that._value = today;\n                that.navigate(today, depth);\n\n                that.trigger(CHANGE);\n            },\n\n            _templates: function() {\n                var that = this,\n                    options = that.options,\n                    footer = options.footer,\n                    month = options.month,\n                    content = month.content,\n                    weekNumber = month.weekNumber,\n                    empty = month.empty,\n                    footerTemplate = (data) => `${kendo.toString(data,\"D\",options.culture)}`;\n\n                that.month = {\n                    content: (data) => `<td class=\"${data.cssClass}\" role=\"gridcell\"><span tabindex=\"-1\" class=\"k-link ${data.linkClass}\" data-href=\"${data.url}\" ${kendo.attr(VALUE)}=\"${data.dateString}\" title=\"${data.title}\">${executeTemplate(content, data) || data.value}</span></td>`,\n                    empty: (data) => `<td role=\"gridcell\">${executeTemplate(empty, data) || \"&nbsp;\"}</td>`,\n                    weekNumber: (data) => `<td class=\"k-calendar-td k-alt\">${executeTemplate(weekNumber, data) || data.weekNumber}</td>`\n                };\n\n                that.year = {\n                    content: template((data) => `<td class=\"${data.cssClass}\" role=\"gridcell\"><span tabindex=\"-1\" class=\"k-link\" data-href=\"#\" data-${data.ns}value=\"${data.dateString}\" aria-label=\"${data.label}\">${data.value}</span></td>`)\n                };\n\n                if (footer && footer !== true) {\n                    footerTemplate = footer;\n                }\n\n                that.footer = footer !== false ? template(footerTemplate, { useWithBlock: false }) : null;\n            },\n\n            _updateAria: function(ariaTemplate, date) {\n                var that = this;\n                var cell = that._cell;\n                var valueType = that.view().valueType();\n                var current = date || that.current();\n                var text;\n\n                if (valueType === \"month\") {\n                    text = kendo.toString(current, \"MMMM\");\n                } else if (valueType === \"date\") {\n                    text = kendo.toString(current, \"D\");\n                } else {\n                    text = cell.text();\n                }\n\n                cell.attr(\"aria-label\", ariaTemplate({ current: current, valueType: valueType, text: text }));\n\n                return cell.attr(\"id\");\n            }\n        });\n\n        ui.plugin(Calendar);\n\n        var calendar = {\n            firstDayOfMonth: function(date) {\n                return createDate(\n                    date.getFullYear(),\n                    date.getMonth(),\n                    1\n                );\n            },\n\n            firstVisibleDay: function(date, calendarInfo) {\n                calendarInfo = calendarInfo || kendo.culture().calendar;\n\n                var firstDay = calendarInfo.firstDay,\n                firstVisibleDay = new DATE(date.getFullYear(), date.getMonth(), 1, date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n                firstVisibleDay.setFullYear(date.getFullYear());\n\n                while (firstVisibleDay.getDay() != firstDay) {\n                    calendar.setTime(firstVisibleDay, -1 * MS_PER_DAY);\n                }\n\n                return firstVisibleDay;\n            },\n\n            setTime: function(date, time) {\n                var tzOffsetBefore = date.getTimezoneOffset(),\n                resultDATE = new DATE(date.getTime() + time),\n                tzOffsetDiff = resultDATE.getTimezoneOffset() - tzOffsetBefore;\n\n                date.setTime(resultDATE.getTime() + tzOffsetDiff * MS_PER_MINUTE);\n            },\n            views: [{\n                name: MONTH,\n                title: function(date, min, max, culture) {\n                    return getCalendarInfo(culture).months.names[date.getMonth()] + \" \" + date.getFullYear();\n                },\n                content: function(options) {\n                    var that = this,\n                        idx = 0,\n                        min = options.min,\n                        max = options.max,\n                        date = options.date,\n                        dates = options.dates,\n                        format = options.format,\n                        culture = options.culture,\n                        navigateUrl = options.url,\n                        showHeader = options.showHeader,\n                        showOtherMonthDays = options.showOtherMonthDays,\n                        isWeekColumnVisible = options.isWeekColumnVisible,\n                        hasUrl = navigateUrl && dates[0],\n                        currentCalendar = getCalendarInfo(culture),\n                        firstDayIdx = currentCalendar.firstDay,\n                        days = currentCalendar.days,\n                        names = shiftArray(days.names, firstDayIdx),\n                        shortNames = shiftArray(days.namesShort, firstDayIdx),\n                        start = calendar.firstVisibleDay(date, currentCalendar),\n                        firstDayOfMonth = that.first(date),\n                        lastDayOfMonth = that.last(date),\n                        toDateString = that.toDateString,\n                        today = getToday(),\n                        contentClasses = options.contentClasses,\n                        html = '<table tabindex=\"0\" role=\"grid\" class=\"' + contentClasses + '\" cellspacing=\"0\" data-start=\"' + toDateString(start) + '\">';\n\n                    if (showHeader) {\n                        html += '<caption class=\"k-calendar-caption k-month-header\">' + this.title(date, min, max, culture) + '</caption>';\n                    }\n\n                    html += '<thead class=\"k-calendar-thead\"><tr role=\"row\" class=\"k-calendar-tr\">';\n\n                    if (isWeekColumnVisible) {\n                        html += '<th scope=\"col\" class=\"k-calendar-th k-alt\">' + encode(options.messages.weekColumnHeader) + '</th>';\n                    }\n\n                    for (; idx < 7; idx++) {\n                        html += '<th scope=\"col\" class=\"k-calendar-th\" aria-label=\"' + names[idx] + '\">' + shortNames[idx] + '</th>';\n                    }\n\n                    adjustDST(today, 0);\n                    today = +today;\n\n                    return view({\n                        cells: 42,\n                        perRow: 7,\n                        html: html += '</tr></thead><tbody class=\"k-calendar-tbody\"><tr role=\"row\" class=\"k-calendar-tr\">',\n                        start: createDate(start.getFullYear(), start.getMonth(), start.getDate()),\n                        isWeekColumnVisible: isWeekColumnVisible,\n                        weekNumber: options.weekNumber,\n                        min: createDate(min.getFullYear(), min.getMonth(), min.getDate()),\n                        max: createDate(max.getFullYear(), max.getMonth(), max.getDate()),\n                        showOtherMonthDays: showOtherMonthDays,\n                        content: options.content,\n                        lastDayOfMonth: lastDayOfMonth,\n                        empty: options.empty,\n                        setter: that.setDate,\n                        disableDates: options.disableDates,\n                        build: function(date, idx, disableDates) {\n                            var cssClass = [ \"k-calendar-td\" ],\n                                day = date.getDay(),\n                                linkClass = \"\",\n                                url = \"#\";\n\n                            if (date < firstDayOfMonth || date > lastDayOfMonth) {\n                                cssClass.push(OTHERMONTH);\n                            }\n\n                            if (disableDates(date)) {\n                                cssClass.push(DISABLED);\n                            }\n\n                            if (+date === today) {\n                                cssClass.push(\"k-today\");\n                            }\n\n                            if (day === 0 || day === 6) {\n                                cssClass.push(\"k-weekend\");\n                            }\n\n                            if (hasUrl && inArray(+date, dates)) {\n                                url = navigateUrl.replace(\"{0}\", kendo.toString(date, format, culture));\n                                linkClass = \" k-action-link\";\n                            }\n\n                            return {\n                                date: date,\n                                dates: dates,\n                                ns: kendo.ns,\n                                title: kendo.toString(date, \"D\", culture),\n                                value: date.getDate(),\n                                dateString: toDateString(date),\n                                cssClass: cssClass.join(\" \"),\n                                linkClass: linkClass,\n                                url: url\n                            };\n                        },\n                        weekNumberBuild: function(date) {\n                            return {\n                                weekNumber: weekInYear(date, kendo.culture().calendar.firstDay),\n                                currentDate: date\n                            };\n                        }\n                    });\n                },\n                first: function(date) {\n                    return calendar.firstDayOfMonth(date);\n                },\n                last: function(date) {\n                    var last = createDate(date.getFullYear(), date.getMonth() + 1, 0),\n                    first = calendar.firstDayOfMonth(date),\n                    timeOffset = Math.abs(last.getTimezoneOffset() - first.getTimezoneOffset());\n\n                    if (timeOffset) {\n                        last.setHours(first.getHours() + (timeOffset / 60));\n                    }\n\n                    return last;\n                },\n                compare: function(date1, date2) {\n                    var result,\n                    month1 = date1.getMonth(),\n                    year1 = date1.getFullYear(),\n                    month2 = date2.getMonth(),\n                    year2 = date2.getFullYear();\n\n                    if (year1 > year2) {\n                        result = 1;\n                    } else if (year1 < year2) {\n                        result = -1;\n                    } else {\n                        result = month1 == month2 ? 0 : month1 > month2 ? 1 : -1;\n                    }\n\n                    return result;\n                },\n                setDate: function(date, value) {\n                    var hours = date.getHours();\n                    if (value instanceof DATE) {\n                        date.setFullYear(value.getFullYear(), value.getMonth(), value.getDate());\n                    } else {\n                        calendar.setTime(date, value * MS_PER_DAY);\n                    }\n                    adjustDST(date, hours);\n                },\n                toDateString: function(date) {\n                    return date.getFullYear() + \"/\" + date.getMonth() + \"/\" + date.getDate();\n                },\n                valueType: function() {\n                    return \"date\";\n                }\n            },\n            {\n                name: \"year\",\n                title: function(date) {\n                    return date.getFullYear();\n                },\n                content: function(options) {\n                    var calendarMonths = getCalendarInfo(options.culture).months,\n                        namesAbbr = calendarMonths.namesAbbr,\n                        namesFull = calendarMonths.names,\n                        toDateString = this.toDateString,\n                        min = options.min,\n                        max = options.max,\n                        html = \"\";\n\n                    if (options.showHeader) {\n                        html += '<table tabindex=\"0\" role=\"grid\" class=\"k-calendar-table\" cellspacing=\"0\">';\n                            html += '<caption class=\"k-calendar-caption k-meta-header\">';\n                                html += this.title(options.date);\n                            html += '</caption>';\n                            html += '<tbody class=\"k-calendar-tbody\">';\n                                html += '<tr role=\"row\" class=\"k-calendar-tr\">';\n                    }\n\n                    return view({\n                        min: createDate(min.getFullYear(), min.getMonth(), 1),\n                        max: createDate(max.getFullYear(), max.getMonth(), 1),\n                        start: createDate(options.date.getFullYear(), 0, 1),\n                        html: html,\n                        setter: this.setDate,\n                        content: options.content,\n                        build: function(date) {\n                            var cssClass = [ \"k-calendar-td\" ];\n\n                            return {\n                                value: namesAbbr[date.getMonth()],\n                                label: namesFull[date.getMonth()],\n                                ns: kendo.ns,\n                                dateString: toDateString(date),\n                                cssClass: cssClass.join(\" \")\n                            };\n                        }\n                    });\n                },\n                first: function(date) {\n                    return createDate(date.getFullYear(), 0, date.getDate());\n                },\n                last: function(date) {\n                    return createDate(date.getFullYear(), 11, date.getDate());\n                },\n                compare: function(date1, date2) {\n                    return compare(date1, date2);\n                },\n                setDate: function(date, value) {\n                    var month,\n                    hours = date.getHours();\n\n                    if (value instanceof DATE) {\n                        month = value.getMonth();\n\n                        date.setFullYear(value.getFullYear(), month, date.getDate());\n\n                        if (month !== date.getMonth()) {\n                            date.setDate(0);\n                        }\n                    } else {\n                        month = date.getMonth() + value;\n\n                        date.setMonth(month);\n\n                        if (month > 11) {\n                            month -= 12;\n                        }\n\n                        if (month > 0 && date.getMonth() != month) {\n                            date.setDate(0);\n                        }\n                    }\n\n                    adjustDST(date, hours);\n                },\n                toDateString: function(date) {\n                    return date.getFullYear() + \"/\" + date.getMonth() + \"/1\";\n                },\n                valueType: function() {\n                    return \"month\";\n                }\n            },\n            {\n                name: \"decade\",\n                title: function(date, min, max) {\n                    return title(date, min, max, 10);\n                },\n                content: function(options) {\n                    var year = options.date.getFullYear(),\n                    toDateString = this.toDateString,\n                    html = \"\";\n\n                    if (options.showHeader) {\n                        html += '<table tabindex=\"0\" role=\"grid\" class=\"k-calendar-table\" cellspacing=\"0\">';\n                            html += '<caption class=\"k-meta-header\">';\n                                html += this.title(options.date, options.min, options.max);\n                            html += '</caption>';\n                            html += '<tbody class=\"k-calendar-thead\">';\n                                html += '<tr role=\"row\" class=\"k-calendar-tr\">';\n                    }\n\n                    return view({\n                        start: createDate(year - year % 10, 0, 1),\n                        min: createDate(options.min.getFullYear(), 0, 1),\n                        max: createDate(options.max.getFullYear(), 0, 1),\n                        showOtherMonthDays: options.showOtherMonthDays,\n                        html: html,\n                        setter: this.setDate,\n                        build: function(date, idx) {\n                            var cssClass = [ \"k-calendar-td\" ];\n\n                            if (idx === 10 || idx === 11) {\n                                cssClass.push(EMPTYCELL);\n                            }\n\n                            return {\n                                value: date.getFullYear(),\n                                ns: kendo.ns,\n                                dateString: toDateString(date),\n                                cssClass: cssClass.join(\" \")\n                            };\n                        }\n                    });\n                },\n                first: function(date) {\n                    var year = date.getFullYear();\n                    return createDate(year - year % 10, date.getMonth(), date.getDate());\n                },\n                last: function(date) {\n                    var year = date.getFullYear();\n                    return createDate(year - year % 10 + 9, date.getMonth(), date.getDate());\n                },\n                compare: function(date1, date2) {\n                    return compare(date1, date2, 10);\n                },\n                setDate: function(date, value) {\n                    setDate(date, value, 1);\n                },\n                toDateString: function(date) {\n                    return date.getFullYear() + \"/0/1\";\n                },\n                valueType: function() {\n                    return \"year\";\n                }\n            },\n            {\n                name: CENTURY,\n                title: function(date, min, max) {\n                    return title(date, min, max, 100);\n                },\n                content: function(options) {\n                    var year = options.date.getFullYear(),\n                    min = options.min.getFullYear(),\n                    max = options.max.getFullYear(),\n                    toDateString = this.toDateString,\n                    minYear = min,\n                    maxYear = max,\n                    html = \"\";\n\n                    minYear = minYear - minYear % 10;\n                    maxYear = maxYear - maxYear % 10;\n\n                    if (maxYear - minYear < 10) {\n                        maxYear = minYear + 9;\n                    }\n\n                    if (options.showHeader) {\n                        html += '<table tabindex=\"0\" role=\"grid\" class=\"k-calendar-table\" cellspacing=\"0\">';\n                            html += '<caption class=\"k-calendar-caption k-meta-header\">';\n                                html += this.title(options.date, options.min, options.max);\n                            html += '</caption>';\n                            html += '<tbody class=\"k-calendar-tbody\">';\n                                html += '<tr role=\"row\" class=\"k-calendar-tr\">';\n                    }\n\n                    return view({\n                        start: createDate(year - year % 100, 0, 1),\n                        min: createDate(minYear, 0, 1),\n                        max: createDate(maxYear, 0, 1),\n                        showOtherMonthDays: options.showOtherMonthDays,\n                        html: html,\n                        setter: this.setDate,\n                        build: function(date, idx) {\n                            var cssClass = [ \"k-calendar-td\" ];\n                            var start = date.getFullYear(),\n                                end = start + 9;\n\n                            if (idx === 10 || idx === 11) {\n                                cssClass.push(EMPTYCELL);\n                            }\n\n                            if (start < min) {\n                                start = min;\n                            }\n\n                            if (end > max) {\n                                end = max;\n                            }\n\n                            return {\n                                ns: kendo.ns,\n                                value: options.centuryCellsFormat === \"long\" ? `${start} - ${end}` : start,\n                                dateString: toDateString(date),\n                                cssClass: cssClass.join(\" \")\n                            };\n                        }\n                    });\n                },\n                first: function(date) {\n                    var year = date.getFullYear();\n                    return createDate(year - year % 100, date.getMonth(), date.getDate());\n                },\n                last: function(date) {\n                    var year = date.getFullYear();\n                    return createDate(year - year % 100 + 99, date.getMonth(), date.getDate());\n                },\n                compare: function(date1, date2) {\n                    return compare(date1, date2, 100);\n                },\n                setDate: function(date, value) {\n                    setDate(date, value, 10);\n                },\n                toDateString: function(date) {\n                    var year = date.getFullYear();\n                    return (year - year % 10) + \"/0/1\";\n                },\n                valueType: function() {\n                    return \"decade\";\n                }\n            }]\n        };\n\n        function title(date, min, max, modular) {\n            var start = date.getFullYear(),\n                minYear = min.getFullYear(),\n                maxYear = max.getFullYear(),\n                end;\n\n            start = start - start % modular;\n            end = start + (modular - 1);\n\n            if (start < minYear) {\n                start = minYear;\n            }\n            if (end > maxYear) {\n                end = maxYear;\n            }\n\n            return start + \"-\" + end;\n        }\n\n        function view(options) {\n            var idx = 0,\n                data,\n                min = options.min,\n                max = options.max,\n                start = options.start,\n                setter = options.setter,\n                build = options.build,\n                weekNumberBuild = options.weekNumberBuild,\n                length = options.cells || 12,\n                isWeekColumnVisible = options.isWeekColumnVisible,\n                cellsPerRow = options.perRow || 4,\n                showOtherMonthDays = options.showOtherMonthDays,\n                lastDayOfMonth = options.lastDayOfMonth,\n                weekNumber = options.weekNumber || weekNumberTemplate,\n                content = options.content || cellTemplate,\n                empty = options.empty || emptyCellTemplate,\n                otherMonthTemplate = options.otherMonthCellTemplate || otherMonthCellTemplate,\n                html = options.html || '<table tabindex=\"0\" role=\"grid\" class=\"k-calendar-table\" cellspacing=\"0\"><tbody class=\"k-calendar-tbody\"><tr role=\"row\" class=\"k-calendar-tr\">';\n\n            if (isWeekColumnVisible) {\n                html += weekNumber(weekNumberBuild(start));\n            }\n\n\n            for (; idx < length; idx++) {\n                if (idx > 0 && idx % cellsPerRow === 0) {\n                    html += '</tr><tr role=\"row\" class=\"k-calendar-tr\">';\n                    if (isWeekColumnVisible) {\n                        html += showOtherMonthDays || (+start <= +lastDayOfMonth) ? weekNumber(weekNumberBuild(start)) : weekNumber({ weekNumber: \"&nbsp;\" });\n                    }\n                }\n\n                start = createDate(start.getFullYear(), start.getMonth(), start.getDate());\n                adjustDST(start, 0);\n\n                data = build(start, idx, options.disableDates);\n\n                if (data.cssClass.indexOf(OTHERMONTH) !== -1 && !showOtherMonthDays) {\n                    html += otherMonthTemplate(data);\n                } else {\n                    if (isInRange(start, min, max) && data.cssClass.indexOf(EMPTYCELL) === -1) {\n                        html += content(data);\n                    } else {\n                        html += empty(data);\n                    }\n                }\n\n                setter(start, 1);\n            }\n\n            return html + \"</tr></tbody></table>\";\n        }\n\n        function compare(date1, date2, modifier) {\n            var year1 = date1.getFullYear(),\n                start = date2.getFullYear(),\n                end = start,\n                result = 0;\n\n            if (modifier) {\n                start = start - start % modifier;\n                end = start - start % modifier + modifier - 1;\n            }\n\n            if (year1 > end) {\n                result = 1;\n            } else if (year1 < start) {\n                result = -1;\n            }\n\n            return result;\n        }\n\n        function getToday() {\n            var today = new DATE();\n            return new DATE(today.getFullYear(), today.getMonth(), today.getDate());\n        }\n\n        function restrictValue(value, min, max) {\n            var today = getToday();\n\n            if (value) {\n                today = new DATE(+value);\n            }\n\n            if (min > today) {\n                today = new DATE(+min);\n            } else if (max < today) {\n                today = new DATE(+max);\n            }\n            return today;\n        }\n\n        function isInRange(date, min, max) {\n            return +date >= +min && +date <= +max;\n        }\n\n        function shiftArray(array, idx) {\n            return array.slice(idx).concat(array.slice(0, idx));\n        }\n\n        function setDate(date, value, multiplier) {\n            value = value instanceof DATE ? value.getFullYear() : date.getFullYear() + multiplier * value;\n            date.setFullYear(value);\n        }\n\n        function daysBetweenTwoDates(startDate, endDate) {\n            if (+endDate < +startDate) {\n                var temp = +startDate;\n                calendar.views[0].setDate(startDate, endDate);\n                calendar.views[0].setDate(endDate, new Date(temp));\n            }\n            var fromDateUTC = Date.UTC(startDate.getFullYear(), startDate.getMonth(), startDate.getDate());\n            var endDateUTC = Date.UTC(endDate.getFullYear(), endDate.getMonth(), endDate.getDate());\n\n            return Math.ceil((+endDateUTC - +fromDateUTC) / kendo.date.MS_PER_DAY);\n        }\n\n        function addDaysToArray(array, numberOfDays, fromDate, disableDates) {\n            for (var i = 0; i <= numberOfDays; i++) {\n                var nextDay = new Date(fromDate.getTime());\n                nextDay = new Date(nextDay.setDate(nextDay.getDate() + i));\n                if (!disableDates(nextDay)) {\n                    array.push(nextDay);\n                }\n            }\n        }\n\n        function mousetoggle(e) {\n            var disabled = $(this).hasClass(\"k-disabled\");\n\n            if (!disabled) {\n                $(this).toggleClass(HOVER, MOUSEENTER.indexOf(e.type) > -1 || e.type == FOCUS);\n            }\n        }\n\n        function prevent(e) {\n            e.preventDefault();\n        }\n\n        // creates date with full year\n        function createDate(year, month, date) {\n            var dateObject = new DATE(year, month, date);\n            dateObject.setFullYear(year, month, date);\n            return dateObject;\n        }\n\n        function getCalendarInfo(culture) {\n            return getCulture(culture).calendars.standard;\n        }\n\n        function normalize(options) {\n            var start = views[options.start],\n                depth = views[options.depth],\n                culture = getCulture(options.culture);\n\n            options.format = extractFormat(options.format || culture.calendars.standard.patterns.d);\n\n            if (isNaN(start)) {\n                start = 0;\n                options.start = MONTH;\n            }\n\n            if (depth === undefined$1 || depth > start) {\n                options.depth = MONTH;\n            }\n\n            if (options.dates === null) {\n                options.dates = [];\n            }\n        }\n\n        function inArray(date, dates) {\n            for (var i = 0, length = dates.length; i < length; i++) {\n                if (date === +dates[i]) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function isEqualDatePart(value1, value2) {\n            if (value1) {\n                return value1.getFullYear() === value2.getFullYear() &&\n                    value1.getMonth() === value2.getMonth() &&\n                    value1.getDate() === value2.getDate();\n            }\n\n            return false;\n        }\n\n        function isEqualMonth(value1, value2) {\n            if (value1) {\n                return value1.getFullYear() === value2.getFullYear() &&\n                    value1.getMonth() === value2.getMonth();\n            }\n\n            return false;\n        }\n\n\n        function getDisabledExpr(option) {\n            if (kendo.isFunction(option)) {\n                return option;\n            }\n\n            if (Array.isArray(option)) {\n                return createDisabledExpr(option);\n            }\n            return $.noop;\n        }\n\n        function convertDatesArray(dates) {\n            var result = [];\n            for (var i = 0; i < dates.length; i++) {\n                result.push(dates[i].setHours(0, 0, 0, 0));\n            }\n            return result;\n        }\n\n        function createDisabledExpr(dates) {\n            var callback,\n                disabledDates = [],\n                days = [\"su\", \"mo\", \"tu\", \"we\", \"th\", \"fr\", \"sa\"];\n\n            if (dates[0] instanceof DATE) {\n                disabledDates = convertDatesArray(dates);\n                callback = (date) => !!(date && disabledDates.indexOf((new Date(date)).setHours(0, 0, 0, 0)) > -1);\n            } else {\n                disabledDates = dates.map(day => {\n                    day = day.slice(0,2).toLowerCase();\n                    let index = days.indexOf(day);\n                    if (index > -1) {\n                        return index;\n                    }\n                });\n\n                callback = (date) => !!(date && disabledDates.indexOf((new Date(date)).getDay()) > -1);\n            }\n\n            return callback;\n        }\n\n        function isEqualDate(oldValue, newValue) {\n           if (oldValue instanceof Date && newValue instanceof Date) {\n               oldValue = oldValue.getTime();\n               newValue = newValue.getTime();\n           }\n\n           return oldValue === newValue;\n        }\n\n        function toDateObject(link) {\n            var value = $(link).attr(kendo.attr(VALUE)).split(\"/\");\n            //Safari cannot create correctly date from \"1/1/2090\"\n            value = createDate(value[0], value[1], value[2]);\n\n            return value;\n        }\n\n        // Backwards compatibility after CSP changes.\n        function executeTemplate(tmpl, data) {\n            if (tmpl) {\n                if (kendo.isFunction(tmpl)) {\n                    return tmpl(data);\n                }\n                return template(tmpl)(data);\n            }\n            return undefined$1;\n        }\n\n        calendar.isEqualDatePart = isEqualDatePart;\n        calendar.isEqualDate = isEqualDate;\n        calendar.restrictValue = restrictValue;\n        calendar.isInRange = isInRange;\n        calendar.normalize = normalize;\n        calendar.viewsEnum = views;\n        calendar.disabled = getDisabledExpr;\n        calendar.toDateObject = toDateObject;\n        calendar.getToday = getToday;\n        calendar.createDate = createDate;\n\n        kendo.calendar = calendar;\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}