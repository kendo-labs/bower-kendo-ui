{"version":3,"file":"kendo.mobile.splitview.min.js","names":["factory","define","amd","$","kendo","ui","Widget","SplitView","window","jQuery","mobile","View","extend","init","element","options","pane","modalViews","that","this","fn","call","_id","$angular","_layout","_overlay","_style","children","_locate","each","idx","compileMobileDirective","panes","_paramsHistory","directiveSelector","push","content","roleSelector","initWidget","roles","expandedPaneShim","appendTo","_shimUserEvents","UserEvents","fastTap","tap","collapsePanes","selectors","name","style","expandPanes","addClass","removeClass","transition","attrValue","prototype","header","add","footer","styles","split","showStart","css","inited","_invokeNgController","initial","navigateToInitial","navigate","trigger","view","plugin"],"sources":["kendo.mobile.splitview.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.mobile.pane'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"mobile.splitview\",\n        name: \"SplitView\",\n        category: \"mobile\",\n        description: \"The mobile SplitView is a tablet-specific view that consists of two or more mobile Pane widgets.\",\n        depends: [ \"mobile.pane\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.mobile.ui,\n            Widget = ui.Widget,\n            EXPANED_PANE_SHIM = \"<div class='km-expanded-pane-shim'></div>\",\n            View = ui.View;\n\n        var SplitView = View.extend({\n            init: function(element, options) {\n                var that = this,\n                pane, modalViews;\n\n                Widget.fn.init.call(that, element, options);\n                element = that.element;\n\n                $.extend(that, options);\n\n                that._id();\n\n                if (!that.options.$angular) {\n                    that._layout();\n                    that._overlay();\n                } else {\n                    that._overlay();\n                }\n\n                that._style();\n\n                modalViews = element.children(that._locate(\"modalview\"));\n\n                if (!that.options.$angular) {\n                    kendo.mobile.init(modalViews);\n                } else {\n                    modalViews.each(function(idx, element) {\n                        kendo.compileMobileDirective($(element), options.$angular[0]);\n                    });\n                }\n\n                that.panes = [];\n                that._paramsHistory = [];\n\n                if (!that.options.$angular) {\n                    that.content.children(kendo.roleSelector(\"pane\")).each(function() {\n                        pane = kendo.initWidget(this, {}, ui.roles);\n                        that.panes.push(pane);\n                    });\n                } else {\n                    that.element.children(kendo.directiveSelector(\"pane\")).each(function() {\n                        pane = kendo.compileMobileDirective($(this), options.$angular[0]);\n                        that.panes.push(pane);\n                    });\n\n                    that.element.children(kendo.directiveSelector(\"header footer\")).each(function() {\n                        kendo.compileMobileDirective($(this), options.$angular[0]);\n                    });\n                }\n\n                that.expandedPaneShim = $(EXPANED_PANE_SHIM).appendTo(that.element);\n\n                that._shimUserEvents = new kendo.UserEvents(that.expandedPaneShim, {\n                    fastTap: true,\n                    tap: function() {\n                        that.collapsePanes();\n                    }\n                });\n            },\n\n            _locate: function(selectors) {\n                return this.options.$angular ? kendo.directiveSelector(selectors) : kendo.roleSelector(selectors);\n            },\n\n            options: {\n                name: \"SplitView\",\n                style: \"horizontal\"\n            },\n\n            expandPanes: function() {\n                this.element.addClass(\"km-expanded-splitview\");\n            },\n\n            collapsePanes: function() {\n                this.element.removeClass(\"km-expanded-splitview\");\n            },\n\n            // Implement view interface\n            _layout: function() {\n                var that = this,\n                    element = that.element;\n\n                that.transition = kendo.attrValue(element, \"transition\");\n                kendo.mobile.ui.View.prototype._layout.call(this);\n                kendo.mobile.init(this.header.add(this.footer));\n                that.element.addClass(\"km-splitview\");\n                that.content.addClass(\"km-split-content\");\n            },\n\n            _style: function() {\n                var style = this.options.style,\n                    element = this.element,\n                    styles;\n\n                if (style) {\n                    styles = style.split(\" \");\n                    $.each(styles, function() {\n                        element.addClass(\"km-split-\" + this);\n                    });\n                }\n            },\n\n            showStart: function() {\n                var that = this;\n                that.element.css(\"display\", \"\");\n\n                if (!that.inited) {\n                    that.inited = true;\n                    $.each(that.panes, function() {\n                        if (this.options.initial) {\n                            this.navigateToInitial();\n                        } else {\n                            this.navigate(\"\");\n                        }\n                    });\n                    that.trigger(\"init\", { view: that });\n                } else {\n                    this._invokeNgController();\n                }\n\n                that.trigger(\"show\", { view: that });\n            }\n        });\n\n        ui.plugin(SplitView);\n    })(window.kendo.jQuery);\n\n}));\n"]}